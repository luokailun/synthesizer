--------------------------
[Structure1]
#Goal:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
#(+)model:
  

#conjuncts:


[Structure2]
#Goal:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
#(+)model:
  

#conjuncts:


[Formula1]: ( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
[Formula2]:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
~~~~~~~~~~~~~~~~~~~~~~~~~~


***************** Checking Convergence *****************:


Checking E model: ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'False', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'True', 'Ch(0,0)': 'True', 'xlen()': '2', 'turn(p1)': 'False', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'False'}, {'Ch\\(\\d+,\\d+\\)': 'False'})

State q1: N models [({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'False', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'True', 'Ch(0,0)': 'True', 'xlen()': '2', 'turn(p1)': 'False', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'False'}, {'Ch\\(\\d+,\\d+\\)': 'False'})]

****** Generate new conjuncts
------Step 1: number of mappings (32)
------Step 1: number of mappings after filter (32)
------Step 1: number of conjunct (32)
------Step 1: number of conjunct after free-var filter (32)
------Step 1: number of conjunct after MC (32)
------Step 1: number of sub-conjunct (49)
------Step 1: number of sub-conjunct after MC (49)
------Step 2: number of mappings (3300)
------Step 2: number of mappings after filter (3300)
------Step 2: number of conjunct (3300)
------Step 2: number of conjunct after free-var filter (2048)
------Step 2: number of conjunct after MC (1812)
***** Change  ---> exists(X1:Int)[X1>=0&Ch(0,X1)] 


***************** Convergence Update Structure *****************:

--------------------------
[Structure1]
#Goal:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
#(+)model:
  

#conjuncts:
(0):(['X1'], ['Int'], ['Ch(0,X1)'])
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'False', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'True', 'Ch(0,0)': 'True', 'xlen()': '2', 'turn(p1)': 'False', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'False'}, {'Ch\\(\\d+,\\d+\\)': 'False'})


[Structure2]
#Goal:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
#(+)model:
  

#conjuncts:


[Formula1]: (( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(0,X1)])
[Formula2]:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
~~~~~~~~~~~~~~~~~~~~~~~~~~


***************** Checking Convergence *****************:


Checking A model: ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'True', 'Ch(1,0)': 'False', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'True', 'Ch(0,0)': 'True', 'xlen()': '2', 'turn(p1)': 'False', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'False'}, {'Ch\\(\\d+,\\d+\\)': 'False'})

State q2: N models [({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'True', 'Ch(1,0)': 'False', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'True', 'Ch(0,0)': 'True', 'xlen()': '2', 'turn(p1)': 'False', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'False'}, {'Ch\\(\\d+,\\d+\\)': 'False'})]

****** Generate new conjuncts
------Step 1: number of mappings (34)
------Step 1: number of mappings after filter (34)
------Step 1: number of conjunct (34)
------Step 1: number of conjunct after free-var filter (34)
------Step 1: number of conjunct after MC (34)
------Step 1: number of sub-conjunct (51)
------Step 1: number of sub-conjunct after MC (51)
------Step 2: number of mappings (3684)
------Step 2: number of mappings after filter (3684)
------Step 2: number of conjunct (3684)
------Step 2: number of conjunct after free-var filter (2316)
------Step 2: number of conjunct after MC (2044)
***** Change  ---> exists(X1:Int)[X1>=0&Ch(1,X1)] 


***************** Convergence Update Structure *****************:

--------------------------
[Structure1]
#Goal:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
#(+)model:
  

#conjuncts:
(0):(['X1'], ['Int'], ['Ch(0,X1)'])
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'False', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'True', 'Ch(0,0)': 'True', 'xlen()': '2', 'turn(p1)': 'False', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'False'}, {'Ch\\(\\d+,\\d+\\)': 'False'})


[Structure2]
#Goal:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
#(+)model:
  

#conjuncts:
(0):(['X1'], ['Int'], ['Ch(1,X1)'])
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'True', 'Ch(1,0)': 'False', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'True', 'Ch(0,0)': 'True', 'xlen()': '2', 'turn(p1)': 'False', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'False'}, {'Ch\\(\\d+,\\d+\\)': 'False'})


[Formula1]: (( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(0,X1)])
[Formula2]:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(1,X1)])
~~~~~~~~~~~~~~~~~~~~~~~~~~


***************** Checking Convergence *****************:


Checking A model: ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'False', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'True', 'Ch(0,0)': 'True', 'xlen()': '2', 'turn(p1)': 'False', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})

State q2: N models [({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'False', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'True', 'Ch(0,0)': 'True', 'xlen()': '2', 'turn(p1)': 'False', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})]

****** Generate adjacent conjuncts for  exists(X1:Int)[X1>=0&Ch(1,X1)]
------Number of sub-conjunct (1)

(B0)-----Generate conjuncts for 
------Step 1: number of sub-conjunct (51)
------Step 1: number of sub-conjunct after MC (51)
------Step 2: number of mappings (3684)
------Step 2: number of mappings after filter (3684)
------Step 2: number of conjunct (3684)
------Step 2: number of conjunct after free-var filter (2316)
------Step 2: number of conjunct after MC (2044)

****** Generate new conjuncts
------Step 1: number of mappings (33)
------Step 1: number of mappings after filter (33)
------Step 1: number of conjunct (33)
------Step 1: number of conjunct after free-var filter (33)
------Step 1: number of conjunct after MC (33)
------Step 1: number of sub-conjunct (50)
------Step 1: number of sub-conjunct after MC (50)
------Step 2: number of mappings (3490)
------Step 2: number of mappings after filter (3490)
------Step 2: number of conjunct (3490)
------Step 2: number of conjunct after free-var filter (2180)
------Step 2: number of conjunct after MC (1928)
***** Change  ---> exists(X1:Int)[X1>=0&Ch(0,X1)] 


***************** Convergence Update Structure *****************:

--------------------------
[Structure1]
#Goal:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
#(+)model:
  

#conjuncts:
(0):(['X1'], ['Int'], ['Ch(0,X1)'])
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'False', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'True', 'Ch(0,0)': 'True', 'xlen()': '2', 'turn(p1)': 'False', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'False'}, {'Ch\\(\\d+,\\d+\\)': 'False'})


[Structure2]
#Goal:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
#(+)model:
  

#conjuncts:
(0):(['X1'], ['Int'], ['Ch(1,X1)'])
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'True', 'Ch(1,0)': 'False', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'True', 'Ch(0,0)': 'True', 'xlen()': '2', 'turn(p1)': 'False', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'False'}, {'Ch\\(\\d+,\\d+\\)': 'False'})

(1):(['X1'], ['Int'], ['Ch(0,X1)'])
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'False', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'True', 'Ch(0,0)': 'True', 'xlen()': '2', 'turn(p1)': 'False', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})


[Formula1]: (( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(0,X1)])
[Formula2]:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(1,X1)])&!(exists(X1:Int)[X1>=0&Ch(0,X1)])
~~~~~~~~~~~~~~~~~~~~~~~~~~


***************** Checking Convergence *****************:



***************** Checking DS0 *****************:


DS0 model:({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})

DS0 progressed updated model:

---------------------------------------------------
State q1: P models [({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})]

****** Generate adjacent conjuncts for  exists(X1:Int)[X1>=0&Ch(0,X1)]
------Number of sub-conjunct (1)

(B0)-----Generate conjuncts for 
------Step 1: number of sub-conjunct (49)
------Step 1: number of sub-conjunct after MC (49)
------Step 2: number of mappings (3300)
------Step 2: number of mappings after filter (3300)
------Step 2: number of conjunct (3300)
------Step 2: number of conjunct after free-var filter (2048)
------Step 2: number of conjunct after MC (1812)

****** Change exists(X1:Int)[X1>=0&Ch(0,X1)] ---> exists(G0:Int)[G0>=0&G0 = 0&Ch(0,G0)] 


***************** P Update Structure *****************:


--------------------------
[Structure1]
#Goal:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
#(+)model:
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})

#conjuncts:
(0):(['G0'], ['Int'], ['G0 = 0', 'Ch(0,G0)'])
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'False', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'True', 'Ch(0,0)': 'True', 'xlen()': '2', 'turn(p1)': 'False', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'False'}, {'Ch\\(\\d+,\\d+\\)': 'False'})


[Structure2]
#Goal:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
#(+)model:
  

#conjuncts:
(0):(['X1'], ['Int'], ['Ch(1,X1)'])
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'True', 'Ch(1,0)': 'False', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'True', 'Ch(0,0)': 'True', 'xlen()': '2', 'turn(p1)': 'False', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'False'}, {'Ch\\(\\d+,\\d+\\)': 'False'})

(1):(['X1'], ['Int'], ['Ch(0,X1)'])
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'False', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'True', 'Ch(0,0)': 'True', 'xlen()': '2', 'turn(p1)': 'False', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})


[Formula1]: (( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 0&Ch(0,G0)])
[Formula2]:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(1,X1)])&!(exists(X1:Int)[X1>=0&Ch(0,X1)])
~~~~~~~~~~~~~~~~~~~~~~~~~~


***************** Checking Convergence *****************:



***************** Checking DS0 *****************:


DS0 model:({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})

DS0 progressed updated model:

---------------------------------------------------
State q1: P models [({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})]


***************** P Update Structure *****************:


--------------------------
[Structure1]
#Goal:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
#(+)model:
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})

#conjuncts:
(0):(['G0'], ['Int'], ['G0 = 0', 'Ch(0,G0)'])
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'False', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'True', 'Ch(0,0)': 'True', 'xlen()': '2', 'turn(p1)': 'False', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'False'}, {'Ch\\(\\d+,\\d+\\)': 'False'})


[Structure2]
#Goal:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
#(+)model:
  

#conjuncts:
(0):(['X1'], ['Int'], ['Ch(1,X1)'])
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'True', 'Ch(1,0)': 'False', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'True', 'Ch(0,0)': 'True', 'xlen()': '2', 'turn(p1)': 'False', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'False'}, {'Ch\\(\\d+,\\d+\\)': 'False'})

(1):(['X1'], ['Int'], ['Ch(0,X1)'])
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'False', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'True', 'Ch(0,0)': 'True', 'xlen()': '2', 'turn(p1)': 'False', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})


[Formula1]: (( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 0&Ch(0,G0)])
[Formula2]:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(1,X1)])&!(exists(X1:Int)[X1>=0&Ch(0,X1)])
~~~~~~~~~~~~~~~~~~~~~~~~~~


***************** Checking Convergence *****************:



***************** Checking DS0 *****************:


DS0 model:({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})

DS0 progressed updated model:

---------------------------------------------------
State q1: P models [({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})]


***************** P Update Structure *****************:


--------------------------
[Structure1]
#Goal:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
#(+)model:
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})

#conjuncts:
(0):(['G0'], ['Int'], ['G0 = 0', 'Ch(0,G0)'])
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'False', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'True', 'Ch(0,0)': 'True', 'xlen()': '2', 'turn(p1)': 'False', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'False'}, {'Ch\\(\\d+,\\d+\\)': 'False'})


[Structure2]
#Goal:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
#(+)model:
  

#conjuncts:
(0):(['X1'], ['Int'], ['Ch(1,X1)'])
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'True', 'Ch(1,0)': 'False', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'True', 'Ch(0,0)': 'True', 'xlen()': '2', 'turn(p1)': 'False', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'False'}, {'Ch\\(\\d+,\\d+\\)': 'False'})

(1):(['X1'], ['Int'], ['Ch(0,X1)'])
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'False', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'True', 'Ch(0,0)': 'True', 'xlen()': '2', 'turn(p1)': 'False', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})


[Formula1]: (( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 0&Ch(0,G0)])
[Formula2]:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(1,X1)])&!(exists(X1:Int)[X1>=0&Ch(0,X1)])
~~~~~~~~~~~~~~~~~~~~~~~~~~


***************** Checking Convergence *****************:



***************** Checking DS0 *****************:


DS0 model:({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})

DS0 progressed updated model:

---------------------------------------------------
State q1: P models [({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})]


***************** P Update Structure *****************:


--------------------------
[Structure1]
#Goal:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
#(+)model:
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})

#conjuncts:
(0):(['G0'], ['Int'], ['G0 = 0', 'Ch(0,G0)'])
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'False', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'True', 'Ch(0,0)': 'True', 'xlen()': '2', 'turn(p1)': 'False', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'False'}, {'Ch\\(\\d+,\\d+\\)': 'False'})


[Structure2]
#Goal:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
#(+)model:
  

#conjuncts:
(0):(['X1'], ['Int'], ['Ch(1,X1)'])
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'True', 'Ch(1,0)': 'False', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'True', 'Ch(0,0)': 'True', 'xlen()': '2', 'turn(p1)': 'False', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'False'}, {'Ch\\(\\d+,\\d+\\)': 'False'})

(1):(['X1'], ['Int'], ['Ch(0,X1)'])
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'False', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'True', 'Ch(0,0)': 'True', 'xlen()': '2', 'turn(p1)': 'False', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})


[Formula1]: (( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 0&Ch(0,G0)])
[Formula2]:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(1,X1)])&!(exists(X1:Int)[X1>=0&Ch(0,X1)])
~~~~~~~~~~~~~~~~~~~~~~~~~~


***************** Checking Convergence *****************:



***************** Checking DS0 *****************:


DS0 model:({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})

DS0 progressed updated model:

---------------------------------------------------
State q1: P models [({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})]


***************** P Update Structure *****************:


--------------------------
[Structure1]
#Goal:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
#(+)model:
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})

#conjuncts:
(0):(['G0'], ['Int'], ['G0 = 0', 'Ch(0,G0)'])
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'False', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'True', 'Ch(0,0)': 'True', 'xlen()': '2', 'turn(p1)': 'False', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'False'}, {'Ch\\(\\d+,\\d+\\)': 'False'})


[Structure2]
#Goal:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
#(+)model:
  

#conjuncts:
(0):(['X1'], ['Int'], ['Ch(1,X1)'])
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'True', 'Ch(1,0)': 'False', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'True', 'Ch(0,0)': 'True', 'xlen()': '2', 'turn(p1)': 'False', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'False'}, {'Ch\\(\\d+,\\d+\\)': 'False'})

(1):(['X1'], ['Int'], ['Ch(0,X1)'])
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'False', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'True', 'Ch(0,0)': 'True', 'xlen()': '2', 'turn(p1)': 'False', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})


[Formula1]: (( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 0&Ch(0,G0)])
[Formula2]:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(1,X1)])&!(exists(X1:Int)[X1>=0&Ch(0,X1)])
~~~~~~~~~~~~~~~~~~~~~~~~~~


***************** Checking Convergence *****************:



***************** Checking DS0 *****************:


DS0 model:({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})

DS0 progressed updated model:

---------------------------------------------------
State q1: P models [({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})]


***************** P Update Structure *****************:


--------------------------
[Structure1]
#Goal:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
#(+)model:
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})

#conjuncts:
(0):(['G0'], ['Int'], ['G0 = 0', 'Ch(0,G0)'])
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'False', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'True', 'Ch(0,0)': 'True', 'xlen()': '2', 'turn(p1)': 'False', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'False'}, {'Ch\\(\\d+,\\d+\\)': 'False'})


[Structure2]
#Goal:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
#(+)model:
  

#conjuncts:
(0):(['X1'], ['Int'], ['Ch(1,X1)'])
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'True', 'Ch(1,0)': 'False', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'True', 'Ch(0,0)': 'True', 'xlen()': '2', 'turn(p1)': 'False', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'False'}, {'Ch\\(\\d+,\\d+\\)': 'False'})

(1):(['X1'], ['Int'], ['Ch(0,X1)'])
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'False', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'True', 'Ch(0,0)': 'True', 'xlen()': '2', 'turn(p1)': 'False', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})


[Formula1]: (( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 0&Ch(0,G0)])
[Formula2]:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(1,X1)])&!(exists(X1:Int)[X1>=0&Ch(0,X1)])
~~~~~~~~~~~~~~~~~~~~~~~~~~


***************** Checking Convergence *****************:



***************** Checking DS0 *****************:


DS0 model:({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})

DS0 progressed updated model:

---------------------------------------------------
State q1: P models [({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})]


***************** P Update Structure *****************:


--------------------------
[Structure1]
#Goal:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
#(+)model:
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})

#conjuncts:
(0):(['G0'], ['Int'], ['G0 = 0', 'Ch(0,G0)'])
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'False', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'True', 'Ch(0,0)': 'True', 'xlen()': '2', 'turn(p1)': 'False', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'False'}, {'Ch\\(\\d+,\\d+\\)': 'False'})


[Structure2]
#Goal:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
#(+)model:
  

#conjuncts:
(0):(['X1'], ['Int'], ['Ch(1,X1)'])
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'True', 'Ch(1,0)': 'False', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'True', 'Ch(0,0)': 'True', 'xlen()': '2', 'turn(p1)': 'False', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'False'}, {'Ch\\(\\d+,\\d+\\)': 'False'})

(1):(['X1'], ['Int'], ['Ch(0,X1)'])
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'False', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'True', 'Ch(0,0)': 'True', 'xlen()': '2', 'turn(p1)': 'False', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})


[Formula1]: (( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 0&Ch(0,G0)])
[Formula2]:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(1,X1)])&!(exists(X1:Int)[X1>=0&Ch(0,X1)])
~~~~~~~~~~~~~~~~~~~~~~~~~~


***************** Checking Convergence *****************:



***************** Checking DS0 *****************:


DS0 model:({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})

DS0 progressed updated model:

---------------------------------------------------
State q1: P models [({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})]


***************** P Update Structure *****************:


--------------------------
[Structure1]
#Goal:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
#(+)model:
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})

#conjuncts:
(0):(['G0'], ['Int'], ['G0 = 0', 'Ch(0,G0)'])
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'False', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'True', 'Ch(0,0)': 'True', 'xlen()': '2', 'turn(p1)': 'False', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'False'}, {'Ch\\(\\d+,\\d+\\)': 'False'})


[Structure2]
#Goal:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
#(+)model:
  

#conjuncts:
(0):(['X1'], ['Int'], ['Ch(1,X1)'])
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'True', 'Ch(1,0)': 'False', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'True', 'Ch(0,0)': 'True', 'xlen()': '2', 'turn(p1)': 'False', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'False'}, {'Ch\\(\\d+,\\d+\\)': 'False'})

(1):(['X1'], ['Int'], ['Ch(0,X1)'])
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'False', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'True', 'Ch(0,0)': 'True', 'xlen()': '2', 'turn(p1)': 'False', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})


[Formula1]: (( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 0&Ch(0,G0)])
[Formula2]:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(1,X1)])&!(exists(X1:Int)[X1>=0&Ch(0,X1)])
~~~~~~~~~~~~~~~~~~~~~~~~~~


***************** Checking Convergence *****************:



***************** Checking DS0 *****************:


DS0 model:({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})

DS0 progressed updated model:

---------------------------------------------------
State q1: P models [({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})]


***************** P Update Structure *****************:


--------------------------
[Structure1]
#Goal:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
#(+)model:
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})

#conjuncts:
(0):(['G0'], ['Int'], ['G0 = 0', 'Ch(0,G0)'])
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'False', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'True', 'Ch(0,0)': 'True', 'xlen()': '2', 'turn(p1)': 'False', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'False'}, {'Ch\\(\\d+,\\d+\\)': 'False'})


[Structure2]
#Goal:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
#(+)model:
  

#conjuncts:
(0):(['X1'], ['Int'], ['Ch(1,X1)'])
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'True', 'Ch(1,0)': 'False', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'True', 'Ch(0,0)': 'True', 'xlen()': '2', 'turn(p1)': 'False', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'False'}, {'Ch\\(\\d+,\\d+\\)': 'False'})

(1):(['X1'], ['Int'], ['Ch(0,X1)'])
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'False', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'True', 'Ch(0,0)': 'True', 'xlen()': '2', 'turn(p1)': 'False', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})


[Formula1]: (( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 0&Ch(0,G0)])
[Formula2]:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(1,X1)])&!(exists(X1:Int)[X1>=0&Ch(0,X1)])
~~~~~~~~~~~~~~~~~~~~~~~~~~


['sat\n', '(model \n', '  ;; universe for _S1:\n', '  ;;   _S1!val!1 _S1!val!0 \n', '  ;; -----------\n', '  ;; definitions for universe elements:\n', '  (declare-fun _S1!val!1 () _S1)\n', '  
(declare-fun _S1!val!0 () _S1)\n', '  ;; cardinality constraint:\n', '  
(forall ((x _S1)) (or (= x _S1!val!1) (= x _S1!val!0)))\n', '  ;; -----------\n', '  
(define-fun p1 () _S1\n', '    _S1!val!0)\n', '  
(define-fun p2 () _S1\n', '    _S1!val!1)\n', '  
(define-fun xlen () Int\n', '    2)\n', '  
(define-fun ylen () Int\n', '    2)\n', '  
(define-fun True () Bool\n', '    false)\n', '  
(define-fun False () Bool\n', '    false)\n', '  

(define-fun Ch ((x!0 Int) (x!1 Int)) Bool\n', '    
(let ((a!1 
(ite (<= 0 x!0) (ite (<= 1 x!0) (ite (<= 2 x!0) 2 1) 0) (- 1))
)\n', '          
(a!2 (ite (<= 0 x!1) (ite (<= 1 x!1) (ite (<= 2 x!1) 2 1) 0) (- 1))))\n', '      
(or 
(and (= a!1 0) (= a!2 1)) 
(and (= a!1 1) (= a!2 0))
)
)
)


Ch=lambda x0,x1: 
(
((2 if 2 <= x0 else 1 if 1 <= x0 else 0 if 0 <= x0 else -1) == (0)) 
and 
((2 if 2 <= x1 else 1 if 1 <= x1 else 0 if 0 <= x1 else -1) == (1))

) or 

(((2 if 2 <= x0 else 1 if 1 <= x0 else 0 if 0 <= x0 else -1) == (1)) and ((2 if 2 <= x1 else 1 if 1 <= x1 else 0 if 0 <= x1 else -1) == (0)))


\n', '  (define-fun turn ((x!0 _S1)) Bool\n', '    (= x!0 _S1!val!0))\n', ')\n']



***************** Checking Convergence *****************:



***************** Checking DS0 *****************:


DS0 model:({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})

DS0 progressed updated model:

---------------------------------------------------
State q1: P models [({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})]


***************** P Update Structure *****************:


--------------------------
[Structure1]
#Goal:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
#(+)model:
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})

#conjuncts:
(0):(['G0'], ['Int'], ['G0 = 0', 'Ch(0,G0)'])
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'False', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'True', 'Ch(0,0)': 'True', 'xlen()': '2', 'turn(p1)': 'False', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'False'}, {'Ch\\(\\d+,\\d+\\)': 'False'})


[Structure2]
#Goal:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
#(+)model:
  

#conjuncts:
(0):(['X1'], ['Int'], ['Ch(1,X1)'])
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'True', 'Ch(1,0)': 'False', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'True', 'Ch(0,0)': 'True', 'xlen()': '2', 'turn(p1)': 'False', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'False'}, {'Ch\\(\\d+,\\d+\\)': 'False'})

(1):(['X1'], ['Int'], ['Ch(0,X1)'])
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'False', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'True', 'Ch(0,0)': 'True', 'xlen()': '2', 'turn(p1)': 'False', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})


[Formula1]: (( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 0&Ch(0,G0)])
[Formula2]:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(1,X1)])&!(exists(X1:Int)[X1>=0&Ch(0,X1)])
~~~~~~~~~~~~~~~~~~~~~~~~~~


***************** Checking Convergence *****************:



***************** Checking DS0 *****************:


DS0 model:({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})

DS0 progressed updated model:

---------------------------------------------------
State q1: P models [({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})]


***************** P Update Structure *****************:


--------------------------
[Structure1]
#Goal:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
#(+)model:
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})

#conjuncts:
(0):(['G0'], ['Int'], ['G0 = 0', 'Ch(0,G0)'])
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'False', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'True', 'Ch(0,0)': 'True', 'xlen()': '2', 'turn(p1)': 'False', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'False'}, {'Ch\\(\\d+,\\d+\\)': 'False'})


[Structure2]
#Goal:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
#(+)model:
  

#conjuncts:
(0):(['X1'], ['Int'], ['Ch(1,X1)'])
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'True', 'Ch(1,0)': 'False', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'True', 'Ch(0,0)': 'True', 'xlen()': '2', 'turn(p1)': 'False', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'False'}, {'Ch\\(\\d+,\\d+\\)': 'False'})

(1):(['X1'], ['Int'], ['Ch(0,X1)'])
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'False', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'True', 'Ch(0,0)': 'True', 'xlen()': '2', 'turn(p1)': 'False', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})


[Formula1]: (( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 0&Ch(0,G0)])
[Formula2]:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(1,X1)])&!(exists(X1:Int)[X1>=0&Ch(0,X1)])
~~~~~~~~~~~~~~~~~~~~~~~~~~


***************** Checking Convergence *****************:



***************** Checking DS0 *****************:


DS0 model:({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})

DS0 progressed updated model:

---------------------------------------------------
State q1: P models [({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})]


***************** P Update Structure *****************:


--------------------------
[Structure1]
#Goal:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
#(+)model:
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})

#conjuncts:
(0):(['G0'], ['Int'], ['G0 = 0', 'Ch(0,G0)'])
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'False', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'True', 'Ch(0,0)': 'True', 'xlen()': '2', 'turn(p1)': 'False', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'False'}, {'Ch\\(\\d+,\\d+\\)': 'False'})


[Structure2]
#Goal:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
#(+)model:
  

#conjuncts:
(0):(['X1'], ['Int'], ['Ch(1,X1)'])
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'True', 'Ch(1,0)': 'False', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'True', 'Ch(0,0)': 'True', 'xlen()': '2', 'turn(p1)': 'False', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'False'}, {'Ch\\(\\d+,\\d+\\)': 'False'})

(1):(['X1'], ['Int'], ['Ch(0,X1)'])
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'False', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'True', 'Ch(0,0)': 'True', 'xlen()': '2', 'turn(p1)': 'False', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})


[Formula1]: (( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 0&Ch(0,G0)])
[Formula2]:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(1,X1)])&!(exists(X1:Int)[X1>=0&Ch(0,X1)])
~~~~~~~~~~~~~~~~~~~~~~~~~~


***************** Checking Convergence *****************:



***************** Checking DS0 *****************:


DS0 model:({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})

DS0 progressed updated model:

---------------------------------------------------
State q1: P models [({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})]


***************** P Update Structure *****************:


--------------------------
[Structure1]
#Goal:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
#(+)model:
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})

#conjuncts:
(0):(['G0'], ['Int'], ['G0 = 0', 'Ch(0,G0)'])
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'False', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'True', 'Ch(0,0)': 'True', 'xlen()': '2', 'turn(p1)': 'False', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'False'}, {'Ch\\(\\d+,\\d+\\)': 'False'})


[Structure2]
#Goal:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
#(+)model:
  

#conjuncts:
(0):(['X1'], ['Int'], ['Ch(1,X1)'])
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'True', 'Ch(1,0)': 'False', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'True', 'Ch(0,0)': 'True', 'xlen()': '2', 'turn(p1)': 'False', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'False'}, {'Ch\\(\\d+,\\d+\\)': 'False'})

(1):(['X1'], ['Int'], ['Ch(0,X1)'])
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'False', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'True', 'Ch(0,0)': 'True', 'xlen()': '2', 'turn(p1)': 'False', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})


[Formula1]: (( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 0&Ch(0,G0)])
[Formula2]:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(1,X1)])&!(exists(X1:Int)[X1>=0&Ch(0,X1)])
~~~~~~~~~~~~~~~~~~~~~~~~~~


***************** Checking Convergence *****************:



***************** Checking DS0 *****************:


DS0 model:({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})

DS0 progressed updated model:

---------------------------------------------------
State q1: P models [({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})]


***************** P Update Structure *****************:


--------------------------
[Structure1]
#Goal:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
#(+)model:
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})

#conjuncts:
(0):(['G0'], ['Int'], ['G0 = 0', 'Ch(0,G0)'])
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'False', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'True', 'Ch(0,0)': 'True', 'xlen()': '2', 'turn(p1)': 'False', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'False'}, {'Ch\\(\\d+,\\d+\\)': 'False'})


[Structure2]
#Goal:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
#(+)model:
  

#conjuncts:
(0):(['X1'], ['Int'], ['Ch(1,X1)'])
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'True', 'Ch(1,0)': 'False', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'True', 'Ch(0,0)': 'True', 'xlen()': '2', 'turn(p1)': 'False', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'False'}, {'Ch\\(\\d+,\\d+\\)': 'False'})

(1):(['X1'], ['Int'], ['Ch(0,X1)'])
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'False', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'True', 'Ch(0,0)': 'True', 'xlen()': '2', 'turn(p1)': 'False', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})


[Formula1]: (( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 0&Ch(0,G0)])
[Formula2]:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(1,X1)])&!(exists(X1:Int)[X1>=0&Ch(0,X1)])
~~~~~~~~~~~~~~~~~~~~~~~~~~


***************** Checking Convergence *****************:



***************** Checking DS0 *****************:


DS0 model:({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})

DS0 progressed updated model:

---------------------------------------------------
State q1: P models [({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})]


***************** P Update Structure *****************:


--------------------------
[Structure1]
#Goal:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
#(+)model:
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})

#conjuncts:
(0):(['G0'], ['Int'], ['G0 = 0', 'Ch(0,G0)'])
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'False', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'True', 'Ch(0,0)': 'True', 'xlen()': '2', 'turn(p1)': 'False', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'False'}, {'Ch\\(\\d+,\\d+\\)': 'False'})


[Structure2]
#Goal:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
#(+)model:
  

#conjuncts:
(0):(['X1'], ['Int'], ['Ch(1,X1)'])
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'True', 'Ch(1,0)': 'False', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'True', 'Ch(0,0)': 'True', 'xlen()': '2', 'turn(p1)': 'False', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'False'}, {'Ch\\(\\d+,\\d+\\)': 'False'})

(1):(['X1'], ['Int'], ['Ch(0,X1)'])
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'False', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'True', 'Ch(0,0)': 'True', 'xlen()': '2', 'turn(p1)': 'False', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})


[Formula1]: (( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 0&Ch(0,G0)])
[Formula2]:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(1,X1)])&!(exists(X1:Int)[X1>=0&Ch(0,X1)])
~~~~~~~~~~~~~~~~~~~~~~~~~~


***************** Checking Convergence *****************:



***************** Checking DS0 *****************:


DS0 model:({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})

DS0 progressed updated model:

---------------------------------------------------
State q1: P models [({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})]


***************** P Update Structure *****************:


--------------------------
[Structure1]
#Goal:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
#(+)model:
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})

#conjuncts:
(0):(['G0'], ['Int'], ['G0 = 0', 'Ch(0,G0)'])
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'False', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'True', 'Ch(0,0)': 'True', 'xlen()': '2', 'turn(p1)': 'False', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'False'}, {'Ch\\(\\d+,\\d+\\)': 'False'})


[Structure2]
#Goal:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
#(+)model:
  

#conjuncts:
(0):(['X1'], ['Int'], ['Ch(1,X1)'])
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'True', 'Ch(1,0)': 'False', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'True', 'Ch(0,0)': 'True', 'xlen()': '2', 'turn(p1)': 'False', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'False'}, {'Ch\\(\\d+,\\d+\\)': 'False'})

(1):(['X1'], ['Int'], ['Ch(0,X1)'])
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'False', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'True', 'Ch(0,0)': 'True', 'xlen()': '2', 'turn(p1)': 'False', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})


[Formula1]: (( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 0&Ch(0,G0)])
[Formula2]:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(1,X1)])&!(exists(X1:Int)[X1>=0&Ch(0,X1)])
~~~~~~~~~~~~~~~~~~~~~~~~~~


***************** Checking Convergence *****************:



***************** Checking DS0 *****************:


DS0 model:({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})

DS0 progressed updated model:

---------------------------------------------------
State q1: P models [({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})]


***************** P Update Structure *****************:


--------------------------
[Structure1]
#Goal:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
#(+)model:
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})

#conjuncts:
(0):(['G0'], ['Int'], ['G0 = 0', 'Ch(0,G0)'])
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'False', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'True', 'Ch(0,0)': 'True', 'xlen()': '2', 'turn(p1)': 'False', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'False'}, {'Ch\\(\\d+,\\d+\\)': 'False'})


[Structure2]
#Goal:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
#(+)model:
  

#conjuncts:
(0):(['X1'], ['Int'], ['Ch(1,X1)'])
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'True', 'Ch(1,0)': 'False', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'True', 'Ch(0,0)': 'True', 'xlen()': '2', 'turn(p1)': 'False', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'False'}, {'Ch\\(\\d+,\\d+\\)': 'False'})

(1):(['X1'], ['Int'], ['Ch(0,X1)'])
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'False', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'True', 'Ch(0,0)': 'True', 'xlen()': '2', 'turn(p1)': 'False', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})


[Formula1]: (( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 0&Ch(0,G0)])
[Formula2]:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(1,X1)])&!(exists(X1:Int)[X1>=0&Ch(0,X1)])
~~~~~~~~~~~~~~~~~~~~~~~~~~


***************** Checking Convergence *****************:



***************** Checking DS0 *****************:


DS0 model:({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})

DS0 progressed updated model:

---------------------------------------------------
State q1: P models [({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})]


***************** P Update Structure *****************:


--------------------------
[Structure1]
#Goal:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
#(+)model:
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})

#conjuncts:
(0):(['G0'], ['Int'], ['G0 = 0', 'Ch(0,G0)'])
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'False', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'True', 'Ch(0,0)': 'True', 'xlen()': '2', 'turn(p1)': 'False', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'False'}, {'Ch\\(\\d+,\\d+\\)': 'False'})


[Structure2]
#Goal:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
#(+)model:
  

#conjuncts:
(0):(['X1'], ['Int'], ['Ch(1,X1)'])
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'True', 'Ch(1,0)': 'False', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'True', 'Ch(0,0)': 'True', 'xlen()': '2', 'turn(p1)': 'False', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'False'}, {'Ch\\(\\d+,\\d+\\)': 'False'})

(1):(['X1'], ['Int'], ['Ch(0,X1)'])
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'False', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'True', 'Ch(0,0)': 'True', 'xlen()': '2', 'turn(p1)': 'False', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})


[Formula1]: (( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 0&Ch(0,G0)])
[Formula2]:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(1,X1)])&!(exists(X1:Int)[X1>=0&Ch(0,X1)])
~~~~~~~~~~~~~~~~~~~~~~~~~~


***************** Checking Convergence *****************:



***************** Checking DS0 *****************:


DS0 model:({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})

DS0 progressed updated model:

---------------------------------------------------
State q1: P models [({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})]


***************** P Update Structure *****************:


--------------------------
[Structure1]
#Goal:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
#(+)model:
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})

#conjuncts:
(0):(['G0'], ['Int'], ['G0 = 0', 'Ch(0,G0)'])
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'False', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'True', 'Ch(0,0)': 'True', 'xlen()': '2', 'turn(p1)': 'False', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'False'}, {'Ch\\(\\d+,\\d+\\)': 'False'})


[Structure2]
#Goal:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
#(+)model:
  

#conjuncts:
(0):(['X1'], ['Int'], ['Ch(1,X1)'])
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'True', 'Ch(1,0)': 'False', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'True', 'Ch(0,0)': 'True', 'xlen()': '2', 'turn(p1)': 'False', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'False'}, {'Ch\\(\\d+,\\d+\\)': 'False'})

(1):(['X1'], ['Int'], ['Ch(0,X1)'])
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'False', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'True', 'Ch(0,0)': 'True', 'xlen()': '2', 'turn(p1)': 'False', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})


[Formula1]: (( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 0&Ch(0,G0)])
[Formula2]:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(1,X1)])&!(exists(X1:Int)[X1>=0&Ch(0,X1)])
~~~~~~~~~~~~~~~~~~~~~~~~~~


***************** Checking Convergence *****************:



***************** Checking DS0 *****************:


DS0 model:({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})

DS0 progressed updated model:

---------------------------------------------------
State q1: P models [({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})]


***************** P Update Structure *****************:


--------------------------
[Structure1]
#Goal:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
#(+)model:
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})

#conjuncts:
(0):(['G0'], ['Int'], ['G0 = 0', 'Ch(0,G0)'])
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'False', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'True', 'Ch(0,0)': 'True', 'xlen()': '2', 'turn(p1)': 'False', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'False'}, {'Ch\\(\\d+,\\d+\\)': 'False'})


[Structure2]
#Goal:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
#(+)model:
  

#conjuncts:
(0):(['X1'], ['Int'], ['Ch(1,X1)'])
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'True', 'Ch(1,0)': 'False', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'True', 'Ch(0,0)': 'True', 'xlen()': '2', 'turn(p1)': 'False', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'False'}, {'Ch\\(\\d+,\\d+\\)': 'False'})

(1):(['X1'], ['Int'], ['Ch(0,X1)'])
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'False', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'True', 'Ch(0,0)': 'True', 'xlen()': '2', 'turn(p1)': 'False', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})


[Formula1]: (( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 0&Ch(0,G0)])
[Formula2]:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(1,X1)])&!(exists(X1:Int)[X1>=0&Ch(0,X1)])
~~~~~~~~~~~~~~~~~~~~~~~~~~


***************** Checking Convergence *****************:



***************** Checking DS0 *****************:


DS0 model:({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})

DS0 progressed updated model:

---------------------------------------------------
State q1: P models [({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})]


***************** P Update Structure *****************:


--------------------------
[Structure1]
#Goal:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
#(+)model:
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})

#conjuncts:
(0):(['G0'], ['Int'], ['G0 = 0', 'Ch(0,G0)'])
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'False', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'True', 'Ch(0,0)': 'True', 'xlen()': '2', 'turn(p1)': 'False', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'False'}, {'Ch\\(\\d+,\\d+\\)': 'False'})


[Structure2]
#Goal:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
#(+)model:
  

#conjuncts:
(0):(['X1'], ['Int'], ['Ch(1,X1)'])
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'True', 'Ch(1,0)': 'False', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'True', 'Ch(0,0)': 'True', 'xlen()': '2', 'turn(p1)': 'False', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'False'}, {'Ch\\(\\d+,\\d+\\)': 'False'})

(1):(['X1'], ['Int'], ['Ch(0,X1)'])
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'False', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'True', 'Ch(0,0)': 'True', 'xlen()': '2', 'turn(p1)': 'False', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})


[Formula1]: (( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 0&Ch(0,G0)])
[Formula2]:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(1,X1)])&!(exists(X1:Int)[X1>=0&Ch(0,X1)])
~~~~~~~~~~~~~~~~~~~~~~~~~~


***************** Checking Convergence *****************:



***************** Checking DS0 *****************:


DS0 model:({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})

DS0 progressed updated model:

---------------------------------------------------
State q1: P models [({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})]


***************** P Update Structure *****************:


--------------------------
[Structure1]
#Goal:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
#(+)model:
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})

#conjuncts:
(0):(['G0'], ['Int'], ['G0 = 0', 'Ch(0,G0)'])
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'False', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'True', 'Ch(0,0)': 'True', 'xlen()': '2', 'turn(p1)': 'False', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'False'}, {'Ch\\(\\d+,\\d+\\)': 'False'})


[Structure2]
#Goal:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
#(+)model:
  

#conjuncts:
(0):(['X1'], ['Int'], ['Ch(1,X1)'])
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'True', 'Ch(1,0)': 'False', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'True', 'Ch(0,0)': 'True', 'xlen()': '2', 'turn(p1)': 'False', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'False'}, {'Ch\\(\\d+,\\d+\\)': 'False'})

(1):(['X1'], ['Int'], ['Ch(0,X1)'])
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'False', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'True', 'Ch(0,0)': 'True', 'xlen()': '2', 'turn(p1)': 'False', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})


[Formula1]: (( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 0&Ch(0,G0)])
[Formula2]:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(1,X1)])&!(exists(X1:Int)[X1>=0&Ch(0,X1)])
~~~~~~~~~~~~~~~~~~~~~~~~~~


***************** Checking Convergence *****************:



***************** Checking DS0 *****************:


DS0 model:({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})

DS0 progressed updated model:

---------------------------------------------------
State q1: P models [({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})]


***************** P Update Structure *****************:


--------------------------
[Structure1]
#Goal:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
#(+)model:
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})

#conjuncts:
(0):(['G0'], ['Int'], ['G0 = 0', 'Ch(0,G0)'])
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'False', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'True', 'Ch(0,0)': 'True', 'xlen()': '2', 'turn(p1)': 'False', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'False'}, {'Ch\\(\\d+,\\d+\\)': 'False'})


[Structure2]
#Goal:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
#(+)model:
  

#conjuncts:
(0):(['X1'], ['Int'], ['Ch(1,X1)'])
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'True', 'Ch(1,0)': 'False', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'True', 'Ch(0,0)': 'True', 'xlen()': '2', 'turn(p1)': 'False', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'False'}, {'Ch\\(\\d+,\\d+\\)': 'False'})

(1):(['X1'], ['Int'], ['Ch(0,X1)'])
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'False', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'True', 'Ch(0,0)': 'True', 'xlen()': '2', 'turn(p1)': 'False', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})


[Formula1]: (( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 0&Ch(0,G0)])
[Formula2]:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(1,X1)])&!(exists(X1:Int)[X1>=0&Ch(0,X1)])
~~~~~~~~~~~~~~~~~~~~~~~~~~


***************** Checking Convergence *****************:



***************** Checking DS0 *****************:


DS0 model:({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})

DS0 progressed updated model:

---------------------------------------------------
State q1: P models [({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})]


***************** P Update Structure *****************:


--------------------------
[Structure1]
#Goal:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
#(+)model:
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})

#conjuncts:
(0):(['G0'], ['Int'], ['G0 = 0', 'Ch(0,G0)'])
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'False', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'True', 'Ch(0,0)': 'True', 'xlen()': '2', 'turn(p1)': 'False', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'False'}, {'Ch\\(\\d+,\\d+\\)': 'False'})


[Structure2]
#Goal:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
#(+)model:
  

#conjuncts:
(0):(['X1'], ['Int'], ['Ch(1,X1)'])
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'True', 'Ch(1,0)': 'False', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'True', 'Ch(0,0)': 'True', 'xlen()': '2', 'turn(p1)': 'False', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'False'}, {'Ch\\(\\d+,\\d+\\)': 'False'})

(1):(['X1'], ['Int'], ['Ch(0,X1)'])
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'False', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'True', 'Ch(0,0)': 'True', 'xlen()': '2', 'turn(p1)': 'False', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})


[Formula1]: (( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 0&Ch(0,G0)])
[Formula2]:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(1,X1)])&!(exists(X1:Int)[X1>=0&Ch(0,X1)])
~~~~~~~~~~~~~~~~~~~~~~~~~~


***************** Checking Convergence *****************:



***************** Checking DS0 *****************:


DS0 model:({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})

DS0 progressed updated model:

---------------------------------------------------
State q1: P models [({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})]


***************** P Update Structure *****************:


--------------------------
[Structure1]
#Goal:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
#(+)model:
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})

#conjuncts:
(0):(['G0'], ['Int'], ['G0 = 0', 'Ch(0,G0)'])
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'False', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'True', 'Ch(0,0)': 'True', 'xlen()': '2', 'turn(p1)': 'False', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'False'}, {'Ch\\(\\d+,\\d+\\)': 'False'})


[Structure2]
#Goal:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
#(+)model:
  

#conjuncts:
(0):(['X1'], ['Int'], ['Ch(1,X1)'])
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'True', 'Ch(1,0)': 'False', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'True', 'Ch(0,0)': 'True', 'xlen()': '2', 'turn(p1)': 'False', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'False'}, {'Ch\\(\\d+,\\d+\\)': 'False'})

(1):(['X1'], ['Int'], ['Ch(0,X1)'])
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'False', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'True', 'Ch(0,0)': 'True', 'xlen()': '2', 'turn(p1)': 'False', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})


[Formula1]: (( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 0&Ch(0,G0)])
[Formula2]:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(1,X1)])&!(exists(X1:Int)[X1>=0&Ch(0,X1)])
~~~~~~~~~~~~~~~~~~~~~~~~~~


***************** Checking Convergence *****************:



***************** Checking DS0 *****************:


DS0 model:({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})

DS0 progressed updated model:

---------------------------------------------------
State q1: P models [({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})]


***************** P Update Structure *****************:


--------------------------
[Structure1]
#Goal:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
#(+)model:
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})

#conjuncts:
(0):(['G0'], ['Int'], ['G0 = 0', 'Ch(0,G0)'])
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'False', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'True', 'Ch(0,0)': 'True', 'xlen()': '2', 'turn(p1)': 'False', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'False'}, {'Ch\\(\\d+,\\d+\\)': 'False'})


[Structure2]
#Goal:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
#(+)model:
  

#conjuncts:
(0):(['X1'], ['Int'], ['Ch(1,X1)'])
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'True', 'Ch(1,0)': 'False', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'True', 'Ch(0,0)': 'True', 'xlen()': '2', 'turn(p1)': 'False', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'False'}, {'Ch\\(\\d+,\\d+\\)': 'False'})

(1):(['X1'], ['Int'], ['Ch(0,X1)'])
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'False', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'True', 'Ch(0,0)': 'True', 'xlen()': '2', 'turn(p1)': 'False', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})


[Formula1]: (( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 0&Ch(0,G0)])
[Formula2]:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(1,X1)])&!(exists(X1:Int)[X1>=0&Ch(0,X1)])
~~~~~~~~~~~~~~~~~~~~~~~~~~


***************** Checking Convergence *****************:



***************** Checking DS0 *****************:


DS0 model:({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})

DS0 progressed updated model:

---------------------------------------------------
State q1: P models [({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})]


***************** P Update Structure *****************:


--------------------------
[Structure1]
#Goal:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
#(+)model:
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})

#conjuncts:
(0):(['G0'], ['Int'], ['G0 = 0', 'Ch(0,G0)'])
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'False', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'True', 'Ch(0,0)': 'True', 'xlen()': '2', 'turn(p1)': 'False', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'False'}, {'Ch\\(\\d+,\\d+\\)': 'False'})


[Structure2]
#Goal:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
#(+)model:
  

#conjuncts:
(0):(['X1'], ['Int'], ['Ch(1,X1)'])
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'True', 'Ch(1,0)': 'False', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'True', 'Ch(0,0)': 'True', 'xlen()': '2', 'turn(p1)': 'False', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'False'}, {'Ch\\(\\d+,\\d+\\)': 'False'})

(1):(['X1'], ['Int'], ['Ch(0,X1)'])
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'False', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'True', 'Ch(0,0)': 'True', 'xlen()': '2', 'turn(p1)': 'False', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})


[Formula1]: (( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 0&Ch(0,G0)])
[Formula2]:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(1,X1)])&!(exists(X1:Int)[X1>=0&Ch(0,X1)])
~~~~~~~~~~~~~~~~~~~~~~~~~~


***************** Checking Convergence *****************:



***************** Checking DS0 *****************:


DS0 model:({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})

DS0 progressed updated model:

---------------------------------------------------
State q1: P models [({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})]


***************** P Update Structure *****************:


--------------------------
[Structure1]
#Goal:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
#(+)model:
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})

#conjuncts:
(0):(['G0'], ['Int'], ['G0 = 0', 'Ch(0,G0)'])
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'False', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'True', 'Ch(0,0)': 'True', 'xlen()': '2', 'turn(p1)': 'False', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'False'}, {'Ch\\(\\d+,\\d+\\)': 'False'})


[Structure2]
#Goal:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
#(+)model:
  

#conjuncts:
(0):(['X1'], ['Int'], ['Ch(1,X1)'])
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'True', 'Ch(1,0)': 'False', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'True', 'Ch(0,0)': 'True', 'xlen()': '2', 'turn(p1)': 'False', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'False'}, {'Ch\\(\\d+,\\d+\\)': 'False'})

(1):(['X1'], ['Int'], ['Ch(0,X1)'])
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'False', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'True', 'Ch(0,0)': 'True', 'xlen()': '2', 'turn(p1)': 'False', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})


[Formula1]: (( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 0&Ch(0,G0)])
[Formula2]:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(1,X1)])&!(exists(X1:Int)[X1>=0&Ch(0,X1)])
~~~~~~~~~~~~~~~~~~~~~~~~~~


***************** Checking Convergence *****************:



***************** Checking DS0 *****************:


DS0 model:({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})

DS0 progressed updated model:

---------------------------------------------------
State q1: P models [({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})]


***************** P Update Structure *****************:


--------------------------
[Structure1]
#Goal:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
#(+)model:
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})

#conjuncts:
(0):(['G0'], ['Int'], ['G0 = 0', 'Ch(0,G0)'])
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'False', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'True', 'Ch(0,0)': 'True', 'xlen()': '2', 'turn(p1)': 'False', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'False'}, {'Ch\\(\\d+,\\d+\\)': 'False'})


[Structure2]
#Goal:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
#(+)model:
  

#conjuncts:
(0):(['X1'], ['Int'], ['Ch(1,X1)'])
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'True', 'Ch(1,0)': 'False', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'True', 'Ch(0,0)': 'True', 'xlen()': '2', 'turn(p1)': 'False', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'False'}, {'Ch\\(\\d+,\\d+\\)': 'False'})

(1):(['X1'], ['Int'], ['Ch(0,X1)'])
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'False', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'True', 'Ch(0,0)': 'True', 'xlen()': '2', 'turn(p1)': 'False', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})


[Formula1]: (( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 0&Ch(0,G0)])
[Formula2]:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(1,X1)])&!(exists(X1:Int)[X1>=0&Ch(0,X1)])
~~~~~~~~~~~~~~~~~~~~~~~~~~


***************** Checking Convergence *****************:



***************** Checking DS0 *****************:


DS0 model:({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})

DS0 progressed updated model:

---------------------------------------------------
State q1: P models [({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})]


***************** P Update Structure *****************:


--------------------------
[Structure1]
#Goal:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
#(+)model:
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})

#conjuncts:
(0):(['G0'], ['Int'], ['G0 = 0', 'Ch(0,G0)'])
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'False', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'True', 'Ch(0,0)': 'True', 'xlen()': '2', 'turn(p1)': 'False', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'False'}, {'Ch\\(\\d+,\\d+\\)': 'False'})


[Structure2]
#Goal:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
#(+)model:
  

#conjuncts:
(0):(['X1'], ['Int'], ['Ch(1,X1)'])
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'True', 'Ch(1,0)': 'False', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'True', 'Ch(0,0)': 'True', 'xlen()': '2', 'turn(p1)': 'False', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'False'}, {'Ch\\(\\d+,\\d+\\)': 'False'})

(1):(['X1'], ['Int'], ['Ch(0,X1)'])
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'False', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'True', 'Ch(0,0)': 'True', 'xlen()': '2', 'turn(p1)': 'False', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})


[Formula1]: (( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 0&Ch(0,G0)])
[Formula2]:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(1,X1)])&!(exists(X1:Int)[X1>=0&Ch(0,X1)])
~~~~~~~~~~~~~~~~~~~~~~~~~~


***************** Checking Convergence *****************:



***************** Checking DS0 *****************:


DS0 model:({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})

DS0 progressed updated model:

---------------------------------------------------
State q1: P models [({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})]


***************** P Update Structure *****************:


--------------------------
[Structure1]
#Goal:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
#(+)model:
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})

#conjuncts:
(0):(['G0'], ['Int'], ['G0 = 0', 'Ch(0,G0)'])
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'False', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'True', 'Ch(0,0)': 'True', 'xlen()': '2', 'turn(p1)': 'False', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'False'}, {'Ch\\(\\d+,\\d+\\)': 'False'})


[Structure2]
#Goal:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
#(+)model:
  

#conjuncts:
(0):(['X1'], ['Int'], ['Ch(1,X1)'])
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'True', 'Ch(1,0)': 'False', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'True', 'Ch(0,0)': 'True', 'xlen()': '2', 'turn(p1)': 'False', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'False'}, {'Ch\\(\\d+,\\d+\\)': 'False'})

(1):(['X1'], ['Int'], ['Ch(0,X1)'])
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'False', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'True', 'Ch(0,0)': 'True', 'xlen()': '2', 'turn(p1)': 'False', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})


[Formula1]: (( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 0&Ch(0,G0)])
[Formula2]:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(1,X1)])&!(exists(X1:Int)[X1>=0&Ch(0,X1)])
~~~~~~~~~~~~~~~~~~~~~~~~~~


***************** Checking Convergence *****************:



***************** Checking DS0 *****************:


DS0 model:({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})

DS0 progressed updated model:

---------------------------------------------------
State q1: P models [({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})]


***************** P Update Structure *****************:


--------------------------
[Structure1]
#Goal:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
#(+)model:
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})

#conjuncts:
(0):(['G0'], ['Int'], ['G0 = 0', 'Ch(0,G0)'])
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'False', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'True', 'Ch(0,0)': 'True', 'xlen()': '2', 'turn(p1)': 'False', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'False'}, {'Ch\\(\\d+,\\d+\\)': 'False'})


[Structure2]
#Goal:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
#(+)model:
  

#conjuncts:
(0):(['X1'], ['Int'], ['Ch(1,X1)'])
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'True', 'Ch(1,0)': 'False', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'True', 'Ch(0,0)': 'True', 'xlen()': '2', 'turn(p1)': 'False', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'False'}, {'Ch\\(\\d+,\\d+\\)': 'False'})

(1):(['X1'], ['Int'], ['Ch(0,X1)'])
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'False', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'True', 'Ch(0,0)': 'True', 'xlen()': '2', 'turn(p1)': 'False', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})


[Formula1]: (( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 0&Ch(0,G0)])
[Formula2]:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(1,X1)])&!(exists(X1:Int)[X1>=0&Ch(0,X1)])
~~~~~~~~~~~~~~~~~~~~~~~~~~


***************** Checking Convergence *****************:



***************** Checking DS0 *****************:


DS0 model:({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})

DS0 progressed updated model:

---------------------------------------------------
State q1: P models [({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})]


***************** P Update Structure *****************:


--------------------------
[Structure1]
#Goal:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
#(+)model:
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})

#conjuncts:
(0):(['G0'], ['Int'], ['G0 = 0', 'Ch(0,G0)'])
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'False', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'True', 'Ch(0,0)': 'True', 'xlen()': '2', 'turn(p1)': 'False', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'False'}, {'Ch\\(\\d+,\\d+\\)': 'False'})


[Structure2]
#Goal:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
#(+)model:
  

#conjuncts:
(0):(['X1'], ['Int'], ['Ch(1,X1)'])
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'True', 'Ch(1,0)': 'False', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'True', 'Ch(0,0)': 'True', 'xlen()': '2', 'turn(p1)': 'False', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'False'}, {'Ch\\(\\d+,\\d+\\)': 'False'})

(1):(['X1'], ['Int'], ['Ch(0,X1)'])
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'False', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'True', 'Ch(0,0)': 'True', 'xlen()': '2', 'turn(p1)': 'False', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})


[Formula1]: (( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 0&Ch(0,G0)])
[Formula2]:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(1,X1)])&!(exists(X1:Int)[X1>=0&Ch(0,X1)])
~~~~~~~~~~~~~~~~~~~~~~~~~~


***************** Checking Convergence *****************:



***************** Checking DS0 *****************:


DS0 model:({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})

DS0 progressed updated model:

---------------------------------------------------
State q1: P models [({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})]


***************** P Update Structure *****************:


--------------------------
[Structure1]
#Goal:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
#(+)model:
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})

#conjuncts:
(0):(['G0'], ['Int'], ['G0 = 0', 'Ch(0,G0)'])
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'False', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'True', 'Ch(0,0)': 'True', 'xlen()': '2', 'turn(p1)': 'False', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'False'}, {'Ch\\(\\d+,\\d+\\)': 'False'})


[Structure2]
#Goal:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
#(+)model:
  

#conjuncts:
(0):(['X1'], ['Int'], ['Ch(1,X1)'])
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'True', 'Ch(1,0)': 'False', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'True', 'Ch(0,0)': 'True', 'xlen()': '2', 'turn(p1)': 'False', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'False'}, {'Ch\\(\\d+,\\d+\\)': 'False'})

(1):(['X1'], ['Int'], ['Ch(0,X1)'])
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'False', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'True', 'Ch(0,0)': 'True', 'xlen()': '2', 'turn(p1)': 'False', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})


[Formula1]: (( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 0&Ch(0,G0)])
[Formula2]:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(1,X1)])&!(exists(X1:Int)[X1>=0&Ch(0,X1)])
~~~~~~~~~~~~~~~~~~~~~~~~~~


***************** Checking Convergence *****************:



***************** Checking DS0 *****************:


DS0 model:({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})

DS0 progressed updated model:

---------------------------------------------------
State q1: P models [({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})]


***************** P Update Structure *****************:


--------------------------
[Structure1]
#Goal:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
#(+)model:
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})

#conjuncts:
(0):(['G0'], ['Int'], ['G0 = 0', 'Ch(0,G0)'])
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'False', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'True', 'Ch(0,0)': 'True', 'xlen()': '2', 'turn(p1)': 'False', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'False'}, {'Ch\\(\\d+,\\d+\\)': 'False'})


[Structure2]
#Goal:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
#(+)model:
  

#conjuncts:
(0):(['X1'], ['Int'], ['Ch(1,X1)'])
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'True', 'Ch(1,0)': 'False', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'True', 'Ch(0,0)': 'True', 'xlen()': '2', 'turn(p1)': 'False', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'False'}, {'Ch\\(\\d+,\\d+\\)': 'False'})

(1):(['X1'], ['Int'], ['Ch(0,X1)'])
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'False', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'True', 'Ch(0,0)': 'True', 'xlen()': '2', 'turn(p1)': 'False', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})


[Formula1]: (( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 0&Ch(0,G0)])
[Formula2]:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(1,X1)])&!(exists(X1:Int)[X1>=0&Ch(0,X1)])
~~~~~~~~~~~~~~~~~~~~~~~~~~


***************** Checking Convergence *****************:



***************** Checking DS0 *****************:


DS0 model:({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})

DS0 progressed updated model:

---------------------------------------------------
State q1: P models [({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})]


***************** P Update Structure *****************:


--------------------------
[Structure1]
#Goal:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
#(+)model:
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})

#conjuncts:
(0):(['G0'], ['Int'], ['G0 = 0', 'Ch(0,G0)'])
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'False', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'True', 'Ch(0,0)': 'True', 'xlen()': '2', 'turn(p1)': 'False', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'False'}, {'Ch\\(\\d+,\\d+\\)': 'False'})


[Structure2]
#Goal:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
#(+)model:
  

#conjuncts:
(0):(['X1'], ['Int'], ['Ch(1,X1)'])
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'True', 'Ch(1,0)': 'False', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'True', 'Ch(0,0)': 'True', 'xlen()': '2', 'turn(p1)': 'False', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'False'}, {'Ch\\(\\d+,\\d+\\)': 'False'})

(1):(['X1'], ['Int'], ['Ch(0,X1)'])
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'False', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'True', 'Ch(0,0)': 'True', 'xlen()': '2', 'turn(p1)': 'False', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})


[Formula1]: (( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 0&Ch(0,G0)])
[Formula2]:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(1,X1)])&!(exists(X1:Int)[X1>=0&Ch(0,X1)])
~~~~~~~~~~~~~~~~~~~~~~~~~~


***************** Checking Convergence *****************:



***************** Checking DS0 *****************:


DS0 model:({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})

DS0 progressed updated model:

---------------------------------------------------
State q1: P models [({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})]


***************** P Update Structure *****************:


--------------------------
[Structure1]
#Goal:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
#(+)model:
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})

#conjuncts:
(0):(['G0'], ['Int'], ['G0 = 0', 'Ch(0,G0)'])
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'False', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'True', 'Ch(0,0)': 'True', 'xlen()': '2', 'turn(p1)': 'False', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'False'}, {'Ch\\(\\d+,\\d+\\)': 'False'})


[Structure2]
#Goal:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
#(+)model:
  

#conjuncts:
(0):(['X1'], ['Int'], ['Ch(1,X1)'])
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'True', 'Ch(1,0)': 'False', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'True', 'Ch(0,0)': 'True', 'xlen()': '2', 'turn(p1)': 'False', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'False'}, {'Ch\\(\\d+,\\d+\\)': 'False'})

(1):(['X1'], ['Int'], ['Ch(0,X1)'])
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'False', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'True', 'Ch(0,0)': 'True', 'xlen()': '2', 'turn(p1)': 'False', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})


[Formula1]: (( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 0&Ch(0,G0)])
[Formula2]:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(1,X1)])&!(exists(X1:Int)[X1>=0&Ch(0,X1)])
~~~~~~~~~~~~~~~~~~~~~~~~~~


***************** Checking Convergence *****************:



***************** Checking DS0 *****************:


DS0 model:({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})

DS0 progressed updated model:

---------------------------------------------------
State q1: P models [({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})]


***************** P Update Structure *****************:


--------------------------
[Structure1]
#Goal:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
#(+)model:
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})

#conjuncts:
(0):(['G0'], ['Int'], ['G0 = 0', 'Ch(0,G0)'])
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'False', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'True', 'Ch(0,0)': 'True', 'xlen()': '2', 'turn(p1)': 'False', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'False'}, {'Ch\\(\\d+,\\d+\\)': 'False'})


[Structure2]
#Goal:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
#(+)model:
  

#conjuncts:
(0):(['X1'], ['Int'], ['Ch(1,X1)'])
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'True', 'Ch(1,0)': 'False', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'True', 'Ch(0,0)': 'True', 'xlen()': '2', 'turn(p1)': 'False', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'False'}, {'Ch\\(\\d+,\\d+\\)': 'False'})

(1):(['X1'], ['Int'], ['Ch(0,X1)'])
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'False', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'True', 'Ch(0,0)': 'True', 'xlen()': '2', 'turn(p1)': 'False', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})


[Formula1]: (( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 0&Ch(0,G0)])
[Formula2]:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(1,X1)])&!(exists(X1:Int)[X1>=0&Ch(0,X1)])
~~~~~~~~~~~~~~~~~~~~~~~~~~


***************** Checking Convergence *****************:



***************** Checking DS0 *****************:


DS0 model:({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})

DS0 progressed updated model:

---------------------------------------------------
State q1: P models [({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})]


***************** P Update Structure *****************:


--------------------------
[Structure1]
#Goal:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
#(+)model:
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})

#conjuncts:
(0):(['G0'], ['Int'], ['G0 = 0', 'Ch(0,G0)'])
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'False', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'True', 'Ch(0,0)': 'True', 'xlen()': '2', 'turn(p1)': 'False', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'False'}, {'Ch\\(\\d+,\\d+\\)': 'False'})


[Structure2]
#Goal:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
#(+)model:
  

#conjuncts:
(0):(['X1'], ['Int'], ['Ch(1,X1)'])
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'True', 'Ch(1,0)': 'False', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'True', 'Ch(0,0)': 'True', 'xlen()': '2', 'turn(p1)': 'False', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'False'}, {'Ch\\(\\d+,\\d+\\)': 'False'})

(1):(['X1'], ['Int'], ['Ch(0,X1)'])
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'False', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'True', 'Ch(0,0)': 'True', 'xlen()': '2', 'turn(p1)': 'False', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})


[Formula1]: (( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 0&Ch(0,G0)])
[Formula2]:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(1,X1)])&!(exists(X1:Int)[X1>=0&Ch(0,X1)])
~~~~~~~~~~~~~~~~~~~~~~~~~~


***************** Checking Convergence *****************:



***************** Checking DS0 *****************:


DS0 model:({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})

DS0 progressed updated model:

---------------------------------------------------
State q1: P models [({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})]


***************** P Update Structure *****************:


--------------------------
[Structure1]
#Goal:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
#(+)model:
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})

#conjuncts:
(0):(['G0'], ['Int'], ['G0 = 0', 'Ch(0,G0)'])
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'False', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'True', 'Ch(0,0)': 'True', 'xlen()': '2', 'turn(p1)': 'False', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'False'}, {'Ch\\(\\d+,\\d+\\)': 'False'})


[Structure2]
#Goal:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
#(+)model:
  

#conjuncts:
(0):(['X1'], ['Int'], ['Ch(1,X1)'])
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'True', 'Ch(1,0)': 'False', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'True', 'Ch(0,0)': 'True', 'xlen()': '2', 'turn(p1)': 'False', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'False'}, {'Ch\\(\\d+,\\d+\\)': 'False'})

(1):(['X1'], ['Int'], ['Ch(0,X1)'])
  ({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'False', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'True', 'Ch(0,0)': 'True', 'xlen()': '2', 'turn(p1)': 'False', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})


[Formula1]: (( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 0&Ch(0,G0)])
[Formula2]:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(1,X1)])&!(exists(X1:Int)[X1>=0&Ch(0,X1)])
~~~~~~~~~~~~~~~~~~~~~~~~~~


***************** Checking Convergence *****************:



***************** Checking DS0 *****************:


DS0 model:({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})

DS0 progressed updated model:

---------------------------------------------------
State q1: P models [({'_S1': ['p2', 'p1'], 'Int': ['0', '1', '2'], 'Bool': ['True', 'False']}, {'Ch(1,1)': 'False', 'Ch(1,0)': 'True', 'Ch(0,2)': 'False', 'Ch(2,1)': 'False', 'turn(p2)': 'False', 'Ch(0,0)': 'False', 'xlen()': '2', 'turn(p1)': 'True', 'Ch(2,0)': 'False', 'Ch(2,2)': 'False', 'ylen()': '2', 'Ch(1,2)': 'False', 'Ch(0,1)': 'True'}, {'Ch\\(\\d+,\\d+\\)': 'False'})]

[Finished in 15.5s with exit code -9]
[shell_cmd: python -u "/Users/luokailun/Documents/GitHub3/synthesizer/test.py"]
[dir: /Users/luokailun/Documents/GitHub3/synthesizer]
[path: /Library/Frameworks/Python.framework/Versions/3.7/bin:/Users/luokailun/install/Gcc/usr/local/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Library/TeX/texbin]2019-10-12 14:18:57,975 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:!Ch(1,1)&Ch(1,0)&!Ch(2,0)&!Ch(2,1)&!turn(p2)&!Ch(2,2)&turn(p1)&ylen()=2&!Ch(1,2)&!Ch(0,2)&!Ch(0,0)&xlen()=2&Ch(0,1)
 f2: (( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 0&Ch(0,G0)])
2019-10-12 14:19:08,125 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:!Ch(1,1)&Ch(1,0)&!Ch(2,0)&!Ch(2,1)&!turn(p2)&!Ch(2,2)&turn(p1)&ylen()=2&!Ch(1,2)&!Ch(0,2)&!Ch(0,0)&xlen()=2&Ch(0,1)
 f2: (( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 0&Ch(0,G0)])
2019-10-12 14:20:37,307 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:!Ch(1,1)&Ch(1,0)&!Ch(2,0)&!Ch(2,1)&!turn(p2)&!Ch(2,2)&turn(p1)&ylen()=2&!Ch(1,2)&!Ch(0,2)&!Ch(0,0)&xlen()=2&Ch(0,1)
 f2: (( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 0&Ch(0,G0)])
2019-10-12 14:21:44,515 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:!Ch(1,1)&Ch(1,0)&!Ch(2,0)&!Ch(2,1)&!turn(p2)&!Ch(2,2)&turn(p1)&ylen()=2&!Ch(1,2)&!Ch(0,2)&!Ch(0,0)&xlen()=2&Ch(0,1)
 f2: (( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 0&Ch(0,G0)])
2019-10-12 14:24:40,809 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:forall(K16:Int,K17:Int)[K16>=0&K16<xlen()&K17>=0&K17<ylen()=>Ch(K16,K17)]&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)
 f2: (( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 0&Ch(0,G0)])
2019-10-12 14:25:11,363 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:!Ch(1,1)&Ch(1,0)&!Ch(2,0)&!Ch(2,1)&!turn(p2)&!Ch(2,2)&turn(p1)&ylen()=2&!Ch(1,2)&!Ch(0,2)&!Ch(0,0)&xlen()=2&Ch(0,1)
 f2:forall(K16:Int,K17:Int)[K16>=0&K16<xlen()&K17>=0&K17<ylen()=>Ch(K16,K17)]&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)
2019-10-12 14:25:11,401 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:forall(K16:Int,K17:Int)[K16>=0&K16<xlen()&K17>=0&K17<ylen()=>Ch(K16,K17)]&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)
 f2: (( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 0&Ch(0,G0)])
2019-10-12 14:27:01,196 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:!Ch(1,1)&Ch(1,0)&!Ch(2,0)&!Ch(2,1)&!turn(p2)&!Ch(2,2)&turn(p1)&ylen()=2&!Ch(1,2)&!Ch(0,2)&!Ch(0,0)&xlen()=2&Ch(0,1)
 f2:forall(K16:Int,K17:Int)[K16>=0&K16<xlen()&K17>=0&K17<ylen()=>Ch(K16,K17)]&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)
2019-10-12 14:27:01,240 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:forall(K16:Int,K17:Int)[K16>=0&K16<xlen()&K17>=0&K17<ylen()=>Ch(K16,K17)]&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)
 f2: (( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 0&Ch(0,G0)])
2019-10-12 14:27:03,867 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:!Ch(1,1)&Ch(1,0)&!Ch(2,0)&!Ch(2,1)&!turn(p2)&!Ch(2,2)&turn(p1)&ylen()=2&!Ch(1,2)&!Ch(0,2)&!Ch(0,0)&xlen()=2&Ch(0,1)
 f2:forall(K16:Int,K17:Int)[K16>=0&K16<xlen()&K17>=0&K17<ylen()=>Ch(K16,K17)]&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)
2019-10-12 14:27:03,921 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:forall(K16:Int,K17:Int)[K16>=0&K16<xlen()&K17>=0&K17<ylen()=>Ch(K16,K17)]&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)
 f2: (( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 0&Ch(0,G0)])
2019-10-12 15:01:01,302 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:!Ch(1,1)&Ch(1,0)&!Ch(2,0)&!Ch(2,1)&!turn(p2)&!Ch(2,2)&turn(p1)&ylen()=2&!Ch(1,2)&!Ch(0,2)&!Ch(0,0)&xlen()=2&Ch(0,1)
 f2:forall(K16:Int,K17:Int)[K16>=0&K16<xlen()&K17>=0&K17<ylen()=>Ch(K16,K17)]&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)
2019-10-12 15:01:20,321 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:!Ch(1,1)&Ch(1,0)&!Ch(2,0)&!Ch(2,1)&!turn(p2)&!Ch(2,2)&turn(p1)&ylen()=2&!Ch(1,2)&!Ch(0,2)&!Ch(0,0)&xlen()=2&Ch(0,1)
 f2:forall(K16:Int,K17:Int)[K16>=0&K16<xlen()&K17>=0&K17<ylen()=>Ch(K16,K17)]&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)
2019-10-12 15:01:30,688 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:!Ch(1,1)&Ch(1,0)&!Ch(2,0)&!Ch(2,1)&!turn(p2)&!Ch(2,2)&turn(p1)&ylen()=2&!Ch(1,2)&!Ch(0,2)&!Ch(0,0)&xlen()=2&Ch(0,1)
 f2:forall(K16:Int,K17:Int)[K16>=0&K16<xlen()&K17>=0&K17<ylen()=>Ch(K16,K17)]&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)
2019-10-12 15:02:02,902 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:!Ch(1,1)&Ch(1,0)&!Ch(2,0)&!Ch(2,1)&!turn(p2)&!Ch(2,2)&turn(p1)&ylen()=2&!Ch(1,2)&!Ch(0,2)&!Ch(0,0)&xlen()=2&Ch(0,1)
 f2:forall(K16:Int,K17:Int)[K16>=0&K16<xlen()&K17>=0&K17<ylen()=>Ch(K16,K17)]&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)
2019-10-12 15:02:02,944 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:forall(K16:Int,K17:Int)[K16>=0&K16<xlen()&K17>=0&K17<ylen()=>Ch(K16,K17)]&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)
 f2: (( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 0&Ch(0,G0)])
2019-10-12 15:04:43,564 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:!Ch(1,1)&Ch(1,0)&!Ch(2,0)&!Ch(2,1)&!turn(p2)&!Ch(2,2)&turn(p1)&ylen()=2&!Ch(1,2)&!Ch(0,2)&!Ch(0,0)&xlen()=2&Ch(0,1)
 f2:forall(K16:Int,K17:Int)[K16>=0&K16<xlen()&K17>=0&K17<ylen()=>Ch(K16,K17)]&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)
2019-10-12 15:04:43,601 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:forall(K16:Int,K17:Int)[K16>=0&K16<xlen()&K17>=0&K17<ylen()=>Ch(K16,K17)]&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)
 f2: (( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 0&Ch(0,G0)])
2019-10-12 15:08:09,502 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:forall(K16:Int,K17:Int)[K16>=0&K16<xlen()&K17>=0&K17<ylen()=>Ch(K16,K17)]&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)
 f2: (( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 0&Ch(0,G0)])
2019-10-12 15:13:13,607 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:forall(K16:Int,K17:Int)[K16>=0&K16<xlen()&K17>=0&K17<ylen()=>Ch(K16,K17)]&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)
 f2: (( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 0&Ch(0,G0)])
2019-10-12 15:43:48,353 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:!(!Ch(0,0))=>(exists(K21:Int,K22:Int)[ (Ch(K21,K22)&turn(p1)&K21>=0&K21<xlen()&K22>=0&K22<ylen())&(( !(Ch(0,0)&(K21>0|K22>0)) ) => ( !(Ch(0,0)&(K21>0|K22>0))&(!turn(p1)) )) ])
2019-10-12 15:43:48,404 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:forall(K19:Int,K20:Int)[ Ch(K19,K20)&turn(p2)&K19>=0&K19<xlen()&K20>=0&K20<ylen()=>(( !(Ch(0,0)&(K19>0|K20>0)) ) => ( !(Ch(0,0)&(K19>0|K20>0))&(!turn(p1)) )) ]
2019-10-12 15:43:48,603 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(0,X1)])
 f2:!(!Ch(0,0))=>(exists(K25:Int,K26:Int)[ (Ch(K25,K26)&turn(p1)&K25>=0&K25<xlen()&K26>=0&K26<ylen())&(( !(Ch(0,0)&(K25>0|K26>0)) ) => ( !(Ch(0,0)&(K25>0|K26>0))&(!turn(p1)) )) ])
2019-10-12 15:43:48,637 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:forall(K23:Int,K24:Int)[ Ch(K23,K24)&turn(p2)&K23>=0&K23<xlen()&K24>=0&K24<ylen()=>((( !(Ch(0,0)&(K23>0|K24>0)) ) => ( !(Ch(0,0)&(K23>0|K24>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(Ch(0,X1)&(K23>0|K24>X1))])) ]
2019-10-12 15:43:49,005 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(0,X1)])
 f2:!(!Ch(0,0))=>(exists(K29:Int,K30:Int)[ (Ch(K29,K30)&turn(p1)&K29>=0&K29<xlen()&K30>=0&K30<ylen())&((( !(Ch(0,0)&(K29>0|K30>0)) ) => ( !(Ch(0,0)&(K29>0|K30>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(Ch(1,X1)&(K29>1|K30>X1))])) ])
2019-10-12 15:43:49,040 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(1,X1)])
 f2:forall(K27:Int,K28:Int)[ Ch(K27,K28)&turn(p2)&K27>=0&K27<xlen()&K28>=0&K28<ylen()=>((( !(Ch(0,0)&(K27>0|K28>0)) ) => ( !(Ch(0,0)&(K27>0|K28>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(Ch(0,X1)&(K27>0|K28>X1))])) ]
2019-10-12 15:43:49,087 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(1,X1)])
 f2:forall(K27:Int,K28:Int)[ Ch(K27,K28)&turn(p2)&K27>=0&K27<xlen()&K28>=0&K28<ylen()=>((( !(Ch(0,0)&(K27>0|K28>0)) ) => ( !(Ch(0,0)&(K27>0|K28>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(Ch(0,X1)&(K27>0|K28>X1))])) ]
2019-10-12 15:43:49,682 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(0,X1)])
 f2:!(!Ch(0,0))=>(exists(K33:Int,K34:Int)[ (Ch(K33,K34)&turn(p1)&K33>=0&K33<xlen()&K34>=0&K34<ylen())&((( !(Ch(0,0)&(K33>0|K34>0)) ) => ( !(Ch(0,0)&(K33>0|K34>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(Ch(1,X1)&(K33>1|K34>X1))])&!(exists(X1:Int)[X1>=0&(Ch(0,X1)&(K33>0|K34>X1))])) ])
2019-10-12 15:43:49,718 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(1,X1)])&!(exists(X1:Int)[X1>=0&Ch(0,X1)])
 f2:forall(K31:Int,K32:Int)[ Ch(K31,K32)&turn(p2)&K31>=0&K31<xlen()&K32>=0&K32<ylen()=>((( !(Ch(0,0)&(K31>0|K32>0)) ) => ( !(Ch(0,0)&(K31>0|K32>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(Ch(0,X1)&(K31>0|K32>X1))])) ]
2019-10-12 15:43:49,747 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:forall(K16:Int,K17:Int)[K16>=0&K16<xlen()&K17>=0&K17<ylen()=>Ch(K16,K17)]&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)
 f2:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(0,X1)])
2019-10-12 15:43:50,818 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 0&! Ch(1,G0)])
 f2:!(!Ch(0,0))=>(exists(K37:Int,K38:Int)[ (Ch(K37,K38)&turn(p1)&K37>=0&K37<xlen()&K38>=0&K38<ylen())&((( !(Ch(0,0)&(K37>0|K38>0)) ) => ( !(Ch(0,0)&(K37>0|K38>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 0&(Ch(1,G0)&(K37>1|K38>G0))])&!(exists(G0:Int)[G0>=0&G0 = 0&! (Ch(1,G0)&(K37>1|K38>G0))])) ])
2019-10-12 15:43:50,865 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 > 0&Ch(1,G0)])&!(exists(G0:Int)[G0>=0&G0 = 0&! Ch(1,G0)])
 f2:forall(K35:Int,K36:Int)[ Ch(K35,K36)&turn(p2)&K35>=0&K35<xlen()&K36>=0&K36<ylen()=>((( !(Ch(0,0)&(K35>0|K36>0)) ) => ( !(Ch(0,0)&(K35>0|K36>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 0&! (Ch(1,G0)&(K35>1|K36>G0))])) ]
2019-10-12 15:43:51,508 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 0&! Ch(1,G0)])
 f2:!(!Ch(0,0))=>(exists(K41:Int,K42:Int)[ (Ch(K41,K42)&turn(p1)&K41>=0&K41<xlen()&K42>=0&K42<ylen())&((( !(Ch(0,0)&(K41>0|K42>0)) ) => ( !(Ch(0,0)&(K41>0|K42>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 0&(Ch(1,G0)&(K41>1|K42>G0))])&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K41>0|K42>G0))&! (Ch(G0,0)&(K41>G0|K42>0))])) ])
2019-10-12 15:43:51,572 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 0&! Ch(1,G0)])
 f2:!(!Ch(0,0))=>(exists(K41:Int,K42:Int)[ (Ch(K41,K42)&turn(p1)&K41>=0&K41<xlen()&K42>=0&K42<ylen())&((( !(Ch(0,0)&(K41>0|K42>0)) ) => ( !(Ch(0,0)&(K41>0|K42>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 0&(Ch(1,G0)&(K41>1|K42>G0))])&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K41>0|K42>G0))&! (Ch(G0,0)&(K41>G0|K42>0))])) ])
2019-10-12 15:43:51,610 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 > 0&Ch(1,G0)])&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(G0,0)])
 f2:forall(K39:Int,K40:Int)[ Ch(K39,K40)&turn(p2)&K39>=0&K39<xlen()&K40>=0&K40<ylen()=>((( !(Ch(0,0)&(K39>0|K40>0)) ) => ( !(Ch(0,0)&(K39>0|K40>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 0&! (Ch(1,G0)&(K39>1|K40>G0))])) ]
2019-10-12 15:43:52,665 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 0&! Ch(1,G0)])&!(turn(p2))
 f2:!(!Ch(0,0))=>(exists(K45:Int,K46:Int)[ (Ch(K45,K46)&turn(p1)&K45>=0&K45<xlen()&K46>=0&K46<ylen())&((( !(Ch(0,0)&(K45>0|K46>0)) ) => ( !(Ch(0,0)&(K45>0|K46>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K45>0|K46>G0))&! (Ch(G0,0)&(K45>G0|K46>0))])&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K45>1|K46>G0))&! (Ch(0,1)&(K45>0|K46>1))])) ])
2019-10-12 15:43:52,979 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 0&! Ch(1,G0)])&!(turn(p2))
 f2:!(!Ch(0,0))=>(exists(K45:Int,K46:Int)[ (Ch(K45,K46)&turn(p1)&K45>=0&K45<xlen()&K46>=0&K46<ylen())&((( !(Ch(0,0)&(K45>0|K46>0)) ) => ( !(Ch(0,0)&(K45>0|K46>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K45>0|K46>G0))&! (Ch(G0,0)&(K45>G0|K46>0))])&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K45>1|K46>G0))&! (Ch(0,1)&(K45>0|K46>1))])) ])
2019-10-12 15:43:53,032 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(G0,0)])&!(exists(G0:Int)[G0>=0&Ch(1,G0)&! Ch(0,1)])
 f2:forall(K43:Int,K44:Int)[ Ch(K43,K44)&turn(p2)&K43>=0&K43<xlen()&K44>=0&K44<ylen()=>((( !(Ch(0,0)&(K43>0|K44>0)) ) => ( !(Ch(0,0)&(K43>0|K44>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 0&! (Ch(1,G0)&(K43>1|K44>G0))])&!((!turn(p2)))) ]
2019-10-12 15:43:53,742 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(turn(p2))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&turn(p2)])
 f2:!(!Ch(0,0))=>(exists(K49:Int,K50:Int)[ (Ch(K49,K50)&turn(p1)&K49>=0&K49<xlen()&K50>=0&K50<ylen())&((( !(Ch(0,0)&(K49>0|K50>0)) ) => ( !(Ch(0,0)&(K49>0|K50>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K49>0|K50>G0))&! (Ch(G0,0)&(K49>G0|K50>0))])&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K49>1|K50>G0))&! (Ch(0,1)&(K49>0|K50>1))])) ])
2019-10-12 15:43:53,781 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(G0,0)])&!(exists(G0:Int)[G0>=0&Ch(1,G0)&! Ch(0,1)])
 f2:forall(K47:Int,K48:Int)[ Ch(K47,K48)&turn(p2)&K47>=0&K47<xlen()&K48>=0&K48<ylen()=>((( !(Ch(0,0)&(K47>0|K48>0)) ) => ( !(Ch(0,0)&(K47>0|K48>0))&(!turn(p1)) ))&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K47>0|K48>G0))&(!turn(p2))])) ]
2019-10-12 15:43:55,698 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:!(!Ch(0,0))=>(exists(K53:Int,K54:Int)[ (Ch(K53,K54)&turn(p1)&K53>=0&K53<xlen()&K54>=0&K54<ylen())&(( !(Ch(0,0)&(K53>0|K54>0)) ) => ( !(Ch(0,0)&(K53>0|K54>0))&(!turn(p1)) )) ])
2019-10-12 15:43:55,745 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:forall(K51:Int,K52:Int)[ Ch(K51,K52)&turn(p2)&K51>=0&K51<xlen()&K52>=0&K52<ylen()=>(( !(Ch(0,0)&(K51>0|K52>0)) ) => ( !(Ch(0,0)&(K51>0|K52>0))&(!turn(p1)) )) ]
2019-10-12 15:43:55,918 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(X1,0)])
 f2:!(!Ch(0,0))=>(exists(K57:Int,K58:Int)[ (Ch(K57,K58)&turn(p1)&K57>=0&K57<xlen()&K58>=0&K58<ylen())&(( !(Ch(0,0)&(K57>0|K58>0)) ) => ( !(Ch(0,0)&(K57>0|K58>0))&(!turn(p1)) )) ])
2019-10-12 15:43:55,952 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:forall(K55:Int,K56:Int)[ Ch(K55,K56)&turn(p2)&K55>=0&K55<xlen()&K56>=0&K56<ylen()=>((( !(Ch(0,0)&(K55>0|K56>0)) ) => ( !(Ch(0,0)&(K55>0|K56>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(Ch(X1,0)&(K55>X1|K56>0))])) ]
2019-10-12 15:43:56,337 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(X1,0)])
 f2:!(!Ch(0,0))=>(exists(K61:Int,K62:Int)[ (Ch(K61,K62)&turn(p1)&K61>=0&K61<xlen()&K62>=0&K62<ylen())&((( !(Ch(0,0)&(K61>0|K62>0)) ) => ( !(Ch(0,0)&(K61>0|K62>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(Ch(X1,1)&(K61>X1|K62>1))])) ])
2019-10-12 15:43:56,371 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(X1,1)])
 f2:forall(K59:Int,K60:Int)[ Ch(K59,K60)&turn(p2)&K59>=0&K59<xlen()&K60>=0&K60<ylen()=>((( !(Ch(0,0)&(K59>0|K60>0)) ) => ( !(Ch(0,0)&(K59>0|K60>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(Ch(X1,0)&(K59>X1|K60>0))])) ]
2019-10-12 15:43:56,416 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(X1,1)])
 f2:forall(K59:Int,K60:Int)[ Ch(K59,K60)&turn(p2)&K59>=0&K59<xlen()&K60>=0&K60<ylen()=>((( !(Ch(0,0)&(K59>0|K60>0)) ) => ( !(Ch(0,0)&(K59>0|K60>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(Ch(X1,0)&(K59>X1|K60>0))])) ]
2019-10-12 15:43:57,044 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(X1,0)])
 f2:!(!Ch(0,0))=>(exists(K65:Int,K66:Int)[ (Ch(K65,K66)&turn(p1)&K65>=0&K65<xlen()&K66>=0&K66<ylen())&((( !(Ch(0,0)&(K65>0|K66>0)) ) => ( !(Ch(0,0)&(K65>0|K66>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(Ch(X1,1)&(K65>X1|K66>1))])&!(exists(X1:Int)[X1>=0&(Ch(X1,0)&(K65>X1|K66>0))])) ])
2019-10-12 15:43:57,081 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(X1,1)])&!(exists(X1:Int)[X1>=0&Ch(X1,0)])
 f2:forall(K63:Int,K64:Int)[ Ch(K63,K64)&turn(p2)&K63>=0&K63<xlen()&K64>=0&K64<ylen()=>((( !(Ch(0,0)&(K63>0|K64>0)) ) => ( !(Ch(0,0)&(K63>0|K64>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(Ch(X1,0)&(K63>X1|K64>0))])) ]
2019-10-12 15:43:57,112 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:forall(K16:Int,K17:Int)[K16>=0&K16<xlen()&K17>=0&K17<ylen()=>Ch(K16,K17)]&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)
 f2:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(X1,0)])
2019-10-12 15:43:58,070 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 1&! Ch(0,G0)])
 f2:!(!Ch(0,0))=>(exists(K69:Int,K70:Int)[ (Ch(K69,K70)&turn(p1)&K69>=0&K69<xlen()&K70>=0&K70<ylen())&((( !(Ch(0,0)&(K69>0|K70>0)) ) => ( !(Ch(0,0)&(K69>0|K70>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 1&(Ch(G0,1)&(K69>G0|K70>1))])&!(exists(G0:Int)[G0>=0&G0 = 1&! (Ch(0,G0)&(K69>0|K70>G0))])) ])
2019-10-12 15:43:58,120 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 1&! Ch(0,G0)])
 f2:!(!Ch(0,0))=>(exists(K69:Int,K70:Int)[ (Ch(K69,K70)&turn(p1)&K69>=0&K69<xlen()&K70>=0&K70<ylen())&((( !(Ch(0,0)&(K69>0|K70>0)) ) => ( !(Ch(0,0)&(K69>0|K70>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 1&(Ch(G0,1)&(K69>G0|K70>1))])&!(exists(G0:Int)[G0>=0&G0 = 1&! (Ch(0,G0)&(K69>0|K70>G0))])) ])
2019-10-12 15:43:58,159 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 1&Ch(G0,1)])&!(exists(G0:Int)[G0>=0&G0 = 1&! Ch(0,G0)])
 f2:forall(K67:Int,K68:Int)[ Ch(K67,K68)&turn(p2)&K67>=0&K67<xlen()&K68>=0&K68<ylen()=>((( !(Ch(0,0)&(K67>0|K68>0)) ) => ( !(Ch(0,0)&(K67>0|K68>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 1&! (Ch(0,G0)&(K67>0|K68>G0))])) ]
2019-10-12 15:43:58,757 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 1&! Ch(0,G0)])
 f2:!(!Ch(0,0))=>(exists(K73:Int,K74:Int)[ (Ch(K73,K74)&turn(p1)&K73>=0&K73<xlen()&K74>=0&K74<ylen())&((( !(Ch(0,0)&(K73>0|K74>0)) ) => ( !(Ch(0,0)&(K73>0|K74>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 1&(Ch(G0,1)&(K73>G0|K74>1))])&!(exists(G0:Int)[G0>=0&(Ch(G0,0)&(K73>G0|K74>0))&! (Ch(0,G0)&(K73>0|K74>G0))])) ])
2019-10-12 15:43:58,803 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 1&! Ch(0,G0)])
 f2:!(!Ch(0,0))=>(exists(K73:Int,K74:Int)[ (Ch(K73,K74)&turn(p1)&K73>=0&K73<xlen()&K74>=0&K74<ylen())&((( !(Ch(0,0)&(K73>0|K74>0)) ) => ( !(Ch(0,0)&(K73>0|K74>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 1&(Ch(G0,1)&(K73>G0|K74>1))])&!(exists(G0:Int)[G0>=0&(Ch(G0,0)&(K73>G0|K74>0))&! (Ch(0,G0)&(K73>0|K74>G0))])) ])
2019-10-12 15:43:58,843 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 1&Ch(G0,1)])&!(exists(G0:Int)[G0>=0&Ch(G0,0)&! Ch(0,G0)])
 f2:forall(K71:Int,K72:Int)[ Ch(K71,K72)&turn(p2)&K71>=0&K71<xlen()&K72>=0&K72<ylen()=>((( !(Ch(0,0)&(K71>0|K72>0)) ) => ( !(Ch(0,0)&(K71>0|K72>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 1&! (Ch(0,G0)&(K71>0|K72>G0))])) ]
2019-10-12 15:43:59,856 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 1&! Ch(0,G0)])&!(! Ch(1,1))
 f2:!(!Ch(0,0))=>(exists(K77:Int,K78:Int)[ (Ch(K77,K78)&turn(p1)&K77>=0&K77<xlen()&K78>=0&K78<ylen())&((( !(Ch(0,0)&(K77>0|K78>0)) ) => ( !(Ch(0,0)&(K77>0|K78>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(G0,0)&(K77>G0|K78>0))&! (Ch(0,G0)&(K77>0|K78>G0))])&!(exists(G0:Int)[G0>=0&(Ch(G0,1)&(K77>G0|K78>1))&! (Ch(1,0)&(K77>1|K78>0))])) ])
2019-10-12 15:44:00,180 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 1&! Ch(0,G0)])&!(! Ch(1,1))
 f2:!(!Ch(0,0))=>(exists(K77:Int,K78:Int)[ (Ch(K77,K78)&turn(p1)&K77>=0&K77<xlen()&K78>=0&K78<ylen())&((( !(Ch(0,0)&(K77>0|K78>0)) ) => ( !(Ch(0,0)&(K77>0|K78>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(G0,0)&(K77>G0|K78>0))&! (Ch(0,G0)&(K77>0|K78>G0))])&!(exists(G0:Int)[G0>=0&(Ch(G0,1)&(K77>G0|K78>1))&! (Ch(1,0)&(K77>1|K78>0))])) ])
2019-10-12 15:44:00,224 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(G0,0)&! Ch(0,G0)])&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(1,0)])
 f2:forall(K75:Int,K76:Int)[ Ch(K75,K76)&turn(p2)&K75>=0&K75<xlen()&K76>=0&K76<ylen()=>((( !(Ch(0,0)&(K75>0|K76>0)) ) => ( !(Ch(0,0)&(K75>0|K76>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 1&! (Ch(0,G0)&(K75>0|K76>G0))])&!(! (Ch(1,1)&(K75>1|K76>1)))) ]
2019-10-12 15:44:00,973 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(G0,0)&! turn(p1)])&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! turn(p1)])
 f2:!(!Ch(0,0))=>(exists(K81:Int,K82:Int)[ (Ch(K81,K82)&turn(p1)&K81>=0&K81<xlen()&K82>=0&K82<ylen())&((( !(Ch(0,0)&(K81>0|K82>0)) ) => ( !(Ch(0,0)&(K81>0|K82>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(G0,0)&(K81>G0|K82>0))&! (Ch(0,G0)&(K81>0|K82>G0))])&!(exists(G0:Int)[G0>=0&(Ch(G0,1)&(K81>G0|K82>1))&! (Ch(1,0)&(K81>1|K82>0))])) ])
2019-10-12 15:44:01,016 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(G0,0)&! Ch(0,G0)])&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(1,0)])
 f2:forall(K79:Int,K80:Int)[ Ch(K79,K80)&turn(p2)&K79>=0&K79<xlen()&K80>=0&K80<ylen()=>((( !(Ch(0,0)&(K79>0|K80>0)) ) => ( !(Ch(0,0)&(K79>0|K80>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(G0,0)&(K79>G0|K80>0))&! (!turn(p1))])&!(exists(G0:Int)[G0>=0&(Ch(G0,1)&(K79>G0|K80>1))&! (!turn(p1))])) ]
2019-10-12 15:44:02,614 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:!(!Ch(0,0))=>(exists(K85:Int,K86:Int)[ (Ch(K85,K86)&turn(p1)&K85>=0&K85<xlen()&K86>=0&K86<ylen())&(( !(Ch(0,0)&(K85>0|K86>0)) ) => ( !(Ch(0,0)&(K85>0|K86>0))&(!turn(p1)) )) ])
2019-10-12 15:44:02,659 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:forall(K83:Int,K84:Int)[ Ch(K83,K84)&turn(p2)&K83>=0&K83<xlen()&K84>=0&K84<ylen()=>(( !(Ch(0,0)&(K83>0|K84>0)) ) => ( !(Ch(0,0)&(K83>0|K84>0))&(!turn(p1)) )) ]
2019-10-12 15:44:02,846 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(Y10:Int,Y11:Int)[Y10>=0&Y11>=0&Ch(Y10,Y11)])
 f2:!(!Ch(0,0))=>(exists(K89:Int,K90:Int)[ (Ch(K89,K90)&turn(p1)&K89>=0&K89<xlen()&K90>=0&K90<ylen())&(( !(Ch(0,0)&(K89>0|K90>0)) ) => ( !(Ch(0,0)&(K89>0|K90>0))&(!turn(p1)) )) ])
2019-10-12 15:44:02,880 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:forall(K87:Int,K88:Int)[ Ch(K87,K88)&turn(p2)&K87>=0&K87<xlen()&K88>=0&K88<ylen()=>((( !(Ch(0,0)&(K87>0|K88>0)) ) => ( !(Ch(0,0)&(K87>0|K88>0))&(!turn(p1)) ))&!(exists(Y10:Int,Y11:Int)[Y10>=0&Y11>=0&(Ch(Y10,Y11)&(K87>Y10|K88>Y11))])) ]
2019-10-12 15:44:03,262 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(Y10:Int,Y11:Int)[Y10>=0&Y11>=0&Ch(Y10,Y11)])
 f2:!(!Ch(0,0))=>(exists(K93:Int,K94:Int)[ (Ch(K93,K94)&turn(p1)&K93>=0&K93<xlen()&K94>=0&K94<ylen())&((( !(Ch(0,0)&(K93>0|K94>0)) ) => ( !(Ch(0,0)&(K93>0|K94>0))&(!turn(p1)) ))&!(exists(Y10:Int,Y11:Int)[Y10>=0&Y11>=0&(Ch(Y10,Y11)&(K93>Y10|K94>Y11))])) ])
2019-10-12 15:44:03,297 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(Y10:Int,Y11:Int)[Y10>=0&Y11>=0&Ch(Y10,Y11)])
 f2:forall(K91:Int,K92:Int)[ Ch(K91,K92)&turn(p2)&K91>=0&K91<xlen()&K92>=0&K92<ylen()=>((( !(Ch(0,0)&(K91>0|K92>0)) ) => ( !(Ch(0,0)&(K91>0|K92>0))&(!turn(p1)) ))&!(exists(Y10:Int,Y11:Int)[Y10>=0&Y11>=0&(Ch(Y10,Y11)&(K91>Y10|K92>Y11))])) ]
2019-10-12 15:44:03,326 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:forall(K16:Int,K17:Int)[K16>=0&K16<xlen()&K17>=0&K17<ylen()=>Ch(K16,K17)]&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)
 f2:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(Y10:Int,Y11:Int)[Y10>=0&Y11>=0&Ch(Y10,Y11)])
2019-10-12 15:44:03,400 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:forall(K16:Int,K17:Int)[K16>=0&K16<xlen()&K17>=0&K17<ylen()=>Ch(K16,K17)]&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)
 f2:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(Y10:Int,Y11:Int)[Y10>=0&Y11>=0&Ch(Y10,Y11)])
2019-10-12 15:44:04,282 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 > 1&! Ch(G0,1)])
 f2:!(!Ch(0,0))=>(exists(K97:Int,K98:Int)[ (Ch(K97,K98)&turn(p1)&K97>=0&K97<xlen()&K98>=0&K98<ylen())&((( !(Ch(0,0)&(K97>0|K98>0)) ) => ( !(Ch(0,0)&(K97>0|K98>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 >= 1&(Ch(G0,G0)&(K97>G0|K98>G0))])) ])
2019-10-12 15:44:04,338 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 > 1&! Ch(G0,1)])
 f2:!(!Ch(0,0))=>(exists(K97:Int,K98:Int)[ (Ch(K97,K98)&turn(p1)&K97>=0&K97<xlen()&K98>=0&K98<ylen())&((( !(Ch(0,0)&(K97>0|K98>0)) ) => ( !(Ch(0,0)&(K97>0|K98>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 >= 1&(Ch(G0,G0)&(K97>G0|K98>G0))])) ])
2019-10-12 15:44:04,376 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 >= 1&Ch(G0,G0)])
 f2:forall(K95:Int,K96:Int)[ Ch(K95,K96)&turn(p2)&K95>=0&K95<xlen()&K96>=0&K96<ylen()=>((( !(Ch(0,0)&(K95>0|K96>0)) ) => ( !(Ch(0,0)&(K95>0|K96>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! G0 > 1&! (Ch(G0,1)&(K95>G0|K96>1))])) ]
2019-10-12 15:44:05,377 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 > 1&! Ch(G0,1)])&!(! Ch(1,0))
 f2:!(!Ch(0,0))=>(exists(K101:Int,K102:Int)[ (Ch(K101,K102)&turn(p1)&K101>=0&K101<xlen()&K102>=0&K102<ylen())&((( !(Ch(0,0)&(K101>0|K102>0)) ) => ( !(Ch(0,0)&(K101>0|K102>0))&(!turn(p1)) ))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K101>G0|K102>G1))&! (Ch(G1,G0)&(K101>G1|K102>G0))])) ])
2019-10-12 15:44:05,510 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 > 1&! Ch(G0,1)])&!(! Ch(1,0))
 f2:!(!Ch(0,0))=>(exists(K101:Int,K102:Int)[ (Ch(K101,K102)&turn(p1)&K101>=0&K101<xlen()&K102>=0&K102<ylen())&((( !(Ch(0,0)&(K101>0|K102>0)) ) => ( !(Ch(0,0)&(K101>0|K102>0))&(!turn(p1)) ))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K101>G0|K102>G1))&! (Ch(G1,G0)&(K101>G1|K102>G0))])) ])
2019-10-12 15:44:05,569 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,G0)])
 f2:forall(K99:Int,K100:Int)[ Ch(K99,K100)&turn(p2)&K99>=0&K99<xlen()&K100>=0&K100<ylen()=>((( !(Ch(0,0)&(K99>0|K100>0)) ) => ( !(Ch(0,0)&(K99>0|K100>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! G0 > 1&! (Ch(G0,1)&(K99>G0|K100>1))])&!(! (Ch(1,0)&(K99>1|K100>0)))) ]
2019-10-12 15:44:14,508 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 > 1&! Ch(G0,1)])&!(! Ch(1,0))&!(turn(p2))
 f2:!(!Ch(0,0))=>(exists(K105:Int,K106:Int)[ (Ch(K105,K106)&turn(p1)&K105>=0&K105<xlen()&K106>=0&K106<ylen())&((( !(Ch(0,0)&(K105>0|K106>0)) ) => ( !(Ch(0,0)&(K105>0|K106>0))&(!turn(p1)) ))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K105>G0|K106>G1))&! (Ch(G1,G0)&(K105>G1|K106>G0))])&!((Ch(1,1)&(K105>1|K106>1)))) ])
2019-10-12 15:44:14,632 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 > 1&! Ch(G0,1)])&!(! Ch(1,0))&!(turn(p2))
 f2:!(!Ch(0,0))=>(exists(K105:Int,K106:Int)[ (Ch(K105,K106)&turn(p1)&K105>=0&K105<xlen()&K106>=0&K106<ylen())&((( !(Ch(0,0)&(K105>0|K106>0)) ) => ( !(Ch(0,0)&(K105>0|K106>0))&(!turn(p1)) ))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K105>G0|K106>G1))&! (Ch(G1,G0)&(K105>G1|K106>G0))])&!((Ch(1,1)&(K105>1|K106>1)))) ])
2019-10-12 15:44:14,672 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 > 1&! Ch(G0,1)])&!(! Ch(1,0))&!(turn(p2))
 f2:!(!Ch(0,0))=>(exists(K105:Int,K106:Int)[ (Ch(K105,K106)&turn(p1)&K105>=0&K105<xlen()&K106>=0&K106<ylen())&((( !(Ch(0,0)&(K105>0|K106>0)) ) => ( !(Ch(0,0)&(K105>0|K106>0))&(!turn(p1)) ))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K105>G0|K106>G1))&! (Ch(G1,G0)&(K105>G1|K106>G0))])&!((Ch(1,1)&(K105>1|K106>1)))) ])
2019-10-12 15:44:14,735 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,G0)])&!(Ch(1,1))
 f2:forall(K103:Int,K104:Int)[ Ch(K103,K104)&turn(p2)&K103>=0&K103<xlen()&K104>=0&K104<ylen()=>((( !(Ch(0,0)&(K103>0|K104>0)) ) => ( !(Ch(0,0)&(K103>0|K104>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! G0 > 1&! (Ch(G0,1)&(K103>G0|K104>1))])&!(! (Ch(1,0)&(K103>1|K104>0)))&!((!turn(p2)))) ]
2019-10-12 15:44:14,769 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,G0)])&!(Ch(1,1))
 f2:forall(K103:Int,K104:Int)[ Ch(K103,K104)&turn(p2)&K103>=0&K103<xlen()&K104>=0&K104<ylen()=>((( !(Ch(0,0)&(K103>0|K104>0)) ) => ( !(Ch(0,0)&(K103>0|K104>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! G0 > 1&! (Ch(G0,1)&(K103>G0|K104>1))])&!(! (Ch(1,0)&(K103>1|K104>0)))&!((!turn(p2)))) ]
2019-10-12 15:44:20,866 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(turn(p2))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&turn(p2)])&!(exists(G0:Int)[G0>=0&Ch(1,G0)&! Ch(G0,0)])
 f2:!(!Ch(0,0))=>(exists(K109:Int,K110:Int)[ (Ch(K109,K110)&turn(p1)&K109>=0&K109<xlen()&K110>=0&K110<ylen())&((( !(Ch(0,0)&(K109>0|K110>0)) ) => ( !(Ch(0,0)&(K109>0|K110>0))&(!turn(p1)) ))&!((Ch(1,1)&(K109>1|K110>1)))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! (Ch(G1,G0)&(K109>G1|K110>G0))&! G1 > 1&(Ch(G0,G0)&(K109>G0|K110>G0))])) ])
2019-10-12 15:44:20,910 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(Ch(1,1))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! Ch(G1,G0)&! G1 > 1&Ch(G0,G0)])
 f2:forall(K107:Int,K108:Int)[ Ch(K107,K108)&turn(p2)&K107>=0&K107<xlen()&K108>=0&K108<ylen()=>((( !(Ch(0,0)&(K107>0|K108>0)) ) => ( !(Ch(0,0)&(K107>0|K108>0))&(!turn(p1)) ))&!((!turn(p2)))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K107>G0|K108>G1))&(!turn(p2))])&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K107>1|K108>G0))&! (Ch(G0,0)&(K107>G0|K108>0))])) ]
2019-10-12 15:44:20,951 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(Ch(1,1))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! Ch(G1,G0)&! G1 > 1&Ch(G0,G0)])
 f2:forall(K107:Int,K108:Int)[ Ch(K107,K108)&turn(p2)&K107>=0&K107<xlen()&K108>=0&K108<ylen()=>((( !(Ch(0,0)&(K107>0|K108>0)) ) => ( !(Ch(0,0)&(K107>0|K108>0))&(!turn(p1)) ))&!((!turn(p2)))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K107>G0|K108>G1))&(!turn(p2))])&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K107>1|K108>G0))&! (Ch(G0,0)&(K107>G0|K108>0))])) ]
2019-10-12 15:44:20,982 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(Ch(1,1))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! Ch(G1,G0)&! G1 > 1&Ch(G0,G0)])
 f2:forall(K107:Int,K108:Int)[ Ch(K107,K108)&turn(p2)&K107>=0&K107<xlen()&K108>=0&K108<ylen()=>((( !(Ch(0,0)&(K107>0|K108>0)) ) => ( !(Ch(0,0)&(K107>0|K108>0))&(!turn(p1)) ))&!((!turn(p2)))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K107>G0|K108>G1))&(!turn(p2))])&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K107>1|K108>G0))&! (Ch(G0,0)&(K107>G0|K108>0))])) ]
2019-10-12 15:44:24,897 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:!(!Ch(0,0))=>(exists(K113:Int,K114:Int)[ (Ch(K113,K114)&turn(p1)&K113>=0&K113<xlen()&K114>=0&K114<ylen())&(( !(Ch(0,0)&(K113>0|K114>0)) ) => ( !(Ch(0,0)&(K113>0|K114>0))&(!turn(p1)) )) ])
2019-10-12 15:44:24,945 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:forall(K111:Int,K112:Int)[ Ch(K111,K112)&turn(p2)&K111>=0&K111<xlen()&K112>=0&K112<ylen()=>(( !(Ch(0,0)&(K111>0|K112>0)) ) => ( !(Ch(0,0)&(K111>0|K112>0))&(!turn(p1)) )) ]
2019-10-12 15:44:25,127 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X0:_S1)[turn(X0)])
 f2:!(!Ch(0,0))=>(exists(K117:Int,K118:Int)[ (Ch(K117,K118)&turn(p1)&K117>=0&K117<xlen()&K118>=0&K118<ylen())&(( !(Ch(0,0)&(K117>0|K118>0)) ) => ( !(Ch(0,0)&(K117>0|K118>0))&(!turn(p1)) )) ])
2019-10-12 15:44:25,160 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:forall(K115:Int,K116:Int)[ Ch(K115,K116)&turn(p2)&K115>=0&K115<xlen()&K116>=0&K116<ylen()=>((( !(Ch(0,0)&(K115>0|K116>0)) ) => ( !(Ch(0,0)&(K115>0|K116>0))&(!turn(p1)) ))&!(exists(X0:_S1)[(!turn(X0))])) ]
2019-10-12 15:44:25,523 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X0:_S1)[turn(X0)])
 f2:!(!Ch(0,0))=>(exists(K121:Int,K122:Int)[ (Ch(K121,K122)&turn(p1)&K121>=0&K121<xlen()&K122>=0&K122<ylen())&((( !(Ch(0,0)&(K121>0|K122>0)) ) => ( !(Ch(0,0)&(K121>0|K122>0))&(!turn(p1)) ))&!(exists(X0:_S1)[(!turn(X0))])) ])
2019-10-12 15:44:25,559 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X0:_S1)[turn(X0)])
 f2:forall(K119:Int,K120:Int)[ Ch(K119,K120)&turn(p2)&K119>=0&K119<xlen()&K120>=0&K120<ylen()=>((( !(Ch(0,0)&(K119>0|K120>0)) ) => ( !(Ch(0,0)&(K119>0|K120>0))&(!turn(p1)) ))&!(exists(X0:_S1)[(!turn(X0))])) ]
2019-10-12 15:44:25,587 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:forall(K16:Int,K17:Int)[K16>=0&K16<xlen()&K17>=0&K17<ylen()=>Ch(K16,K17)]&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)
 f2:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X0:_S1)[turn(X0)])
2019-10-12 15:44:26,434 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:_S1)[turn(G0)&! Ch(0,1)])
 f2:!(!Ch(0,0))=>(exists(K125:Int,K126:Int)[ (Ch(K125,K126)&turn(p1)&K125>=0&K125<xlen()&K126>=0&K126<ylen())&((( !(Ch(0,0)&(K125>0|K126>0)) ) => ( !(Ch(0,0)&(K125>0|K126>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! G0 > 0&! (Ch(G0,1)&(K125>G0|K126>1))])) ])
2019-10-12 15:44:26,486 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 > 0&! Ch(G0,1)])
 f2:forall(K123:Int,K124:Int)[ Ch(K123,K124)&turn(p2)&K123>=0&K123<xlen()&K124>=0&K124<ylen()=>((( !(Ch(0,0)&(K123>0|K124>0)) ) => ( !(Ch(0,0)&(K123>0|K124>0))&(!turn(p1)) ))&!(exists(G0:_S1)[(!turn(G0))&! (Ch(0,1)&(K123>0|K124>1))])) ]
2019-10-12 15:44:27,588 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() > G0&! Ch(G0,G0)])
 f2:!(!Ch(0,0))=>(exists(K130:Int,K131:Int)[ (Ch(K130,K131)&turn(p1)&K130>=0&K130<xlen()&K131>=0&K131<ylen())&((( !(Ch(0,0)&(K130>0|K131>0)) ) => ( !(Ch(0,0)&(K130>0|K131>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! G0 > 0&! (Ch(G0,1)&(K130>G0|K131>1))])&!((Ch(1,1)&(K130>1|K131>1)))) ])
2019-10-12 15:44:27,633 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() > G0&! Ch(G0,G0)])
 f2:!(!Ch(0,0))=>(exists(K130:Int,K131:Int)[ (Ch(K130,K131)&turn(p1)&K130>=0&K130<xlen()&K131>=0&K131<ylen())&((( !(Ch(0,0)&(K130>0|K131>0)) ) => ( !(Ch(0,0)&(K130>0|K131>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! G0 > 0&! (Ch(G0,1)&(K130>G0|K131>1))])&!((Ch(1,1)&(K130>1|K131>1)))) ])
2019-10-12 15:44:27,668 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 > 0&! Ch(G0,1)])&!(Ch(1,1))
 f2:forall(K127:Int,K128:Int)[ Ch(K127,K128)&turn(p2)&K127>=0&K127<xlen()&K128>=0&K128<ylen()=>((( !(Ch(0,0)&(K127>0|K128>0)) ) => ( !(Ch(0,0)&(K127>0|K128>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K129:Int)[ (xlen()=K129)&(G0>=0& K129 > G0&! (Ch(G0,G0)&(K127>G0|K128>G0)))] ])) ]
2019-10-12 15:44:28,271 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() > G0&! Ch(G0,G0)])
 f2:!(!Ch(0,0))=>(exists(K135:Int,K136:Int)[ (Ch(K135,K136)&turn(p1)&K135>=0&K135<xlen()&K136>=0&K136<ylen())&((( !(Ch(0,0)&(K135>0|K136>0)) ) => ( !(Ch(0,0)&(K135>0|K136>0))&(!turn(p1)) ))&!((Ch(1,1)&(K135>1|K136>1)))&!(exists(G0:Int)[G0>=0&! G0 = 0&(Ch(1,G0)&(K135>1|K136>G0))])) ])
2019-10-12 15:44:28,315 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() > G0&! Ch(G0,G0)])
 f2:!(!Ch(0,0))=>(exists(K135:Int,K136:Int)[ (Ch(K135,K136)&turn(p1)&K135>=0&K135<xlen()&K136>=0&K136<ylen())&((( !(Ch(0,0)&(K135>0|K136>0)) ) => ( !(Ch(0,0)&(K135>0|K136>0))&(!turn(p1)) ))&!((Ch(1,1)&(K135>1|K136>1)))&!(exists(G0:Int)[G0>=0&! G0 = 0&(Ch(1,G0)&(K135>1|K136>G0))])) ])
2019-10-12 15:44:28,349 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(Ch(1,1))&!(exists(G0:Int)[G0>=0&! G0 = 0&Ch(1,G0)])
 f2:forall(K132:Int,K133:Int)[ Ch(K132,K133)&turn(p2)&K132>=0&K132<xlen()&K133>=0&K133<ylen()=>((( !(Ch(0,0)&(K132>0|K133>0)) ) => ( !(Ch(0,0)&(K132>0|K133>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K134:Int)[ (xlen()=K134)&(G0>=0& K134 > G0&! (Ch(G0,G0)&(K132>G0|K133>G0)))] ])) ]
2019-10-12 15:44:28,386 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(Ch(1,1))&!(exists(G0:Int)[G0>=0&! G0 = 0&Ch(1,G0)])
 f2:forall(K132:Int,K133:Int)[ Ch(K132,K133)&turn(p2)&K132>=0&K132<xlen()&K133>=0&K133<ylen()=>((( !(Ch(0,0)&(K132>0|K133>0)) ) => ( !(Ch(0,0)&(K132>0|K133>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K134:Int)[ (xlen()=K134)&(G0>=0& K134 > G0&! (Ch(G0,G0)&(K132>G0|K133>G0)))] ])) ]
2019-10-12 15:44:31,342 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! Ch(G0,G0)&Ch(0,0)&xlen() > G0])
 f2:!(!Ch(0,0))=>(exists(K140:Int,K141:Int)[ (Ch(K140,K141)&turn(p1)&K140>=0&K140<xlen()&K141>=0&K141<ylen())&((( !(Ch(0,0)&(K140>0|K141>0)) ) => ( !(Ch(0,0)&(K140>0|K141>0))&(!turn(p1)) ))&!((Ch(1,1)&(K140>1|K141>1)))&!(exists(G0:Int)[G0>=0&! G0 = 0&(Ch(1,G0)&(K140>1|K141>G0))])) ])
2019-10-12 15:44:31,384 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! Ch(G0,G0)&Ch(0,0)&xlen() > G0])
 f2:!(!Ch(0,0))=>(exists(K140:Int,K141:Int)[ (Ch(K140,K141)&turn(p1)&K140>=0&K140<xlen()&K141>=0&K141<ylen())&((( !(Ch(0,0)&(K140>0|K141>0)) ) => ( !(Ch(0,0)&(K140>0|K141>0))&(!turn(p1)) ))&!((Ch(1,1)&(K140>1|K141>1)))&!(exists(G0:Int)[G0>=0&! G0 = 0&(Ch(1,G0)&(K140>1|K141>G0))])) ])
2019-10-12 15:44:31,417 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(Ch(1,1))&!(exists(G0:Int)[G0>=0&! G0 = 0&Ch(1,G0)])
 f2:forall(K137:Int,K138:Int)[ Ch(K137,K138)&turn(p2)&K137>=0&K137<xlen()&K138>=0&K138<ylen()=>((( !(Ch(0,0)&(K137>0|K138>0)) ) => ( !(Ch(0,0)&(K137>0|K138>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K139:Int)[ (xlen()=K139)&(G0>=0&! (Ch(G0,G0)&(K137>G0|K138>G0))&(Ch(0,0)&(K137>0|K138>0))& K139 > G0)] ])) ]
2019-10-12 15:44:31,454 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(Ch(1,1))&!(exists(G0:Int)[G0>=0&! G0 = 0&Ch(1,G0)])
 f2:forall(K137:Int,K138:Int)[ Ch(K137,K138)&turn(p2)&K137>=0&K137<xlen()&K138>=0&K138<ylen()=>((( !(Ch(0,0)&(K137>0|K138>0)) ) => ( !(Ch(0,0)&(K137>0|K138>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K139:Int)[ (xlen()=K139)&(G0>=0&! (Ch(G0,G0)&(K137>G0|K138>G0))&(Ch(0,0)&(K137>0|K138>0))& K139 > G0)] ])) ]
2019-10-12 15:44:33,274 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! Ch(G0,G0)&Ch(0,0)&xlen() > G0])&!(! turn(p1))
 f2:!(!Ch(0,0))=>(exists(K145:Int,K146:Int)[ (Ch(K145,K146)&turn(p1)&K145>=0&K145<xlen()&K146>=0&K146<ylen())&((( !(Ch(0,0)&(K145>0|K146>0)) ) => ( !(Ch(0,0)&(K145>0|K146>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! G0 = 0&(Ch(1,G0)&(K145>1|K146>G0))])&!((Ch(1,1)&(K145>1|K146>1)))&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K145>1|K146>G0))&! (Ch(G0,1)&(K145>G0|K146>1))])) ])
2019-10-12 15:44:33,317 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 = 0&Ch(1,G0)])&!(Ch(1,1))&!(exists(G0:Int)[G0>=0&Ch(1,G0)&! Ch(G0,1)])
 f2:forall(K142:Int,K143:Int)[ Ch(K142,K143)&turn(p2)&K142>=0&K142<xlen()&K143>=0&K143<ylen()=>((( !(Ch(0,0)&(K142>0|K143>0)) ) => ( !(Ch(0,0)&(K142>0|K143>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K144:Int)[ (xlen()=K144)&(G0>=0&! (Ch(G0,G0)&(K142>G0|K143>G0))&(Ch(0,0)&(K142>0|K143>0))& K144 > G0)] ])&!(! (!turn(p1)))) ]
2019-10-12 15:44:33,352 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 = 0&Ch(1,G0)])&!(Ch(1,1))&!(exists(G0:Int)[G0>=0&Ch(1,G0)&! Ch(G0,1)])
 f2:forall(K142:Int,K143:Int)[ Ch(K142,K143)&turn(p2)&K142>=0&K142<xlen()&K143>=0&K143<ylen()=>((( !(Ch(0,0)&(K142>0|K143>0)) ) => ( !(Ch(0,0)&(K142>0|K143>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K144:Int)[ (xlen()=K144)&(G0>=0&! (Ch(G0,G0)&(K142>G0|K143>G0))&(Ch(0,0)&(K142>0|K143>0))& K144 > G0)] ])&!(! (!turn(p1)))) ]
2019-10-12 15:44:33,971 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(! turn(p1))&!(exists(G0:_S1)[turn(G0)&! turn(p1)])
 f2:!(!Ch(0,0))=>(exists(K149:Int,K150:Int)[ (Ch(K149,K150)&turn(p1)&K149>=0&K149<xlen()&K150>=0&K150<ylen())&((( !(Ch(0,0)&(K149>0|K150>0)) ) => ( !(Ch(0,0)&(K149>0|K150>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! G0 = 0&(Ch(1,G0)&(K149>1|K150>G0))])&!((Ch(1,1)&(K149>1|K150>1)))&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K149>1|K150>G0))&! (Ch(G0,1)&(K149>G0|K150>1))])) ])
2019-10-12 15:44:34,017 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 = 0&Ch(1,G0)])&!(Ch(1,1))&!(exists(G0:Int)[G0>=0&Ch(1,G0)&! Ch(G0,1)])
 f2:forall(K147:Int,K148:Int)[ Ch(K147,K148)&turn(p2)&K147>=0&K147<xlen()&K148>=0&K148<ylen()=>((( !(Ch(0,0)&(K147>0|K148>0)) ) => ( !(Ch(0,0)&(K147>0|K148>0))&(!turn(p1)) ))&!(! (!turn(p1)))&!(exists(G0:_S1)[(!turn(G0))&! (!turn(p1))])) ]
2019-10-12 15:44:39,015 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:!(!Ch(0,0))=>(exists(K153:Int,K154:Int)[ (Ch(K153,K154)&turn(p1)&K153>=0&K153<xlen()&K154>=0&K154<ylen())&(( !(Ch(0,0)&(K153>0|K154>0)) ) => ( !(Ch(0,0)&(K153>0|K154>0))&(!turn(p1)) )) ])
2019-10-12 15:44:39,059 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:forall(K151:Int,K152:Int)[ Ch(K151,K152)&turn(p2)&K151>=0&K151<xlen()&K152>=0&K152<ylen()=>(( !(Ch(0,0)&(K151>0|K152>0)) ) => ( !(Ch(0,0)&(K151>0|K152>0))&(!turn(p1)) )) ]
2019-10-12 15:44:39,231 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&xlen() = X1])
 f2:!(!Ch(0,0))=>(exists(K157:Int,K158:Int)[ (Ch(K157,K158)&turn(p1)&K157>=0&K157<xlen()&K158>=0&K158<ylen())&(( !(Ch(0,0)&(K157>0|K158>0)) ) => ( !(Ch(0,0)&(K157>0|K158>0))&(!turn(p1)) )) ])
2019-10-12 15:44:39,274 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:forall(K155:Int,K156:Int)[ Ch(K155,K156)&turn(p2)&K155>=0&K155<xlen()&K156>=0&K156<ylen()=>((( !(Ch(0,0)&(K155>0|K156>0)) ) => ( !(Ch(0,0)&(K155>0|K156>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(xlen()=X1)])) ]
2019-10-12 15:44:39,662 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&xlen() = X1])
 f2:!(!Ch(0,0))=>(exists(K161:Int,K162:Int)[ (Ch(K161,K162)&turn(p1)&K161>=0&K161<xlen()&K162>=0&K162<ylen())&((( !(Ch(0,0)&(K161>0|K162>0)) ) => ( !(Ch(0,0)&(K161>0|K162>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(xlen()=X1)])) ])
2019-10-12 15:44:39,704 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&xlen() = X1])
 f2:forall(K159:Int,K160:Int)[ Ch(K159,K160)&turn(p2)&K159>=0&K159<xlen()&K160>=0&K160<ylen()=>((( !(Ch(0,0)&(K159>0|K160>0)) ) => ( !(Ch(0,0)&(K159>0|K160>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(xlen()=X1)])) ]
2019-10-12 15:44:39,739 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:forall(K16:Int,K17:Int)[K16>=0&K16<xlen()&K17>=0&K17<ylen()=>Ch(K16,K17)]&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)
 f2:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&xlen() = X1])
2019-10-12 15:44:40,631 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 > 0&! Ch(1,G0)])
 f2:!(!Ch(0,0))=>(exists(K165:Int,K166:Int)[ (Ch(K165,K166)&turn(p1)&K165>=0&K165<xlen()&K166>=0&K166<ylen())&((( !(Ch(0,0)&(K165>0|K166>0)) ) => ( !(Ch(0,0)&(K165>0|K166>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! G0 >= 1&! (Ch(1,G0)&(K165>1|K166>G0))])) ])
2019-10-12 15:44:40,679 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 >= 1&! Ch(1,G0)])
 f2:forall(K163:Int,K164:Int)[ Ch(K163,K164)&turn(p2)&K163>=0&K163<xlen()&K164>=0&K164<ylen()=>((( !(Ch(0,0)&(K163>0|K164>0)) ) => ( !(Ch(0,0)&(K163>0|K164>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! G0 > 0&! (Ch(1,G0)&(K163>1|K164>G0))])) ]
2019-10-12 15:44:41,279 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 > 0&! Ch(1,G0)])
 f2:!(!Ch(0,0))=>(exists(K169:Int,K170:Int)[ (Ch(K169,K170)&turn(p1)&K169>=0&K169<xlen()&K170>=0&K170<ylen())&((( !(Ch(0,0)&(K169>0|K170>0)) ) => ( !(Ch(0,0)&(K169>0|K170>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 0&(Ch(G0,1)&(K169>G0|K170>1))])) ])
2019-10-12 15:44:41,328 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 > 0&Ch(G0,1)])
 f2:forall(K167:Int,K168:Int)[ Ch(K167,K168)&turn(p2)&K167>=0&K167<xlen()&K168>=0&K168<ylen()=>((( !(Ch(0,0)&(K167>0|K168>0)) ) => ( !(Ch(0,0)&(K167>0|K168>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! G0 > 0&! (Ch(1,G0)&(K167>1|K168>G0))])) ]
2019-10-12 15:44:41,370 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 > 0&Ch(G0,1)])
 f2:forall(K167:Int,K168:Int)[ Ch(K167,K168)&turn(p2)&K167>=0&K167<xlen()&K168>=0&K168<ylen()=>((( !(Ch(0,0)&(K167>0|K168>0)) ) => ( !(Ch(0,0)&(K167>0|K168>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! G0 > 0&! (Ch(1,G0)&(K167>1|K168>G0))])) ]
2019-10-12 15:44:42,903 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 > 0&! Ch(1,G0)])&!(! Ch(1,1))
 f2:!(!Ch(0,0))=>(exists(K173:Int,K174:Int)[ (Ch(K173,K174)&turn(p1)&K173>=0&K173<xlen()&K174>=0&K174<ylen())&((( !(Ch(0,0)&(K173>0|K174>0)) ) => ( !(Ch(0,0)&(K173>0|K174>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 0&(Ch(G0,1)&(K173>G0|K174>1))])&!((Ch(0,1)&(K173>0|K174>1))&! (Ch(1,0)&(K173>1|K174>0)))) ])
2019-10-12 15:44:42,952 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 > 0&Ch(G0,1)])&!(Ch(0,1)&! Ch(1,0))
 f2:forall(K171:Int,K172:Int)[ Ch(K171,K172)&turn(p2)&K171>=0&K171<xlen()&K172>=0&K172<ylen()=>((( !(Ch(0,0)&(K171>0|K172>0)) ) => ( !(Ch(0,0)&(K171>0|K172>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! G0 > 0&! (Ch(1,G0)&(K171>1|K172>G0))])&!(! (Ch(1,1)&(K171>1|K172>1)))) ]
2019-10-12 15:44:42,989 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 > 0&Ch(G0,1)])&!(Ch(0,1)&! Ch(1,0))
 f2:forall(K171:Int,K172:Int)[ Ch(K171,K172)&turn(p2)&K171>=0&K171<xlen()&K172>=0&K172<ylen()=>((( !(Ch(0,0)&(K171>0|K172>0)) ) => ( !(Ch(0,0)&(K171>0|K172>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! G0 > 0&! (Ch(1,G0)&(K171>1|K172>G0))])&!(! (Ch(1,1)&(K171>1|K172>1)))) ]
2019-10-12 15:44:43,730 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() = G0&turn(p2)])&!(exists(G0:Int)[G0>=0&xlen() = G0&turn(p2)])
 f2:!(!Ch(0,0))=>(exists(K177:Int,K178:Int)[ (Ch(K177,K178)&turn(p1)&K177>=0&K177<xlen()&K178>=0&K178<ylen())&((( !(Ch(0,0)&(K177>0|K178>0)) ) => ( !(Ch(0,0)&(K177>0|K178>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 0&(Ch(G0,1)&(K177>G0|K178>1))])&!((Ch(0,1)&(K177>0|K178>1))&! (Ch(1,0)&(K177>1|K178>0)))) ])
2019-10-12 15:44:43,770 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 > 0&Ch(G0,1)])&!(Ch(0,1)&! Ch(1,0))
 f2:forall(K175:Int,K176:Int)[ Ch(K175,K176)&turn(p2)&K175>=0&K175<xlen()&K176>=0&K176<ylen()=>((( !(Ch(0,0)&(K175>0|K176>0)) ) => ( !(Ch(0,0)&(K175>0|K176>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(xlen()=G0)&(!turn(p2))])&!(exists(G0:Int)[G0>=0&(xlen()=G0)&(!turn(p2))])) ]
2019-10-12 15:44:45,348 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:!(!Ch(0,0))=>(exists(K181:Int,K182:Int)[ (Ch(K181,K182)&turn(p1)&K181>=0&K181<xlen()&K182>=0&K182<ylen())&(( !(Ch(0,0)&(K181>0|K182>0)) ) => ( !(Ch(0,0)&(K181>0|K182>0))&(!turn(p1)) )) ])
2019-10-12 15:44:45,393 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:forall(K179:Int,K180:Int)[ Ch(K179,K180)&turn(p2)&K179>=0&K179<xlen()&K180>=0&K180<ylen()=>(( !(Ch(0,0)&(K179>0|K180>0)) ) => ( !(Ch(0,0)&(K179>0|K180>0))&(!turn(p1)) )) ]
2019-10-12 15:44:45,566 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&ylen() = X1])
 f2:!(!Ch(0,0))=>(exists(K185:Int,K186:Int)[ (Ch(K185,K186)&turn(p1)&K185>=0&K185<xlen()&K186>=0&K186<ylen())&(( !(Ch(0,0)&(K185>0|K186>0)) ) => ( !(Ch(0,0)&(K185>0|K186>0))&(!turn(p1)) )) ])
2019-10-12 15:44:45,599 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:forall(K183:Int,K184:Int)[ Ch(K183,K184)&turn(p2)&K183>=0&K183<xlen()&K184>=0&K184<ylen()=>((( !(Ch(0,0)&(K183>0|K184>0)) ) => ( !(Ch(0,0)&(K183>0|K184>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(ylen()=X1)])) ]
2019-10-12 15:44:45,971 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&ylen() = X1])
 f2:!(!Ch(0,0))=>(exists(K189:Int,K190:Int)[ (Ch(K189,K190)&turn(p1)&K189>=0&K189<xlen()&K190>=0&K190<ylen())&((( !(Ch(0,0)&(K189>0|K190>0)) ) => ( !(Ch(0,0)&(K189>0|K190>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(ylen()=X1)])) ])
2019-10-12 15:44:46,007 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&ylen() = X1])
 f2:forall(K187:Int,K188:Int)[ Ch(K187,K188)&turn(p2)&K187>=0&K187<xlen()&K188>=0&K188<ylen()=>((( !(Ch(0,0)&(K187>0|K188>0)) ) => ( !(Ch(0,0)&(K187>0|K188>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(ylen()=X1)])) ]
2019-10-12 15:44:46,035 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:forall(K16:Int,K17:Int)[K16>=0&K16<xlen()&K17>=0&K17<ylen()=>Ch(K16,K17)]&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)
 f2:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&ylen() = X1])
2019-10-12 15:44:46,875 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 >= 1&! Ch(G0,1)])
 f2:!(!Ch(0,0))=>(exists(K193:Int,K194:Int)[ (Ch(K193,K194)&turn(p1)&K193>=0&K193<xlen()&K194>=0&K194<ylen())&((( !(Ch(0,0)&(K193>0|K194>0)) ) => ( !(Ch(0,0)&(K193>0|K194>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(ylen()=G0)&! (Ch(0,1)&(K193>0|K194>1))])) ])
2019-10-12 15:44:46,922 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&ylen() = G0&! Ch(0,1)])
 f2:forall(K191:Int,K192:Int)[ Ch(K191,K192)&turn(p2)&K191>=0&K191<xlen()&K192>=0&K192<ylen()=>((( !(Ch(0,0)&(K191>0|K192>0)) ) => ( !(Ch(0,0)&(K191>0|K192>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! G0 >= 1&! (Ch(G0,1)&(K191>G0|K192>1))])) ]
2019-10-12 15:44:47,495 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 >= 1&! Ch(G0,1)])
 f2:!(!Ch(0,0))=>(exists(K197:Int,K198:Int)[ (Ch(K197,K198)&turn(p1)&K197>=0&K197<xlen()&K198>=0&K198<ylen())&((( !(Ch(0,0)&(K197>0|K198>0)) ) => ( !(Ch(0,0)&(K197>0|K198>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 1&(Ch(G0,G0)&(K197>G0|K198>G0))])) ])
2019-10-12 15:44:47,540 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 1&Ch(G0,G0)])
 f2:forall(K195:Int,K196:Int)[ Ch(K195,K196)&turn(p2)&K195>=0&K195<xlen()&K196>=0&K196<ylen()=>((( !(Ch(0,0)&(K195>0|K196>0)) ) => ( !(Ch(0,0)&(K195>0|K196>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! G0 >= 1&! (Ch(G0,1)&(K195>G0|K196>1))])) ]
2019-10-12 15:44:49,109 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 >= 1&! Ch(G0,1)])&!(! Ch(1,0))
 f2:!(!Ch(0,0))=>(exists(K201:Int,K202:Int)[ (Ch(K201,K202)&turn(p1)&K201>=0&K201<xlen()&K202>=0&K202<ylen())&((( !(Ch(0,0)&(K201>0|K202>0)) ) => ( !(Ch(0,0)&(K201>0|K202>0))&(!turn(p1)) ))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K201>G0|K202>G1))&! (Ch(G1,0)&(K201>G1|K202>0))])) ])
2019-10-12 15:44:49,159 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,0)])
 f2:forall(K199:Int,K200:Int)[ Ch(K199,K200)&turn(p2)&K199>=0&K199<xlen()&K200>=0&K200<ylen()=>((( !(Ch(0,0)&(K199>0|K200>0)) ) => ( !(Ch(0,0)&(K199>0|K200>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! G0 >= 1&! (Ch(G0,1)&(K199>G0|K200>1))])&!(! (Ch(1,0)&(K199>1|K200>0)))) ]
2019-10-12 15:44:49,193 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,0)])
 f2:forall(K199:Int,K200:Int)[ Ch(K199,K200)&turn(p2)&K199>=0&K199<xlen()&K200>=0&K200<ylen()=>((( !(Ch(0,0)&(K199>0|K200>0)) ) => ( !(Ch(0,0)&(K199>0|K200>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! G0 >= 1&! (Ch(G0,1)&(K199>G0|K200>1))])&!(! (Ch(1,0)&(K199>1|K200>0)))) ]
2019-10-12 15:44:55,103 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&ylen() > G0&! Ch(G0,1)])
 f2:!(!Ch(0,0))=>(exists(K206:Int,K207:Int)[ (Ch(K206,K207)&turn(p1)&K206>=0&K206<xlen()&K207>=0&K207<ylen())&((( !(Ch(0,0)&(K206>0|K207>0)) ) => ( !(Ch(0,0)&(K206>0|K207>0))&(!turn(p1)) ))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K206>G0|K207>G1))&! (Ch(G1,0)&(K206>G1|K207>0))])&!((Ch(1,1)&(K206>1|K207>1)))) ])
2019-10-12 15:44:55,165 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&ylen() > G0&! Ch(G0,1)])
 f2:!(!Ch(0,0))=>(exists(K206:Int,K207:Int)[ (Ch(K206,K207)&turn(p1)&K206>=0&K206<xlen()&K207>=0&K207<ylen())&((( !(Ch(0,0)&(K206>0|K207>0)) ) => ( !(Ch(0,0)&(K206>0|K207>0))&(!turn(p1)) ))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K206>G0|K207>G1))&! (Ch(G1,0)&(K206>G1|K207>0))])&!((Ch(1,1)&(K206>1|K207>1)))) ])
2019-10-12 15:44:55,205 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,0)])&!(Ch(1,1))
 f2:forall(K203:Int,K204:Int)[ Ch(K203,K204)&turn(p2)&K203>=0&K203<xlen()&K204>=0&K204<ylen()=>((( !(Ch(0,0)&(K203>0|K204>0)) ) => ( !(Ch(0,0)&(K203>0|K204>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K205:Int)[ (ylen()=K205)&(G0>=0& K205 > G0&! (Ch(G0,1)&(K203>G0|K204>1)))] ])) ]
2019-10-12 15:44:55,243 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,0)])&!(Ch(1,1))
 f2:forall(K203:Int,K204:Int)[ Ch(K203,K204)&turn(p2)&K203>=0&K203<xlen()&K204>=0&K204<ylen()=>((( !(Ch(0,0)&(K203>0|K204>0)) ) => ( !(Ch(0,0)&(K203>0|K204>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K205:Int)[ (ylen()=K205)&(G0>=0& K205 > G0&! (Ch(G0,1)&(K203>G0|K204>1)))] ])) ]
2019-10-12 15:50:03,999 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:!(!Ch(0,0))=>(exists(K21:Int,K22:Int)[ (Ch(K21,K22)&turn(p1)&K21>=0&K21<xlen()&K22>=0&K22<ylen())&(( !(Ch(0,0)&(K21>0|K22>0)) ) => ( !(Ch(0,0)&(K21>0|K22>0))&(!turn(p1)) )) ])
2019-10-12 15:50:04,047 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:forall(K19:Int,K20:Int)[ Ch(K19,K20)&turn(p2)&K19>=0&K19<xlen()&K20>=0&K20<ylen()=>(( !(Ch(0,0)&(K19>0|K20>0)) ) => ( !(Ch(0,0)&(K19>0|K20>0))&(!turn(p1)) )) ]
2019-10-12 15:50:04,257 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(0,X1)])
 f2:!(!Ch(0,0))=>(exists(K25:Int,K26:Int)[ (Ch(K25,K26)&turn(p1)&K25>=0&K25<xlen()&K26>=0&K26<ylen())&(( !(Ch(0,0)&(K25>0|K26>0)) ) => ( !(Ch(0,0)&(K25>0|K26>0))&(!turn(p1)) )) ])
2019-10-12 15:50:04,291 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:forall(K23:Int,K24:Int)[ Ch(K23,K24)&turn(p2)&K23>=0&K23<xlen()&K24>=0&K24<ylen()=>((( !(Ch(0,0)&(K23>0|K24>0)) ) => ( !(Ch(0,0)&(K23>0|K24>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(Ch(0,X1)&(K23>0|K24>X1))])) ]
2019-10-12 15:50:04,667 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(0,X1)])
 f2:!(!Ch(0,0))=>(exists(K29:Int,K30:Int)[ (Ch(K29,K30)&turn(p1)&K29>=0&K29<xlen()&K30>=0&K30<ylen())&((( !(Ch(0,0)&(K29>0|K30>0)) ) => ( !(Ch(0,0)&(K29>0|K30>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(Ch(1,X1)&(K29>1|K30>X1))])) ])
2019-10-12 15:50:04,707 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(1,X1)])
 f2:forall(K27:Int,K28:Int)[ Ch(K27,K28)&turn(p2)&K27>=0&K27<xlen()&K28>=0&K28<ylen()=>((( !(Ch(0,0)&(K27>0|K28>0)) ) => ( !(Ch(0,0)&(K27>0|K28>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(Ch(0,X1)&(K27>0|K28>X1))])) ]
2019-10-12 15:50:04,767 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(1,X1)])
 f2:forall(K27:Int,K28:Int)[ Ch(K27,K28)&turn(p2)&K27>=0&K27<xlen()&K28>=0&K28<ylen()=>((( !(Ch(0,0)&(K27>0|K28>0)) ) => ( !(Ch(0,0)&(K27>0|K28>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(Ch(0,X1)&(K27>0|K28>X1))])) ]
2019-10-12 15:50:05,394 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(0,X1)])
 f2:!(!Ch(0,0))=>(exists(K33:Int,K34:Int)[ (Ch(K33,K34)&turn(p1)&K33>=0&K33<xlen()&K34>=0&K34<ylen())&((( !(Ch(0,0)&(K33>0|K34>0)) ) => ( !(Ch(0,0)&(K33>0|K34>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(Ch(1,X1)&(K33>1|K34>X1))])&!(exists(X1:Int)[X1>=0&(Ch(0,X1)&(K33>0|K34>X1))])) ])
2019-10-12 15:50:05,435 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(1,X1)])&!(exists(X1:Int)[X1>=0&Ch(0,X1)])
 f2:forall(K31:Int,K32:Int)[ Ch(K31,K32)&turn(p2)&K31>=0&K31<xlen()&K32>=0&K32<ylen()=>((( !(Ch(0,0)&(K31>0|K32>0)) ) => ( !(Ch(0,0)&(K31>0|K32>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(Ch(0,X1)&(K31>0|K32>X1))])) ]
2019-10-12 15:50:05,466 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:forall(K16:Int,K17:Int)[K16>=0&K16<xlen()&K17>=0&K17<ylen()=>Ch(K16,K17)]&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)
 f2:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(0,X1)])
2019-10-12 15:50:06,413 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 0&! Ch(1,G0)])
 f2:!(!Ch(0,0))=>(exists(K37:Int,K38:Int)[ (Ch(K37,K38)&turn(p1)&K37>=0&K37<xlen()&K38>=0&K38<ylen())&((( !(Ch(0,0)&(K37>0|K38>0)) ) => ( !(Ch(0,0)&(K37>0|K38>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 0&(Ch(1,G0)&(K37>1|K38>G0))])&!(exists(G0:Int)[G0>=0&G0 = 0&! (Ch(1,G0)&(K37>1|K38>G0))])) ])
2019-10-12 15:50:06,455 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 > 0&Ch(1,G0)])&!(exists(G0:Int)[G0>=0&G0 = 0&! Ch(1,G0)])
 f2:forall(K35:Int,K36:Int)[ Ch(K35,K36)&turn(p2)&K35>=0&K35<xlen()&K36>=0&K36<ylen()=>((( !(Ch(0,0)&(K35>0|K36>0)) ) => ( !(Ch(0,0)&(K35>0|K36>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 0&! (Ch(1,G0)&(K35>1|K36>G0))])) ]
2019-10-12 15:50:07,075 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 0&! Ch(1,G0)])
 f2:!(!Ch(0,0))=>(exists(K41:Int,K42:Int)[ (Ch(K41,K42)&turn(p1)&K41>=0&K41<xlen()&K42>=0&K42<ylen())&((( !(Ch(0,0)&(K41>0|K42>0)) ) => ( !(Ch(0,0)&(K41>0|K42>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 0&(Ch(1,G0)&(K41>1|K42>G0))])&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K41>0|K42>G0))&! (Ch(G0,0)&(K41>G0|K42>0))])) ])
2019-10-12 15:50:07,135 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 0&! Ch(1,G0)])
 f2:!(!Ch(0,0))=>(exists(K41:Int,K42:Int)[ (Ch(K41,K42)&turn(p1)&K41>=0&K41<xlen()&K42>=0&K42<ylen())&((( !(Ch(0,0)&(K41>0|K42>0)) ) => ( !(Ch(0,0)&(K41>0|K42>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 0&(Ch(1,G0)&(K41>1|K42>G0))])&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K41>0|K42>G0))&! (Ch(G0,0)&(K41>G0|K42>0))])) ])
2019-10-12 15:50:07,174 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 > 0&Ch(1,G0)])&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(G0,0)])
 f2:forall(K39:Int,K40:Int)[ Ch(K39,K40)&turn(p2)&K39>=0&K39<xlen()&K40>=0&K40<ylen()=>((( !(Ch(0,0)&(K39>0|K40>0)) ) => ( !(Ch(0,0)&(K39>0|K40>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 0&! (Ch(1,G0)&(K39>1|K40>G0))])) ]
2019-10-12 15:50:08,201 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 0&! Ch(1,G0)])&!(turn(p2))
 f2:!(!Ch(0,0))=>(exists(K45:Int,K46:Int)[ (Ch(K45,K46)&turn(p1)&K45>=0&K45<xlen()&K46>=0&K46<ylen())&((( !(Ch(0,0)&(K45>0|K46>0)) ) => ( !(Ch(0,0)&(K45>0|K46>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K45>0|K46>G0))&! (Ch(G0,0)&(K45>G0|K46>0))])&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K45>1|K46>G0))&! (Ch(0,1)&(K45>0|K46>1))])) ])
2019-10-12 15:50:08,514 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 0&! Ch(1,G0)])&!(turn(p2))
 f2:!(!Ch(0,0))=>(exists(K45:Int,K46:Int)[ (Ch(K45,K46)&turn(p1)&K45>=0&K45<xlen()&K46>=0&K46<ylen())&((( !(Ch(0,0)&(K45>0|K46>0)) ) => ( !(Ch(0,0)&(K45>0|K46>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K45>0|K46>G0))&! (Ch(G0,0)&(K45>G0|K46>0))])&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K45>1|K46>G0))&! (Ch(0,1)&(K45>0|K46>1))])) ])
2019-10-12 15:50:08,562 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(G0,0)])&!(exists(G0:Int)[G0>=0&Ch(1,G0)&! Ch(0,1)])
 f2:forall(K43:Int,K44:Int)[ Ch(K43,K44)&turn(p2)&K43>=0&K43<xlen()&K44>=0&K44<ylen()=>((( !(Ch(0,0)&(K43>0|K44>0)) ) => ( !(Ch(0,0)&(K43>0|K44>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 0&! (Ch(1,G0)&(K43>1|K44>G0))])&!((!turn(p2)))) ]
2019-10-12 15:50:09,258 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(turn(p2))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&turn(p2)])
 f2:!(!Ch(0,0))=>(exists(K49:Int,K50:Int)[ (Ch(K49,K50)&turn(p1)&K49>=0&K49<xlen()&K50>=0&K50<ylen())&((( !(Ch(0,0)&(K49>0|K50>0)) ) => ( !(Ch(0,0)&(K49>0|K50>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K49>0|K50>G0))&! (Ch(G0,0)&(K49>G0|K50>0))])&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K49>1|K50>G0))&! (Ch(0,1)&(K49>0|K50>1))])) ])
2019-10-12 15:50:09,303 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(G0,0)])&!(exists(G0:Int)[G0>=0&Ch(1,G0)&! Ch(0,1)])
 f2:forall(K47:Int,K48:Int)[ Ch(K47,K48)&turn(p2)&K47>=0&K47<xlen()&K48>=0&K48<ylen()=>((( !(Ch(0,0)&(K47>0|K48>0)) ) => ( !(Ch(0,0)&(K47>0|K48>0))&(!turn(p1)) ))&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K47>0|K48>G0))&(!turn(p2))])) ]
2019-10-12 15:50:11,092 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:!(!Ch(0,0))=>(exists(K53:Int,K54:Int)[ (Ch(K53,K54)&turn(p1)&K53>=0&K53<xlen()&K54>=0&K54<ylen())&(( !(Ch(0,0)&(K53>0|K54>0)) ) => ( !(Ch(0,0)&(K53>0|K54>0))&(!turn(p1)) )) ])
2019-10-12 15:50:11,133 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:forall(K51:Int,K52:Int)[ Ch(K51,K52)&turn(p2)&K51>=0&K51<xlen()&K52>=0&K52<ylen()=>(( !(Ch(0,0)&(K51>0|K52>0)) ) => ( !(Ch(0,0)&(K51>0|K52>0))&(!turn(p1)) )) ]
2019-10-12 15:50:11,299 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(X1,0)])
 f2:!(!Ch(0,0))=>(exists(K57:Int,K58:Int)[ (Ch(K57,K58)&turn(p1)&K57>=0&K57<xlen()&K58>=0&K58<ylen())&(( !(Ch(0,0)&(K57>0|K58>0)) ) => ( !(Ch(0,0)&(K57>0|K58>0))&(!turn(p1)) )) ])
2019-10-12 15:50:11,333 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:forall(K55:Int,K56:Int)[ Ch(K55,K56)&turn(p2)&K55>=0&K55<xlen()&K56>=0&K56<ylen()=>((( !(Ch(0,0)&(K55>0|K56>0)) ) => ( !(Ch(0,0)&(K55>0|K56>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(Ch(X1,0)&(K55>X1|K56>0))])) ]
2019-10-12 15:50:11,714 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(X1,0)])
 f2:!(!Ch(0,0))=>(exists(K61:Int,K62:Int)[ (Ch(K61,K62)&turn(p1)&K61>=0&K61<xlen()&K62>=0&K62<ylen())&((( !(Ch(0,0)&(K61>0|K62>0)) ) => ( !(Ch(0,0)&(K61>0|K62>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(Ch(X1,1)&(K61>X1|K62>1))])) ])
2019-10-12 15:50:11,749 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(X1,1)])
 f2:forall(K59:Int,K60:Int)[ Ch(K59,K60)&turn(p2)&K59>=0&K59<xlen()&K60>=0&K60<ylen()=>((( !(Ch(0,0)&(K59>0|K60>0)) ) => ( !(Ch(0,0)&(K59>0|K60>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(Ch(X1,0)&(K59>X1|K60>0))])) ]
2019-10-12 15:50:11,795 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(X1,1)])
 f2:forall(K59:Int,K60:Int)[ Ch(K59,K60)&turn(p2)&K59>=0&K59<xlen()&K60>=0&K60<ylen()=>((( !(Ch(0,0)&(K59>0|K60>0)) ) => ( !(Ch(0,0)&(K59>0|K60>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(Ch(X1,0)&(K59>X1|K60>0))])) ]
2019-10-12 15:50:12,405 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(X1,0)])
 f2:!(!Ch(0,0))=>(exists(K65:Int,K66:Int)[ (Ch(K65,K66)&turn(p1)&K65>=0&K65<xlen()&K66>=0&K66<ylen())&((( !(Ch(0,0)&(K65>0|K66>0)) ) => ( !(Ch(0,0)&(K65>0|K66>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(Ch(X1,1)&(K65>X1|K66>1))])&!(exists(X1:Int)[X1>=0&(Ch(X1,0)&(K65>X1|K66>0))])) ])
2019-10-12 15:50:12,441 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(X1,1)])&!(exists(X1:Int)[X1>=0&Ch(X1,0)])
 f2:forall(K63:Int,K64:Int)[ Ch(K63,K64)&turn(p2)&K63>=0&K63<xlen()&K64>=0&K64<ylen()=>((( !(Ch(0,0)&(K63>0|K64>0)) ) => ( !(Ch(0,0)&(K63>0|K64>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(Ch(X1,0)&(K63>X1|K64>0))])) ]
2019-10-12 15:50:12,469 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:forall(K16:Int,K17:Int)[K16>=0&K16<xlen()&K17>=0&K17<ylen()=>Ch(K16,K17)]&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)
 f2:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(X1,0)])
2019-10-12 15:50:13,403 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 1&! Ch(0,G0)])
 f2:!(!Ch(0,0))=>(exists(K69:Int,K70:Int)[ (Ch(K69,K70)&turn(p1)&K69>=0&K69<xlen()&K70>=0&K70<ylen())&((( !(Ch(0,0)&(K69>0|K70>0)) ) => ( !(Ch(0,0)&(K69>0|K70>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 1&(Ch(G0,1)&(K69>G0|K70>1))])&!(exists(G0:Int)[G0>=0&G0 = 1&! (Ch(0,G0)&(K69>0|K70>G0))])) ])
2019-10-12 15:50:13,452 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 1&! Ch(0,G0)])
 f2:!(!Ch(0,0))=>(exists(K69:Int,K70:Int)[ (Ch(K69,K70)&turn(p1)&K69>=0&K69<xlen()&K70>=0&K70<ylen())&((( !(Ch(0,0)&(K69>0|K70>0)) ) => ( !(Ch(0,0)&(K69>0|K70>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 1&(Ch(G0,1)&(K69>G0|K70>1))])&!(exists(G0:Int)[G0>=0&G0 = 1&! (Ch(0,G0)&(K69>0|K70>G0))])) ])
2019-10-12 15:50:13,487 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 1&Ch(G0,1)])&!(exists(G0:Int)[G0>=0&G0 = 1&! Ch(0,G0)])
 f2:forall(K67:Int,K68:Int)[ Ch(K67,K68)&turn(p2)&K67>=0&K67<xlen()&K68>=0&K68<ylen()=>((( !(Ch(0,0)&(K67>0|K68>0)) ) => ( !(Ch(0,0)&(K67>0|K68>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 1&! (Ch(0,G0)&(K67>0|K68>G0))])) ]
2019-10-12 15:50:14,082 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 1&! Ch(0,G0)])
 f2:!(!Ch(0,0))=>(exists(K73:Int,K74:Int)[ (Ch(K73,K74)&turn(p1)&K73>=0&K73<xlen()&K74>=0&K74<ylen())&((( !(Ch(0,0)&(K73>0|K74>0)) ) => ( !(Ch(0,0)&(K73>0|K74>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 1&(Ch(G0,1)&(K73>G0|K74>1))])&!(exists(G0:Int)[G0>=0&(Ch(G0,0)&(K73>G0|K74>0))&! (Ch(0,G0)&(K73>0|K74>G0))])) ])
2019-10-12 15:50:14,129 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 1&! Ch(0,G0)])
 f2:!(!Ch(0,0))=>(exists(K73:Int,K74:Int)[ (Ch(K73,K74)&turn(p1)&K73>=0&K73<xlen()&K74>=0&K74<ylen())&((( !(Ch(0,0)&(K73>0|K74>0)) ) => ( !(Ch(0,0)&(K73>0|K74>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 1&(Ch(G0,1)&(K73>G0|K74>1))])&!(exists(G0:Int)[G0>=0&(Ch(G0,0)&(K73>G0|K74>0))&! (Ch(0,G0)&(K73>0|K74>G0))])) ])
2019-10-12 15:50:14,166 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 1&Ch(G0,1)])&!(exists(G0:Int)[G0>=0&Ch(G0,0)&! Ch(0,G0)])
 f2:forall(K71:Int,K72:Int)[ Ch(K71,K72)&turn(p2)&K71>=0&K71<xlen()&K72>=0&K72<ylen()=>((( !(Ch(0,0)&(K71>0|K72>0)) ) => ( !(Ch(0,0)&(K71>0|K72>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 1&! (Ch(0,G0)&(K71>0|K72>G0))])) ]
2019-10-12 15:50:15,172 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 1&! Ch(0,G0)])&!(! Ch(1,1))
 f2:!(!Ch(0,0))=>(exists(K77:Int,K78:Int)[ (Ch(K77,K78)&turn(p1)&K77>=0&K77<xlen()&K78>=0&K78<ylen())&((( !(Ch(0,0)&(K77>0|K78>0)) ) => ( !(Ch(0,0)&(K77>0|K78>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(G0,0)&(K77>G0|K78>0))&! (Ch(0,G0)&(K77>0|K78>G0))])&!(exists(G0:Int)[G0>=0&(Ch(G0,1)&(K77>G0|K78>1))&! (Ch(1,0)&(K77>1|K78>0))])) ])
2019-10-12 15:50:15,488 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 1&! Ch(0,G0)])&!(! Ch(1,1))
 f2:!(!Ch(0,0))=>(exists(K77:Int,K78:Int)[ (Ch(K77,K78)&turn(p1)&K77>=0&K77<xlen()&K78>=0&K78<ylen())&((( !(Ch(0,0)&(K77>0|K78>0)) ) => ( !(Ch(0,0)&(K77>0|K78>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(G0,0)&(K77>G0|K78>0))&! (Ch(0,G0)&(K77>0|K78>G0))])&!(exists(G0:Int)[G0>=0&(Ch(G0,1)&(K77>G0|K78>1))&! (Ch(1,0)&(K77>1|K78>0))])) ])
2019-10-12 15:50:15,534 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(G0,0)&! Ch(0,G0)])&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(1,0)])
 f2:forall(K75:Int,K76:Int)[ Ch(K75,K76)&turn(p2)&K75>=0&K75<xlen()&K76>=0&K76<ylen()=>((( !(Ch(0,0)&(K75>0|K76>0)) ) => ( !(Ch(0,0)&(K75>0|K76>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 1&! (Ch(0,G0)&(K75>0|K76>G0))])&!(! (Ch(1,1)&(K75>1|K76>1)))) ]
2019-10-12 15:50:16,295 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(G0,0)&! turn(p1)])&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! turn(p1)])
 f2:!(!Ch(0,0))=>(exists(K81:Int,K82:Int)[ (Ch(K81,K82)&turn(p1)&K81>=0&K81<xlen()&K82>=0&K82<ylen())&((( !(Ch(0,0)&(K81>0|K82>0)) ) => ( !(Ch(0,0)&(K81>0|K82>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(G0,0)&(K81>G0|K82>0))&! (Ch(0,G0)&(K81>0|K82>G0))])&!(exists(G0:Int)[G0>=0&(Ch(G0,1)&(K81>G0|K82>1))&! (Ch(1,0)&(K81>1|K82>0))])) ])
2019-10-12 15:50:16,341 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(G0,0)&! Ch(0,G0)])&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(1,0)])
 f2:forall(K79:Int,K80:Int)[ Ch(K79,K80)&turn(p2)&K79>=0&K79<xlen()&K80>=0&K80<ylen()=>((( !(Ch(0,0)&(K79>0|K80>0)) ) => ( !(Ch(0,0)&(K79>0|K80>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(G0,0)&(K79>G0|K80>0))&! (!turn(p1))])&!(exists(G0:Int)[G0>=0&(Ch(G0,1)&(K79>G0|K80>1))&! (!turn(p1))])) ]
2019-10-12 15:50:17,964 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:!(!Ch(0,0))=>(exists(K85:Int,K86:Int)[ (Ch(K85,K86)&turn(p1)&K85>=0&K85<xlen()&K86>=0&K86<ylen())&(( !(Ch(0,0)&(K85>0|K86>0)) ) => ( !(Ch(0,0)&(K85>0|K86>0))&(!turn(p1)) )) ])
2019-10-12 15:50:18,005 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:forall(K83:Int,K84:Int)[ Ch(K83,K84)&turn(p2)&K83>=0&K83<xlen()&K84>=0&K84<ylen()=>(( !(Ch(0,0)&(K83>0|K84>0)) ) => ( !(Ch(0,0)&(K83>0|K84>0))&(!turn(p1)) )) ]
2019-10-12 15:50:18,177 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(Y10:Int,Y11:Int)[Y10>=0&Y11>=0&Ch(Y10,Y11)])
 f2:!(!Ch(0,0))=>(exists(K89:Int,K90:Int)[ (Ch(K89,K90)&turn(p1)&K89>=0&K89<xlen()&K90>=0&K90<ylen())&(( !(Ch(0,0)&(K89>0|K90>0)) ) => ( !(Ch(0,0)&(K89>0|K90>0))&(!turn(p1)) )) ])
2019-10-12 15:50:18,220 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:forall(K87:Int,K88:Int)[ Ch(K87,K88)&turn(p2)&K87>=0&K87<xlen()&K88>=0&K88<ylen()=>((( !(Ch(0,0)&(K87>0|K88>0)) ) => ( !(Ch(0,0)&(K87>0|K88>0))&(!turn(p1)) ))&!(exists(Y10:Int,Y11:Int)[Y10>=0&Y11>=0&(Ch(Y10,Y11)&(K87>Y10|K88>Y11))])) ]
2019-10-12 15:50:18,589 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(Y10:Int,Y11:Int)[Y10>=0&Y11>=0&Ch(Y10,Y11)])
 f2:!(!Ch(0,0))=>(exists(K93:Int,K94:Int)[ (Ch(K93,K94)&turn(p1)&K93>=0&K93<xlen()&K94>=0&K94<ylen())&((( !(Ch(0,0)&(K93>0|K94>0)) ) => ( !(Ch(0,0)&(K93>0|K94>0))&(!turn(p1)) ))&!(exists(Y10:Int,Y11:Int)[Y10>=0&Y11>=0&(Ch(Y10,Y11)&(K93>Y10|K94>Y11))])) ])
2019-10-12 15:50:18,621 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(Y10:Int,Y11:Int)[Y10>=0&Y11>=0&Ch(Y10,Y11)])
 f2:forall(K91:Int,K92:Int)[ Ch(K91,K92)&turn(p2)&K91>=0&K91<xlen()&K92>=0&K92<ylen()=>((( !(Ch(0,0)&(K91>0|K92>0)) ) => ( !(Ch(0,0)&(K91>0|K92>0))&(!turn(p1)) ))&!(exists(Y10:Int,Y11:Int)[Y10>=0&Y11>=0&(Ch(Y10,Y11)&(K91>Y10|K92>Y11))])) ]
2019-10-12 15:50:18,648 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:forall(K16:Int,K17:Int)[K16>=0&K16<xlen()&K17>=0&K17<ylen()=>Ch(K16,K17)]&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)
 f2:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(Y10:Int,Y11:Int)[Y10>=0&Y11>=0&Ch(Y10,Y11)])
2019-10-12 15:50:18,721 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:forall(K16:Int,K17:Int)[K16>=0&K16<xlen()&K17>=0&K17<ylen()=>Ch(K16,K17)]&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)
 f2:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(Y10:Int,Y11:Int)[Y10>=0&Y11>=0&Ch(Y10,Y11)])
2019-10-12 15:50:19,577 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 > 1&! Ch(G0,1)])
 f2:!(!Ch(0,0))=>(exists(K97:Int,K98:Int)[ (Ch(K97,K98)&turn(p1)&K97>=0&K97<xlen()&K98>=0&K98<ylen())&((( !(Ch(0,0)&(K97>0|K98>0)) ) => ( !(Ch(0,0)&(K97>0|K98>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 >= 1&(Ch(G0,G0)&(K97>G0|K98>G0))])) ])
2019-10-12 15:50:19,629 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 > 1&! Ch(G0,1)])
 f2:!(!Ch(0,0))=>(exists(K97:Int,K98:Int)[ (Ch(K97,K98)&turn(p1)&K97>=0&K97<xlen()&K98>=0&K98<ylen())&((( !(Ch(0,0)&(K97>0|K98>0)) ) => ( !(Ch(0,0)&(K97>0|K98>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 >= 1&(Ch(G0,G0)&(K97>G0|K98>G0))])) ])
2019-10-12 15:50:19,666 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 >= 1&Ch(G0,G0)])
 f2:forall(K95:Int,K96:Int)[ Ch(K95,K96)&turn(p2)&K95>=0&K95<xlen()&K96>=0&K96<ylen()=>((( !(Ch(0,0)&(K95>0|K96>0)) ) => ( !(Ch(0,0)&(K95>0|K96>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! G0 > 1&! (Ch(G0,1)&(K95>G0|K96>1))])) ]
2019-10-12 15:50:20,652 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 > 1&! Ch(G0,1)])&!(! Ch(1,0))
 f2:!(!Ch(0,0))=>(exists(K101:Int,K102:Int)[ (Ch(K101,K102)&turn(p1)&K101>=0&K101<xlen()&K102>=0&K102<ylen())&((( !(Ch(0,0)&(K101>0|K102>0)) ) => ( !(Ch(0,0)&(K101>0|K102>0))&(!turn(p1)) ))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K101>G0|K102>G1))&! (Ch(G1,G0)&(K101>G1|K102>G0))])) ])
2019-10-12 15:50:20,791 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 > 1&! Ch(G0,1)])&!(! Ch(1,0))
 f2:!(!Ch(0,0))=>(exists(K101:Int,K102:Int)[ (Ch(K101,K102)&turn(p1)&K101>=0&K101<xlen()&K102>=0&K102<ylen())&((( !(Ch(0,0)&(K101>0|K102>0)) ) => ( !(Ch(0,0)&(K101>0|K102>0))&(!turn(p1)) ))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K101>G0|K102>G1))&! (Ch(G1,G0)&(K101>G1|K102>G0))])) ])
2019-10-12 15:50:20,845 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,G0)])
 f2:forall(K99:Int,K100:Int)[ Ch(K99,K100)&turn(p2)&K99>=0&K99<xlen()&K100>=0&K100<ylen()=>((( !(Ch(0,0)&(K99>0|K100>0)) ) => ( !(Ch(0,0)&(K99>0|K100>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! G0 > 1&! (Ch(G0,1)&(K99>G0|K100>1))])&!(! (Ch(1,0)&(K99>1|K100>0)))) ]
2019-10-12 15:50:30,050 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 > 1&! Ch(G0,1)])&!(! Ch(1,0))&!(turn(p2))
 f2:!(!Ch(0,0))=>(exists(K105:Int,K106:Int)[ (Ch(K105,K106)&turn(p1)&K105>=0&K105<xlen()&K106>=0&K106<ylen())&((( !(Ch(0,0)&(K105>0|K106>0)) ) => ( !(Ch(0,0)&(K105>0|K106>0))&(!turn(p1)) ))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K105>G0|K106>G1))&! (Ch(G1,G0)&(K105>G1|K106>G0))])&!((Ch(1,1)&(K105>1|K106>1)))) ])
2019-10-12 15:50:30,176 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 > 1&! Ch(G0,1)])&!(! Ch(1,0))&!(turn(p2))
 f2:!(!Ch(0,0))=>(exists(K105:Int,K106:Int)[ (Ch(K105,K106)&turn(p1)&K105>=0&K105<xlen()&K106>=0&K106<ylen())&((( !(Ch(0,0)&(K105>0|K106>0)) ) => ( !(Ch(0,0)&(K105>0|K106>0))&(!turn(p1)) ))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K105>G0|K106>G1))&! (Ch(G1,G0)&(K105>G1|K106>G0))])&!((Ch(1,1)&(K105>1|K106>1)))) ])
2019-10-12 15:50:30,218 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 > 1&! Ch(G0,1)])&!(! Ch(1,0))&!(turn(p2))
 f2:!(!Ch(0,0))=>(exists(K105:Int,K106:Int)[ (Ch(K105,K106)&turn(p1)&K105>=0&K105<xlen()&K106>=0&K106<ylen())&((( !(Ch(0,0)&(K105>0|K106>0)) ) => ( !(Ch(0,0)&(K105>0|K106>0))&(!turn(p1)) ))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K105>G0|K106>G1))&! (Ch(G1,G0)&(K105>G1|K106>G0))])&!((Ch(1,1)&(K105>1|K106>1)))) ])
2019-10-12 15:50:30,284 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,G0)])&!(Ch(1,1))
 f2:forall(K103:Int,K104:Int)[ Ch(K103,K104)&turn(p2)&K103>=0&K103<xlen()&K104>=0&K104<ylen()=>((( !(Ch(0,0)&(K103>0|K104>0)) ) => ( !(Ch(0,0)&(K103>0|K104>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! G0 > 1&! (Ch(G0,1)&(K103>G0|K104>1))])&!(! (Ch(1,0)&(K103>1|K104>0)))&!((!turn(p2)))) ]
2019-10-12 15:50:30,319 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,G0)])&!(Ch(1,1))
 f2:forall(K103:Int,K104:Int)[ Ch(K103,K104)&turn(p2)&K103>=0&K103<xlen()&K104>=0&K104<ylen()=>((( !(Ch(0,0)&(K103>0|K104>0)) ) => ( !(Ch(0,0)&(K103>0|K104>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! G0 > 1&! (Ch(G0,1)&(K103>G0|K104>1))])&!(! (Ch(1,0)&(K103>1|K104>0)))&!((!turn(p2)))) ]
2019-10-12 15:50:36,609 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(turn(p2))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&turn(p2)])&!(exists(G0:Int)[G0>=0&Ch(1,G0)&! Ch(G0,0)])
 f2:!(!Ch(0,0))=>(exists(K109:Int,K110:Int)[ (Ch(K109,K110)&turn(p1)&K109>=0&K109<xlen()&K110>=0&K110<ylen())&((( !(Ch(0,0)&(K109>0|K110>0)) ) => ( !(Ch(0,0)&(K109>0|K110>0))&(!turn(p1)) ))&!((Ch(1,1)&(K109>1|K110>1)))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! (Ch(G1,G0)&(K109>G1|K110>G0))&! G1 > 1&(Ch(G0,G0)&(K109>G0|K110>G0))])) ])
2019-10-12 15:50:36,651 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(Ch(1,1))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! Ch(G1,G0)&! G1 > 1&Ch(G0,G0)])
 f2:forall(K107:Int,K108:Int)[ Ch(K107,K108)&turn(p2)&K107>=0&K107<xlen()&K108>=0&K108<ylen()=>((( !(Ch(0,0)&(K107>0|K108>0)) ) => ( !(Ch(0,0)&(K107>0|K108>0))&(!turn(p1)) ))&!((!turn(p2)))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K107>G0|K108>G1))&(!turn(p2))])&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K107>1|K108>G0))&! (Ch(G0,0)&(K107>G0|K108>0))])) ]
2019-10-12 15:50:36,690 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(Ch(1,1))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! Ch(G1,G0)&! G1 > 1&Ch(G0,G0)])
 f2:forall(K107:Int,K108:Int)[ Ch(K107,K108)&turn(p2)&K107>=0&K107<xlen()&K108>=0&K108<ylen()=>((( !(Ch(0,0)&(K107>0|K108>0)) ) => ( !(Ch(0,0)&(K107>0|K108>0))&(!turn(p1)) ))&!((!turn(p2)))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K107>G0|K108>G1))&(!turn(p2))])&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K107>1|K108>G0))&! (Ch(G0,0)&(K107>G0|K108>0))])) ]
2019-10-12 15:50:36,717 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(Ch(1,1))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! Ch(G1,G0)&! G1 > 1&Ch(G0,G0)])
 f2:forall(K107:Int,K108:Int)[ Ch(K107,K108)&turn(p2)&K107>=0&K107<xlen()&K108>=0&K108<ylen()=>((( !(Ch(0,0)&(K107>0|K108>0)) ) => ( !(Ch(0,0)&(K107>0|K108>0))&(!turn(p1)) ))&!((!turn(p2)))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K107>G0|K108>G1))&(!turn(p2))])&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K107>1|K108>G0))&! (Ch(G0,0)&(K107>G0|K108>0))])) ]
2019-10-12 15:50:40,660 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:!(!Ch(0,0))=>(exists(K113:Int,K114:Int)[ (Ch(K113,K114)&turn(p1)&K113>=0&K113<xlen()&K114>=0&K114<ylen())&(( !(Ch(0,0)&(K113>0|K114>0)) ) => ( !(Ch(0,0)&(K113>0|K114>0))&(!turn(p1)) )) ])
2019-10-12 15:50:40,701 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:forall(K111:Int,K112:Int)[ Ch(K111,K112)&turn(p2)&K111>=0&K111<xlen()&K112>=0&K112<ylen()=>(( !(Ch(0,0)&(K111>0|K112>0)) ) => ( !(Ch(0,0)&(K111>0|K112>0))&(!turn(p1)) )) ]
2019-10-12 15:50:40,870 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X0:_S1)[turn(X0)])
 f2:!(!Ch(0,0))=>(exists(K117:Int,K118:Int)[ (Ch(K117,K118)&turn(p1)&K117>=0&K117<xlen()&K118>=0&K118<ylen())&(( !(Ch(0,0)&(K117>0|K118>0)) ) => ( !(Ch(0,0)&(K117>0|K118>0))&(!turn(p1)) )) ])
2019-10-12 15:50:40,906 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:forall(K115:Int,K116:Int)[ Ch(K115,K116)&turn(p2)&K115>=0&K115<xlen()&K116>=0&K116<ylen()=>((( !(Ch(0,0)&(K115>0|K116>0)) ) => ( !(Ch(0,0)&(K115>0|K116>0))&(!turn(p1)) ))&!(exists(X0:_S1)[(!turn(X0))])) ]
2019-10-12 15:50:41,298 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X0:_S1)[turn(X0)])
 f2:!(!Ch(0,0))=>(exists(K121:Int,K122:Int)[ (Ch(K121,K122)&turn(p1)&K121>=0&K121<xlen()&K122>=0&K122<ylen())&((( !(Ch(0,0)&(K121>0|K122>0)) ) => ( !(Ch(0,0)&(K121>0|K122>0))&(!turn(p1)) ))&!(exists(X0:_S1)[(!turn(X0))])) ])
2019-10-12 15:50:41,332 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X0:_S1)[turn(X0)])
 f2:forall(K119:Int,K120:Int)[ Ch(K119,K120)&turn(p2)&K119>=0&K119<xlen()&K120>=0&K120<ylen()=>((( !(Ch(0,0)&(K119>0|K120>0)) ) => ( !(Ch(0,0)&(K119>0|K120>0))&(!turn(p1)) ))&!(exists(X0:_S1)[(!turn(X0))])) ]
2019-10-12 15:50:41,361 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:forall(K16:Int,K17:Int)[K16>=0&K16<xlen()&K17>=0&K17<ylen()=>Ch(K16,K17)]&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)
 f2:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X0:_S1)[turn(X0)])
2019-10-12 15:50:42,211 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:_S1)[turn(G0)&! Ch(0,1)])
 f2:!(!Ch(0,0))=>(exists(K125:Int,K126:Int)[ (Ch(K125,K126)&turn(p1)&K125>=0&K125<xlen()&K126>=0&K126<ylen())&((( !(Ch(0,0)&(K125>0|K126>0)) ) => ( !(Ch(0,0)&(K125>0|K126>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! G0 > 0&! (Ch(G0,1)&(K125>G0|K126>1))])) ])
2019-10-12 15:50:42,260 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 > 0&! Ch(G0,1)])
 f2:forall(K123:Int,K124:Int)[ Ch(K123,K124)&turn(p2)&K123>=0&K123<xlen()&K124>=0&K124<ylen()=>((( !(Ch(0,0)&(K123>0|K124>0)) ) => ( !(Ch(0,0)&(K123>0|K124>0))&(!turn(p1)) ))&!(exists(G0:_S1)[(!turn(G0))&! (Ch(0,1)&(K123>0|K124>1))])) ]
2019-10-12 15:50:43,368 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() > G0&! Ch(G0,G0)])
 f2:!(!Ch(0,0))=>(exists(K130:Int,K131:Int)[ (Ch(K130,K131)&turn(p1)&K130>=0&K130<xlen()&K131>=0&K131<ylen())&((( !(Ch(0,0)&(K130>0|K131>0)) ) => ( !(Ch(0,0)&(K130>0|K131>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! G0 > 0&! (Ch(G0,1)&(K130>G0|K131>1))])&!((Ch(1,1)&(K130>1|K131>1)))) ])
2019-10-12 15:50:43,412 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() > G0&! Ch(G0,G0)])
 f2:!(!Ch(0,0))=>(exists(K130:Int,K131:Int)[ (Ch(K130,K131)&turn(p1)&K130>=0&K130<xlen()&K131>=0&K131<ylen())&((( !(Ch(0,0)&(K130>0|K131>0)) ) => ( !(Ch(0,0)&(K130>0|K131>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! G0 > 0&! (Ch(G0,1)&(K130>G0|K131>1))])&!((Ch(1,1)&(K130>1|K131>1)))) ])
2019-10-12 15:50:43,445 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 > 0&! Ch(G0,1)])&!(Ch(1,1))
 f2:forall(K127:Int,K128:Int)[ Ch(K127,K128)&turn(p2)&K127>=0&K127<xlen()&K128>=0&K128<ylen()=>((( !(Ch(0,0)&(K127>0|K128>0)) ) => ( !(Ch(0,0)&(K127>0|K128>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K129:Int)[ (xlen()=K129)&(G0>=0& K129 > G0&! (Ch(G0,G0)&(K127>G0|K128>G0)))] ])) ]
2019-10-12 15:50:44,030 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() > G0&! Ch(G0,G0)])
 f2:!(!Ch(0,0))=>(exists(K135:Int,K136:Int)[ (Ch(K135,K136)&turn(p1)&K135>=0&K135<xlen()&K136>=0&K136<ylen())&((( !(Ch(0,0)&(K135>0|K136>0)) ) => ( !(Ch(0,0)&(K135>0|K136>0))&(!turn(p1)) ))&!((Ch(1,1)&(K135>1|K136>1)))&!(exists(G0:Int)[G0>=0&! G0 = 0&(Ch(1,G0)&(K135>1|K136>G0))])) ])
2019-10-12 15:50:44,074 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() > G0&! Ch(G0,G0)])
 f2:!(!Ch(0,0))=>(exists(K135:Int,K136:Int)[ (Ch(K135,K136)&turn(p1)&K135>=0&K135<xlen()&K136>=0&K136<ylen())&((( !(Ch(0,0)&(K135>0|K136>0)) ) => ( !(Ch(0,0)&(K135>0|K136>0))&(!turn(p1)) ))&!((Ch(1,1)&(K135>1|K136>1)))&!(exists(G0:Int)[G0>=0&! G0 = 0&(Ch(1,G0)&(K135>1|K136>G0))])) ])
2019-10-12 15:50:44,110 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(Ch(1,1))&!(exists(G0:Int)[G0>=0&! G0 = 0&Ch(1,G0)])
 f2:forall(K132:Int,K133:Int)[ Ch(K132,K133)&turn(p2)&K132>=0&K132<xlen()&K133>=0&K133<ylen()=>((( !(Ch(0,0)&(K132>0|K133>0)) ) => ( !(Ch(0,0)&(K132>0|K133>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K134:Int)[ (xlen()=K134)&(G0>=0& K134 > G0&! (Ch(G0,G0)&(K132>G0|K133>G0)))] ])) ]
2019-10-12 15:50:44,146 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(Ch(1,1))&!(exists(G0:Int)[G0>=0&! G0 = 0&Ch(1,G0)])
 f2:forall(K132:Int,K133:Int)[ Ch(K132,K133)&turn(p2)&K132>=0&K132<xlen()&K133>=0&K133<ylen()=>((( !(Ch(0,0)&(K132>0|K133>0)) ) => ( !(Ch(0,0)&(K132>0|K133>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K134:Int)[ (xlen()=K134)&(G0>=0& K134 > G0&! (Ch(G0,G0)&(K132>G0|K133>G0)))] ])) ]
2019-10-12 15:50:47,112 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! Ch(G0,G0)&Ch(0,0)&xlen() > G0])
 f2:!(!Ch(0,0))=>(exists(K140:Int,K141:Int)[ (Ch(K140,K141)&turn(p1)&K140>=0&K140<xlen()&K141>=0&K141<ylen())&((( !(Ch(0,0)&(K140>0|K141>0)) ) => ( !(Ch(0,0)&(K140>0|K141>0))&(!turn(p1)) ))&!((Ch(1,1)&(K140>1|K141>1)))&!(exists(G0:Int)[G0>=0&! G0 = 0&(Ch(1,G0)&(K140>1|K141>G0))])) ])
2019-10-12 15:50:47,152 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! Ch(G0,G0)&Ch(0,0)&xlen() > G0])
 f2:!(!Ch(0,0))=>(exists(K140:Int,K141:Int)[ (Ch(K140,K141)&turn(p1)&K140>=0&K140<xlen()&K141>=0&K141<ylen())&((( !(Ch(0,0)&(K140>0|K141>0)) ) => ( !(Ch(0,0)&(K140>0|K141>0))&(!turn(p1)) ))&!((Ch(1,1)&(K140>1|K141>1)))&!(exists(G0:Int)[G0>=0&! G0 = 0&(Ch(1,G0)&(K140>1|K141>G0))])) ])
2019-10-12 15:50:47,188 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(Ch(1,1))&!(exists(G0:Int)[G0>=0&! G0 = 0&Ch(1,G0)])
 f2:forall(K137:Int,K138:Int)[ Ch(K137,K138)&turn(p2)&K137>=0&K137<xlen()&K138>=0&K138<ylen()=>((( !(Ch(0,0)&(K137>0|K138>0)) ) => ( !(Ch(0,0)&(K137>0|K138>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K139:Int)[ (xlen()=K139)&(G0>=0&! (Ch(G0,G0)&(K137>G0|K138>G0))&(Ch(0,0)&(K137>0|K138>0))& K139 > G0)] ])) ]
2019-10-12 15:50:47,227 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(Ch(1,1))&!(exists(G0:Int)[G0>=0&! G0 = 0&Ch(1,G0)])
 f2:forall(K137:Int,K138:Int)[ Ch(K137,K138)&turn(p2)&K137>=0&K137<xlen()&K138>=0&K138<ylen()=>((( !(Ch(0,0)&(K137>0|K138>0)) ) => ( !(Ch(0,0)&(K137>0|K138>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K139:Int)[ (xlen()=K139)&(G0>=0&! (Ch(G0,G0)&(K137>G0|K138>G0))&(Ch(0,0)&(K137>0|K138>0))& K139 > G0)] ])) ]
2019-10-12 15:50:49,061 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! Ch(G0,G0)&Ch(0,0)&xlen() > G0])&!(! turn(p1))
 f2:!(!Ch(0,0))=>(exists(K145:Int,K146:Int)[ (Ch(K145,K146)&turn(p1)&K145>=0&K145<xlen()&K146>=0&K146<ylen())&((( !(Ch(0,0)&(K145>0|K146>0)) ) => ( !(Ch(0,0)&(K145>0|K146>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! G0 = 0&(Ch(1,G0)&(K145>1|K146>G0))])&!((Ch(1,1)&(K145>1|K146>1)))&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K145>1|K146>G0))&! (Ch(G0,1)&(K145>G0|K146>1))])) ])
2019-10-12 15:50:49,110 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 = 0&Ch(1,G0)])&!(Ch(1,1))&!(exists(G0:Int)[G0>=0&Ch(1,G0)&! Ch(G0,1)])
 f2:forall(K142:Int,K143:Int)[ Ch(K142,K143)&turn(p2)&K142>=0&K142<xlen()&K143>=0&K143<ylen()=>((( !(Ch(0,0)&(K142>0|K143>0)) ) => ( !(Ch(0,0)&(K142>0|K143>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K144:Int)[ (xlen()=K144)&(G0>=0&! (Ch(G0,G0)&(K142>G0|K143>G0))&(Ch(0,0)&(K142>0|K143>0))& K144 > G0)] ])&!(! (!turn(p1)))) ]
2019-10-12 15:50:49,146 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 = 0&Ch(1,G0)])&!(Ch(1,1))&!(exists(G0:Int)[G0>=0&Ch(1,G0)&! Ch(G0,1)])
 f2:forall(K142:Int,K143:Int)[ Ch(K142,K143)&turn(p2)&K142>=0&K142<xlen()&K143>=0&K143<ylen()=>((( !(Ch(0,0)&(K142>0|K143>0)) ) => ( !(Ch(0,0)&(K142>0|K143>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K144:Int)[ (xlen()=K144)&(G0>=0&! (Ch(G0,G0)&(K142>G0|K143>G0))&(Ch(0,0)&(K142>0|K143>0))& K144 > G0)] ])&!(! (!turn(p1)))) ]
2019-10-12 15:50:49,772 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(! turn(p1))&!(exists(G0:_S1)[turn(G0)&! turn(p1)])
 f2:!(!Ch(0,0))=>(exists(K149:Int,K150:Int)[ (Ch(K149,K150)&turn(p1)&K149>=0&K149<xlen()&K150>=0&K150<ylen())&((( !(Ch(0,0)&(K149>0|K150>0)) ) => ( !(Ch(0,0)&(K149>0|K150>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! G0 = 0&(Ch(1,G0)&(K149>1|K150>G0))])&!((Ch(1,1)&(K149>1|K150>1)))&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K149>1|K150>G0))&! (Ch(G0,1)&(K149>G0|K150>1))])) ])
2019-10-12 15:50:49,820 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 = 0&Ch(1,G0)])&!(Ch(1,1))&!(exists(G0:Int)[G0>=0&Ch(1,G0)&! Ch(G0,1)])
 f2:forall(K147:Int,K148:Int)[ Ch(K147,K148)&turn(p2)&K147>=0&K147<xlen()&K148>=0&K148<ylen()=>((( !(Ch(0,0)&(K147>0|K148>0)) ) => ( !(Ch(0,0)&(K147>0|K148>0))&(!turn(p1)) ))&!(! (!turn(p1)))&!(exists(G0:_S1)[(!turn(G0))&! (!turn(p1))])) ]
2019-10-12 15:50:54,890 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:!(!Ch(0,0))=>(exists(K153:Int,K154:Int)[ (Ch(K153,K154)&turn(p1)&K153>=0&K153<xlen()&K154>=0&K154<ylen())&(( !(Ch(0,0)&(K153>0|K154>0)) ) => ( !(Ch(0,0)&(K153>0|K154>0))&(!turn(p1)) )) ])
2019-10-12 15:50:54,935 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:forall(K151:Int,K152:Int)[ Ch(K151,K152)&turn(p2)&K151>=0&K151<xlen()&K152>=0&K152<ylen()=>(( !(Ch(0,0)&(K151>0|K152>0)) ) => ( !(Ch(0,0)&(K151>0|K152>0))&(!turn(p1)) )) ]
2019-10-12 15:50:55,114 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&xlen() = X1])
 f2:!(!Ch(0,0))=>(exists(K157:Int,K158:Int)[ (Ch(K157,K158)&turn(p1)&K157>=0&K157<xlen()&K158>=0&K158<ylen())&(( !(Ch(0,0)&(K157>0|K158>0)) ) => ( !(Ch(0,0)&(K157>0|K158>0))&(!turn(p1)) )) ])
2019-10-12 15:50:55,154 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:forall(K155:Int,K156:Int)[ Ch(K155,K156)&turn(p2)&K155>=0&K155<xlen()&K156>=0&K156<ylen()=>((( !(Ch(0,0)&(K155>0|K156>0)) ) => ( !(Ch(0,0)&(K155>0|K156>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(xlen()=X1)])) ]
2019-10-12 15:50:55,558 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&xlen() = X1])
 f2:!(!Ch(0,0))=>(exists(K161:Int,K162:Int)[ (Ch(K161,K162)&turn(p1)&K161>=0&K161<xlen()&K162>=0&K162<ylen())&((( !(Ch(0,0)&(K161>0|K162>0)) ) => ( !(Ch(0,0)&(K161>0|K162>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(xlen()=X1)])) ])
2019-10-12 15:50:55,596 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&xlen() = X1])
 f2:forall(K159:Int,K160:Int)[ Ch(K159,K160)&turn(p2)&K159>=0&K159<xlen()&K160>=0&K160<ylen()=>((( !(Ch(0,0)&(K159>0|K160>0)) ) => ( !(Ch(0,0)&(K159>0|K160>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(xlen()=X1)])) ]
2019-10-12 15:50:55,624 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:forall(K16:Int,K17:Int)[K16>=0&K16<xlen()&K17>=0&K17<ylen()=>Ch(K16,K17)]&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)
 f2:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&xlen() = X1])
2019-10-12 15:50:56,474 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 > 0&! Ch(1,G0)])
 f2:!(!Ch(0,0))=>(exists(K165:Int,K166:Int)[ (Ch(K165,K166)&turn(p1)&K165>=0&K165<xlen()&K166>=0&K166<ylen())&((( !(Ch(0,0)&(K165>0|K166>0)) ) => ( !(Ch(0,0)&(K165>0|K166>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! G0 >= 1&! (Ch(1,G0)&(K165>1|K166>G0))])) ])
2019-10-12 15:50:56,521 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 >= 1&! Ch(1,G0)])
 f2:forall(K163:Int,K164:Int)[ Ch(K163,K164)&turn(p2)&K163>=0&K163<xlen()&K164>=0&K164<ylen()=>((( !(Ch(0,0)&(K163>0|K164>0)) ) => ( !(Ch(0,0)&(K163>0|K164>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! G0 > 0&! (Ch(1,G0)&(K163>1|K164>G0))])) ]
2019-10-12 15:50:57,124 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 > 0&! Ch(1,G0)])
 f2:!(!Ch(0,0))=>(exists(K169:Int,K170:Int)[ (Ch(K169,K170)&turn(p1)&K169>=0&K169<xlen()&K170>=0&K170<ylen())&((( !(Ch(0,0)&(K169>0|K170>0)) ) => ( !(Ch(0,0)&(K169>0|K170>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 0&(Ch(G0,1)&(K169>G0|K170>1))])) ])
2019-10-12 15:50:57,174 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 > 0&Ch(G0,1)])
 f2:forall(K167:Int,K168:Int)[ Ch(K167,K168)&turn(p2)&K167>=0&K167<xlen()&K168>=0&K168<ylen()=>((( !(Ch(0,0)&(K167>0|K168>0)) ) => ( !(Ch(0,0)&(K167>0|K168>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! G0 > 0&! (Ch(1,G0)&(K167>1|K168>G0))])) ]
2019-10-12 15:50:57,215 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 > 0&Ch(G0,1)])
 f2:forall(K167:Int,K168:Int)[ Ch(K167,K168)&turn(p2)&K167>=0&K167<xlen()&K168>=0&K168<ylen()=>((( !(Ch(0,0)&(K167>0|K168>0)) ) => ( !(Ch(0,0)&(K167>0|K168>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! G0 > 0&! (Ch(1,G0)&(K167>1|K168>G0))])) ]
2019-10-12 15:50:58,735 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 > 0&! Ch(1,G0)])&!(! Ch(1,1))
 f2:!(!Ch(0,0))=>(exists(K173:Int,K174:Int)[ (Ch(K173,K174)&turn(p1)&K173>=0&K173<xlen()&K174>=0&K174<ylen())&((( !(Ch(0,0)&(K173>0|K174>0)) ) => ( !(Ch(0,0)&(K173>0|K174>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 0&(Ch(G0,1)&(K173>G0|K174>1))])&!((Ch(0,1)&(K173>0|K174>1))&! (Ch(1,0)&(K173>1|K174>0)))) ])
2019-10-12 15:50:58,784 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 > 0&Ch(G0,1)])&!(Ch(0,1)&! Ch(1,0))
 f2:forall(K171:Int,K172:Int)[ Ch(K171,K172)&turn(p2)&K171>=0&K171<xlen()&K172>=0&K172<ylen()=>((( !(Ch(0,0)&(K171>0|K172>0)) ) => ( !(Ch(0,0)&(K171>0|K172>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! G0 > 0&! (Ch(1,G0)&(K171>1|K172>G0))])&!(! (Ch(1,1)&(K171>1|K172>1)))) ]
2019-10-12 15:50:58,828 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 > 0&Ch(G0,1)])&!(Ch(0,1)&! Ch(1,0))
 f2:forall(K171:Int,K172:Int)[ Ch(K171,K172)&turn(p2)&K171>=0&K171<xlen()&K172>=0&K172<ylen()=>((( !(Ch(0,0)&(K171>0|K172>0)) ) => ( !(Ch(0,0)&(K171>0|K172>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! G0 > 0&! (Ch(1,G0)&(K171>1|K172>G0))])&!(! (Ch(1,1)&(K171>1|K172>1)))) ]
2019-10-12 15:50:59,593 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() = G0&turn(p2)])&!(exists(G0:Int)[G0>=0&xlen() = G0&turn(p2)])
 f2:!(!Ch(0,0))=>(exists(K177:Int,K178:Int)[ (Ch(K177,K178)&turn(p1)&K177>=0&K177<xlen()&K178>=0&K178<ylen())&((( !(Ch(0,0)&(K177>0|K178>0)) ) => ( !(Ch(0,0)&(K177>0|K178>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 0&(Ch(G0,1)&(K177>G0|K178>1))])&!((Ch(0,1)&(K177>0|K178>1))&! (Ch(1,0)&(K177>1|K178>0)))) ])
2019-10-12 15:50:59,640 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 > 0&Ch(G0,1)])&!(Ch(0,1)&! Ch(1,0))
 f2:forall(K175:Int,K176:Int)[ Ch(K175,K176)&turn(p2)&K175>=0&K175<xlen()&K176>=0&K176<ylen()=>((( !(Ch(0,0)&(K175>0|K176>0)) ) => ( !(Ch(0,0)&(K175>0|K176>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(xlen()=G0)&(!turn(p2))])&!(exists(G0:Int)[G0>=0&(xlen()=G0)&(!turn(p2))])) ]
2019-10-12 15:51:01,280 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:!(!Ch(0,0))=>(exists(K181:Int,K182:Int)[ (Ch(K181,K182)&turn(p1)&K181>=0&K181<xlen()&K182>=0&K182<ylen())&(( !(Ch(0,0)&(K181>0|K182>0)) ) => ( !(Ch(0,0)&(K181>0|K182>0))&(!turn(p1)) )) ])
2019-10-12 15:51:01,322 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:forall(K179:Int,K180:Int)[ Ch(K179,K180)&turn(p2)&K179>=0&K179<xlen()&K180>=0&K180<ylen()=>(( !(Ch(0,0)&(K179>0|K180>0)) ) => ( !(Ch(0,0)&(K179>0|K180>0))&(!turn(p1)) )) ]
2019-10-12 15:51:01,506 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&ylen() = X1])
 f2:!(!Ch(0,0))=>(exists(K185:Int,K186:Int)[ (Ch(K185,K186)&turn(p1)&K185>=0&K185<xlen()&K186>=0&K186<ylen())&(( !(Ch(0,0)&(K185>0|K186>0)) ) => ( !(Ch(0,0)&(K185>0|K186>0))&(!turn(p1)) )) ])
2019-10-12 15:51:01,540 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:forall(K183:Int,K184:Int)[ Ch(K183,K184)&turn(p2)&K183>=0&K183<xlen()&K184>=0&K184<ylen()=>((( !(Ch(0,0)&(K183>0|K184>0)) ) => ( !(Ch(0,0)&(K183>0|K184>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(ylen()=X1)])) ]
2019-10-12 15:51:01,919 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&ylen() = X1])
 f2:!(!Ch(0,0))=>(exists(K189:Int,K190:Int)[ (Ch(K189,K190)&turn(p1)&K189>=0&K189<xlen()&K190>=0&K190<ylen())&((( !(Ch(0,0)&(K189>0|K190>0)) ) => ( !(Ch(0,0)&(K189>0|K190>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(ylen()=X1)])) ])
2019-10-12 15:51:01,957 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&ylen() = X1])
 f2:forall(K187:Int,K188:Int)[ Ch(K187,K188)&turn(p2)&K187>=0&K187<xlen()&K188>=0&K188<ylen()=>((( !(Ch(0,0)&(K187>0|K188>0)) ) => ( !(Ch(0,0)&(K187>0|K188>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(ylen()=X1)])) ]
2019-10-12 15:51:01,992 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:forall(K16:Int,K17:Int)[K16>=0&K16<xlen()&K17>=0&K17<ylen()=>Ch(K16,K17)]&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)
 f2:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&ylen() = X1])
2019-10-12 15:51:02,877 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 >= 1&! Ch(G0,1)])
 f2:!(!Ch(0,0))=>(exists(K193:Int,K194:Int)[ (Ch(K193,K194)&turn(p1)&K193>=0&K193<xlen()&K194>=0&K194<ylen())&((( !(Ch(0,0)&(K193>0|K194>0)) ) => ( !(Ch(0,0)&(K193>0|K194>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(ylen()=G0)&! (Ch(0,1)&(K193>0|K194>1))])) ])
2019-10-12 15:51:02,923 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&ylen() = G0&! Ch(0,1)])
 f2:forall(K191:Int,K192:Int)[ Ch(K191,K192)&turn(p2)&K191>=0&K191<xlen()&K192>=0&K192<ylen()=>((( !(Ch(0,0)&(K191>0|K192>0)) ) => ( !(Ch(0,0)&(K191>0|K192>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! G0 >= 1&! (Ch(G0,1)&(K191>G0|K192>1))])) ]
2019-10-12 15:51:03,534 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 >= 1&! Ch(G0,1)])
 f2:!(!Ch(0,0))=>(exists(K197:Int,K198:Int)[ (Ch(K197,K198)&turn(p1)&K197>=0&K197<xlen()&K198>=0&K198<ylen())&((( !(Ch(0,0)&(K197>0|K198>0)) ) => ( !(Ch(0,0)&(K197>0|K198>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 1&(Ch(G0,G0)&(K197>G0|K198>G0))])) ])
2019-10-12 15:51:03,578 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 1&Ch(G0,G0)])
 f2:forall(K195:Int,K196:Int)[ Ch(K195,K196)&turn(p2)&K195>=0&K195<xlen()&K196>=0&K196<ylen()=>((( !(Ch(0,0)&(K195>0|K196>0)) ) => ( !(Ch(0,0)&(K195>0|K196>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! G0 >= 1&! (Ch(G0,1)&(K195>G0|K196>1))])) ]
2019-10-12 15:51:05,229 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 >= 1&! Ch(G0,1)])&!(! Ch(1,0))
 f2:!(!Ch(0,0))=>(exists(K201:Int,K202:Int)[ (Ch(K201,K202)&turn(p1)&K201>=0&K201<xlen()&K202>=0&K202<ylen())&((( !(Ch(0,0)&(K201>0|K202>0)) ) => ( !(Ch(0,0)&(K201>0|K202>0))&(!turn(p1)) ))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K201>G0|K202>G1))&! (Ch(G1,0)&(K201>G1|K202>0))])) ])
2019-10-12 15:51:05,274 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,0)])
 f2:forall(K199:Int,K200:Int)[ Ch(K199,K200)&turn(p2)&K199>=0&K199<xlen()&K200>=0&K200<ylen()=>((( !(Ch(0,0)&(K199>0|K200>0)) ) => ( !(Ch(0,0)&(K199>0|K200>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! G0 >= 1&! (Ch(G0,1)&(K199>G0|K200>1))])&!(! (Ch(1,0)&(K199>1|K200>0)))) ]
2019-10-12 15:51:05,309 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,0)])
 f2:forall(K199:Int,K200:Int)[ Ch(K199,K200)&turn(p2)&K199>=0&K199<xlen()&K200>=0&K200<ylen()=>((( !(Ch(0,0)&(K199>0|K200>0)) ) => ( !(Ch(0,0)&(K199>0|K200>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! G0 >= 1&! (Ch(G0,1)&(K199>G0|K200>1))])&!(! (Ch(1,0)&(K199>1|K200>0)))) ]
2019-10-12 15:51:10,993 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&ylen() > G0&! Ch(G0,1)])
 f2:!(!Ch(0,0))=>(exists(K206:Int,K207:Int)[ (Ch(K206,K207)&turn(p1)&K206>=0&K206<xlen()&K207>=0&K207<ylen())&((( !(Ch(0,0)&(K206>0|K207>0)) ) => ( !(Ch(0,0)&(K206>0|K207>0))&(!turn(p1)) ))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K206>G0|K207>G1))&! (Ch(G1,0)&(K206>G1|K207>0))])&!((Ch(1,1)&(K206>1|K207>1)))) ])
2019-10-12 15:51:11,053 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&ylen() > G0&! Ch(G0,1)])
 f2:!(!Ch(0,0))=>(exists(K206:Int,K207:Int)[ (Ch(K206,K207)&turn(p1)&K206>=0&K206<xlen()&K207>=0&K207<ylen())&((( !(Ch(0,0)&(K206>0|K207>0)) ) => ( !(Ch(0,0)&(K206>0|K207>0))&(!turn(p1)) ))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K206>G0|K207>G1))&! (Ch(G1,0)&(K206>G1|K207>0))])&!((Ch(1,1)&(K206>1|K207>1)))) ])
2019-10-12 15:51:11,098 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,0)])&!(Ch(1,1))
 f2:forall(K203:Int,K204:Int)[ Ch(K203,K204)&turn(p2)&K203>=0&K203<xlen()&K204>=0&K204<ylen()=>((( !(Ch(0,0)&(K203>0|K204>0)) ) => ( !(Ch(0,0)&(K203>0|K204>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K205:Int)[ (ylen()=K205)&(G0>=0& K205 > G0&! (Ch(G0,1)&(K203>G0|K204>1)))] ])) ]
2019-10-12 15:51:11,138 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,0)])&!(Ch(1,1))
 f2:forall(K203:Int,K204:Int)[ Ch(K203,K204)&turn(p2)&K203>=0&K203<xlen()&K204>=0&K204<ylen()=>((( !(Ch(0,0)&(K203>0|K204>0)) ) => ( !(Ch(0,0)&(K203>0|K204>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K205:Int)[ (ylen()=K205)&(G0>=0& K205 > G0&! (Ch(G0,1)&(K203>G0|K204>1)))] ])) ]
2019-10-12 15:51:15,249 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&ylen() = G0&! turn(p1)])
 f2:!(!Ch(0,0))=>(exists(K210:Int,K211:Int)[ (Ch(K210,K211)&turn(p1)&K210>=0&K210<xlen()&K211>=0&K211<ylen())&((( !(Ch(0,0)&(K210>0|K211>0)) ) => ( !(Ch(0,0)&(K210>0|K211>0))&(!turn(p1)) ))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K210>G0|K211>G1))&! (Ch(G1,0)&(K210>G1|K211>0))])&!((Ch(1,1)&(K210>1|K211>1)))) ])
2019-10-12 15:51:15,290 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,0)])&!(Ch(1,1))
 f2:forall(K208:Int,K209:Int)[ Ch(K208,K209)&turn(p2)&K208>=0&K208<xlen()&K209>=0&K209<ylen()=>((( !(Ch(0,0)&(K208>0|K209>0)) ) => ( !(Ch(0,0)&(K208>0|K209>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(ylen()=G0)&! (!turn(p1))])) ]
2019-10-12 15:51:20,841 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:!(!Ch(0,0))=>(exists(K214:Int,K215:Int)[ (Ch(K214,K215)&turn(p1)&K214>=0&K214<xlen()&K215>=0&K215<ylen())&(( !(Ch(0,0)&(K214>0|K215>0)) ) => ( !(Ch(0,0)&(K214>0|K215>0))&(!turn(p1)) )) ])
2019-10-12 15:51:20,877 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:forall(K212:Int,K213:Int)[ Ch(K212,K213)&turn(p2)&K212>=0&K212<xlen()&K213>=0&K213<ylen()=>(( !(Ch(0,0)&(K212>0|K213>0)) ) => ( !(Ch(0,0)&(K212>0|K213>0))&(!turn(p1)) )) ]
2019-10-12 15:51:21,036 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&xlen() >= X1])
 f2:!(!Ch(0,0))=>(exists(K219:Int,K220:Int)[ (Ch(K219,K220)&turn(p1)&K219>=0&K219<xlen()&K220>=0&K220<ylen())&(( !(Ch(0,0)&(K219>0|K220>0)) ) => ( !(Ch(0,0)&(K219>0|K220>0))&(!turn(p1)) )) ])
2019-10-12 15:51:21,068 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:forall(K216:Int,K217:Int)[ Ch(K216,K217)&turn(p2)&K216>=0&K216<xlen()&K217>=0&K217<ylen()=>((( !(Ch(0,0)&(K216>0|K217>0)) ) => ( !(Ch(0,0)&(K216>0|K217>0))&(!turn(p1)) ))&!(exists(X1:Int)[ exists(K218:Int)[ (xlen()=K218)&(X1>=0& K218 >= X1)] ])) ]
2019-10-12 15:51:21,419 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&xlen() >= X1])
 f2:!(!Ch(0,0))=>(exists(K224:Int,K225:Int)[ (Ch(K224,K225)&turn(p1)&K224>=0&K224<xlen()&K225>=0&K225<ylen())&((( !(Ch(0,0)&(K224>0|K225>0)) ) => ( !(Ch(0,0)&(K224>0|K225>0))&(!turn(p1)) ))&!(exists(X1:Int)[ exists(K226:Int)[ (xlen()=K226)&(X1>=0& K226 > X1)] ])) ])
2019-10-12 15:51:21,449 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&xlen() > X1])
 f2:forall(K221:Int,K222:Int)[ Ch(K221,K222)&turn(p2)&K221>=0&K221<xlen()&K222>=0&K222<ylen()=>((( !(Ch(0,0)&(K221>0|K222>0)) ) => ( !(Ch(0,0)&(K221>0|K222>0))&(!turn(p1)) ))&!(exists(X1:Int)[ exists(K223:Int)[ (xlen()=K223)&(X1>=0& K223 >= X1)] ])) ]
2019-10-12 15:51:21,483 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:forall(K16:Int,K17:Int)[K16>=0&K16<xlen()&K17>=0&K17<ylen()=>Ch(K16,K17)]&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)
 f2:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&xlen() >= X1])
2019-10-12 15:51:22,365 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() >= G0&! Ch(0,1)])
 f2:!(!Ch(0,0))=>(exists(K230:Int,K231:Int)[ (Ch(K230,K231)&turn(p1)&K230>=0&K230<xlen()&K231>=0&K231<ylen())&((( !(Ch(0,0)&(K230>0|K231>0)) ) => ( !(Ch(0,0)&(K230>0|K231>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K232:Int)[ (xlen()=K232)&(G0>=0& K232 > G0&! (Ch(0,G0)&(K230>0|K231>G0)))] ])) ])
2019-10-12 15:51:22,413 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() >= G0&! Ch(0,1)])
 f2:!(!Ch(0,0))=>(exists(K230:Int,K231:Int)[ (Ch(K230,K231)&turn(p1)&K230>=0&K230<xlen()&K231>=0&K231<ylen())&((( !(Ch(0,0)&(K230>0|K231>0)) ) => ( !(Ch(0,0)&(K230>0|K231>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K232:Int)[ (xlen()=K232)&(G0>=0& K232 > G0&! (Ch(0,G0)&(K230>0|K231>G0)))] ])) ])
2019-10-12 15:51:22,454 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() > G0&! Ch(0,G0)])
 f2:forall(K227:Int,K228:Int)[ Ch(K227,K228)&turn(p2)&K227>=0&K227<xlen()&K228>=0&K228<ylen()=>((( !(Ch(0,0)&(K227>0|K228>0)) ) => ( !(Ch(0,0)&(K227>0|K228>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K229:Int)[ (xlen()=K229)&(G0>=0& K229 >= G0&! (Ch(0,1)&(K227>0|K228>1)))] ])) ]
2019-10-12 15:51:23,114 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() >= G0&! Ch(0,1)])
 f2:!(!Ch(0,0))=>(exists(K236:Int,K237:Int)[ (Ch(K236,K237)&turn(p1)&K236>=0&K236<xlen()&K237>=0&K237<ylen())&((( !(Ch(0,0)&(K236>0|K237>0)) ) => ( !(Ch(0,0)&(K236>0|K237>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 >= 1&(Ch(1,G0)&(K236>1|K237>G0))])) ])
2019-10-12 15:51:23,155 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 >= 1&Ch(1,G0)])
 f2:forall(K233:Int,K234:Int)[ Ch(K233,K234)&turn(p2)&K233>=0&K233<xlen()&K234>=0&K234<ylen()=>((( !(Ch(0,0)&(K233>0|K234>0)) ) => ( !(Ch(0,0)&(K233>0|K234>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K235:Int)[ (xlen()=K235)&(G0>=0& K235 >= G0&! (Ch(0,1)&(K233>0|K234>1)))] ])) ]
2019-10-12 15:51:23,197 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 >= 1&Ch(1,G0)])
 f2:forall(K233:Int,K234:Int)[ Ch(K233,K234)&turn(p2)&K233>=0&K233<xlen()&K234>=0&K234<ylen()=>((( !(Ch(0,0)&(K233>0|K234>0)) ) => ( !(Ch(0,0)&(K233>0|K234>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K235:Int)[ (xlen()=K235)&(G0>=0& K235 >= G0&! (Ch(0,1)&(K233>0|K234>1)))] ])) ]
2019-10-12 15:51:25,171 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() >= G0&! Ch(0,1)])&!(! Ch(1,1))
 f2:!(!Ch(0,0))=>(exists(K241:Int,K242:Int)[ (Ch(K241,K242)&turn(p1)&K241>=0&K241<xlen()&K242>=0&K242<ylen())&((( !(Ch(0,0)&(K241>0|K242>0)) ) => ( !(Ch(0,0)&(K241>0|K242>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 >= 1&(Ch(1,G0)&(K241>1|K242>G0))])&!(exists(G0:Int)[G0>=0&(Ch(G0,0)&(K241>G0|K242>0))&! (Ch(0,G0)&(K241>0|K242>G0))])) ])
2019-10-12 15:51:28,183 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() >= G0&! Ch(0,1)])&!(! Ch(1,1))
 f2:!(!Ch(0,0))=>(exists(K241:Int,K242:Int)[ (Ch(K241,K242)&turn(p1)&K241>=0&K241<xlen()&K242>=0&K242<ylen())&((( !(Ch(0,0)&(K241>0|K242>0)) ) => ( !(Ch(0,0)&(K241>0|K242>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 >= 1&(Ch(1,G0)&(K241>1|K242>G0))])&!(exists(G0:Int)[G0>=0&(Ch(G0,0)&(K241>G0|K242>0))&! (Ch(0,G0)&(K241>0|K242>G0))])) ])
2019-10-12 15:51:28,230 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 >= 1&Ch(1,G0)])&!(exists(G0:Int)[G0>=0&Ch(G0,0)&! Ch(0,G0)])
 f2:forall(K238:Int,K239:Int)[ Ch(K238,K239)&turn(p2)&K238>=0&K238<xlen()&K239>=0&K239<ylen()=>((( !(Ch(0,0)&(K238>0|K239>0)) ) => ( !(Ch(0,0)&(K238>0|K239>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K240:Int)[ (xlen()=K240)&(G0>=0& K240 >= G0&! (Ch(0,1)&(K238>0|K239>1)))] ])&!(! (Ch(1,1)&(K238>1|K239>1)))) ]
2019-10-12 15:51:32,891 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() >= G0&! Ch(0,1)])&!(! Ch(1,1))&!(! Ch(1,0))
 f2:!(!Ch(0,0))=>(exists(K246:Int,K247:Int)[ (Ch(K246,K247)&turn(p1)&K246>=0&K246<xlen()&K247>=0&K247<ylen())&((( !(Ch(0,0)&(K246>0|K247>0)) ) => ( !(Ch(0,0)&(K246>0|K247>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 >= 1&(Ch(1,G0)&(K246>1|K247>G0))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K246>G0|K247>G1))&! (Ch(G1,G0)&(K246>G1|K247>G0))])) ])
2019-10-12 15:51:33,063 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() >= G0&! Ch(0,1)])&!(! Ch(1,1))&!(! Ch(1,0))
 f2:!(!Ch(0,0))=>(exists(K246:Int,K247:Int)[ (Ch(K246,K247)&turn(p1)&K246>=0&K246<xlen()&K247>=0&K247<ylen())&((( !(Ch(0,0)&(K246>0|K247>0)) ) => ( !(Ch(0,0)&(K246>0|K247>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 >= 1&(Ch(1,G0)&(K246>1|K247>G0))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K246>G0|K247>G1))&! (Ch(G1,G0)&(K246>G1|K247>G0))])) ])
2019-10-12 15:51:33,131 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 >= 1&Ch(1,G0)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,G0)])
 f2:forall(K243:Int,K244:Int)[ Ch(K243,K244)&turn(p2)&K243>=0&K243<xlen()&K244>=0&K244<ylen()=>((( !(Ch(0,0)&(K243>0|K244>0)) ) => ( !(Ch(0,0)&(K243>0|K244>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K245:Int)[ (xlen()=K245)&(G0>=0& K245 >= G0&! (Ch(0,1)&(K243>0|K244>1)))] ])&!(! (Ch(1,1)&(K243>1|K244>1)))&!(! (Ch(1,0)&(K243>1|K244>0)))) ]
2019-10-12 15:51:33,986 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() >= G0&turn(p2)])&!(exists(G0:Int)[G0>=0&xlen() >= G0&turn(p2)])&!(exists(G0:Int)[G0>=0&Ch(1,G0)&! Ch(G0,0)])
 f2:!(!Ch(0,0))=>(exists(K252:Int,K253:Int)[ (Ch(K252,K253)&turn(p1)&K252>=0&K252<xlen()&K253>=0&K253<ylen())&((( !(Ch(0,0)&(K252>0|K253>0)) ) => ( !(Ch(0,0)&(K252>0|K253>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 >= 1&(Ch(1,G0)&(K252>1|K253>G0))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K252>G0|K253>G1))&! (Ch(G1,G0)&(K252>G1|K253>G0))])) ])
2019-10-12 15:51:34,034 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 >= 1&Ch(1,G0)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,G0)])
 f2:forall(K248:Int,K249:Int)[ Ch(K248,K249)&turn(p2)&K248>=0&K248<xlen()&K249>=0&K249<ylen()=>((( !(Ch(0,0)&(K248>0|K249>0)) ) => ( !(Ch(0,0)&(K248>0|K249>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K250:Int)[ (xlen()=K250)&(G0>=0& K250 >= G0&(!turn(p2)))] ])&!(exists(G0:Int)[ exists(K251:Int)[ (xlen()=K251)&(G0>=0& K251 >= G0&(!turn(p2)))] ])&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K248>1|K249>G0))&! (Ch(G0,0)&(K248>G0|K249>0))])) ]
2019-10-12 15:51:35,829 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:!(!Ch(0,0))=>(exists(K256:Int,K257:Int)[ (Ch(K256,K257)&turn(p1)&K256>=0&K256<xlen()&K257>=0&K257<ylen())&(( !(Ch(0,0)&(K256>0|K257>0)) ) => ( !(Ch(0,0)&(K256>0|K257>0))&(!turn(p1)) )) ])
2019-10-12 15:51:35,869 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:forall(K254:Int,K255:Int)[ Ch(K254,K255)&turn(p2)&K254>=0&K254<xlen()&K255>=0&K255<ylen()=>(( !(Ch(0,0)&(K254>0|K255>0)) ) => ( !(Ch(0,0)&(K254>0|K255>0))&(!turn(p1)) )) ]
2019-10-12 15:51:36,036 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&ylen() >= X1])
 f2:!(!Ch(0,0))=>(exists(K261:Int,K262:Int)[ (Ch(K261,K262)&turn(p1)&K261>=0&K261<xlen()&K262>=0&K262<ylen())&(( !(Ch(0,0)&(K261>0|K262>0)) ) => ( !(Ch(0,0)&(K261>0|K262>0))&(!turn(p1)) )) ])
2019-10-12 15:51:36,065 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:forall(K258:Int,K259:Int)[ Ch(K258,K259)&turn(p2)&K258>=0&K258<xlen()&K259>=0&K259<ylen()=>((( !(Ch(0,0)&(K258>0|K259>0)) ) => ( !(Ch(0,0)&(K258>0|K259>0))&(!turn(p1)) ))&!(exists(X1:Int)[ exists(K260:Int)[ (ylen()=K260)&(X1>=0& K260 >= X1)] ])) ]
2019-10-12 15:51:36,465 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&ylen() >= X1])
 f2:!(!Ch(0,0))=>(exists(K266:Int,K267:Int)[ (Ch(K266,K267)&turn(p1)&K266>=0&K266<xlen()&K267>=0&K267<ylen())&((( !(Ch(0,0)&(K266>0|K267>0)) ) => ( !(Ch(0,0)&(K266>0|K267>0))&(!turn(p1)) ))&!(exists(X1:Int)[ exists(K268:Int)[ (xlen()=K268)&(X1>=0& K268 >= X1)] ])) ])
2019-10-12 15:51:36,503 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&xlen() >= X1])
 f2:forall(K263:Int,K264:Int)[ Ch(K263,K264)&turn(p2)&K263>=0&K263<xlen()&K264>=0&K264<ylen()=>((( !(Ch(0,0)&(K263>0|K264>0)) ) => ( !(Ch(0,0)&(K263>0|K264>0))&(!turn(p1)) ))&!(exists(X1:Int)[ exists(K265:Int)[ (ylen()=K265)&(X1>=0& K265 >= X1)] ])) ]
2019-10-12 15:51:36,540 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:forall(K16:Int,K17:Int)[K16>=0&K16<xlen()&K17>=0&K17<ylen()=>Ch(K16,K17)]&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)
 f2:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&ylen() >= X1])
2019-10-12 15:51:37,430 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 1&! Ch(0,G0)])
 f2:!(!Ch(0,0))=>(exists(K271:Int,K272:Int)[ (Ch(K271,K272)&turn(p1)&K271>=0&K271<xlen()&K272>=0&K272<ylen())&((( !(Ch(0,0)&(K271>0|K272>0)) ) => ( !(Ch(0,0)&(K271>0|K272>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 0&! (Ch(G0,1)&(K271>G0|K272>1))])) ])
2019-10-12 15:51:37,484 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 1&! Ch(0,G0)])
 f2:!(!Ch(0,0))=>(exists(K271:Int,K272:Int)[ (Ch(K271,K272)&turn(p1)&K271>=0&K271<xlen()&K272>=0&K272<ylen())&((( !(Ch(0,0)&(K271>0|K272>0)) ) => ( !(Ch(0,0)&(K271>0|K272>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 0&! (Ch(G0,1)&(K271>G0|K272>1))])) ])
2019-10-12 15:51:37,522 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 0&! Ch(G0,1)])
 f2:forall(K269:Int,K270:Int)[ Ch(K269,K270)&turn(p2)&K269>=0&K269<xlen()&K270>=0&K270<ylen()=>((( !(Ch(0,0)&(K269>0|K270>0)) ) => ( !(Ch(0,0)&(K269>0|K270>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 1&! (Ch(0,G0)&(K269>0|K270>G0))])) ]
2019-10-12 15:51:38,148 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 1&! Ch(0,G0)])
 f2:!(!Ch(0,0))=>(exists(K275:Int,K276:Int)[ (Ch(K275,K276)&turn(p1)&K275>=0&K275<xlen()&K276>=0&K276<ylen())&((( !(Ch(0,0)&(K275>0|K276>0)) ) => ( !(Ch(0,0)&(K275>0|K276>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! G0 = 0&(Ch(G0,1)&(K275>G0|K276>1))])) ])
2019-10-12 15:51:38,200 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 1&! Ch(0,G0)])
 f2:!(!Ch(0,0))=>(exists(K275:Int,K276:Int)[ (Ch(K275,K276)&turn(p1)&K275>=0&K275<xlen()&K276>=0&K276<ylen())&((( !(Ch(0,0)&(K275>0|K276>0)) ) => ( !(Ch(0,0)&(K275>0|K276>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! G0 = 0&(Ch(G0,1)&(K275>G0|K276>1))])) ])
2019-10-12 15:51:38,245 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 = 0&Ch(G0,1)])
 f2:forall(K273:Int,K274:Int)[ Ch(K273,K274)&turn(p2)&K273>=0&K273<xlen()&K274>=0&K274<ylen()=>((( !(Ch(0,0)&(K273>0|K274>0)) ) => ( !(Ch(0,0)&(K273>0|K274>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 1&! (Ch(0,G0)&(K273>0|K274>G0))])) ]
2019-10-12 15:51:40,207 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 1&! Ch(G0,G0)])
 f2:!(!Ch(0,0))=>(exists(K279:Int,K280:Int)[ (Ch(K279,K280)&turn(p1)&K279>=0&K279<xlen()&K280>=0&K280<ylen())&((( !(Ch(0,0)&(K279>0|K280>0)) ) => ( !(Ch(0,0)&(K279>0|K280>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! G0 = 0&(Ch(G0,1)&(K279>G0|K280>1))])&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K279>0|K280>G0))&! (Ch(G0,0)&(K279>G0|K280>0))])) ])
2019-10-12 15:51:40,256 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 1&! Ch(G0,G0)])
 f2:!(!Ch(0,0))=>(exists(K279:Int,K280:Int)[ (Ch(K279,K280)&turn(p1)&K279>=0&K279<xlen()&K280>=0&K280<ylen())&((( !(Ch(0,0)&(K279>0|K280>0)) ) => ( !(Ch(0,0)&(K279>0|K280>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! G0 = 0&(Ch(G0,1)&(K279>G0|K280>1))])&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K279>0|K280>G0))&! (Ch(G0,0)&(K279>G0|K280>0))])) ])
2019-10-12 15:51:40,294 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 = 0&Ch(G0,1)])&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(G0,0)])
 f2:forall(K277:Int,K278:Int)[ Ch(K277,K278)&turn(p2)&K277>=0&K277<xlen()&K278>=0&K278<ylen()=>((( !(Ch(0,0)&(K277>0|K278>0)) ) => ( !(Ch(0,0)&(K277>0|K278>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 1&! (Ch(G0,G0)&(K277>G0|K278>G0))])) ]
2019-10-12 15:51:42,783 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&ylen() >= G0&! turn(p1)])
 f2:!(!Ch(0,0))=>(exists(K284:Int,K285:Int)[ (Ch(K284,K285)&turn(p1)&K284>=0&K284<xlen()&K285>=0&K285<ylen())&((( !(Ch(0,0)&(K284>0|K285>0)) ) => ( !(Ch(0,0)&(K284>0|K285>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! G0 = 0&(Ch(G0,1)&(K284>G0|K285>1))])&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K284>0|K285>G0))&! (Ch(G0,0)&(K284>G0|K285>0))])) ])
2019-10-12 15:51:42,823 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 = 0&Ch(G0,1)])&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(G0,0)])
 f2:forall(K281:Int,K282:Int)[ Ch(K281,K282)&turn(p2)&K281>=0&K281<xlen()&K282>=0&K282<ylen()=>((( !(Ch(0,0)&(K281>0|K282>0)) ) => ( !(Ch(0,0)&(K281>0|K282>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K283:Int)[ (ylen()=K283)&(G0>=0& K283 >= G0&! (!turn(p1)))] ])) ]
2019-10-12 15:51:46,464 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:!(!Ch(0,0))=>(exists(K288:Int,K289:Int)[ (Ch(K288,K289)&turn(p1)&K288>=0&K288<xlen()&K289>=0&K289<ylen())&(( !(Ch(0,0)&(K288>0|K289>0)) ) => ( !(Ch(0,0)&(K288>0|K289>0))&(!turn(p1)) )) ])
2019-10-12 15:51:46,497 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:forall(K286:Int,K287:Int)[ Ch(K286,K287)&turn(p2)&K286>=0&K286<xlen()&K287>=0&K287<ylen()=>(( !(Ch(0,0)&(K286>0|K287>0)) ) => ( !(Ch(0,0)&(K286>0|K287>0))&(!turn(p1)) )) ]
2019-10-12 15:51:46,649 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X0:_S1)[! turn(X0)])
 f2:!(!Ch(0,0))=>(exists(K292:Int,K293:Int)[ (Ch(K292,K293)&turn(p1)&K292>=0&K292<xlen()&K293>=0&K293<ylen())&(( !(Ch(0,0)&(K292>0|K293>0)) ) => ( !(Ch(0,0)&(K292>0|K293>0))&(!turn(p1)) )) ])
2019-10-12 15:51:46,677 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:forall(K290:Int,K291:Int)[ Ch(K290,K291)&turn(p2)&K290>=0&K290<xlen()&K291>=0&K291<ylen()=>((( !(Ch(0,0)&(K290>0|K291>0)) ) => ( !(Ch(0,0)&(K290>0|K291>0))&(!turn(p1)) ))&!(exists(X0:_S1)[! (!turn(X0))])) ]
2019-10-12 15:51:47,017 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X0:_S1)[! turn(X0)])
 f2:!(!Ch(0,0))=>(exists(K296:Int,K297:Int)[ (Ch(K296,K297)&turn(p1)&K296>=0&K296<xlen()&K297>=0&K297<ylen())&((( !(Ch(0,0)&(K296>0|K297>0)) ) => ( !(Ch(0,0)&(K296>0|K297>0))&(!turn(p1)) ))&!(exists(X1:Int)[ exists(K298:Int)[ (ylen()=K298)&(X1>=0& K298 > X1)] ])) ])
2019-10-12 15:51:47,045 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&ylen() > X1])
 f2:forall(K294:Int,K295:Int)[ Ch(K294,K295)&turn(p2)&K294>=0&K294<xlen()&K295>=0&K295<ylen()=>((( !(Ch(0,0)&(K294>0|K295>0)) ) => ( !(Ch(0,0)&(K294>0|K295>0))&(!turn(p1)) ))&!(exists(X0:_S1)[! (!turn(X0))])) ]
2019-10-12 15:51:47,072 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:forall(K16:Int,K17:Int)[K16>=0&K16<xlen()&K17>=0&K17<ylen()=>Ch(K16,K17)]&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)
 f2:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X0:_S1)[! turn(X0)])
2019-10-12 15:51:47,886 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:_S1)[! turn(G0)&! Ch(0,1)])
 f2:!(!Ch(0,0))=>(exists(K301:Int,K302:Int)[ (Ch(K301,K302)&turn(p1)&K301>=0&K301<xlen()&K302>=0&K302<ylen())&((( !(Ch(0,0)&(K301>0|K302>0)) ) => ( !(Ch(0,0)&(K301>0|K302>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K303:Int)[ (ylen()=K303)&(G0>=0& K303 > G0&! (Ch(0,G0)&(K301>0|K302>G0)))] ])) ])
2019-10-12 15:51:47,928 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&ylen() > G0&! Ch(0,G0)])
 f2:forall(K299:Int,K300:Int)[ Ch(K299,K300)&turn(p2)&K299>=0&K299<xlen()&K300>=0&K300<ylen()=>((( !(Ch(0,0)&(K299>0|K300>0)) ) => ( !(Ch(0,0)&(K299>0|K300>0))&(!turn(p1)) ))&!(exists(G0:_S1)[! (!turn(G0))&! (Ch(0,1)&(K299>0|K300>1))])) ]
2019-10-12 15:51:49,646 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:_S1)[! turn(G0)&! Ch(0,1)])&!(! Ch(1,1))
 f2:!(!Ch(0,0))=>(exists(K306:Int,K307:Int)[ (Ch(K306,K307)&turn(p1)&K306>=0&K306<xlen()&K307>=0&K307<ylen())&((( !(Ch(0,0)&(K306>0|K307>0)) ) => ( !(Ch(0,0)&(K306>0|K307>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K308:Int)[ (ylen()=K308)&(G0>=0& K308 > G0&! (Ch(0,G0)&(K306>0|K307>G0)))] ])&!((Ch(1,1)&(K306>1|K307>1)))) ])
2019-10-12 15:51:49,687 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&ylen() > G0&! Ch(0,G0)])&!(Ch(1,1))
 f2:forall(K304:Int,K305:Int)[ Ch(K304,K305)&turn(p2)&K304>=0&K304<xlen()&K305>=0&K305<ylen()=>((( !(Ch(0,0)&(K304>0|K305>0)) ) => ( !(Ch(0,0)&(K304>0|K305>0))&(!turn(p1)) ))&!(exists(G0:_S1)[! (!turn(G0))&! (Ch(0,1)&(K304>0|K305>1))])&!(! (Ch(1,1)&(K304>1|K305>1)))) ]
2019-10-12 15:51:51,594 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:_S1)[! turn(G0)&! Ch(0,1)])&!(! Ch(1,1))&!(! Ch(1,0))
 f2:!(!Ch(0,0))=>(exists(K311:Int,K312:Int)[ (Ch(K311,K312)&turn(p1)&K311>=0&K311<xlen()&K312>=0&K312<ylen())&((( !(Ch(0,0)&(K311>0|K312>0)) ) => ( !(Ch(0,0)&(K311>0|K312>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K313:Int)[ (ylen()=K313)&(G0>=0& K313 > G0&! (Ch(0,G0)&(K311>0|K312>G0)))] ])&!((Ch(1,1)&(K311>1|K312>1)))&!(! (Ch(1,0)&(K311>1|K312>0)))) ])
2019-10-12 15:51:51,638 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&ylen() > G0&! Ch(0,G0)])&!(Ch(1,1))&!(! Ch(1,0))
 f2:forall(K309:Int,K310:Int)[ Ch(K309,K310)&turn(p2)&K309>=0&K309<xlen()&K310>=0&K310<ylen()=>((( !(Ch(0,0)&(K309>0|K310>0)) ) => ( !(Ch(0,0)&(K309>0|K310>0))&(!turn(p1)) ))&!(exists(G0:_S1)[! (!turn(G0))&! (Ch(0,1)&(K309>0|K310>1))])&!(! (Ch(1,1)&(K309>1|K310>1)))&!(! (Ch(1,0)&(K309>1|K310>0)))) ]
2019-10-12 15:51:52,446 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:_S1)[! turn(G0)&turn(p2)])&!(exists(G0:_S1)[! turn(G0)&turn(p2)])&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(G0,0)])
 f2:!(!Ch(0,0))=>(exists(K316:Int,K317:Int)[ (Ch(K316,K317)&turn(p1)&K316>=0&K316<xlen()&K317>=0&K317<ylen())&((( !(Ch(0,0)&(K316>0|K317>0)) ) => ( !(Ch(0,0)&(K316>0|K317>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K318:Int)[ (ylen()=K318)&(G0>=0& K318 > G0&! (Ch(0,G0)&(K316>0|K317>G0)))] ])&!((Ch(1,1)&(K316>1|K317>1)))&!(! (Ch(1,0)&(K316>1|K317>0)))) ])
2019-10-12 15:51:52,490 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&ylen() > G0&! Ch(0,G0)])&!(Ch(1,1))&!(! Ch(1,0))
 f2:forall(K314:Int,K315:Int)[ Ch(K314,K315)&turn(p2)&K314>=0&K314<xlen()&K315>=0&K315<ylen()=>((( !(Ch(0,0)&(K314>0|K315>0)) ) => ( !(Ch(0,0)&(K314>0|K315>0))&(!turn(p1)) ))&!(exists(G0:_S1)[! (!turn(G0))&(!turn(p2))])&!(exists(G0:_S1)[! (!turn(G0))&(!turn(p2))])&!(exists(G0:Int)[G0>=0&(Ch(G0,1)&(K314>G0|K315>1))&! (Ch(G0,0)&(K314>G0|K315>0))])) ]
2019-10-12 15:51:52,554 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&ylen() > G0&! Ch(0,G0)])&!(Ch(1,1))&!(! Ch(1,0))
 f2:forall(K314:Int,K315:Int)[ Ch(K314,K315)&turn(p2)&K314>=0&K314<xlen()&K315>=0&K315<ylen()=>((( !(Ch(0,0)&(K314>0|K315>0)) ) => ( !(Ch(0,0)&(K314>0|K315>0))&(!turn(p1)) ))&!(exists(G0:_S1)[! (!turn(G0))&(!turn(p2))])&!(exists(G0:_S1)[! (!turn(G0))&(!turn(p2))])&!(exists(G0:Int)[G0>=0&(Ch(G0,1)&(K314>G0|K315>1))&! (Ch(G0,0)&(K314>G0|K315>0))])) ]
2019-10-12 15:51:52,586 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&ylen() > G0&! Ch(0,G0)])&!(Ch(1,1))&!(! Ch(1,0))
 f2:forall(K314:Int,K315:Int)[ Ch(K314,K315)&turn(p2)&K314>=0&K314<xlen()&K315>=0&K315<ylen()=>((( !(Ch(0,0)&(K314>0|K315>0)) ) => ( !(Ch(0,0)&(K314>0|K315>0))&(!turn(p1)) ))&!(exists(G0:_S1)[! (!turn(G0))&(!turn(p2))])&!(exists(G0:_S1)[! (!turn(G0))&(!turn(p2))])&!(exists(G0:Int)[G0>=0&(Ch(G0,1)&(K314>G0|K315>1))&! (Ch(G0,0)&(K314>G0|K315>0))])) ]
2019-10-12 15:51:58,984 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:_S1)[! turn(G0)&turn(p2)])&!(exists(G0:_S1)[! turn(G0)&turn(p2)])&!(exists(G0:Int)[G0>=0&Ch(G0,G0)&! Ch(G0,0)])
 f2:!(!Ch(0,0))=>(exists(K321:Int,K322:Int)[ (Ch(K321,K322)&turn(p1)&K321>=0&K321<xlen()&K322>=0&K322<ylen())&((( !(Ch(0,0)&(K321>0|K322>0)) ) => ( !(Ch(0,0)&(K321>0|K322>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K323:Int)[ (ylen()=K323)&(G0>=0& K323 > G0&! (Ch(0,G0)&(K321>0|K322>G0)))] ])&!((Ch(1,1)&(K321>1|K322>1)))&!(! (Ch(1,0)&(K321>1|K322>0)))) ])
2019-10-12 15:51:59,027 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&ylen() > G0&! Ch(0,G0)])&!(Ch(1,1))&!(! Ch(1,0))
 f2:forall(K319:Int,K320:Int)[ Ch(K319,K320)&turn(p2)&K319>=0&K319<xlen()&K320>=0&K320<ylen()=>((( !(Ch(0,0)&(K319>0|K320>0)) ) => ( !(Ch(0,0)&(K319>0|K320>0))&(!turn(p1)) ))&!(exists(G0:_S1)[! (!turn(G0))&(!turn(p2))])&!(exists(G0:_S1)[! (!turn(G0))&(!turn(p2))])&!(exists(G0:Int)[G0>=0&(Ch(G0,G0)&(K319>G0|K320>G0))&! (Ch(G0,0)&(K319>G0|K320>0))])) ]
2019-10-12 15:51:59,103 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&ylen() > G0&! Ch(0,G0)])&!(Ch(1,1))&!(! Ch(1,0))
 f2:forall(K319:Int,K320:Int)[ Ch(K319,K320)&turn(p2)&K319>=0&K319<xlen()&K320>=0&K320<ylen()=>((( !(Ch(0,0)&(K319>0|K320>0)) ) => ( !(Ch(0,0)&(K319>0|K320>0))&(!turn(p1)) ))&!(exists(G0:_S1)[! (!turn(G0))&(!turn(p2))])&!(exists(G0:_S1)[! (!turn(G0))&(!turn(p2))])&!(exists(G0:Int)[G0>=0&(Ch(G0,G0)&(K319>G0|K320>G0))&! (Ch(G0,0)&(K319>G0|K320>0))])) ]
2019-10-12 15:51:59,137 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&ylen() > G0&! Ch(0,G0)])&!(Ch(1,1))&!(! Ch(1,0))
 f2:forall(K319:Int,K320:Int)[ Ch(K319,K320)&turn(p2)&K319>=0&K319<xlen()&K320>=0&K320<ylen()=>((( !(Ch(0,0)&(K319>0|K320>0)) ) => ( !(Ch(0,0)&(K319>0|K320>0))&(!turn(p1)) ))&!(exists(G0:_S1)[! (!turn(G0))&(!turn(p2))])&!(exists(G0:_S1)[! (!turn(G0))&(!turn(p2))])&!(exists(G0:Int)[G0>=0&(Ch(G0,G0)&(K319>G0|K320>G0))&! (Ch(G0,0)&(K319>G0|K320>0))])) ]
2019-10-12 15:52:03,396 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:!(!Ch(0,0))=>(exists(K326:Int,K327:Int)[ (Ch(K326,K327)&turn(p1)&K326>=0&K326<xlen()&K327>=0&K327<ylen())&(( !(Ch(0,0)&(K326>0|K327>0)) ) => ( !(Ch(0,0)&(K326>0|K327>0))&(!turn(p1)) )) ])
2019-10-12 15:52:03,435 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:forall(K324:Int,K325:Int)[ Ch(K324,K325)&turn(p2)&K324>=0&K324<xlen()&K325>=0&K325<ylen()=>(( !(Ch(0,0)&(K324>0|K325>0)) ) => ( !(Ch(0,0)&(K324>0|K325>0))&(!turn(p1)) )) ]
2019-10-12 15:52:03,620 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&! xlen() = X1])
 f2:!(!Ch(0,0))=>(exists(K330:Int,K331:Int)[ (Ch(K330,K331)&turn(p1)&K330>=0&K330<xlen()&K331>=0&K331<ylen())&(( !(Ch(0,0)&(K330>0|K331>0)) ) => ( !(Ch(0,0)&(K330>0|K331>0))&(!turn(p1)) )) ])
2019-10-12 15:52:03,660 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:forall(K328:Int,K329:Int)[ Ch(K328,K329)&turn(p2)&K328>=0&K328<xlen()&K329>=0&K329<ylen()=>((( !(Ch(0,0)&(K328>0|K329>0)) ) => ( !(Ch(0,0)&(K328>0|K329>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&! (xlen()=X1)])) ]
2019-10-12 15:52:04,066 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&! xlen() = X1])
 f2:!(!Ch(0,0))=>(exists(K334:Int,K335:Int)[ (Ch(K334,K335)&turn(p1)&K334>=0&K334<xlen()&K335>=0&K335<ylen())&((( !(Ch(0,0)&(K334>0|K335>0)) ) => ( !(Ch(0,0)&(K334>0|K335>0))&(!turn(p1)) ))&!(exists(X1:Int)[ exists(K336:Int)[ (ylen()=K336)&(X1>=0& K336 >= X1)] ])) ])
2019-10-12 15:52:04,104 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&ylen() >= X1])
 f2:forall(K332:Int,K333:Int)[ Ch(K332,K333)&turn(p2)&K332>=0&K332<xlen()&K333>=0&K333<ylen()=>((( !(Ch(0,0)&(K332>0|K333>0)) ) => ( !(Ch(0,0)&(K332>0|K333>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&! (xlen()=X1)])) ]
2019-10-12 15:52:04,135 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:forall(K16:Int,K17:Int)[K16>=0&K16<xlen()&K17>=0&K17<ylen()=>Ch(K16,K17)]&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)
 f2:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&! xlen() = X1])
2019-10-12 15:52:05,090 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 0&! Ch(1,G0)])
 f2:!(!Ch(0,0))=>(exists(K339:Int,K340:Int)[ (Ch(K339,K340)&turn(p1)&K339>=0&K339<xlen()&K340>=0&K340<ylen())&((( !(Ch(0,0)&(K339>0|K340>0)) ) => ( !(Ch(0,0)&(K339>0|K340>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K341:Int)[ (ylen()=K341)&(G0>=0& K341 >= G0&! (Ch(0,1)&(K339>0|K340>1)))] ])) ])
2019-10-12 15:52:05,135 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&ylen() >= G0&! Ch(0,1)])
 f2:forall(K337:Int,K338:Int)[ Ch(K337,K338)&turn(p2)&K337>=0&K337<xlen()&K338>=0&K338<ylen()=>((( !(Ch(0,0)&(K337>0|K338>0)) ) => ( !(Ch(0,0)&(K337>0|K338>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 0&! (Ch(1,G0)&(K337>1|K338>G0))])) ]
2019-10-12 15:52:05,703 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! xlen() = G0&! turn(p1)])
 f2:!(!Ch(0,0))=>(exists(K344:Int,K345:Int)[ (Ch(K344,K345)&turn(p1)&K344>=0&K344<xlen()&K345>=0&K345<ylen())&((( !(Ch(0,0)&(K344>0|K345>0)) ) => ( !(Ch(0,0)&(K344>0|K345>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K346:Int)[ (ylen()=K346)&(G0>=0& K346 >= G0&! (Ch(0,1)&(K344>0|K345>1)))] ])) ])
2019-10-12 15:52:05,746 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&ylen() >= G0&! Ch(0,1)])
 f2:forall(K342:Int,K343:Int)[ Ch(K342,K343)&turn(p2)&K342>=0&K342<xlen()&K343>=0&K343<ylen()=>((( !(Ch(0,0)&(K342>0|K343>0)) ) => ( !(Ch(0,0)&(K342>0|K343>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! (xlen()=G0)&! (!turn(p1))])) ]
2019-10-12 15:52:07,333 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:!(!Ch(0,0))=>(exists(K349:Int,K350:Int)[ (Ch(K349,K350)&turn(p1)&K349>=0&K349<xlen()&K350>=0&K350<ylen())&(( !(Ch(0,0)&(K349>0|K350>0)) ) => ( !(Ch(0,0)&(K349>0|K350>0))&(!turn(p1)) )) ])
2019-10-12 15:52:07,377 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:forall(K347:Int,K348:Int)[ Ch(K347,K348)&turn(p2)&K347>=0&K347<xlen()&K348>=0&K348<ylen()=>(( !(Ch(0,0)&(K347>0|K348>0)) ) => ( !(Ch(0,0)&(K347>0|K348>0))&(!turn(p1)) )) ]
2019-10-12 15:52:07,558 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&! ylen() = X1])
 f2:!(!Ch(0,0))=>(exists(K353:Int,K354:Int)[ (Ch(K353,K354)&turn(p1)&K353>=0&K353<xlen()&K354>=0&K354<ylen())&(( !(Ch(0,0)&(K353>0|K354>0)) ) => ( !(Ch(0,0)&(K353>0|K354>0))&(!turn(p1)) )) ])
2019-10-12 15:52:07,593 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:forall(K351:Int,K352:Int)[ Ch(K351,K352)&turn(p2)&K351>=0&K351<xlen()&K352>=0&K352<ylen()=>((( !(Ch(0,0)&(K351>0|K352>0)) ) => ( !(Ch(0,0)&(K351>0|K352>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&! (ylen()=X1)])) ]
2019-10-12 15:52:08,013 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&! ylen() = X1])
 f2:!(!Ch(0,0))=>(exists(K357:Int,K358:Int)[ (Ch(K357,K358)&turn(p1)&K357>=0&K357<xlen()&K358>=0&K358<ylen())&((( !(Ch(0,0)&(K357>0|K358>0)) ) => ( !(Ch(0,0)&(K357>0|K358>0))&(!turn(p1)) ))&!(exists(X0:_S1)[! (!turn(X0))])) ])
2019-10-12 15:52:08,053 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X0:_S1)[! turn(X0)])
 f2:forall(K355:Int,K356:Int)[ Ch(K355,K356)&turn(p2)&K355>=0&K355<xlen()&K356>=0&K356<ylen()=>((( !(Ch(0,0)&(K355>0|K356>0)) ) => ( !(Ch(0,0)&(K355>0|K356>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&! (ylen()=X1)])) ]
2019-10-12 15:52:08,088 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:forall(K16:Int,K17:Int)[K16>=0&K16<xlen()&K17>=0&K17<ylen()=>Ch(K16,K17)]&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)
 f2:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&! ylen() = X1])
2019-10-12 15:52:09,011 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 > 1&! Ch(0,G0)])
 f2:!(!Ch(0,0))=>(exists(K361:Int,K362:Int)[ (Ch(K361,K362)&turn(p1)&K361>=0&K361<xlen()&K362>=0&K362<ylen())&((( !(Ch(0,0)&(K361>0|K362>0)) ) => ( !(Ch(0,0)&(K361>0|K362>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! G0 > 0&! (Ch(1,G0)&(K361>1|K362>G0))])) ])
2019-10-12 15:52:09,065 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 > 1&! Ch(0,G0)])
 f2:!(!Ch(0,0))=>(exists(K361:Int,K362:Int)[ (Ch(K361,K362)&turn(p1)&K361>=0&K361<xlen()&K362>=0&K362<ylen())&((( !(Ch(0,0)&(K361>0|K362>0)) ) => ( !(Ch(0,0)&(K361>0|K362>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! G0 > 0&! (Ch(1,G0)&(K361>1|K362>G0))])) ])
2019-10-12 15:52:09,113 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 > 0&! Ch(1,G0)])
 f2:forall(K359:Int,K360:Int)[ Ch(K359,K360)&turn(p2)&K359>=0&K359<xlen()&K360>=0&K360<ylen()=>((( !(Ch(0,0)&(K359>0|K360>0)) ) => ( !(Ch(0,0)&(K359>0|K360>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! G0 > 1&! (Ch(0,G0)&(K359>0|K360>G0))])) ]
2019-10-12 15:52:09,793 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 > 1&! Ch(0,G0)])
 f2:!(!Ch(0,0))=>(exists(K365:Int,K366:Int)[ (Ch(K365,K366)&turn(p1)&K365>=0&K365<xlen()&K366>=0&K366<ylen())&((( !(Ch(0,0)&(K365>0|K366>0)) ) => ( !(Ch(0,0)&(K365>0|K366>0))&(!turn(p1)) ))&!(exists(G0:_S1)[! (!turn(G0))&(Ch(1,1)&(K365>1|K366>1))])) ])
2019-10-12 15:52:09,846 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 > 1&! Ch(0,G0)])
 f2:!(!Ch(0,0))=>(exists(K365:Int,K366:Int)[ (Ch(K365,K366)&turn(p1)&K365>=0&K365<xlen()&K366>=0&K366<ylen())&((( !(Ch(0,0)&(K365>0|K366>0)) ) => ( !(Ch(0,0)&(K365>0|K366>0))&(!turn(p1)) ))&!(exists(G0:_S1)[! (!turn(G0))&(Ch(1,1)&(K365>1|K366>1))])) ])
2019-10-12 15:52:09,892 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:_S1)[! turn(G0)&Ch(1,1)])
 f2:forall(K363:Int,K364:Int)[ Ch(K363,K364)&turn(p2)&K363>=0&K363<xlen()&K364>=0&K364<ylen()=>((( !(Ch(0,0)&(K363>0|K364>0)) ) => ( !(Ch(0,0)&(K363>0|K364>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! G0 > 1&! (Ch(0,G0)&(K363>0|K364>G0))])) ]
2019-10-12 15:52:11,929 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 > 1&! Ch(G0,1)])
 f2:!(!Ch(0,0))=>(exists(K369:Int,K370:Int)[ (Ch(K369,K370)&turn(p1)&K369>=0&K369<xlen()&K370>=0&K370<ylen())&((( !(Ch(0,0)&(K369>0|K370>0)) ) => ( !(Ch(0,0)&(K369>0|K370>0))&(!turn(p1)) ))&!(exists(G0:_S1)[! (!turn(G0))&(Ch(1,1)&(K369>1|K370>1))])&!((Ch(0,1)&(K369>0|K370>1))&! (Ch(1,0)&(K369>1|K370>0)))) ])
2019-10-12 15:52:11,988 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 > 1&! Ch(G0,1)])
 f2:!(!Ch(0,0))=>(exists(K369:Int,K370:Int)[ (Ch(K369,K370)&turn(p1)&K369>=0&K369<xlen()&K370>=0&K370<ylen())&((( !(Ch(0,0)&(K369>0|K370>0)) ) => ( !(Ch(0,0)&(K369>0|K370>0))&(!turn(p1)) ))&!(exists(G0:_S1)[! (!turn(G0))&(Ch(1,1)&(K369>1|K370>1))])&!((Ch(0,1)&(K369>0|K370>1))&! (Ch(1,0)&(K369>1|K370>0)))) ])
2019-10-12 15:52:12,027 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:_S1)[! turn(G0)&Ch(1,1)])&!(Ch(0,1)&! Ch(1,0))
 f2:forall(K367:Int,K368:Int)[ Ch(K367,K368)&turn(p2)&K367>=0&K367<xlen()&K368>=0&K368<ylen()=>((( !(Ch(0,0)&(K367>0|K368>0)) ) => ( !(Ch(0,0)&(K367>0|K368>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! G0 > 1&! (Ch(G0,1)&(K367>G0|K368>1))])) ]
2019-10-12 15:52:14,770 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! ylen() = G0&turn(p2)])
 f2:!(!Ch(0,0))=>(exists(K373:Int,K374:Int)[ (Ch(K373,K374)&turn(p1)&K373>=0&K373<xlen()&K374>=0&K374<ylen())&((( !(Ch(0,0)&(K373>0|K374>0)) ) => ( !(Ch(0,0)&(K373>0|K374>0))&(!turn(p1)) ))&!(exists(G0:_S1)[! (!turn(G0))&(Ch(1,1)&(K373>1|K374>1))])&!((Ch(0,1)&(K373>0|K374>1))&! (Ch(1,0)&(K373>1|K374>0)))) ])
2019-10-12 15:52:14,813 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:_S1)[! turn(G0)&Ch(1,1)])&!(Ch(0,1)&! Ch(1,0))
 f2:forall(K371:Int,K372:Int)[ Ch(K371,K372)&turn(p2)&K371>=0&K371<xlen()&K372>=0&K372<ylen()=>((( !(Ch(0,0)&(K371>0|K372>0)) ) => ( !(Ch(0,0)&(K371>0|K372>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! (ylen()=G0)&(!turn(p2))])) ]
2019-10-12 15:52:20,657 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:!(!Ch(0,0))=>(exists(K377:Int,K378:Int)[ (Ch(K377,K378)&turn(p1)&K377>=0&K377<xlen()&K378>=0&K378<ylen())&(( !(Ch(0,0)&(K377>0|K378>0)) ) => ( !(Ch(0,0)&(K377>0|K378>0))&(!turn(p1)) )) ])
2019-10-12 15:52:20,708 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:forall(K375:Int,K376:Int)[ Ch(K375,K376)&turn(p2)&K375>=0&K375<xlen()&K376>=0&K376<ylen()=>(( !(Ch(0,0)&(K375>0|K376>0)) ) => ( !(Ch(0,0)&(K375>0|K376>0))&(!turn(p1)) )) ]
2019-10-12 15:52:20,903 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&! xlen() > X1])
 f2:!(!Ch(0,0))=>(exists(K382:Int,K383:Int)[ (Ch(K382,K383)&turn(p1)&K382>=0&K382<xlen()&K383>=0&K383<ylen())&(( !(Ch(0,0)&(K382>0|K383>0)) ) => ( !(Ch(0,0)&(K382>0|K383>0))&(!turn(p1)) )) ])
2019-10-12 15:52:20,936 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:forall(K379:Int,K380:Int)[ Ch(K379,K380)&turn(p2)&K379>=0&K379<xlen()&K380>=0&K380<ylen()=>((( !(Ch(0,0)&(K379>0|K380>0)) ) => ( !(Ch(0,0)&(K379>0|K380>0))&(!turn(p1)) ))&!(exists(X1:Int)[ exists(K381:Int)[ (xlen()=K381)&(X1>=0&! K381 > X1)] ])) ]
2019-10-12 15:52:21,361 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&! xlen() > X1])
 f2:!(!Ch(0,0))=>(exists(K387:Int,K388:Int)[ (Ch(K387,K388)&turn(p1)&K387>=0&K387<xlen()&K388>=0&K388<ylen())&((( !(Ch(0,0)&(K387>0|K388>0)) ) => ( !(Ch(0,0)&(K387>0|K388>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&! (xlen()=X1)])) ])
2019-10-12 15:52:21,393 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&! xlen() = X1])
 f2:forall(K384:Int,K385:Int)[ Ch(K384,K385)&turn(p2)&K384>=0&K384<xlen()&K385>=0&K385<ylen()=>((( !(Ch(0,0)&(K384>0|K385>0)) ) => ( !(Ch(0,0)&(K384>0|K385>0))&(!turn(p1)) ))&!(exists(X1:Int)[ exists(K386:Int)[ (xlen()=K386)&(X1>=0&! K386 > X1)] ])) ]
2019-10-12 15:52:21,424 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:forall(K16:Int,K17:Int)[K16>=0&K16<xlen()&K17>=0&K17<ylen()=>Ch(K16,K17)]&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)
 f2:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&! xlen() > X1])
2019-10-12 15:52:22,352 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() > G0&! Ch(G0,G0)])
 f2:!(!Ch(0,0))=>(exists(K392:Int,K393:Int)[ (Ch(K392,K393)&turn(p1)&K392>=0&K392<xlen()&K393>=0&K393<ylen())&((( !(Ch(0,0)&(K392>0|K393>0)) ) => ( !(Ch(0,0)&(K392>0|K393>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! G0 >= 1&! (Ch(G0,1)&(K392>G0|K393>1))])) ])
2019-10-12 15:52:22,402 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() > G0&! Ch(G0,G0)])
 f2:!(!Ch(0,0))=>(exists(K392:Int,K393:Int)[ (Ch(K392,K393)&turn(p1)&K392>=0&K392<xlen()&K393>=0&K393<ylen())&((( !(Ch(0,0)&(K392>0|K393>0)) ) => ( !(Ch(0,0)&(K392>0|K393>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! G0 >= 1&! (Ch(G0,1)&(K392>G0|K393>1))])) ])
2019-10-12 15:52:22,443 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 >= 1&! Ch(G0,1)])
 f2:forall(K389:Int,K390:Int)[ Ch(K389,K390)&turn(p2)&K389>=0&K389<xlen()&K390>=0&K390<ylen()=>((( !(Ch(0,0)&(K389>0|K390>0)) ) => ( !(Ch(0,0)&(K389>0|K390>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K391:Int)[ (xlen()=K391)&(G0>=0& K391 > G0&! (Ch(G0,G0)&(K389>G0|K390>G0)))] ])) ]
2019-10-12 15:52:22,491 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 >= 1&! Ch(G0,1)])
 f2:forall(K389:Int,K390:Int)[ Ch(K389,K390)&turn(p2)&K389>=0&K389<xlen()&K390>=0&K390<ylen()=>((( !(Ch(0,0)&(K389>0|K390>0)) ) => ( !(Ch(0,0)&(K389>0|K390>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K391:Int)[ (xlen()=K391)&(G0>=0& K391 > G0&! (Ch(G0,G0)&(K389>G0|K390>G0)))] ])) ]
2019-10-12 15:52:23,187 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() > G0&! Ch(G0,G0)])
 f2:!(!Ch(0,0))=>(exists(K397:Int,K398:Int)[ (Ch(K397,K398)&turn(p1)&K397>=0&K397<xlen()&K398>=0&K398<ylen())&((( !(Ch(0,0)&(K397>0|K398>0)) ) => ( !(Ch(0,0)&(K397>0|K398>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 0&(Ch(1,G0)&(K397>1|K398>G0))])) ])
2019-10-12 15:52:23,251 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() > G0&! Ch(G0,G0)])
 f2:!(!Ch(0,0))=>(exists(K397:Int,K398:Int)[ (Ch(K397,K398)&turn(p1)&K397>=0&K397<xlen()&K398>=0&K398<ylen())&((( !(Ch(0,0)&(K397>0|K398>0)) ) => ( !(Ch(0,0)&(K397>0|K398>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 0&(Ch(1,G0)&(K397>1|K398>G0))])) ])
2019-10-12 15:52:23,294 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 > 0&Ch(1,G0)])
 f2:forall(K394:Int,K395:Int)[ Ch(K394,K395)&turn(p2)&K394>=0&K394<xlen()&K395>=0&K395<ylen()=>((( !(Ch(0,0)&(K394>0|K395>0)) ) => ( !(Ch(0,0)&(K394>0|K395>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K396:Int)[ (xlen()=K396)&(G0>=0& K396 > G0&! (Ch(G0,G0)&(K394>G0|K395>G0)))] ])) ]
2019-10-12 15:52:23,343 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 > 0&Ch(1,G0)])
 f2:forall(K394:Int,K395:Int)[ Ch(K394,K395)&turn(p2)&K394>=0&K394<xlen()&K395>=0&K395<ylen()=>((( !(Ch(0,0)&(K394>0|K395>0)) ) => ( !(Ch(0,0)&(K394>0|K395>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K396:Int)[ (xlen()=K396)&(G0>=0& K396 > G0&! (Ch(G0,G0)&(K394>G0|K395>G0)))] ])) ]
2019-10-12 15:52:25,132 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() > G0&! Ch(G0,G0)])&!(! Ch(0,1))
 f2:!(!Ch(0,0))=>(exists(K402:Int,K403:Int)[ (Ch(K402,K403)&turn(p1)&K402>=0&K402<xlen()&K403>=0&K403<ylen())&((( !(Ch(0,0)&(K402>0|K403>0)) ) => ( !(Ch(0,0)&(K402>0|K403>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 0&(Ch(1,G0)&(K402>1|K403>G0))])&!((Ch(1,0)&(K402>1|K403>0))&! (Ch(0,1)&(K402>0|K403>1)))) ])
2019-10-12 15:52:25,184 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() > G0&! Ch(G0,G0)])&!(! Ch(0,1))
 f2:!(!Ch(0,0))=>(exists(K402:Int,K403:Int)[ (Ch(K402,K403)&turn(p1)&K402>=0&K402<xlen()&K403>=0&K403<ylen())&((( !(Ch(0,0)&(K402>0|K403>0)) ) => ( !(Ch(0,0)&(K402>0|K403>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 0&(Ch(1,G0)&(K402>1|K403>G0))])&!((Ch(1,0)&(K402>1|K403>0))&! (Ch(0,1)&(K402>0|K403>1)))) ])
2019-10-12 15:52:25,229 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 > 0&Ch(1,G0)])&!(Ch(1,0)&! Ch(0,1))
 f2:forall(K399:Int,K400:Int)[ Ch(K399,K400)&turn(p2)&K399>=0&K399<xlen()&K400>=0&K400<ylen()=>((( !(Ch(0,0)&(K399>0|K400>0)) ) => ( !(Ch(0,0)&(K399>0|K400>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K401:Int)[ (xlen()=K401)&(G0>=0& K401 > G0&! (Ch(G0,G0)&(K399>G0|K400>G0)))] ])&!(! (Ch(0,1)&(K399>0|K400>1)))) ]
2019-10-12 15:52:25,281 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 > 0&Ch(1,G0)])&!(Ch(1,0)&! Ch(0,1))
 f2:forall(K399:Int,K400:Int)[ Ch(K399,K400)&turn(p2)&K399>=0&K399<xlen()&K400>=0&K400<ylen()=>((( !(Ch(0,0)&(K399>0|K400>0)) ) => ( !(Ch(0,0)&(K399>0|K400>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K401:Int)[ (xlen()=K401)&(G0>=0& K401 > G0&! (Ch(G0,G0)&(K399>G0|K400>G0)))] ])&!(! (Ch(0,1)&(K399>0|K400>1)))) ]
2019-10-12 15:52:28,726 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() > G0&! Ch(G0,G0)])&!(! Ch(0,1))&!(! Ch(1,0))
 f2:!(!Ch(0,0))=>(exists(K407:Int,K408:Int)[ (Ch(K407,K408)&turn(p1)&K407>=0&K407<xlen()&K408>=0&K408<ylen())&((( !(Ch(0,0)&(K407>0|K408>0)) ) => ( !(Ch(0,0)&(K407>0|K408>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 0&(Ch(1,G0)&(K407>1|K408>G0))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K407>G0|K408>G1))&! (Ch(G1,G0)&(K407>G1|K408>G0))])) ])
2019-10-12 15:52:28,949 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() > G0&! Ch(G0,G0)])&!(! Ch(0,1))&!(! Ch(1,0))
 f2:!(!Ch(0,0))=>(exists(K407:Int,K408:Int)[ (Ch(K407,K408)&turn(p1)&K407>=0&K407<xlen()&K408>=0&K408<ylen())&((( !(Ch(0,0)&(K407>0|K408>0)) ) => ( !(Ch(0,0)&(K407>0|K408>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 0&(Ch(1,G0)&(K407>1|K408>G0))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K407>G0|K408>G1))&! (Ch(G1,G0)&(K407>G1|K408>G0))])) ])
2019-10-12 15:52:28,991 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 > 0&Ch(1,G0)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,G0)])
 f2:forall(K404:Int,K405:Int)[ Ch(K404,K405)&turn(p2)&K404>=0&K404<xlen()&K405>=0&K405<ylen()=>((( !(Ch(0,0)&(K404>0|K405>0)) ) => ( !(Ch(0,0)&(K404>0|K405>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K406:Int)[ (xlen()=K406)&(G0>=0& K406 > G0&! (Ch(G0,G0)&(K404>G0|K405>G0)))] ])&!(! (Ch(0,1)&(K404>0|K405>1)))&!(! (Ch(1,0)&(K404>1|K405>0)))) ]
2019-10-12 15:52:29,830 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(1,G0)])&!(Ch(1,1)&! Ch(0,1))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(1,G0)])
 f2:!(!Ch(0,0))=>(exists(K411:Int,K412:Int)[ (Ch(K411,K412)&turn(p1)&K411>=0&K411<xlen()&K412>=0&K412<ylen())&((( !(Ch(0,0)&(K411>0|K412>0)) ) => ( !(Ch(0,0)&(K411>0|K412>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 0&(Ch(1,G0)&(K411>1|K412>G0))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K411>G0|K412>G1))&! (Ch(G1,G0)&(K411>G1|K412>G0))])) ])
2019-10-12 15:52:29,883 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 > 0&Ch(1,G0)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,G0)])
 f2:forall(K409:Int,K410:Int)[ Ch(K409,K410)&turn(p2)&K409>=0&K409<xlen()&K410>=0&K410<ylen()=>((( !(Ch(0,0)&(K409>0|K410>0)) ) => ( !(Ch(0,0)&(K409>0|K410>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K409>0|K410>G0))&! (Ch(1,G0)&(K409>1|K410>G0))])&!((Ch(1,1)&(K409>1|K410>1))&! (Ch(0,1)&(K409>0|K410>1)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K409>0|K410>G0))&! (Ch(1,G0)&(K409>1|K410>G0))])) ]
2019-10-12 15:52:30,459 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(Ch(1,1)&! Ch(0,1))&!(exists(G0:Int)[G0>=0&! xlen() > G0&! turn(p1)])&!(Ch(1,1)&! Ch(1,0))
 f2:!(!Ch(0,0))=>(exists(K416:Int,K417:Int)[ (Ch(K416,K417)&turn(p1)&K416>=0&K416<xlen()&K417>=0&K417<ylen())&((( !(Ch(0,0)&(K416>0|K417>0)) ) => ( !(Ch(0,0)&(K416>0|K417>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 0&(Ch(1,G0)&(K416>1|K417>G0))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K416>G0|K417>G1))&! (Ch(G1,G0)&(K416>G1|K417>G0))])) ])
2019-10-12 15:52:30,505 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 > 0&Ch(1,G0)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,G0)])
 f2:forall(K413:Int,K414:Int)[ Ch(K413,K414)&turn(p2)&K413>=0&K413<xlen()&K414>=0&K414<ylen()=>((( !(Ch(0,0)&(K413>0|K414>0)) ) => ( !(Ch(0,0)&(K413>0|K414>0))&(!turn(p1)) ))&!((Ch(1,1)&(K413>1|K414>1))&! (Ch(0,1)&(K413>0|K414>1)))&!(exists(G0:Int)[ exists(K415:Int)[ (xlen()=K415)&(G0>=0&! K415 > G0&! (!turn(p1)))] ])&!((Ch(1,1)&(K413>1|K414>1))&! (Ch(1,0)&(K413>1|K414>0)))) ]
2019-10-12 15:52:32,257 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:!(!Ch(0,0))=>(exists(K420:Int,K421:Int)[ (Ch(K420,K421)&turn(p1)&K420>=0&K420<xlen()&K421>=0&K421<ylen())&(( !(Ch(0,0)&(K420>0|K421>0)) ) => ( !(Ch(0,0)&(K420>0|K421>0))&(!turn(p1)) )) ])
2019-10-12 15:52:32,299 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:forall(K418:Int,K419:Int)[ Ch(K418,K419)&turn(p2)&K418>=0&K418<xlen()&K419>=0&K419<ylen()=>(( !(Ch(0,0)&(K418>0|K419>0)) ) => ( !(Ch(0,0)&(K418>0|K419>0))&(!turn(p1)) )) ]
2019-10-12 15:52:32,477 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&! ylen() > X1])
 f2:!(!Ch(0,0))=>(exists(K425:Int,K426:Int)[ (Ch(K425,K426)&turn(p1)&K425>=0&K425<xlen()&K426>=0&K426<ylen())&(( !(Ch(0,0)&(K425>0|K426>0)) ) => ( !(Ch(0,0)&(K425>0|K426>0))&(!turn(p1)) )) ])
2019-10-12 15:52:32,507 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:forall(K422:Int,K423:Int)[ Ch(K422,K423)&turn(p2)&K422>=0&K422<xlen()&K423>=0&K423<ylen()=>((( !(Ch(0,0)&(K422>0|K423>0)) ) => ( !(Ch(0,0)&(K422>0|K423>0))&(!turn(p1)) ))&!(exists(X1:Int)[ exists(K424:Int)[ (ylen()=K424)&(X1>=0&! K424 > X1)] ])) ]
2019-10-12 15:52:32,889 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&! ylen() > X1])
 f2:!(!Ch(0,0))=>(exists(K430:Int,K431:Int)[ (Ch(K430,K431)&turn(p1)&K430>=0&K430<xlen()&K431>=0&K431<ylen())&((( !(Ch(0,0)&(K430>0|K431>0)) ) => ( !(Ch(0,0)&(K430>0|K431>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&! (ylen()=X1)])) ])
2019-10-12 15:52:32,922 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&! ylen() = X1])
 f2:forall(K427:Int,K428:Int)[ Ch(K427,K428)&turn(p2)&K427>=0&K427<xlen()&K428>=0&K428<ylen()=>((( !(Ch(0,0)&(K427>0|K428>0)) ) => ( !(Ch(0,0)&(K427>0|K428>0))&(!turn(p1)) ))&!(exists(X1:Int)[ exists(K429:Int)[ (ylen()=K429)&(X1>=0&! K429 > X1)] ])) ]
2019-10-12 15:52:32,951 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:forall(K16:Int,K17:Int)[K16>=0&K16<xlen()&K17>=0&K17<ylen()=>Ch(K16,K17)]&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)
 f2:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&! ylen() > X1])
2019-10-12 15:52:33,790 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 > 0&! Ch(G0,1)])
 f2:!(!Ch(0,0))=>(exists(K434:Int,K435:Int)[ (Ch(K434,K435)&turn(p1)&K434>=0&K434<xlen()&K435>=0&K435<ylen())&((( !(Ch(0,0)&(K434>0|K435>0)) ) => ( !(Ch(0,0)&(K434>0|K435>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! G0 > 1&! (Ch(0,G0)&(K434>0|K435>G0))])) ])
2019-10-12 15:52:33,843 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 > 1&! Ch(0,G0)])
 f2:forall(K432:Int,K433:Int)[ Ch(K432,K433)&turn(p2)&K432>=0&K432<xlen()&K433>=0&K433<ylen()=>((( !(Ch(0,0)&(K432>0|K433>0)) ) => ( !(Ch(0,0)&(K432>0|K433>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! G0 > 0&! (Ch(G0,1)&(K432>G0|K433>1))])) ]
2019-10-12 15:52:34,465 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 > 0&! Ch(G0,1)])
 f2:!(!Ch(0,0))=>(exists(K438:Int,K439:Int)[ (Ch(K438,K439)&turn(p1)&K438>=0&K438<xlen()&K439>=0&K439<ylen())&((( !(Ch(0,0)&(K438>0|K439>0)) ) => ( !(Ch(0,0)&(K438>0|K439>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 1&(Ch(G0,1)&(K438>G0|K439>1))])) ])
2019-10-12 15:52:34,507 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 1&Ch(G0,1)])
 f2:forall(K436:Int,K437:Int)[ Ch(K436,K437)&turn(p2)&K436>=0&K436<xlen()&K437>=0&K437<ylen()=>((( !(Ch(0,0)&(K436>0|K437>0)) ) => ( !(Ch(0,0)&(K436>0|K437>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! G0 > 0&! (Ch(G0,1)&(K436>G0|K437>1))])) ]
2019-10-12 15:52:36,447 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 > 0&! Ch(G0,1)])&!(! Ch(1,1))
 f2:!(!Ch(0,0))=>(exists(K442:Int,K443:Int)[ (Ch(K442,K443)&turn(p1)&K442>=0&K442<xlen()&K443>=0&K443<ylen())&((( !(Ch(0,0)&(K442>0|K443>0)) ) => ( !(Ch(0,0)&(K442>0|K443>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 1&(Ch(G0,1)&(K442>G0|K443>1))])&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K442>0|K443>G0))&! (Ch(G0,0)&(K442>G0|K443>0))])) ])
2019-10-12 15:52:36,494 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 1&Ch(G0,1)])&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(G0,0)])
 f2:forall(K440:Int,K441:Int)[ Ch(K440,K441)&turn(p2)&K440>=0&K440<xlen()&K441>=0&K441<ylen()=>((( !(Ch(0,0)&(K440>0|K441>0)) ) => ( !(Ch(0,0)&(K440>0|K441>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! G0 > 0&! (Ch(G0,1)&(K440>G0|K441>1))])&!(! (Ch(1,1)&(K440>1|K441>1)))) ]
2019-10-12 15:52:36,534 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 1&Ch(G0,1)])&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(G0,0)])
 f2:forall(K440:Int,K441:Int)[ Ch(K440,K441)&turn(p2)&K440>=0&K440<xlen()&K441>=0&K441<ylen()=>((( !(Ch(0,0)&(K440>0|K441>0)) ) => ( !(Ch(0,0)&(K440>0|K441>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! G0 > 0&! (Ch(G0,1)&(K440>G0|K441>1))])&!(! (Ch(1,1)&(K440>1|K441>1)))) ]
2019-10-12 15:52:41,041 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&ylen() > G0&! Ch(G0,0)])
 f2:!(!Ch(0,0))=>(exists(K447:Int,K448:Int)[ (Ch(K447,K448)&turn(p1)&K447>=0&K447<xlen()&K448>=0&K448<ylen())&((( !(Ch(0,0)&(K447>0|K448>0)) ) => ( !(Ch(0,0)&(K447>0|K448>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 1&(Ch(G0,1)&(K447>G0|K448>1))])&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K447>0|K448>G0))&! (Ch(G0,0)&(K447>G0|K448>0))])&!(exists(G0:Int)[G0>=0&(Ch(G0,0)&(K447>G0|K448>0))&! (Ch(0,G0)&(K447>0|K448>G0))])) ])
2019-10-12 15:52:41,108 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&ylen() > G0&! Ch(G0,0)])
 f2:!(!Ch(0,0))=>(exists(K447:Int,K448:Int)[ (Ch(K447,K448)&turn(p1)&K447>=0&K447<xlen()&K448>=0&K448<ylen())&((( !(Ch(0,0)&(K447>0|K448>0)) ) => ( !(Ch(0,0)&(K447>0|K448>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 1&(Ch(G0,1)&(K447>G0|K448>1))])&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K447>0|K448>G0))&! (Ch(G0,0)&(K447>G0|K448>0))])&!(exists(G0:Int)[G0>=0&(Ch(G0,0)&(K447>G0|K448>0))&! (Ch(0,G0)&(K447>0|K448>G0))])) ])
2019-10-12 15:52:41,176 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 1&Ch(G0,1)])&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(G0,0)])&!(exists(G0:Int)[G0>=0&Ch(G0,0)&! Ch(0,G0)])
 f2:forall(K444:Int,K445:Int)[ Ch(K444,K445)&turn(p2)&K444>=0&K444<xlen()&K445>=0&K445<ylen()=>((( !(Ch(0,0)&(K444>0|K445>0)) ) => ( !(Ch(0,0)&(K444>0|K445>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K446:Int)[ (ylen()=K446)&(G0>=0& K446 > G0&! (Ch(G0,0)&(K444>G0|K445>0)))] ])) ]
2019-10-12 15:52:41,214 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 1&Ch(G0,1)])&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(G0,0)])&!(exists(G0:Int)[G0>=0&Ch(G0,0)&! Ch(0,G0)])
 f2:forall(K444:Int,K445:Int)[ Ch(K444,K445)&turn(p2)&K444>=0&K444<xlen()&K445>=0&K445<ylen()=>((( !(Ch(0,0)&(K444>0|K445>0)) ) => ( !(Ch(0,0)&(K444>0|K445>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K446:Int)[ (ylen()=K446)&(G0>=0& K446 > G0&! (Ch(G0,0)&(K444>G0|K445>0)))] ])) ]
2019-10-12 15:52:45,246 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! ylen() > G0&turn(p2)])
 f2:!(!Ch(0,0))=>(exists(K452:Int,K453:Int)[ (Ch(K452,K453)&turn(p1)&K452>=0&K452<xlen()&K453>=0&K453<ylen())&((( !(Ch(0,0)&(K452>0|K453>0)) ) => ( !(Ch(0,0)&(K452>0|K453>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 1&(Ch(G0,1)&(K452>G0|K453>1))])&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K452>0|K453>G0))&! (Ch(G0,0)&(K452>G0|K453>0))])&!(exists(G0:Int)[G0>=0&(Ch(G0,0)&(K452>G0|K453>0))&! (Ch(0,G0)&(K452>0|K453>G0))])) ])
2019-10-12 15:52:45,288 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 1&Ch(G0,1)])&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(G0,0)])&!(exists(G0:Int)[G0>=0&Ch(G0,0)&! Ch(0,G0)])
 f2:forall(K449:Int,K450:Int)[ Ch(K449,K450)&turn(p2)&K449>=0&K449<xlen()&K450>=0&K450<ylen()=>((( !(Ch(0,0)&(K449>0|K450>0)) ) => ( !(Ch(0,0)&(K449>0|K450>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K451:Int)[ (ylen()=K451)&(G0>=0&! K451 > G0&(!turn(p2)))] ])) ]
2019-10-12 15:52:48,704 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:!(!Ch(0,0))=>(exists(K456:Int,K457:Int)[ (Ch(K456,K457)&turn(p1)&K456>=0&K456<xlen()&K457>=0&K457<ylen())&(( !(Ch(0,0)&(K456>0|K457>0)) ) => ( !(Ch(0,0)&(K456>0|K457>0))&(!turn(p1)) )) ])
2019-10-12 15:52:48,743 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:forall(K454:Int,K455:Int)[ Ch(K454,K455)&turn(p2)&K454>=0&K454<xlen()&K455>=0&K455<ylen()=>(( !(Ch(0,0)&(K454>0|K455>0)) ) => ( !(Ch(0,0)&(K454>0|K455>0))&(!turn(p1)) )) ]
2019-10-12 15:52:48,893 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(! xlen() = 1)
 f2:!(!Ch(0,0))=>(exists(K460:Int,K461:Int)[ (Ch(K460,K461)&turn(p1)&K460>=0&K460<xlen()&K461>=0&K461<ylen())&(( !(Ch(0,0)&(K460>0|K461>0)) ) => ( !(Ch(0,0)&(K460>0|K461>0))&(!turn(p1)) )) ])
2019-10-12 15:52:48,921 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:forall(K458:Int,K459:Int)[ Ch(K458,K459)&turn(p2)&K458>=0&K458<xlen()&K459>=0&K459<ylen()=>((( !(Ch(0,0)&(K458>0|K459>0)) ) => ( !(Ch(0,0)&(K458>0|K459>0))&(!turn(p1)) ))&!(! (xlen()=1))) ]
2019-10-12 15:52:49,281 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(! xlen() = 1)
 f2:!(!Ch(0,0))=>(exists(K464:Int,K465:Int)[ (Ch(K464,K465)&turn(p1)&K464>=0&K464<xlen()&K465>=0&K465<ylen())&((( !(Ch(0,0)&(K464>0|K465>0)) ) => ( !(Ch(0,0)&(K464>0|K465>0))&(!turn(p1)) ))&!(exists(X1:Int)[ exists(K466:Int)[ (xlen()=K466)&(X1>=0&! K466 > X1)] ])) ])
2019-10-12 15:52:49,312 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&! xlen() > X1])
 f2:forall(K462:Int,K463:Int)[ Ch(K462,K463)&turn(p2)&K462>=0&K462<xlen()&K463>=0&K463<ylen()=>((( !(Ch(0,0)&(K462>0|K463>0)) ) => ( !(Ch(0,0)&(K462>0|K463>0))&(!turn(p1)) ))&!(! (xlen()=1))) ]
2019-10-12 15:52:49,342 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:forall(K16:Int,K17:Int)[K16>=0&K16<xlen()&K17>=0&K17<ylen()=>Ch(K16,K17)]&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)
 f2:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(! xlen() = 1)
2019-10-12 15:52:50,206 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(! Ch(0,1)&! xlen() = 1)
 f2:!(!Ch(0,0))=>(exists(K469:Int,K470:Int)[ (Ch(K469,K470)&turn(p1)&K469>=0&K469<xlen()&K470>=0&K470<ylen())&((( !(Ch(0,0)&(K469>0|K470>0)) ) => ( !(Ch(0,0)&(K469>0|K470>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K471:Int)[ (xlen()=K471)&(G0>=0&! K471 > G0&! (Ch(1,0)&(K469>1|K470>0)))] ])) ])
2019-10-12 15:52:50,253 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! xlen() > G0&! Ch(1,0)])
 f2:forall(K467:Int,K468:Int)[ Ch(K467,K468)&turn(p2)&K467>=0&K467<xlen()&K468>=0&K468<ylen()=>((( !(Ch(0,0)&(K467>0|K468>0)) ) => ( !(Ch(0,0)&(K467>0|K468>0))&(!turn(p1)) ))&!(! (Ch(0,1)&(K467>0|K468>1))&! (xlen()=1))) ]
2019-10-12 15:52:50,758 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(! turn(p1)&! xlen() = 1)
 f2:!(!Ch(0,0))=>(exists(K474:Int,K475:Int)[ (Ch(K474,K475)&turn(p1)&K474>=0&K474<xlen()&K475>=0&K475<ylen())&((( !(Ch(0,0)&(K474>0|K475>0)) ) => ( !(Ch(0,0)&(K474>0|K475>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K476:Int)[ (xlen()=K476)&(G0>=0&! K476 > G0&! (Ch(1,0)&(K474>1|K475>0)))] ])) ])
2019-10-12 15:52:50,795 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! xlen() > G0&! Ch(1,0)])
 f2:forall(K472:Int,K473:Int)[ Ch(K472,K473)&turn(p2)&K472>=0&K472<xlen()&K473>=0&K473<ylen()=>((( !(Ch(0,0)&(K472>0|K473>0)) ) => ( !(Ch(0,0)&(K472>0|K473>0))&(!turn(p1)) ))&!(! (!turn(p1))&! (xlen()=1))) ]
2019-10-12 15:52:52,291 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:!(!Ch(0,0))=>(exists(K479:Int,K480:Int)[ (Ch(K479,K480)&turn(p1)&K479>=0&K479<xlen()&K480>=0&K480<ylen())&(( !(Ch(0,0)&(K479>0|K480>0)) ) => ( !(Ch(0,0)&(K479>0|K480>0))&(!turn(p1)) )) ])
2019-10-12 15:52:52,337 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:forall(K477:Int,K478:Int)[ Ch(K477,K478)&turn(p2)&K477>=0&K477<xlen()&K478>=0&K478<ylen()=>(( !(Ch(0,0)&(K477>0|K478>0)) ) => ( !(Ch(0,0)&(K477>0|K478>0))&(!turn(p1)) )) ]
2019-10-12 15:52:52,513 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(! xlen() = 0)
 f2:!(!Ch(0,0))=>(exists(K483:Int,K484:Int)[ (Ch(K483,K484)&turn(p1)&K483>=0&K483<xlen()&K484>=0&K484<ylen())&(( !(Ch(0,0)&(K483>0|K484>0)) ) => ( !(Ch(0,0)&(K483>0|K484>0))&(!turn(p1)) )) ])
2019-10-12 15:52:52,544 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:forall(K481:Int,K482:Int)[ Ch(K481,K482)&turn(p2)&K481>=0&K481<xlen()&K482>=0&K482<ylen()=>((( !(Ch(0,0)&(K481>0|K482>0)) ) => ( !(Ch(0,0)&(K481>0|K482>0))&(!turn(p1)) ))&!(! (xlen()=0))) ]
2019-10-12 15:52:52,934 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(! xlen() = 0)
 f2:!(!Ch(0,0))=>(exists(K487:Int,K488:Int)[ (Ch(K487,K488)&turn(p1)&K487>=0&K487<xlen()&K488>=0&K488<ylen())&((( !(Ch(0,0)&(K487>0|K488>0)) ) => ( !(Ch(0,0)&(K487>0|K488>0))&(!turn(p1)) ))&!(exists(X1:Int)[ exists(K489:Int)[ (ylen()=K489)&(X1>=0&! K489 > X1)] ])) ])
2019-10-12 15:52:52,966 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&! ylen() > X1])
 f2:forall(K485:Int,K486:Int)[ Ch(K485,K486)&turn(p2)&K485>=0&K485<xlen()&K486>=0&K486<ylen()=>((( !(Ch(0,0)&(K485>0|K486>0)) ) => ( !(Ch(0,0)&(K485>0|K486>0))&(!turn(p1)) ))&!(! (xlen()=0))) ]
2019-10-12 15:52:52,993 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:forall(K16:Int,K17:Int)[K16>=0&K16<xlen()&K17>=0&K17<ylen()=>Ch(K16,K17)]&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)
 f2:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(! xlen() = 0)
2019-10-12 15:52:53,946 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 1&! Ch(0,G0)])
 f2:!(!Ch(0,0))=>(exists(K492:Int,K493:Int)[ (Ch(K492,K493)&turn(p1)&K492>=0&K492<xlen()&K493>=0&K493<ylen())&((( !(Ch(0,0)&(K492>0|K493>0)) ) => ( !(Ch(0,0)&(K492>0|K493>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K494:Int)[ (ylen()=K494)&(G0>=0&! K494 > G0&! (Ch(0,1)&(K492>0|K493>1)))] ])) ])
2019-10-12 15:52:54,001 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 1&! Ch(0,G0)])
 f2:!(!Ch(0,0))=>(exists(K492:Int,K493:Int)[ (Ch(K492,K493)&turn(p1)&K492>=0&K492<xlen()&K493>=0&K493<ylen())&((( !(Ch(0,0)&(K492>0|K493>0)) ) => ( !(Ch(0,0)&(K492>0|K493>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K494:Int)[ (ylen()=K494)&(G0>=0&! K494 > G0&! (Ch(0,1)&(K492>0|K493>1)))] ])) ])
2019-10-12 15:52:54,039 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! ylen() > G0&! Ch(0,1)])
 f2:forall(K490:Int,K491:Int)[ Ch(K490,K491)&turn(p2)&K490>=0&K490<xlen()&K491>=0&K491<ylen()=>((( !(Ch(0,0)&(K490>0|K491>0)) ) => ( !(Ch(0,0)&(K490>0|K491>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 1&! (Ch(0,G0)&(K490>0|K491>G0))])) ]
2019-10-12 15:52:56,060 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 1&! Ch(0,G0)])&!(! Ch(1,1))
 f2:!(!Ch(0,0))=>(exists(K497:Int,K498:Int)[ (Ch(K497,K498)&turn(p1)&K497>=0&K497<xlen()&K498>=0&K498<ylen())&((( !(Ch(0,0)&(K497>0|K498>0)) ) => ( !(Ch(0,0)&(K497>0|K498>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K499:Int)[ (ylen()=K499)&(G0>=0&! K499 > G0&! (Ch(0,1)&(K497>0|K498>1)))] ])&!((Ch(1,1)&(K497>1|K498>1)))) ])
2019-10-12 15:52:56,115 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! ylen() > G0&! Ch(0,1)])&!(Ch(1,1))
 f2:forall(K495:Int,K496:Int)[ Ch(K495,K496)&turn(p2)&K495>=0&K495<xlen()&K496>=0&K496<ylen()=>((( !(Ch(0,0)&(K495>0|K496>0)) ) => ( !(Ch(0,0)&(K495>0|K496>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 1&! (Ch(0,G0)&(K495>0|K496>G0))])&!(! (Ch(1,1)&(K495>1|K496>1)))) ]
2019-10-12 15:52:58,535 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 1&! Ch(0,G0)])&!(! Ch(1,1))&!(! Ch(1,0))
 f2:!(!Ch(0,0))=>(exists(K502:Int,K503:Int)[ (Ch(K502,K503)&turn(p1)&K502>=0&K502<xlen()&K503>=0&K503<ylen())&((( !(Ch(0,0)&(K502>0|K503>0)) ) => ( !(Ch(0,0)&(K502>0|K503>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K504:Int)[ (ylen()=K504)&(G0>=0&! K504 > G0&! (Ch(0,1)&(K502>0|K503>1)))] ])&!((Ch(1,1)&(K502>1|K503>1)))&!(! (Ch(1,0)&(K502>1|K503>0)))) ])
2019-10-12 15:52:58,587 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! ylen() > G0&! Ch(0,1)])&!(Ch(1,1))&!(! Ch(1,0))
 f2:forall(K500:Int,K501:Int)[ Ch(K500,K501)&turn(p2)&K500>=0&K500<xlen()&K501>=0&K501<ylen()=>((( !(Ch(0,0)&(K500>0|K501>0)) ) => ( !(Ch(0,0)&(K500>0|K501>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 1&! (Ch(0,G0)&(K500>0|K501>G0))])&!(! (Ch(1,1)&(K500>1|K501>1)))&!(! (Ch(1,0)&(K500>1|K501>0)))) ]
2019-10-12 15:52:59,399 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(turn(p2)&! xlen() = 0)&!(Ch(0,1)&turn(p2))&!(exists(G0:Int)[G0>=0&Ch(1,G0)&! Ch(G0,0)])
 f2:!(!Ch(0,0))=>(exists(K507:Int,K508:Int)[ (Ch(K507,K508)&turn(p1)&K507>=0&K507<xlen()&K508>=0&K508<ylen())&((( !(Ch(0,0)&(K507>0|K508>0)) ) => ( !(Ch(0,0)&(K507>0|K508>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K509:Int)[ (ylen()=K509)&(G0>=0&! K509 > G0&! (Ch(0,1)&(K507>0|K508>1)))] ])&!((Ch(1,1)&(K507>1|K508>1)))&!(! (Ch(1,0)&(K507>1|K508>0)))) ])
2019-10-12 15:52:59,441 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! ylen() > G0&! Ch(0,1)])&!(Ch(1,1))&!(! Ch(1,0))
 f2:forall(K505:Int,K506:Int)[ Ch(K505,K506)&turn(p2)&K505>=0&K505<xlen()&K506>=0&K506<ylen()=>((( !(Ch(0,0)&(K505>0|K506>0)) ) => ( !(Ch(0,0)&(K505>0|K506>0))&(!turn(p1)) ))&!((!turn(p2))&! (xlen()=0))&!((Ch(0,1)&(K505>0|K506>1))&(!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K505>1|K506>G0))&! (Ch(G0,0)&(K505>G0|K506>0))])) ]
2019-10-12 15:52:59,503 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! ylen() > G0&! Ch(0,1)])&!(Ch(1,1))&!(! Ch(1,0))
 f2:forall(K505:Int,K506:Int)[ Ch(K505,K506)&turn(p2)&K505>=0&K505<xlen()&K506>=0&K506<ylen()=>((( !(Ch(0,0)&(K505>0|K506>0)) ) => ( !(Ch(0,0)&(K505>0|K506>0))&(!turn(p1)) ))&!((!turn(p2))&! (xlen()=0))&!((Ch(0,1)&(K505>0|K506>1))&(!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K505>1|K506>G0))&! (Ch(G0,0)&(K505>G0|K506>0))])) ]
2019-10-12 15:52:59,535 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! ylen() > G0&! Ch(0,1)])&!(Ch(1,1))&!(! Ch(1,0))
 f2:forall(K505:Int,K506:Int)[ Ch(K505,K506)&turn(p2)&K505>=0&K505<xlen()&K506>=0&K506<ylen()=>((( !(Ch(0,0)&(K505>0|K506>0)) ) => ( !(Ch(0,0)&(K505>0|K506>0))&(!turn(p1)) ))&!((!turn(p2))&! (xlen()=0))&!((Ch(0,1)&(K505>0|K506>1))&(!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K505>1|K506>G0))&! (Ch(G0,0)&(K505>G0|K506>0))])) ]
2019-10-14 12:14:13,637 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:!(!Ch(0,0))=>(exists(K21:Int,K22:Int)[ (Ch(K21,K22)&turn(p1)&K21>=0&K21<xlen()&K22>=0&K22<ylen())&(( !(Ch(0,0)&(K21>0|K22>0)) ) => ( !(Ch(0,0)&(K21>0|K22>0))&(!turn(p1)) )) ])
2019-10-14 12:14:13,782 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:forall(K19:Int,K20:Int)[ Ch(K19,K20)&turn(p2)&K19>=0&K19<xlen()&K20>=0&K20<ylen()=>(( !(Ch(0,0)&(K19>0|K20>0)) ) => ( !(Ch(0,0)&(K19>0|K20>0))&(!turn(p1)) )) ]
2019-10-14 12:14:14,035 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(0,X1)])
 f2:!(!Ch(0,0))=>(exists(K25:Int,K26:Int)[ (Ch(K25,K26)&turn(p1)&K25>=0&K25<xlen()&K26>=0&K26<ylen())&(( !(Ch(0,0)&(K25>0|K26>0)) ) => ( !(Ch(0,0)&(K25>0|K26>0))&(!turn(p1)) )) ])
2019-10-14 12:14:14,071 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:forall(K23:Int,K24:Int)[ Ch(K23,K24)&turn(p2)&K23>=0&K23<xlen()&K24>=0&K24<ylen()=>((( !(Ch(0,0)&(K23>0|K24>0)) ) => ( !(Ch(0,0)&(K23>0|K24>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(Ch(0,X1)&(K23>0|K24>X1))])) ]
2019-10-14 12:14:14,486 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(0,X1)])
 f2:!(!Ch(0,0))=>(exists(K29:Int,K30:Int)[ (Ch(K29,K30)&turn(p1)&K29>=0&K29<xlen()&K30>=0&K30<ylen())&((( !(Ch(0,0)&(K29>0|K30>0)) ) => ( !(Ch(0,0)&(K29>0|K30>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(Ch(1,X1)&(K29>1|K30>X1))])) ])
2019-10-14 12:14:14,531 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(1,X1)])
 f2:forall(K27:Int,K28:Int)[ Ch(K27,K28)&turn(p2)&K27>=0&K27<xlen()&K28>=0&K28<ylen()=>((( !(Ch(0,0)&(K27>0|K28>0)) ) => ( !(Ch(0,0)&(K27>0|K28>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(Ch(0,X1)&(K27>0|K28>X1))])) ]
2019-10-14 12:14:14,578 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(1,X1)])
 f2:forall(K27:Int,K28:Int)[ Ch(K27,K28)&turn(p2)&K27>=0&K27<xlen()&K28>=0&K28<ylen()=>((( !(Ch(0,0)&(K27>0|K28>0)) ) => ( !(Ch(0,0)&(K27>0|K28>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(Ch(0,X1)&(K27>0|K28>X1))])) ]
2019-10-14 12:14:15,225 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(0,X1)])
 f2:!(!Ch(0,0))=>(exists(K33:Int,K34:Int)[ (Ch(K33,K34)&turn(p1)&K33>=0&K33<xlen()&K34>=0&K34<ylen())&((( !(Ch(0,0)&(K33>0|K34>0)) ) => ( !(Ch(0,0)&(K33>0|K34>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(Ch(1,X1)&(K33>1|K34>X1))])&!(exists(X1:Int)[X1>=0&(Ch(0,X1)&(K33>0|K34>X1))])) ])
2019-10-14 12:14:15,261 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(1,X1)])&!(exists(X1:Int)[X1>=0&Ch(0,X1)])
 f2:forall(K31:Int,K32:Int)[ Ch(K31,K32)&turn(p2)&K31>=0&K31<xlen()&K32>=0&K32<ylen()=>((( !(Ch(0,0)&(K31>0|K32>0)) ) => ( !(Ch(0,0)&(K31>0|K32>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(Ch(0,X1)&(K31>0|K32>X1))])) ]
2019-10-14 12:14:15,292 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:forall(K16:Int,K17:Int)[K16>=0&K16<xlen()&K17>=0&K17<ylen()=>Ch(K16,K17)]&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)
 f2:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(0,X1)])
2019-10-14 12:14:16,233 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 0&! Ch(1,G0)])
 f2:!(!Ch(0,0))=>(exists(K37:Int,K38:Int)[ (Ch(K37,K38)&turn(p1)&K37>=0&K37<xlen()&K38>=0&K38<ylen())&((( !(Ch(0,0)&(K37>0|K38>0)) ) => ( !(Ch(0,0)&(K37>0|K38>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 0&(Ch(1,G0)&(K37>1|K38>G0))])&!(exists(G0:Int)[G0>=0&G0 = 0&! (Ch(1,G0)&(K37>1|K38>G0))])) ])
2019-10-14 12:14:16,274 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 > 0&Ch(1,G0)])&!(exists(G0:Int)[G0>=0&G0 = 0&! Ch(1,G0)])
 f2:forall(K35:Int,K36:Int)[ Ch(K35,K36)&turn(p2)&K35>=0&K35<xlen()&K36>=0&K36<ylen()=>((( !(Ch(0,0)&(K35>0|K36>0)) ) => ( !(Ch(0,0)&(K35>0|K36>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 0&! (Ch(1,G0)&(K35>1|K36>G0))])) ]
2019-10-14 12:14:16,888 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 0&! Ch(1,G0)])
 f2:!(!Ch(0,0))=>(exists(K41:Int,K42:Int)[ (Ch(K41,K42)&turn(p1)&K41>=0&K41<xlen()&K42>=0&K42<ylen())&((( !(Ch(0,0)&(K41>0|K42>0)) ) => ( !(Ch(0,0)&(K41>0|K42>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 0&(Ch(1,G0)&(K41>1|K42>G0))])&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K41>0|K42>G0))&! (Ch(G0,0)&(K41>G0|K42>0))])) ])
2019-10-14 12:14:16,952 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 0&! Ch(1,G0)])
 f2:!(!Ch(0,0))=>(exists(K41:Int,K42:Int)[ (Ch(K41,K42)&turn(p1)&K41>=0&K41<xlen()&K42>=0&K42<ylen())&((( !(Ch(0,0)&(K41>0|K42>0)) ) => ( !(Ch(0,0)&(K41>0|K42>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 0&(Ch(1,G0)&(K41>1|K42>G0))])&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K41>0|K42>G0))&! (Ch(G0,0)&(K41>G0|K42>0))])) ])
2019-10-14 12:14:16,992 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 > 0&Ch(1,G0)])&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(G0,0)])
 f2:forall(K39:Int,K40:Int)[ Ch(K39,K40)&turn(p2)&K39>=0&K39<xlen()&K40>=0&K40<ylen()=>((( !(Ch(0,0)&(K39>0|K40>0)) ) => ( !(Ch(0,0)&(K39>0|K40>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 0&! (Ch(1,G0)&(K39>1|K40>G0))])) ]
2019-10-14 12:14:18,026 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 0&! Ch(1,G0)])&!(turn(p2))
 f2:!(!Ch(0,0))=>(exists(K45:Int,K46:Int)[ (Ch(K45,K46)&turn(p1)&K45>=0&K45<xlen()&K46>=0&K46<ylen())&((( !(Ch(0,0)&(K45>0|K46>0)) ) => ( !(Ch(0,0)&(K45>0|K46>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K45>0|K46>G0))&! (Ch(G0,0)&(K45>G0|K46>0))])&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K45>1|K46>G0))&! (Ch(0,1)&(K45>0|K46>1))])) ])
2019-10-14 12:14:18,345 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 0&! Ch(1,G0)])&!(turn(p2))
 f2:!(!Ch(0,0))=>(exists(K45:Int,K46:Int)[ (Ch(K45,K46)&turn(p1)&K45>=0&K45<xlen()&K46>=0&K46<ylen())&((( !(Ch(0,0)&(K45>0|K46>0)) ) => ( !(Ch(0,0)&(K45>0|K46>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K45>0|K46>G0))&! (Ch(G0,0)&(K45>G0|K46>0))])&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K45>1|K46>G0))&! (Ch(0,1)&(K45>0|K46>1))])) ])
2019-10-14 12:14:18,395 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(G0,0)])&!(exists(G0:Int)[G0>=0&Ch(1,G0)&! Ch(0,1)])
 f2:forall(K43:Int,K44:Int)[ Ch(K43,K44)&turn(p2)&K43>=0&K43<xlen()&K44>=0&K44<ylen()=>((( !(Ch(0,0)&(K43>0|K44>0)) ) => ( !(Ch(0,0)&(K43>0|K44>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 0&! (Ch(1,G0)&(K43>1|K44>G0))])&!((!turn(p2)))) ]
2019-10-14 12:14:19,145 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(turn(p2))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&turn(p2)])
 f2:!(!Ch(0,0))=>(exists(K49:Int,K50:Int)[ (Ch(K49,K50)&turn(p1)&K49>=0&K49<xlen()&K50>=0&K50<ylen())&((( !(Ch(0,0)&(K49>0|K50>0)) ) => ( !(Ch(0,0)&(K49>0|K50>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K49>0|K50>G0))&! (Ch(G0,0)&(K49>G0|K50>0))])&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K49>1|K50>G0))&! (Ch(0,1)&(K49>0|K50>1))])) ])
2019-10-14 12:14:19,198 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(G0,0)])&!(exists(G0:Int)[G0>=0&Ch(1,G0)&! Ch(0,1)])
 f2:forall(K47:Int,K48:Int)[ Ch(K47,K48)&turn(p2)&K47>=0&K47<xlen()&K48>=0&K48<ylen()=>((( !(Ch(0,0)&(K47>0|K48>0)) ) => ( !(Ch(0,0)&(K47>0|K48>0))&(!turn(p1)) ))&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K47>0|K48>G0))&(!turn(p2))])) ]
2019-10-14 12:18:54,287 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:!(!Ch(0,0))=>(exists(K21:Int,K22:Int)[ (Ch(K21,K22)&turn(p1)&K21>=0&K21<xlen()&K22>=0&K22<ylen())&(( !(Ch(0,0)&(K21>0|K22>0)) ) => ( !(Ch(0,0)&(K21>0|K22>0))&(!turn(p1)) )) ])
2019-10-14 12:18:54,328 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:forall(K19:Int,K20:Int)[ Ch(K19,K20)&turn(p2)&K19>=0&K19<xlen()&K20>=0&K20<ylen()=>(( !(Ch(0,0)&(K19>0|K20>0)) ) => ( !(Ch(0,0)&(K19>0|K20>0))&(!turn(p1)) )) ]
2019-10-14 12:18:54,533 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(0,X1)])
 f2:!(!Ch(0,0))=>(exists(K25:Int,K26:Int)[ (Ch(K25,K26)&turn(p1)&K25>=0&K25<xlen()&K26>=0&K26<ylen())&(( !(Ch(0,0)&(K25>0|K26>0)) ) => ( !(Ch(0,0)&(K25>0|K26>0))&(!turn(p1)) )) ])
2019-10-14 12:18:54,583 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:forall(K23:Int,K24:Int)[ Ch(K23,K24)&turn(p2)&K23>=0&K23<xlen()&K24>=0&K24<ylen()=>((( !(Ch(0,0)&(K23>0|K24>0)) ) => ( !(Ch(0,0)&(K23>0|K24>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(Ch(0,X1)&(K23>0|K24>X1))])) ]
2019-10-14 12:18:55,003 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(0,X1)])
 f2:!(!Ch(0,0))=>(exists(K29:Int,K30:Int)[ (Ch(K29,K30)&turn(p1)&K29>=0&K29<xlen()&K30>=0&K30<ylen())&((( !(Ch(0,0)&(K29>0|K30>0)) ) => ( !(Ch(0,0)&(K29>0|K30>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(Ch(1,X1)&(K29>1|K30>X1))])) ])
2019-10-14 12:18:55,039 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(1,X1)])
 f2:forall(K27:Int,K28:Int)[ Ch(K27,K28)&turn(p2)&K27>=0&K27<xlen()&K28>=0&K28<ylen()=>((( !(Ch(0,0)&(K27>0|K28>0)) ) => ( !(Ch(0,0)&(K27>0|K28>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(Ch(0,X1)&(K27>0|K28>X1))])) ]
2019-10-14 12:18:55,093 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(1,X1)])
 f2:forall(K27:Int,K28:Int)[ Ch(K27,K28)&turn(p2)&K27>=0&K27<xlen()&K28>=0&K28<ylen()=>((( !(Ch(0,0)&(K27>0|K28>0)) ) => ( !(Ch(0,0)&(K27>0|K28>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(Ch(0,X1)&(K27>0|K28>X1))])) ]
2019-10-14 12:18:55,707 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(0,X1)])
 f2:!(!Ch(0,0))=>(exists(K33:Int,K34:Int)[ (Ch(K33,K34)&turn(p1)&K33>=0&K33<xlen()&K34>=0&K34<ylen())&((( !(Ch(0,0)&(K33>0|K34>0)) ) => ( !(Ch(0,0)&(K33>0|K34>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(Ch(1,X1)&(K33>1|K34>X1))])&!(exists(X1:Int)[X1>=0&(Ch(0,X1)&(K33>0|K34>X1))])) ])
2019-10-14 12:18:55,746 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(1,X1)])&!(exists(X1:Int)[X1>=0&Ch(0,X1)])
 f2:forall(K31:Int,K32:Int)[ Ch(K31,K32)&turn(p2)&K31>=0&K31<xlen()&K32>=0&K32<ylen()=>((( !(Ch(0,0)&(K31>0|K32>0)) ) => ( !(Ch(0,0)&(K31>0|K32>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(Ch(0,X1)&(K31>0|K32>X1))])) ]
2019-10-14 12:18:55,776 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:forall(K16:Int,K17:Int)[K16>=0&K16<xlen()&K17>=0&K17<ylen()=>Ch(K16,K17)]&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)
 f2:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(0,X1)])
2019-10-14 12:18:56,720 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 0&! Ch(1,G0)])
 f2:!(!Ch(0,0))=>(exists(K37:Int,K38:Int)[ (Ch(K37,K38)&turn(p1)&K37>=0&K37<xlen()&K38>=0&K38<ylen())&((( !(Ch(0,0)&(K37>0|K38>0)) ) => ( !(Ch(0,0)&(K37>0|K38>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 0&(Ch(1,G0)&(K37>1|K38>G0))])&!(exists(G0:Int)[G0>=0&G0 = 0&! (Ch(1,G0)&(K37>1|K38>G0))])) ])
2019-10-14 12:18:56,763 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 > 0&Ch(1,G0)])&!(exists(G0:Int)[G0>=0&G0 = 0&! Ch(1,G0)])
 f2:forall(K35:Int,K36:Int)[ Ch(K35,K36)&turn(p2)&K35>=0&K35<xlen()&K36>=0&K36<ylen()=>((( !(Ch(0,0)&(K35>0|K36>0)) ) => ( !(Ch(0,0)&(K35>0|K36>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 0&! (Ch(1,G0)&(K35>1|K36>G0))])) ]
2019-10-14 12:18:57,371 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 0&! Ch(1,G0)])
 f2:!(!Ch(0,0))=>(exists(K41:Int,K42:Int)[ (Ch(K41,K42)&turn(p1)&K41>=0&K41<xlen()&K42>=0&K42<ylen())&((( !(Ch(0,0)&(K41>0|K42>0)) ) => ( !(Ch(0,0)&(K41>0|K42>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 0&(Ch(1,G0)&(K41>1|K42>G0))])&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K41>0|K42>G0))&! (Ch(G0,0)&(K41>G0|K42>0))])) ])
2019-10-14 12:18:57,436 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 0&! Ch(1,G0)])
 f2:!(!Ch(0,0))=>(exists(K41:Int,K42:Int)[ (Ch(K41,K42)&turn(p1)&K41>=0&K41<xlen()&K42>=0&K42<ylen())&((( !(Ch(0,0)&(K41>0|K42>0)) ) => ( !(Ch(0,0)&(K41>0|K42>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 0&(Ch(1,G0)&(K41>1|K42>G0))])&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K41>0|K42>G0))&! (Ch(G0,0)&(K41>G0|K42>0))])) ])
2019-10-14 12:18:57,480 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 > 0&Ch(1,G0)])&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(G0,0)])
 f2:forall(K39:Int,K40:Int)[ Ch(K39,K40)&turn(p2)&K39>=0&K39<xlen()&K40>=0&K40<ylen()=>((( !(Ch(0,0)&(K39>0|K40>0)) ) => ( !(Ch(0,0)&(K39>0|K40>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 0&! (Ch(1,G0)&(K39>1|K40>G0))])) ]
2019-10-14 12:18:58,514 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 0&! Ch(1,G0)])&!(turn(p2))
 f2:!(!Ch(0,0))=>(exists(K45:Int,K46:Int)[ (Ch(K45,K46)&turn(p1)&K45>=0&K45<xlen()&K46>=0&K46<ylen())&((( !(Ch(0,0)&(K45>0|K46>0)) ) => ( !(Ch(0,0)&(K45>0|K46>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K45>0|K46>G0))&! (Ch(G0,0)&(K45>G0|K46>0))])&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K45>1|K46>G0))&! (Ch(0,1)&(K45>0|K46>1))])) ])
2019-10-14 12:18:58,823 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 0&! Ch(1,G0)])&!(turn(p2))
 f2:!(!Ch(0,0))=>(exists(K45:Int,K46:Int)[ (Ch(K45,K46)&turn(p1)&K45>=0&K45<xlen()&K46>=0&K46<ylen())&((( !(Ch(0,0)&(K45>0|K46>0)) ) => ( !(Ch(0,0)&(K45>0|K46>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K45>0|K46>G0))&! (Ch(G0,0)&(K45>G0|K46>0))])&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K45>1|K46>G0))&! (Ch(0,1)&(K45>0|K46>1))])) ])
2019-10-14 12:18:58,888 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(G0,0)])&!(exists(G0:Int)[G0>=0&Ch(1,G0)&! Ch(0,1)])
 f2:forall(K43:Int,K44:Int)[ Ch(K43,K44)&turn(p2)&K43>=0&K43<xlen()&K44>=0&K44<ylen()=>((( !(Ch(0,0)&(K43>0|K44>0)) ) => ( !(Ch(0,0)&(K43>0|K44>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 0&! (Ch(1,G0)&(K43>1|K44>G0))])&!((!turn(p2)))) ]
2019-10-14 12:18:59,633 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(turn(p2))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&turn(p2)])
 f2:!(!Ch(0,0))=>(exists(K49:Int,K50:Int)[ (Ch(K49,K50)&turn(p1)&K49>=0&K49<xlen()&K50>=0&K50<ylen())&((( !(Ch(0,0)&(K49>0|K50>0)) ) => ( !(Ch(0,0)&(K49>0|K50>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K49>0|K50>G0))&! (Ch(G0,0)&(K49>G0|K50>0))])&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K49>1|K50>G0))&! (Ch(0,1)&(K49>0|K50>1))])) ])
2019-10-14 12:18:59,676 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(G0,0)])&!(exists(G0:Int)[G0>=0&Ch(1,G0)&! Ch(0,1)])
 f2:forall(K47:Int,K48:Int)[ Ch(K47,K48)&turn(p2)&K47>=0&K47<xlen()&K48>=0&K48<ylen()=>((( !(Ch(0,0)&(K47>0|K48>0)) ) => ( !(Ch(0,0)&(K47>0|K48>0))&(!turn(p1)) ))&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K47>0|K48>G0))&(!turn(p2))])) ]
2019-10-14 12:19:26,697 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&turn(p2)])&!(turn(p2))&!(exists(G0:Int)[G0>=0&G0 > 1&turn(p2)&xlen() >= G0])
 f2:!(!Ch(0,0))=>(exists(K54:Int,K55:Int)[ (Ch(K54,K55)&turn(p1)&K54>=0&K54<xlen()&K55>=0&K55<ylen())&((( !(Ch(0,0)&(K54>0|K55>0)) ) => ( !(Ch(0,0)&(K54>0|K55>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K54>0|K55>G0))&! (Ch(G0,0)&(K54>G0|K55>0))])&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K54>1|K55>G0))&! (Ch(0,1)&(K54>0|K55>1))])) ])
2019-10-14 12:19:26,740 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(G0,0)])&!(exists(G0:Int)[G0>=0&Ch(1,G0)&! Ch(0,1)])
 f2:forall(K51:Int,K52:Int)[ Ch(K51,K52)&turn(p2)&K51>=0&K51<xlen()&K52>=0&K52<ylen()=>((( !(Ch(0,0)&(K51>0|K52>0)) ) => ( !(Ch(0,0)&(K51>0|K52>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K51>0|K52>G0))&(!turn(p2))])&!((!turn(p2)))&!(exists(G0:Int)[ exists(K53:Int)[ (xlen()=K53)&(G0>=0&G0 > 1&(!turn(p2))& K53 >= G0)] ])) ]
2019-10-14 12:19:54,356 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&turn(p2)])&!(turn(p2))&!(exists(G0:Int)[G0>=0&G0 > 1&turn(p2)&xlen() >= G0])&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(1,0)&! Ch(0,1)])
 f2:!(!Ch(0,0))=>(exists(K59:Int,K60:Int)[ (Ch(K59,K60)&turn(p1)&K59>=0&K59<xlen()&K60>=0&K60<ylen())&((( !(Ch(0,0)&(K59>0|K60>0)) ) => ( !(Ch(0,0)&(K59>0|K60>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K59>0|K60>G0))&! (Ch(G0,0)&(K59>G0|K60>0))])&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K59>1|K60>G0))&! (Ch(0,1)&(K59>0|K60>1))])) ])
2019-10-14 12:19:54,852 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&turn(p2)])&!(turn(p2))&!(exists(G0:Int)[G0>=0&G0 > 1&turn(p2)&xlen() >= G0])&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(1,0)&! Ch(0,1)])
 f2:!(!Ch(0,0))=>(exists(K59:Int,K60:Int)[ (Ch(K59,K60)&turn(p1)&K59>=0&K59<xlen()&K60>=0&K60<ylen())&((( !(Ch(0,0)&(K59>0|K60>0)) ) => ( !(Ch(0,0)&(K59>0|K60>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K59>0|K60>G0))&! (Ch(G0,0)&(K59>G0|K60>0))])&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K59>1|K60>G0))&! (Ch(0,1)&(K59>0|K60>1))])) ])
2019-10-14 12:19:54,907 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(G0,0)])&!(exists(G0:Int)[G0>=0&Ch(1,G0)&! Ch(0,1)])
 f2:forall(K56:Int,K57:Int)[ Ch(K56,K57)&turn(p2)&K56>=0&K56<xlen()&K57>=0&K57<ylen()=>((( !(Ch(0,0)&(K56>0|K57>0)) ) => ( !(Ch(0,0)&(K56>0|K57>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K56>0|K57>G0))&(!turn(p2))])&!((!turn(p2)))&!(exists(G0:Int)[ exists(K58:Int)[ (xlen()=K58)&(G0>=0&G0 > 1&(!turn(p2))& K58 >= G0)] ])&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K56>0|K57>G0))&! (Ch(1,0)&(K56>1|K57>0))&! (Ch(0,1)&(K56>0|K57>1))])) ]
2019-10-14 12:19:54,958 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(G0,0)])&!(exists(G0:Int)[G0>=0&Ch(1,G0)&! Ch(0,1)])
 f2:forall(K56:Int,K57:Int)[ Ch(K56,K57)&turn(p2)&K56>=0&K56<xlen()&K57>=0&K57<ylen()=>((( !(Ch(0,0)&(K56>0|K57>0)) ) => ( !(Ch(0,0)&(K56>0|K57>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K56>0|K57>G0))&(!turn(p2))])&!((!turn(p2)))&!(exists(G0:Int)[ exists(K58:Int)[ (xlen()=K58)&(G0>=0&G0 > 1&(!turn(p2))& K58 >= G0)] ])&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K56>0|K57>G0))&! (Ch(1,0)&(K56>1|K57>0))&! (Ch(0,1)&(K56>0|K57>1))])) ]
2019-10-14 12:19:54,999 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(G0,0)])&!(exists(G0:Int)[G0>=0&Ch(1,G0)&! Ch(0,1)])
 f2:forall(K56:Int,K57:Int)[ Ch(K56,K57)&turn(p2)&K56>=0&K56<xlen()&K57>=0&K57<ylen()=>((( !(Ch(0,0)&(K56>0|K57>0)) ) => ( !(Ch(0,0)&(K56>0|K57>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K56>0|K57>G0))&(!turn(p2))])&!((!turn(p2)))&!(exists(G0:Int)[ exists(K58:Int)[ (xlen()=K58)&(G0>=0&G0 > 1&(!turn(p2))& K58 >= G0)] ])&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K56>0|K57>G0))&! (Ch(1,0)&(K56>1|K57>0))&! (Ch(0,1)&(K56>0|K57>1))])) ]
2019-10-14 12:20:26,791 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&turn(p2)])&!(turn(p2))&!(exists(G0:Int)[G0>=0&G0 > 1&turn(p2)&xlen() >= G0])&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(1,0)&! Ch(0,1)])
 f2:!(!Ch(0,0))=>(exists(K64:Int,K65:Int)[ (Ch(K64,K65)&turn(p1)&K64>=0&K64<xlen()&K65>=0&K65<ylen())&((( !(Ch(0,0)&(K64>0|K65>0)) ) => ( !(Ch(0,0)&(K64>0|K65>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K64>0|K65>G0))&! (Ch(G0,0)&(K64>G0|K65>0))])&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K64>1|K65>G0))&! (Ch(0,1)&(K64>0|K65>1))])&!(exists(G0:Int)[G0>=0&G0 > 1&(Ch(0,G0)&(K64>0|K65>G0))])) ])
2019-10-14 12:20:27,491 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&turn(p2)])&!(turn(p2))&!(exists(G0:Int)[G0>=0&G0 > 1&turn(p2)&xlen() >= G0])&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(1,0)&! Ch(0,1)])
 f2:!(!Ch(0,0))=>(exists(K64:Int,K65:Int)[ (Ch(K64,K65)&turn(p1)&K64>=0&K64<xlen()&K65>=0&K65<ylen())&((( !(Ch(0,0)&(K64>0|K65>0)) ) => ( !(Ch(0,0)&(K64>0|K65>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K64>0|K65>G0))&! (Ch(G0,0)&(K64>G0|K65>0))])&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K64>1|K65>G0))&! (Ch(0,1)&(K64>0|K65>1))])&!(exists(G0:Int)[G0>=0&G0 > 1&(Ch(0,G0)&(K64>0|K65>G0))])) ])
2019-10-14 12:20:27,548 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(G0,0)])&!(exists(G0:Int)[G0>=0&Ch(1,G0)&! Ch(0,1)])&!(exists(G0:Int)[G0>=0&G0 > 1&Ch(0,G0)])
 f2:forall(K61:Int,K62:Int)[ Ch(K61,K62)&turn(p2)&K61>=0&K61<xlen()&K62>=0&K62<ylen()=>((( !(Ch(0,0)&(K61>0|K62>0)) ) => ( !(Ch(0,0)&(K61>0|K62>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K61>0|K62>G0))&(!turn(p2))])&!((!turn(p2)))&!(exists(G0:Int)[ exists(K63:Int)[ (xlen()=K63)&(G0>=0&G0 > 1&(!turn(p2))& K63 >= G0)] ])&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K61>0|K62>G0))&! (Ch(1,0)&(K61>1|K62>0))&! (Ch(0,1)&(K61>0|K62>1))])) ]
2019-10-14 12:20:27,590 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(G0,0)])&!(exists(G0:Int)[G0>=0&Ch(1,G0)&! Ch(0,1)])&!(exists(G0:Int)[G0>=0&G0 > 1&Ch(0,G0)])
 f2:forall(K61:Int,K62:Int)[ Ch(K61,K62)&turn(p2)&K61>=0&K61<xlen()&K62>=0&K62<ylen()=>((( !(Ch(0,0)&(K61>0|K62>0)) ) => ( !(Ch(0,0)&(K61>0|K62>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K61>0|K62>G0))&(!turn(p2))])&!((!turn(p2)))&!(exists(G0:Int)[ exists(K63:Int)[ (xlen()=K63)&(G0>=0&G0 > 1&(!turn(p2))& K63 >= G0)] ])&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K61>0|K62>G0))&! (Ch(1,0)&(K61>1|K62>0))&! (Ch(0,1)&(K61>0|K62>1))])) ]
2019-10-14 12:20:27,626 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(G0,0)])&!(exists(G0:Int)[G0>=0&Ch(1,G0)&! Ch(0,1)])&!(exists(G0:Int)[G0>=0&G0 > 1&Ch(0,G0)])
 f2:forall(K61:Int,K62:Int)[ Ch(K61,K62)&turn(p2)&K61>=0&K61<xlen()&K62>=0&K62<ylen()=>((( !(Ch(0,0)&(K61>0|K62>0)) ) => ( !(Ch(0,0)&(K61>0|K62>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K61>0|K62>G0))&(!turn(p2))])&!((!turn(p2)))&!(exists(G0:Int)[ exists(K63:Int)[ (xlen()=K63)&(G0>=0&G0 > 1&(!turn(p2))& K63 >= G0)] ])&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K61>0|K62>G0))&! (Ch(1,0)&(K61>1|K62>0))&! (Ch(0,1)&(K61>0|K62>1))])) ]
2019-10-14 12:21:00,983 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:!(!Ch(0,0))=>(exists(K68:Int,K69:Int)[ (Ch(K68,K69)&turn(p1)&K68>=0&K68<xlen()&K69>=0&K69<ylen())&(( !(Ch(0,0)&(K68>0|K69>0)) ) => ( !(Ch(0,0)&(K68>0|K69>0))&(!turn(p1)) )) ])
2019-10-14 12:21:01,019 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:forall(K66:Int,K67:Int)[ Ch(K66,K67)&turn(p2)&K66>=0&K66<xlen()&K67>=0&K67<ylen()=>(( !(Ch(0,0)&(K66>0|K67>0)) ) => ( !(Ch(0,0)&(K66>0|K67>0))&(!turn(p1)) )) ]
2019-10-14 12:21:01,194 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(X1,0)])
 f2:!(!Ch(0,0))=>(exists(K72:Int,K73:Int)[ (Ch(K72,K73)&turn(p1)&K72>=0&K72<xlen()&K73>=0&K73<ylen())&(( !(Ch(0,0)&(K72>0|K73>0)) ) => ( !(Ch(0,0)&(K72>0|K73>0))&(!turn(p1)) )) ])
2019-10-14 12:21:01,229 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:forall(K70:Int,K71:Int)[ Ch(K70,K71)&turn(p2)&K70>=0&K70<xlen()&K71>=0&K71<ylen()=>((( !(Ch(0,0)&(K70>0|K71>0)) ) => ( !(Ch(0,0)&(K70>0|K71>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(Ch(X1,0)&(K70>X1|K71>0))])) ]
2019-10-14 12:21:01,592 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(X1,0)])
 f2:!(!Ch(0,0))=>(exists(K76:Int,K77:Int)[ (Ch(K76,K77)&turn(p1)&K76>=0&K76<xlen()&K77>=0&K77<ylen())&((( !(Ch(0,0)&(K76>0|K77>0)) ) => ( !(Ch(0,0)&(K76>0|K77>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(Ch(X1,1)&(K76>X1|K77>1))])) ])
2019-10-14 12:21:01,629 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(X1,1)])
 f2:forall(K74:Int,K75:Int)[ Ch(K74,K75)&turn(p2)&K74>=0&K74<xlen()&K75>=0&K75<ylen()=>((( !(Ch(0,0)&(K74>0|K75>0)) ) => ( !(Ch(0,0)&(K74>0|K75>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(Ch(X1,0)&(K74>X1|K75>0))])) ]
2019-10-14 12:21:01,672 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(X1,1)])
 f2:forall(K74:Int,K75:Int)[ Ch(K74,K75)&turn(p2)&K74>=0&K74<xlen()&K75>=0&K75<ylen()=>((( !(Ch(0,0)&(K74>0|K75>0)) ) => ( !(Ch(0,0)&(K74>0|K75>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(Ch(X1,0)&(K74>X1|K75>0))])) ]
2019-10-14 12:21:02,295 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(X1,0)])
 f2:!(!Ch(0,0))=>(exists(K80:Int,K81:Int)[ (Ch(K80,K81)&turn(p1)&K80>=0&K80<xlen()&K81>=0&K81<ylen())&((( !(Ch(0,0)&(K80>0|K81>0)) ) => ( !(Ch(0,0)&(K80>0|K81>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(Ch(X1,1)&(K80>X1|K81>1))])&!(exists(X1:Int)[X1>=0&(Ch(X1,0)&(K80>X1|K81>0))])) ])
2019-10-14 12:21:02,329 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(X1,1)])&!(exists(X1:Int)[X1>=0&Ch(X1,0)])
 f2:forall(K78:Int,K79:Int)[ Ch(K78,K79)&turn(p2)&K78>=0&K78<xlen()&K79>=0&K79<ylen()=>((( !(Ch(0,0)&(K78>0|K79>0)) ) => ( !(Ch(0,0)&(K78>0|K79>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(Ch(X1,0)&(K78>X1|K79>0))])) ]
2019-10-14 12:21:02,358 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:forall(K16:Int,K17:Int)[K16>=0&K16<xlen()&K17>=0&K17<ylen()=>Ch(K16,K17)]&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)
 f2:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(X1,0)])
2019-10-14 12:21:03,343 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 1&! Ch(0,G0)])
 f2:!(!Ch(0,0))=>(exists(K84:Int,K85:Int)[ (Ch(K84,K85)&turn(p1)&K84>=0&K84<xlen()&K85>=0&K85<ylen())&((( !(Ch(0,0)&(K84>0|K85>0)) ) => ( !(Ch(0,0)&(K84>0|K85>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 1&(Ch(G0,1)&(K84>G0|K85>1))])&!(exists(G0:Int)[G0>=0&G0 = 1&! (Ch(0,G0)&(K84>0|K85>G0))])) ])
2019-10-14 12:21:03,390 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 1&! Ch(0,G0)])
 f2:!(!Ch(0,0))=>(exists(K84:Int,K85:Int)[ (Ch(K84,K85)&turn(p1)&K84>=0&K84<xlen()&K85>=0&K85<ylen())&((( !(Ch(0,0)&(K84>0|K85>0)) ) => ( !(Ch(0,0)&(K84>0|K85>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 1&(Ch(G0,1)&(K84>G0|K85>1))])&!(exists(G0:Int)[G0>=0&G0 = 1&! (Ch(0,G0)&(K84>0|K85>G0))])) ])
2019-10-14 12:21:03,429 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 1&Ch(G0,1)])&!(exists(G0:Int)[G0>=0&G0 = 1&! Ch(0,G0)])
 f2:forall(K82:Int,K83:Int)[ Ch(K82,K83)&turn(p2)&K82>=0&K82<xlen()&K83>=0&K83<ylen()=>((( !(Ch(0,0)&(K82>0|K83>0)) ) => ( !(Ch(0,0)&(K82>0|K83>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 1&! (Ch(0,G0)&(K82>0|K83>G0))])) ]
2019-10-14 12:21:04,054 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 1&! Ch(0,G0)])
 f2:!(!Ch(0,0))=>(exists(K88:Int,K89:Int)[ (Ch(K88,K89)&turn(p1)&K88>=0&K88<xlen()&K89>=0&K89<ylen())&((( !(Ch(0,0)&(K88>0|K89>0)) ) => ( !(Ch(0,0)&(K88>0|K89>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 1&(Ch(G0,1)&(K88>G0|K89>1))])&!(exists(G0:Int)[G0>=0&(Ch(G0,0)&(K88>G0|K89>0))&! (Ch(0,G0)&(K88>0|K89>G0))])) ])
2019-10-14 12:21:04,106 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 1&! Ch(0,G0)])
 f2:!(!Ch(0,0))=>(exists(K88:Int,K89:Int)[ (Ch(K88,K89)&turn(p1)&K88>=0&K88<xlen()&K89>=0&K89<ylen())&((( !(Ch(0,0)&(K88>0|K89>0)) ) => ( !(Ch(0,0)&(K88>0|K89>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 1&(Ch(G0,1)&(K88>G0|K89>1))])&!(exists(G0:Int)[G0>=0&(Ch(G0,0)&(K88>G0|K89>0))&! (Ch(0,G0)&(K88>0|K89>G0))])) ])
2019-10-14 12:21:04,147 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 1&Ch(G0,1)])&!(exists(G0:Int)[G0>=0&Ch(G0,0)&! Ch(0,G0)])
 f2:forall(K86:Int,K87:Int)[ Ch(K86,K87)&turn(p2)&K86>=0&K86<xlen()&K87>=0&K87<ylen()=>((( !(Ch(0,0)&(K86>0|K87>0)) ) => ( !(Ch(0,0)&(K86>0|K87>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 1&! (Ch(0,G0)&(K86>0|K87>G0))])) ]
2019-10-14 12:21:05,176 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 1&! Ch(0,G0)])&!(! Ch(1,1))
 f2:!(!Ch(0,0))=>(exists(K92:Int,K93:Int)[ (Ch(K92,K93)&turn(p1)&K92>=0&K92<xlen()&K93>=0&K93<ylen())&((( !(Ch(0,0)&(K92>0|K93>0)) ) => ( !(Ch(0,0)&(K92>0|K93>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(G0,0)&(K92>G0|K93>0))&! (Ch(0,G0)&(K92>0|K93>G0))])&!(exists(G0:Int)[G0>=0&(Ch(G0,1)&(K92>G0|K93>1))&! (Ch(1,0)&(K92>1|K93>0))])) ])
2019-10-14 12:21:05,502 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 1&! Ch(0,G0)])&!(! Ch(1,1))
 f2:!(!Ch(0,0))=>(exists(K92:Int,K93:Int)[ (Ch(K92,K93)&turn(p1)&K92>=0&K92<xlen()&K93>=0&K93<ylen())&((( !(Ch(0,0)&(K92>0|K93>0)) ) => ( !(Ch(0,0)&(K92>0|K93>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(G0,0)&(K92>G0|K93>0))&! (Ch(0,G0)&(K92>0|K93>G0))])&!(exists(G0:Int)[G0>=0&(Ch(G0,1)&(K92>G0|K93>1))&! (Ch(1,0)&(K92>1|K93>0))])) ])
2019-10-14 12:21:05,553 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(G0,0)&! Ch(0,G0)])&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(1,0)])
 f2:forall(K90:Int,K91:Int)[ Ch(K90,K91)&turn(p2)&K90>=0&K90<xlen()&K91>=0&K91<ylen()=>((( !(Ch(0,0)&(K90>0|K91>0)) ) => ( !(Ch(0,0)&(K90>0|K91>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 1&! (Ch(0,G0)&(K90>0|K91>G0))])&!(! (Ch(1,1)&(K90>1|K91>1)))) ]
2019-10-14 12:21:06,305 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(G0,0)&! turn(p1)])&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! turn(p1)])
 f2:!(!Ch(0,0))=>(exists(K96:Int,K97:Int)[ (Ch(K96,K97)&turn(p1)&K96>=0&K96<xlen()&K97>=0&K97<ylen())&((( !(Ch(0,0)&(K96>0|K97>0)) ) => ( !(Ch(0,0)&(K96>0|K97>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(G0,0)&(K96>G0|K97>0))&! (Ch(0,G0)&(K96>0|K97>G0))])&!(exists(G0:Int)[G0>=0&(Ch(G0,1)&(K96>G0|K97>1))&! (Ch(1,0)&(K96>1|K97>0))])) ])
2019-10-14 12:21:06,354 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(G0,0)&! Ch(0,G0)])&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(1,0)])
 f2:forall(K94:Int,K95:Int)[ Ch(K94,K95)&turn(p2)&K94>=0&K94<xlen()&K95>=0&K95<ylen()=>((( !(Ch(0,0)&(K94>0|K95>0)) ) => ( !(Ch(0,0)&(K94>0|K95>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(G0,0)&(K94>G0|K95>0))&! (!turn(p1))])&!(exists(G0:Int)[G0>=0&(Ch(G0,1)&(K94>G0|K95>1))&! (!turn(p1))])) ]
2019-10-14 12:21:37,152 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(G0,0)&! turn(p1)])&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! turn(p1)])&!(exists(G0:Int)[G0>=0&G0 > 0&! turn(p1)&ylen() >= G0])
 f2:!(!Ch(0,0))=>(exists(K101:Int,K102:Int)[ (Ch(K101,K102)&turn(p1)&K101>=0&K101<xlen()&K102>=0&K102<ylen())&((( !(Ch(0,0)&(K101>0|K102>0)) ) => ( !(Ch(0,0)&(K101>0|K102>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(G0,0)&(K101>G0|K102>0))&! (Ch(0,G0)&(K101>0|K102>G0))])&!(exists(G0:Int)[G0>=0&(Ch(G0,1)&(K101>G0|K102>1))&! (Ch(1,0)&(K101>1|K102>0))])) ])
2019-10-14 12:21:37,194 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(G0,0)&! Ch(0,G0)])&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(1,0)])
 f2:forall(K98:Int,K99:Int)[ Ch(K98,K99)&turn(p2)&K98>=0&K98<xlen()&K99>=0&K99<ylen()=>((( !(Ch(0,0)&(K98>0|K99>0)) ) => ( !(Ch(0,0)&(K98>0|K99>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(G0,0)&(K98>G0|K99>0))&! (!turn(p1))])&!(exists(G0:Int)[G0>=0&(Ch(G0,1)&(K98>G0|K99>1))&! (!turn(p1))])&!(exists(G0:Int)[ exists(K100:Int)[ (ylen()=K100)&(G0>=0&G0 > 0&! (!turn(p1))& K100 >= G0)] ])) ]
2019-10-14 12:21:49,392 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:!(!Ch(0,0))=>(exists(K21:Int,K22:Int)[ (Ch(K21,K22)&turn(p1)&K21>=0&K21<xlen()&K22>=0&K22<ylen())&(( !(Ch(0,0)&(K21>0|K22>0)) ) => ( !(Ch(0,0)&(K21>0|K22>0))&(!turn(p1)) )) ])
2019-10-14 12:21:49,433 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:forall(K19:Int,K20:Int)[ Ch(K19,K20)&turn(p2)&K19>=0&K19<xlen()&K20>=0&K20<ylen()=>(( !(Ch(0,0)&(K19>0|K20>0)) ) => ( !(Ch(0,0)&(K19>0|K20>0))&(!turn(p1)) )) ]
2019-10-14 12:21:49,632 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(0,X1)])
 f2:!(!Ch(0,0))=>(exists(K25:Int,K26:Int)[ (Ch(K25,K26)&turn(p1)&K25>=0&K25<xlen()&K26>=0&K26<ylen())&(( !(Ch(0,0)&(K25>0|K26>0)) ) => ( !(Ch(0,0)&(K25>0|K26>0))&(!turn(p1)) )) ])
2019-10-14 12:21:49,678 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:forall(K23:Int,K24:Int)[ Ch(K23,K24)&turn(p2)&K23>=0&K23<xlen()&K24>=0&K24<ylen()=>((( !(Ch(0,0)&(K23>0|K24>0)) ) => ( !(Ch(0,0)&(K23>0|K24>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(Ch(0,X1)&(K23>0|K24>X1))])) ]
2019-10-14 12:21:50,088 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(0,X1)])
 f2:!(!Ch(0,0))=>(exists(K29:Int,K30:Int)[ (Ch(K29,K30)&turn(p1)&K29>=0&K29<xlen()&K30>=0&K30<ylen())&((( !(Ch(0,0)&(K29>0|K30>0)) ) => ( !(Ch(0,0)&(K29>0|K30>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(Ch(1,X1)&(K29>1|K30>X1))])) ])
2019-10-14 12:21:50,126 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(1,X1)])
 f2:forall(K27:Int,K28:Int)[ Ch(K27,K28)&turn(p2)&K27>=0&K27<xlen()&K28>=0&K28<ylen()=>((( !(Ch(0,0)&(K27>0|K28>0)) ) => ( !(Ch(0,0)&(K27>0|K28>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(Ch(0,X1)&(K27>0|K28>X1))])) ]
2019-10-14 12:21:50,182 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(1,X1)])
 f2:forall(K27:Int,K28:Int)[ Ch(K27,K28)&turn(p2)&K27>=0&K27<xlen()&K28>=0&K28<ylen()=>((( !(Ch(0,0)&(K27>0|K28>0)) ) => ( !(Ch(0,0)&(K27>0|K28>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(Ch(0,X1)&(K27>0|K28>X1))])) ]
2019-10-14 12:21:50,861 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(0,X1)])
 f2:!(!Ch(0,0))=>(exists(K33:Int,K34:Int)[ (Ch(K33,K34)&turn(p1)&K33>=0&K33<xlen()&K34>=0&K34<ylen())&((( !(Ch(0,0)&(K33>0|K34>0)) ) => ( !(Ch(0,0)&(K33>0|K34>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(Ch(1,X1)&(K33>1|K34>X1))])&!(exists(X1:Int)[X1>=0&(Ch(0,X1)&(K33>0|K34>X1))])) ])
2019-10-14 12:21:50,898 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(1,X1)])&!(exists(X1:Int)[X1>=0&Ch(0,X1)])
 f2:forall(K31:Int,K32:Int)[ Ch(K31,K32)&turn(p2)&K31>=0&K31<xlen()&K32>=0&K32<ylen()=>((( !(Ch(0,0)&(K31>0|K32>0)) ) => ( !(Ch(0,0)&(K31>0|K32>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(Ch(0,X1)&(K31>0|K32>X1))])) ]
2019-10-14 12:21:50,927 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:forall(K16:Int,K17:Int)[K16>=0&K16<xlen()&K17>=0&K17<ylen()=>Ch(K16,K17)]&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)
 f2:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(0,X1)])
2019-10-14 12:21:51,912 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 0&! Ch(1,G0)])
 f2:!(!Ch(0,0))=>(exists(K37:Int,K38:Int)[ (Ch(K37,K38)&turn(p1)&K37>=0&K37<xlen()&K38>=0&K38<ylen())&((( !(Ch(0,0)&(K37>0|K38>0)) ) => ( !(Ch(0,0)&(K37>0|K38>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 0&(Ch(1,G0)&(K37>1|K38>G0))])&!(exists(G0:Int)[G0>=0&G0 = 0&! (Ch(1,G0)&(K37>1|K38>G0))])) ])
2019-10-14 12:21:51,961 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 > 0&Ch(1,G0)])&!(exists(G0:Int)[G0>=0&G0 = 0&! Ch(1,G0)])
 f2:forall(K35:Int,K36:Int)[ Ch(K35,K36)&turn(p2)&K35>=0&K35<xlen()&K36>=0&K36<ylen()=>((( !(Ch(0,0)&(K35>0|K36>0)) ) => ( !(Ch(0,0)&(K35>0|K36>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 0&! (Ch(1,G0)&(K35>1|K36>G0))])) ]
2019-10-14 12:21:52,602 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 0&! Ch(1,G0)])
 f2:!(!Ch(0,0))=>(exists(K41:Int,K42:Int)[ (Ch(K41,K42)&turn(p1)&K41>=0&K41<xlen()&K42>=0&K42<ylen())&((( !(Ch(0,0)&(K41>0|K42>0)) ) => ( !(Ch(0,0)&(K41>0|K42>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 0&(Ch(1,G0)&(K41>1|K42>G0))])&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K41>0|K42>G0))&! (Ch(G0,0)&(K41>G0|K42>0))])) ])
2019-10-14 12:21:52,670 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 0&! Ch(1,G0)])
 f2:!(!Ch(0,0))=>(exists(K41:Int,K42:Int)[ (Ch(K41,K42)&turn(p1)&K41>=0&K41<xlen()&K42>=0&K42<ylen())&((( !(Ch(0,0)&(K41>0|K42>0)) ) => ( !(Ch(0,0)&(K41>0|K42>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 0&(Ch(1,G0)&(K41>1|K42>G0))])&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K41>0|K42>G0))&! (Ch(G0,0)&(K41>G0|K42>0))])) ])
2019-10-14 12:21:52,710 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 > 0&Ch(1,G0)])&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(G0,0)])
 f2:forall(K39:Int,K40:Int)[ Ch(K39,K40)&turn(p2)&K39>=0&K39<xlen()&K40>=0&K40<ylen()=>((( !(Ch(0,0)&(K39>0|K40>0)) ) => ( !(Ch(0,0)&(K39>0|K40>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 0&! (Ch(1,G0)&(K39>1|K40>G0))])) ]
2019-10-14 12:21:52,977 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:!(!Ch(0,0))=>(exists(K21:Int,K22:Int)[ (Ch(K21,K22)&turn(p1)&K21>=0&K21<xlen()&K22>=0&K22<ylen())&(( !(Ch(0,0)&(K21>0|K22>0)) ) => ( !(Ch(0,0)&(K21>0|K22>0))&(!turn(p1)) )) ])
2019-10-14 12:21:53,019 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:forall(K19:Int,K20:Int)[ Ch(K19,K20)&turn(p2)&K19>=0&K19<xlen()&K20>=0&K20<ylen()=>(( !(Ch(0,0)&(K19>0|K20>0)) ) => ( !(Ch(0,0)&(K19>0|K20>0))&(!turn(p1)) )) ]
2019-10-14 12:21:53,240 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(0,X1)])
 f2:!(!Ch(0,0))=>(exists(K25:Int,K26:Int)[ (Ch(K25,K26)&turn(p1)&K25>=0&K25<xlen()&K26>=0&K26<ylen())&(( !(Ch(0,0)&(K25>0|K26>0)) ) => ( !(Ch(0,0)&(K25>0|K26>0))&(!turn(p1)) )) ])
2019-10-14 12:21:53,278 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:forall(K23:Int,K24:Int)[ Ch(K23,K24)&turn(p2)&K23>=0&K23<xlen()&K24>=0&K24<ylen()=>((( !(Ch(0,0)&(K23>0|K24>0)) ) => ( !(Ch(0,0)&(K23>0|K24>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(Ch(0,X1)&(K23>0|K24>X1))])) ]
2019-10-14 12:21:53,701 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(0,X1)])
 f2:!(!Ch(0,0))=>(exists(K29:Int,K30:Int)[ (Ch(K29,K30)&turn(p1)&K29>=0&K29<xlen()&K30>=0&K30<ylen())&((( !(Ch(0,0)&(K29>0|K30>0)) ) => ( !(Ch(0,0)&(K29>0|K30>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(Ch(1,X1)&(K29>1|K30>X1))])) ])
2019-10-14 12:21:53,736 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(1,X1)])
 f2:forall(K27:Int,K28:Int)[ Ch(K27,K28)&turn(p2)&K27>=0&K27<xlen()&K28>=0&K28<ylen()=>((( !(Ch(0,0)&(K27>0|K28>0)) ) => ( !(Ch(0,0)&(K27>0|K28>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(Ch(0,X1)&(K27>0|K28>X1))])) ]
2019-10-14 12:21:53,787 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(1,X1)])
 f2:forall(K27:Int,K28:Int)[ Ch(K27,K28)&turn(p2)&K27>=0&K27<xlen()&K28>=0&K28<ylen()=>((( !(Ch(0,0)&(K27>0|K28>0)) ) => ( !(Ch(0,0)&(K27>0|K28>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(Ch(0,X1)&(K27>0|K28>X1))])) ]
2019-10-14 12:21:54,475 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(0,X1)])
 f2:!(!Ch(0,0))=>(exists(K33:Int,K34:Int)[ (Ch(K33,K34)&turn(p1)&K33>=0&K33<xlen()&K34>=0&K34<ylen())&((( !(Ch(0,0)&(K33>0|K34>0)) ) => ( !(Ch(0,0)&(K33>0|K34>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(Ch(1,X1)&(K33>1|K34>X1))])&!(exists(X1:Int)[X1>=0&(Ch(0,X1)&(K33>0|K34>X1))])) ])
2019-10-14 12:21:54,512 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(1,X1)])&!(exists(X1:Int)[X1>=0&Ch(0,X1)])
 f2:forall(K31:Int,K32:Int)[ Ch(K31,K32)&turn(p2)&K31>=0&K31<xlen()&K32>=0&K32<ylen()=>((( !(Ch(0,0)&(K31>0|K32>0)) ) => ( !(Ch(0,0)&(K31>0|K32>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(Ch(0,X1)&(K31>0|K32>X1))])) ]
2019-10-14 12:21:54,548 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:forall(K16:Int,K17:Int)[K16>=0&K16<xlen()&K17>=0&K17<ylen()=>Ch(K16,K17)]&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)
 f2:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(0,X1)])
2019-10-14 12:21:55,610 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 0&! Ch(1,G0)])
 f2:!(!Ch(0,0))=>(exists(K37:Int,K38:Int)[ (Ch(K37,K38)&turn(p1)&K37>=0&K37<xlen()&K38>=0&K38<ylen())&((( !(Ch(0,0)&(K37>0|K38>0)) ) => ( !(Ch(0,0)&(K37>0|K38>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 0&(Ch(1,G0)&(K37>1|K38>G0))])&!(exists(G0:Int)[G0>=0&G0 = 0&! (Ch(1,G0)&(K37>1|K38>G0))])) ])
2019-10-14 12:21:55,665 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 > 0&Ch(1,G0)])&!(exists(G0:Int)[G0>=0&G0 = 0&! Ch(1,G0)])
 f2:forall(K35:Int,K36:Int)[ Ch(K35,K36)&turn(p2)&K35>=0&K35<xlen()&K36>=0&K36<ylen()=>((( !(Ch(0,0)&(K35>0|K36>0)) ) => ( !(Ch(0,0)&(K35>0|K36>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 0&! (Ch(1,G0)&(K35>1|K36>G0))])) ]
2019-10-14 12:21:56,427 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 0&! Ch(1,G0)])
 f2:!(!Ch(0,0))=>(exists(K41:Int,K42:Int)[ (Ch(K41,K42)&turn(p1)&K41>=0&K41<xlen()&K42>=0&K42<ylen())&((( !(Ch(0,0)&(K41>0|K42>0)) ) => ( !(Ch(0,0)&(K41>0|K42>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 0&(Ch(1,G0)&(K41>1|K42>G0))])&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K41>0|K42>G0))&! (Ch(G0,0)&(K41>G0|K42>0))])) ])
2019-10-14 12:21:56,504 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 0&! Ch(1,G0)])
 f2:!(!Ch(0,0))=>(exists(K41:Int,K42:Int)[ (Ch(K41,K42)&turn(p1)&K41>=0&K41<xlen()&K42>=0&K42<ylen())&((( !(Ch(0,0)&(K41>0|K42>0)) ) => ( !(Ch(0,0)&(K41>0|K42>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 0&(Ch(1,G0)&(K41>1|K42>G0))])&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K41>0|K42>G0))&! (Ch(G0,0)&(K41>G0|K42>0))])) ])
2019-10-14 12:21:56,555 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 > 0&Ch(1,G0)])&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(G0,0)])
 f2:forall(K39:Int,K40:Int)[ Ch(K39,K40)&turn(p2)&K39>=0&K39<xlen()&K40>=0&K40<ylen()=>((( !(Ch(0,0)&(K39>0|K40>0)) ) => ( !(Ch(0,0)&(K39>0|K40>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 0&! (Ch(1,G0)&(K39>1|K40>G0))])) ]
2019-10-14 12:21:57,747 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 0&! Ch(1,G0)])&!(turn(p2))
 f2:!(!Ch(0,0))=>(exists(K45:Int,K46:Int)[ (Ch(K45,K46)&turn(p1)&K45>=0&K45<xlen()&K46>=0&K46<ylen())&((( !(Ch(0,0)&(K45>0|K46>0)) ) => ( !(Ch(0,0)&(K45>0|K46>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K45>0|K46>G0))&! (Ch(G0,0)&(K45>G0|K46>0))])&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K45>1|K46>G0))&! (Ch(0,1)&(K45>0|K46>1))])) ])
2019-10-14 12:21:58,118 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 0&! Ch(1,G0)])&!(turn(p2))
 f2:!(!Ch(0,0))=>(exists(K45:Int,K46:Int)[ (Ch(K45,K46)&turn(p1)&K45>=0&K45<xlen()&K46>=0&K46<ylen())&((( !(Ch(0,0)&(K45>0|K46>0)) ) => ( !(Ch(0,0)&(K45>0|K46>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K45>0|K46>G0))&! (Ch(G0,0)&(K45>G0|K46>0))])&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K45>1|K46>G0))&! (Ch(0,1)&(K45>0|K46>1))])) ])
2019-10-14 12:21:58,170 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(G0,0)])&!(exists(G0:Int)[G0>=0&Ch(1,G0)&! Ch(0,1)])
 f2:forall(K43:Int,K44:Int)[ Ch(K43,K44)&turn(p2)&K43>=0&K43<xlen()&K44>=0&K44<ylen()=>((( !(Ch(0,0)&(K43>0|K44>0)) ) => ( !(Ch(0,0)&(K43>0|K44>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 0&! (Ch(1,G0)&(K43>1|K44>G0))])&!((!turn(p2)))) ]
2019-10-14 12:21:58,986 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(turn(p2))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&turn(p2)])
 f2:!(!Ch(0,0))=>(exists(K49:Int,K50:Int)[ (Ch(K49,K50)&turn(p1)&K49>=0&K49<xlen()&K50>=0&K50<ylen())&((( !(Ch(0,0)&(K49>0|K50>0)) ) => ( !(Ch(0,0)&(K49>0|K50>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K49>0|K50>G0))&! (Ch(G0,0)&(K49>G0|K50>0))])&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K49>1|K50>G0))&! (Ch(0,1)&(K49>0|K50>1))])) ])
2019-10-14 12:21:59,039 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(G0,0)])&!(exists(G0:Int)[G0>=0&Ch(1,G0)&! Ch(0,1)])
 f2:forall(K47:Int,K48:Int)[ Ch(K47,K48)&turn(p2)&K47>=0&K47<xlen()&K48>=0&K48<ylen()=>((( !(Ch(0,0)&(K47>0|K48>0)) ) => ( !(Ch(0,0)&(K47>0|K48>0))&(!turn(p1)) ))&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K47>0|K48>G0))&(!turn(p2))])) ]
2019-10-14 12:23:07,477 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:!(!Ch(0,0))=>(exists(K21:Int,K22:Int)[ (Ch(K21,K22)&turn(p1)&K21>=0&K21<xlen()&K22>=0&K22<ylen())&(( !(Ch(0,0)&(K21>0|K22>0)) ) => ( !(Ch(0,0)&(K21>0|K22>0))&(!turn(p1)) )) ])
2019-10-14 12:23:07,518 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:forall(K19:Int,K20:Int)[ Ch(K19,K20)&turn(p2)&K19>=0&K19<xlen()&K20>=0&K20<ylen()=>(( !(Ch(0,0)&(K19>0|K20>0)) ) => ( !(Ch(0,0)&(K19>0|K20>0))&(!turn(p1)) )) ]
2019-10-14 12:23:07,728 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(0,X1)])
 f2:!(!Ch(0,0))=>(exists(K25:Int,K26:Int)[ (Ch(K25,K26)&turn(p1)&K25>=0&K25<xlen()&K26>=0&K26<ylen())&(( !(Ch(0,0)&(K25>0|K26>0)) ) => ( !(Ch(0,0)&(K25>0|K26>0))&(!turn(p1)) )) ])
2019-10-14 12:23:07,766 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:forall(K23:Int,K24:Int)[ Ch(K23,K24)&turn(p2)&K23>=0&K23<xlen()&K24>=0&K24<ylen()=>((( !(Ch(0,0)&(K23>0|K24>0)) ) => ( !(Ch(0,0)&(K23>0|K24>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(Ch(0,X1)&(K23>0|K24>X1))])) ]
2019-10-14 12:23:08,177 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(0,X1)])
 f2:!(!Ch(0,0))=>(exists(K29:Int,K30:Int)[ (Ch(K29,K30)&turn(p1)&K29>=0&K29<xlen()&K30>=0&K30<ylen())&((( !(Ch(0,0)&(K29>0|K30>0)) ) => ( !(Ch(0,0)&(K29>0|K30>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(Ch(1,X1)&(K29>1|K30>X1))])) ])
2019-10-14 12:23:08,219 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(1,X1)])
 f2:forall(K27:Int,K28:Int)[ Ch(K27,K28)&turn(p2)&K27>=0&K27<xlen()&K28>=0&K28<ylen()=>((( !(Ch(0,0)&(K27>0|K28>0)) ) => ( !(Ch(0,0)&(K27>0|K28>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(Ch(0,X1)&(K27>0|K28>X1))])) ]
2019-10-14 12:23:08,281 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(1,X1)])
 f2:forall(K27:Int,K28:Int)[ Ch(K27,K28)&turn(p2)&K27>=0&K27<xlen()&K28>=0&K28<ylen()=>((( !(Ch(0,0)&(K27>0|K28>0)) ) => ( !(Ch(0,0)&(K27>0|K28>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(Ch(0,X1)&(K27>0|K28>X1))])) ]
2019-10-14 12:23:08,951 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(0,X1)])
 f2:!(!Ch(0,0))=>(exists(K33:Int,K34:Int)[ (Ch(K33,K34)&turn(p1)&K33>=0&K33<xlen()&K34>=0&K34<ylen())&((( !(Ch(0,0)&(K33>0|K34>0)) ) => ( !(Ch(0,0)&(K33>0|K34>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(Ch(1,X1)&(K33>1|K34>X1))])&!(exists(X1:Int)[X1>=0&(Ch(0,X1)&(K33>0|K34>X1))])) ])
2019-10-14 12:23:08,996 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(1,X1)])&!(exists(X1:Int)[X1>=0&Ch(0,X1)])
 f2:forall(K31:Int,K32:Int)[ Ch(K31,K32)&turn(p2)&K31>=0&K31<xlen()&K32>=0&K32<ylen()=>((( !(Ch(0,0)&(K31>0|K32>0)) ) => ( !(Ch(0,0)&(K31>0|K32>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(Ch(0,X1)&(K31>0|K32>X1))])) ]
2019-10-14 12:23:09,032 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:forall(K16:Int,K17:Int)[K16>=0&K16<xlen()&K17>=0&K17<ylen()=>Ch(K16,K17)]&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)
 f2:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(0,X1)])
2019-10-14 12:23:10,027 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 0&! Ch(1,G0)])
 f2:!(!Ch(0,0))=>(exists(K37:Int,K38:Int)[ (Ch(K37,K38)&turn(p1)&K37>=0&K37<xlen()&K38>=0&K38<ylen())&((( !(Ch(0,0)&(K37>0|K38>0)) ) => ( !(Ch(0,0)&(K37>0|K38>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 0&(Ch(1,G0)&(K37>1|K38>G0))])&!(exists(G0:Int)[G0>=0&G0 = 0&! (Ch(1,G0)&(K37>1|K38>G0))])) ])
2019-10-14 12:23:10,072 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 > 0&Ch(1,G0)])&!(exists(G0:Int)[G0>=0&G0 = 0&! Ch(1,G0)])
 f2:forall(K35:Int,K36:Int)[ Ch(K35,K36)&turn(p2)&K35>=0&K35<xlen()&K36>=0&K36<ylen()=>((( !(Ch(0,0)&(K35>0|K36>0)) ) => ( !(Ch(0,0)&(K35>0|K36>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 0&! (Ch(1,G0)&(K35>1|K36>G0))])) ]
2019-10-14 12:23:10,697 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 0&! Ch(1,G0)])
 f2:!(!Ch(0,0))=>(exists(K41:Int,K42:Int)[ (Ch(K41,K42)&turn(p1)&K41>=0&K41<xlen()&K42>=0&K42<ylen())&((( !(Ch(0,0)&(K41>0|K42>0)) ) => ( !(Ch(0,0)&(K41>0|K42>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 0&(Ch(1,G0)&(K41>1|K42>G0))])&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K41>0|K42>G0))&! (Ch(G0,0)&(K41>G0|K42>0))])) ])
2019-10-14 12:23:10,762 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 0&! Ch(1,G0)])
 f2:!(!Ch(0,0))=>(exists(K41:Int,K42:Int)[ (Ch(K41,K42)&turn(p1)&K41>=0&K41<xlen()&K42>=0&K42<ylen())&((( !(Ch(0,0)&(K41>0|K42>0)) ) => ( !(Ch(0,0)&(K41>0|K42>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 0&(Ch(1,G0)&(K41>1|K42>G0))])&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K41>0|K42>G0))&! (Ch(G0,0)&(K41>G0|K42>0))])) ])
2019-10-14 12:23:10,804 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 > 0&Ch(1,G0)])&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(G0,0)])
 f2:forall(K39:Int,K40:Int)[ Ch(K39,K40)&turn(p2)&K39>=0&K39<xlen()&K40>=0&K40<ylen()=>((( !(Ch(0,0)&(K39>0|K40>0)) ) => ( !(Ch(0,0)&(K39>0|K40>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 0&! (Ch(1,G0)&(K39>1|K40>G0))])) ]
2019-10-14 12:23:11,913 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 0&! Ch(1,G0)])&!(turn(p2))
 f2:!(!Ch(0,0))=>(exists(K45:Int,K46:Int)[ (Ch(K45,K46)&turn(p1)&K45>=0&K45<xlen()&K46>=0&K46<ylen())&((( !(Ch(0,0)&(K45>0|K46>0)) ) => ( !(Ch(0,0)&(K45>0|K46>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K45>0|K46>G0))&! (Ch(G0,0)&(K45>G0|K46>0))])&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K45>1|K46>G0))&! (Ch(0,1)&(K45>0|K46>1))])) ])
2019-10-14 12:23:12,226 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 0&! Ch(1,G0)])&!(turn(p2))
 f2:!(!Ch(0,0))=>(exists(K45:Int,K46:Int)[ (Ch(K45,K46)&turn(p1)&K45>=0&K45<xlen()&K46>=0&K46<ylen())&((( !(Ch(0,0)&(K45>0|K46>0)) ) => ( !(Ch(0,0)&(K45>0|K46>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K45>0|K46>G0))&! (Ch(G0,0)&(K45>G0|K46>0))])&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K45>1|K46>G0))&! (Ch(0,1)&(K45>0|K46>1))])) ])
2019-10-14 12:23:12,281 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(G0,0)])&!(exists(G0:Int)[G0>=0&Ch(1,G0)&! Ch(0,1)])
 f2:forall(K43:Int,K44:Int)[ Ch(K43,K44)&turn(p2)&K43>=0&K43<xlen()&K44>=0&K44<ylen()=>((( !(Ch(0,0)&(K43>0|K44>0)) ) => ( !(Ch(0,0)&(K43>0|K44>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 0&! (Ch(1,G0)&(K43>1|K44>G0))])&!((!turn(p2)))) ]
2019-10-14 12:23:13,018 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(turn(p2))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&turn(p2)])
 f2:!(!Ch(0,0))=>(exists(K49:Int,K50:Int)[ (Ch(K49,K50)&turn(p1)&K49>=0&K49<xlen()&K50>=0&K50<ylen())&((( !(Ch(0,0)&(K49>0|K50>0)) ) => ( !(Ch(0,0)&(K49>0|K50>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K49>0|K50>G0))&! (Ch(G0,0)&(K49>G0|K50>0))])&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K49>1|K50>G0))&! (Ch(0,1)&(K49>0|K50>1))])) ])
2019-10-14 12:23:13,066 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(G0,0)])&!(exists(G0:Int)[G0>=0&Ch(1,G0)&! Ch(0,1)])
 f2:forall(K47:Int,K48:Int)[ Ch(K47,K48)&turn(p2)&K47>=0&K47<xlen()&K48>=0&K48<ylen()=>((( !(Ch(0,0)&(K47>0|K48>0)) ) => ( !(Ch(0,0)&(K47>0|K48>0))&(!turn(p1)) ))&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K47>0|K48>G0))&(!turn(p2))])) ]
2019-10-14 12:23:40,185 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&turn(p2)])&!(turn(p2))&!(exists(G0:Int)[G0>=0&G0 > 1&turn(p2)&xlen() >= G0])
 f2:!(!Ch(0,0))=>(exists(K54:Int,K55:Int)[ (Ch(K54,K55)&turn(p1)&K54>=0&K54<xlen()&K55>=0&K55<ylen())&((( !(Ch(0,0)&(K54>0|K55>0)) ) => ( !(Ch(0,0)&(K54>0|K55>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K54>0|K55>G0))&! (Ch(G0,0)&(K54>G0|K55>0))])&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K54>1|K55>G0))&! (Ch(0,1)&(K54>0|K55>1))])) ])
2019-10-14 12:23:40,235 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(G0,0)])&!(exists(G0:Int)[G0>=0&Ch(1,G0)&! Ch(0,1)])
 f2:forall(K51:Int,K52:Int)[ Ch(K51,K52)&turn(p2)&K51>=0&K51<xlen()&K52>=0&K52<ylen()=>((( !(Ch(0,0)&(K51>0|K52>0)) ) => ( !(Ch(0,0)&(K51>0|K52>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K51>0|K52>G0))&(!turn(p2))])&!((!turn(p2)))&!(exists(G0:Int)[ exists(K53:Int)[ (xlen()=K53)&(G0>=0&G0 > 1&(!turn(p2))& K53 >= G0)] ])) ]
2019-10-14 12:24:07,902 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&turn(p2)])&!(turn(p2))&!(exists(G0:Int)[G0>=0&G0 > 1&turn(p2)&xlen() >= G0])&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(1,0)&! Ch(0,1)])
 f2:!(!Ch(0,0))=>(exists(K59:Int,K60:Int)[ (Ch(K59,K60)&turn(p1)&K59>=0&K59<xlen()&K60>=0&K60<ylen())&((( !(Ch(0,0)&(K59>0|K60>0)) ) => ( !(Ch(0,0)&(K59>0|K60>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K59>0|K60>G0))&! (Ch(G0,0)&(K59>G0|K60>0))])&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K59>1|K60>G0))&! (Ch(0,1)&(K59>0|K60>1))])) ])
2019-10-14 12:24:08,394 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&turn(p2)])&!(turn(p2))&!(exists(G0:Int)[G0>=0&G0 > 1&turn(p2)&xlen() >= G0])&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(1,0)&! Ch(0,1)])
 f2:!(!Ch(0,0))=>(exists(K59:Int,K60:Int)[ (Ch(K59,K60)&turn(p1)&K59>=0&K59<xlen()&K60>=0&K60<ylen())&((( !(Ch(0,0)&(K59>0|K60>0)) ) => ( !(Ch(0,0)&(K59>0|K60>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K59>0|K60>G0))&! (Ch(G0,0)&(K59>G0|K60>0))])&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K59>1|K60>G0))&! (Ch(0,1)&(K59>0|K60>1))])) ])
2019-10-14 12:24:08,447 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(G0,0)])&!(exists(G0:Int)[G0>=0&Ch(1,G0)&! Ch(0,1)])
 f2:forall(K56:Int,K57:Int)[ Ch(K56,K57)&turn(p2)&K56>=0&K56<xlen()&K57>=0&K57<ylen()=>((( !(Ch(0,0)&(K56>0|K57>0)) ) => ( !(Ch(0,0)&(K56>0|K57>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K56>0|K57>G0))&(!turn(p2))])&!((!turn(p2)))&!(exists(G0:Int)[ exists(K58:Int)[ (xlen()=K58)&(G0>=0&G0 > 1&(!turn(p2))& K58 >= G0)] ])&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K56>0|K57>G0))&! (Ch(1,0)&(K56>1|K57>0))&! (Ch(0,1)&(K56>0|K57>1))])) ]
2019-10-14 12:24:08,492 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(G0,0)])&!(exists(G0:Int)[G0>=0&Ch(1,G0)&! Ch(0,1)])
 f2:forall(K56:Int,K57:Int)[ Ch(K56,K57)&turn(p2)&K56>=0&K56<xlen()&K57>=0&K57<ylen()=>((( !(Ch(0,0)&(K56>0|K57>0)) ) => ( !(Ch(0,0)&(K56>0|K57>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K56>0|K57>G0))&(!turn(p2))])&!((!turn(p2)))&!(exists(G0:Int)[ exists(K58:Int)[ (xlen()=K58)&(G0>=0&G0 > 1&(!turn(p2))& K58 >= G0)] ])&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K56>0|K57>G0))&! (Ch(1,0)&(K56>1|K57>0))&! (Ch(0,1)&(K56>0|K57>1))])) ]
2019-10-14 12:24:08,529 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(G0,0)])&!(exists(G0:Int)[G0>=0&Ch(1,G0)&! Ch(0,1)])
 f2:forall(K56:Int,K57:Int)[ Ch(K56,K57)&turn(p2)&K56>=0&K56<xlen()&K57>=0&K57<ylen()=>((( !(Ch(0,0)&(K56>0|K57>0)) ) => ( !(Ch(0,0)&(K56>0|K57>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K56>0|K57>G0))&(!turn(p2))])&!((!turn(p2)))&!(exists(G0:Int)[ exists(K58:Int)[ (xlen()=K58)&(G0>=0&G0 > 1&(!turn(p2))& K58 >= G0)] ])&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K56>0|K57>G0))&! (Ch(1,0)&(K56>1|K57>0))&! (Ch(0,1)&(K56>0|K57>1))])) ]
2019-10-14 12:24:41,945 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&turn(p2)])&!(turn(p2))&!(exists(G0:Int)[G0>=0&G0 > 1&turn(p2)&xlen() >= G0])&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(1,0)&! Ch(0,1)])
 f2:!(!Ch(0,0))=>(exists(K64:Int,K65:Int)[ (Ch(K64,K65)&turn(p1)&K64>=0&K64<xlen()&K65>=0&K65<ylen())&((( !(Ch(0,0)&(K64>0|K65>0)) ) => ( !(Ch(0,0)&(K64>0|K65>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K64>0|K65>G0))&! (Ch(G0,0)&(K64>G0|K65>0))])&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K64>1|K65>G0))&! (Ch(0,1)&(K64>0|K65>1))])&!(exists(G0:Int)[G0>=0&G0 > 1&(Ch(0,G0)&(K64>0|K65>G0))])) ])
2019-10-14 12:24:42,664 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&turn(p2)])&!(turn(p2))&!(exists(G0:Int)[G0>=0&G0 > 1&turn(p2)&xlen() >= G0])&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(1,0)&! Ch(0,1)])
 f2:!(!Ch(0,0))=>(exists(K64:Int,K65:Int)[ (Ch(K64,K65)&turn(p1)&K64>=0&K64<xlen()&K65>=0&K65<ylen())&((( !(Ch(0,0)&(K64>0|K65>0)) ) => ( !(Ch(0,0)&(K64>0|K65>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K64>0|K65>G0))&! (Ch(G0,0)&(K64>G0|K65>0))])&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K64>1|K65>G0))&! (Ch(0,1)&(K64>0|K65>1))])&!(exists(G0:Int)[G0>=0&G0 > 1&(Ch(0,G0)&(K64>0|K65>G0))])) ])
2019-10-14 12:24:42,734 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(G0,0)])&!(exists(G0:Int)[G0>=0&Ch(1,G0)&! Ch(0,1)])&!(exists(G0:Int)[G0>=0&G0 > 1&Ch(0,G0)])
 f2:forall(K61:Int,K62:Int)[ Ch(K61,K62)&turn(p2)&K61>=0&K61<xlen()&K62>=0&K62<ylen()=>((( !(Ch(0,0)&(K61>0|K62>0)) ) => ( !(Ch(0,0)&(K61>0|K62>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K61>0|K62>G0))&(!turn(p2))])&!((!turn(p2)))&!(exists(G0:Int)[ exists(K63:Int)[ (xlen()=K63)&(G0>=0&G0 > 1&(!turn(p2))& K63 >= G0)] ])&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K61>0|K62>G0))&! (Ch(1,0)&(K61>1|K62>0))&! (Ch(0,1)&(K61>0|K62>1))])) ]
2019-10-14 12:24:42,796 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(G0,0)])&!(exists(G0:Int)[G0>=0&Ch(1,G0)&! Ch(0,1)])&!(exists(G0:Int)[G0>=0&G0 > 1&Ch(0,G0)])
 f2:forall(K61:Int,K62:Int)[ Ch(K61,K62)&turn(p2)&K61>=0&K61<xlen()&K62>=0&K62<ylen()=>((( !(Ch(0,0)&(K61>0|K62>0)) ) => ( !(Ch(0,0)&(K61>0|K62>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K61>0|K62>G0))&(!turn(p2))])&!((!turn(p2)))&!(exists(G0:Int)[ exists(K63:Int)[ (xlen()=K63)&(G0>=0&G0 > 1&(!turn(p2))& K63 >= G0)] ])&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K61>0|K62>G0))&! (Ch(1,0)&(K61>1|K62>0))&! (Ch(0,1)&(K61>0|K62>1))])) ]
2019-10-14 12:24:42,832 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(G0,0)])&!(exists(G0:Int)[G0>=0&Ch(1,G0)&! Ch(0,1)])&!(exists(G0:Int)[G0>=0&G0 > 1&Ch(0,G0)])
 f2:forall(K61:Int,K62:Int)[ Ch(K61,K62)&turn(p2)&K61>=0&K61<xlen()&K62>=0&K62<ylen()=>((( !(Ch(0,0)&(K61>0|K62>0)) ) => ( !(Ch(0,0)&(K61>0|K62>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K61>0|K62>G0))&(!turn(p2))])&!((!turn(p2)))&!(exists(G0:Int)[ exists(K63:Int)[ (xlen()=K63)&(G0>=0&G0 > 1&(!turn(p2))& K63 >= G0)] ])&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K61>0|K62>G0))&! (Ch(1,0)&(K61>1|K62>0))&! (Ch(0,1)&(K61>0|K62>1))])) ]
2019-10-14 12:25:14,819 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:!(!Ch(0,0))=>(exists(K21:Int,K22:Int)[ (Ch(K21,K22)&turn(p1)&K21>=0&K21<xlen()&K22>=0&K22<ylen())&(( !(Ch(0,0)&(K21>0|K22>0)) ) => ( !(Ch(0,0)&(K21>0|K22>0))&(!turn(p1)) )) ])
2019-10-14 12:25:14,866 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:forall(K19:Int,K20:Int)[ Ch(K19,K20)&turn(p2)&K19>=0&K19<xlen()&K20>=0&K20<ylen()=>(( !(Ch(0,0)&(K19>0|K20>0)) ) => ( !(Ch(0,0)&(K19>0|K20>0))&(!turn(p1)) )) ]
2019-10-14 12:25:15,073 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(0,X1)])
 f2:!(!Ch(0,0))=>(exists(K25:Int,K26:Int)[ (Ch(K25,K26)&turn(p1)&K25>=0&K25<xlen()&K26>=0&K26<ylen())&(( !(Ch(0,0)&(K25>0|K26>0)) ) => ( !(Ch(0,0)&(K25>0|K26>0))&(!turn(p1)) )) ])
2019-10-14 12:25:15,108 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:forall(K23:Int,K24:Int)[ Ch(K23,K24)&turn(p2)&K23>=0&K23<xlen()&K24>=0&K24<ylen()=>((( !(Ch(0,0)&(K23>0|K24>0)) ) => ( !(Ch(0,0)&(K23>0|K24>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(Ch(0,X1)&(K23>0|K24>X1))])) ]
2019-10-14 12:25:15,574 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(0,X1)])
 f2:!(!Ch(0,0))=>(exists(K29:Int,K30:Int)[ (Ch(K29,K30)&turn(p1)&K29>=0&K29<xlen()&K30>=0&K30<ylen())&((( !(Ch(0,0)&(K29>0|K30>0)) ) => ( !(Ch(0,0)&(K29>0|K30>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(Ch(1,X1)&(K29>1|K30>X1))])) ])
2019-10-14 12:25:15,616 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(1,X1)])
 f2:forall(K27:Int,K28:Int)[ Ch(K27,K28)&turn(p2)&K27>=0&K27<xlen()&K28>=0&K28<ylen()=>((( !(Ch(0,0)&(K27>0|K28>0)) ) => ( !(Ch(0,0)&(K27>0|K28>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(Ch(0,X1)&(K27>0|K28>X1))])) ]
2019-10-14 12:25:15,665 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(1,X1)])
 f2:forall(K27:Int,K28:Int)[ Ch(K27,K28)&turn(p2)&K27>=0&K27<xlen()&K28>=0&K28<ylen()=>((( !(Ch(0,0)&(K27>0|K28>0)) ) => ( !(Ch(0,0)&(K27>0|K28>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(Ch(0,X1)&(K27>0|K28>X1))])) ]
2019-10-14 12:25:16,307 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(0,X1)])
 f2:!(!Ch(0,0))=>(exists(K33:Int,K34:Int)[ (Ch(K33,K34)&turn(p1)&K33>=0&K33<xlen()&K34>=0&K34<ylen())&((( !(Ch(0,0)&(K33>0|K34>0)) ) => ( !(Ch(0,0)&(K33>0|K34>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(Ch(1,X1)&(K33>1|K34>X1))])&!(exists(X1:Int)[X1>=0&(Ch(0,X1)&(K33>0|K34>X1))])) ])
2019-10-14 12:25:16,346 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(1,X1)])&!(exists(X1:Int)[X1>=0&Ch(0,X1)])
 f2:forall(K31:Int,K32:Int)[ Ch(K31,K32)&turn(p2)&K31>=0&K31<xlen()&K32>=0&K32<ylen()=>((( !(Ch(0,0)&(K31>0|K32>0)) ) => ( !(Ch(0,0)&(K31>0|K32>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(Ch(0,X1)&(K31>0|K32>X1))])) ]
2019-10-14 12:25:16,378 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:forall(K16:Int,K17:Int)[K16>=0&K16<xlen()&K17>=0&K17<ylen()=>Ch(K16,K17)]&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)
 f2:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(0,X1)])
2019-10-14 12:25:17,351 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 0&! Ch(1,G0)])
 f2:!(!Ch(0,0))=>(exists(K37:Int,K38:Int)[ (Ch(K37,K38)&turn(p1)&K37>=0&K37<xlen()&K38>=0&K38<ylen())&((( !(Ch(0,0)&(K37>0|K38>0)) ) => ( !(Ch(0,0)&(K37>0|K38>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 0&(Ch(1,G0)&(K37>1|K38>G0))])&!(exists(G0:Int)[G0>=0&G0 = 0&! (Ch(1,G0)&(K37>1|K38>G0))])) ])
2019-10-14 12:25:17,394 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 > 0&Ch(1,G0)])&!(exists(G0:Int)[G0>=0&G0 = 0&! Ch(1,G0)])
 f2:forall(K35:Int,K36:Int)[ Ch(K35,K36)&turn(p2)&K35>=0&K35<xlen()&K36>=0&K36<ylen()=>((( !(Ch(0,0)&(K35>0|K36>0)) ) => ( !(Ch(0,0)&(K35>0|K36>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 0&! (Ch(1,G0)&(K35>1|K36>G0))])) ]
2019-10-14 12:25:17,997 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 0&! Ch(1,G0)])
 f2:!(!Ch(0,0))=>(exists(K41:Int,K42:Int)[ (Ch(K41,K42)&turn(p1)&K41>=0&K41<xlen()&K42>=0&K42<ylen())&((( !(Ch(0,0)&(K41>0|K42>0)) ) => ( !(Ch(0,0)&(K41>0|K42>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 0&(Ch(1,G0)&(K41>1|K42>G0))])&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K41>0|K42>G0))&! (Ch(G0,0)&(K41>G0|K42>0))])) ])
2019-10-14 12:25:18,071 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 0&! Ch(1,G0)])
 f2:!(!Ch(0,0))=>(exists(K41:Int,K42:Int)[ (Ch(K41,K42)&turn(p1)&K41>=0&K41<xlen()&K42>=0&K42<ylen())&((( !(Ch(0,0)&(K41>0|K42>0)) ) => ( !(Ch(0,0)&(K41>0|K42>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 0&(Ch(1,G0)&(K41>1|K42>G0))])&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K41>0|K42>G0))&! (Ch(G0,0)&(K41>G0|K42>0))])) ])
2019-10-14 12:25:18,110 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 > 0&Ch(1,G0)])&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(G0,0)])
 f2:forall(K39:Int,K40:Int)[ Ch(K39,K40)&turn(p2)&K39>=0&K39<xlen()&K40>=0&K40<ylen()=>((( !(Ch(0,0)&(K39>0|K40>0)) ) => ( !(Ch(0,0)&(K39>0|K40>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 0&! (Ch(1,G0)&(K39>1|K40>G0))])) ]
2019-10-14 12:25:19,166 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 0&! Ch(1,G0)])&!(turn(p2))
 f2:!(!Ch(0,0))=>(exists(K45:Int,K46:Int)[ (Ch(K45,K46)&turn(p1)&K45>=0&K45<xlen()&K46>=0&K46<ylen())&((( !(Ch(0,0)&(K45>0|K46>0)) ) => ( !(Ch(0,0)&(K45>0|K46>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K45>0|K46>G0))&! (Ch(G0,0)&(K45>G0|K46>0))])&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K45>1|K46>G0))&! (Ch(0,1)&(K45>0|K46>1))])) ])
2019-10-14 12:25:19,479 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 0&! Ch(1,G0)])&!(turn(p2))
 f2:!(!Ch(0,0))=>(exists(K45:Int,K46:Int)[ (Ch(K45,K46)&turn(p1)&K45>=0&K45<xlen()&K46>=0&K46<ylen())&((( !(Ch(0,0)&(K45>0|K46>0)) ) => ( !(Ch(0,0)&(K45>0|K46>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K45>0|K46>G0))&! (Ch(G0,0)&(K45>G0|K46>0))])&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K45>1|K46>G0))&! (Ch(0,1)&(K45>0|K46>1))])) ])
2019-10-14 12:25:19,532 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(G0,0)])&!(exists(G0:Int)[G0>=0&Ch(1,G0)&! Ch(0,1)])
 f2:forall(K43:Int,K44:Int)[ Ch(K43,K44)&turn(p2)&K43>=0&K43<xlen()&K44>=0&K44<ylen()=>((( !(Ch(0,0)&(K43>0|K44>0)) ) => ( !(Ch(0,0)&(K43>0|K44>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 0&! (Ch(1,G0)&(K43>1|K44>G0))])&!((!turn(p2)))) ]
2019-10-14 12:25:20,242 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(turn(p2))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&turn(p2)])
 f2:!(!Ch(0,0))=>(exists(K49:Int,K50:Int)[ (Ch(K49,K50)&turn(p1)&K49>=0&K49<xlen()&K50>=0&K50<ylen())&((( !(Ch(0,0)&(K49>0|K50>0)) ) => ( !(Ch(0,0)&(K49>0|K50>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K49>0|K50>G0))&! (Ch(G0,0)&(K49>G0|K50>0))])&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K49>1|K50>G0))&! (Ch(0,1)&(K49>0|K50>1))])) ])
2019-10-14 12:25:20,285 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(G0,0)])&!(exists(G0:Int)[G0>=0&Ch(1,G0)&! Ch(0,1)])
 f2:forall(K47:Int,K48:Int)[ Ch(K47,K48)&turn(p2)&K47>=0&K47<xlen()&K48>=0&K48<ylen()=>((( !(Ch(0,0)&(K47>0|K48>0)) ) => ( !(Ch(0,0)&(K47>0|K48>0))&(!turn(p1)) ))&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K47>0|K48>G0))&(!turn(p2))])) ]
2019-10-14 12:25:50,989 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&turn(p2)])&!(turn(p2))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(1,0)&! Ch(0,1)])
 f2:!(!Ch(0,0))=>(exists(K53:Int,K54:Int)[ (Ch(K53,K54)&turn(p1)&K53>=0&K53<xlen()&K54>=0&K54<ylen())&((( !(Ch(0,0)&(K53>0|K54>0)) ) => ( !(Ch(0,0)&(K53>0|K54>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K53>0|K54>G0))&! (Ch(G0,0)&(K53>G0|K54>0))])&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K53>1|K54>G0))&! (Ch(0,1)&(K53>0|K54>1))])) ])
2019-10-14 12:25:51,756 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&turn(p2)])&!(turn(p2))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(1,0)&! Ch(0,1)])
 f2:!(!Ch(0,0))=>(exists(K53:Int,K54:Int)[ (Ch(K53,K54)&turn(p1)&K53>=0&K53<xlen()&K54>=0&K54<ylen())&((( !(Ch(0,0)&(K53>0|K54>0)) ) => ( !(Ch(0,0)&(K53>0|K54>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K53>0|K54>G0))&! (Ch(G0,0)&(K53>G0|K54>0))])&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K53>1|K54>G0))&! (Ch(0,1)&(K53>0|K54>1))])) ])
2019-10-14 12:25:51,800 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(G0,0)])&!(exists(G0:Int)[G0>=0&Ch(1,G0)&! Ch(0,1)])
 f2:forall(K51:Int,K52:Int)[ Ch(K51,K52)&turn(p2)&K51>=0&K51<xlen()&K52>=0&K52<ylen()=>((( !(Ch(0,0)&(K51>0|K52>0)) ) => ( !(Ch(0,0)&(K51>0|K52>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K51>0|K52>G0))&(!turn(p2))])&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K51>0|K52>G0))&! (Ch(1,0)&(K51>1|K52>0))&! (Ch(0,1)&(K51>0|K52>1))])) ]
2019-10-14 12:25:51,840 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(G0,0)])&!(exists(G0:Int)[G0>=0&Ch(1,G0)&! Ch(0,1)])
 f2:forall(K51:Int,K52:Int)[ Ch(K51,K52)&turn(p2)&K51>=0&K51<xlen()&K52>=0&K52<ylen()=>((( !(Ch(0,0)&(K51>0|K52>0)) ) => ( !(Ch(0,0)&(K51>0|K52>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K51>0|K52>G0))&(!turn(p2))])&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K51>0|K52>G0))&! (Ch(1,0)&(K51>1|K52>0))&! (Ch(0,1)&(K51>0|K52>1))])) ]
2019-10-14 12:25:51,874 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(G0,0)])&!(exists(G0:Int)[G0>=0&Ch(1,G0)&! Ch(0,1)])
 f2:forall(K51:Int,K52:Int)[ Ch(K51,K52)&turn(p2)&K51>=0&K51<xlen()&K52>=0&K52<ylen()=>((( !(Ch(0,0)&(K51>0|K52>0)) ) => ( !(Ch(0,0)&(K51>0|K52>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K51>0|K52>G0))&(!turn(p2))])&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K51>0|K52>G0))&! (Ch(1,0)&(K51>1|K52>0))&! (Ch(0,1)&(K51>0|K52>1))])) ]
2019-10-14 12:26:27,904 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:!(!Ch(0,0))=>(exists(K57:Int,K58:Int)[ (Ch(K57,K58)&turn(p1)&K57>=0&K57<xlen()&K58>=0&K58<ylen())&(( !(Ch(0,0)&(K57>0|K58>0)) ) => ( !(Ch(0,0)&(K57>0|K58>0))&(!turn(p1)) )) ])
2019-10-14 12:26:27,941 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:forall(K55:Int,K56:Int)[ Ch(K55,K56)&turn(p2)&K55>=0&K55<xlen()&K56>=0&K56<ylen()=>(( !(Ch(0,0)&(K55>0|K56>0)) ) => ( !(Ch(0,0)&(K55>0|K56>0))&(!turn(p1)) )) ]
2019-10-14 12:26:28,116 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(X1,0)])
 f2:!(!Ch(0,0))=>(exists(K61:Int,K62:Int)[ (Ch(K61,K62)&turn(p1)&K61>=0&K61<xlen()&K62>=0&K62<ylen())&(( !(Ch(0,0)&(K61>0|K62>0)) ) => ( !(Ch(0,0)&(K61>0|K62>0))&(!turn(p1)) )) ])
2019-10-14 12:26:28,153 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:forall(K59:Int,K60:Int)[ Ch(K59,K60)&turn(p2)&K59>=0&K59<xlen()&K60>=0&K60<ylen()=>((( !(Ch(0,0)&(K59>0|K60>0)) ) => ( !(Ch(0,0)&(K59>0|K60>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(Ch(X1,0)&(K59>X1|K60>0))])) ]
2019-10-14 12:26:28,566 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(X1,0)])
 f2:!(!Ch(0,0))=>(exists(K65:Int,K66:Int)[ (Ch(K65,K66)&turn(p1)&K65>=0&K65<xlen()&K66>=0&K66<ylen())&((( !(Ch(0,0)&(K65>0|K66>0)) ) => ( !(Ch(0,0)&(K65>0|K66>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(Ch(X1,1)&(K65>X1|K66>1))])) ])
2019-10-14 12:26:28,607 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(X1,1)])
 f2:forall(K63:Int,K64:Int)[ Ch(K63,K64)&turn(p2)&K63>=0&K63<xlen()&K64>=0&K64<ylen()=>((( !(Ch(0,0)&(K63>0|K64>0)) ) => ( !(Ch(0,0)&(K63>0|K64>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(Ch(X1,0)&(K63>X1|K64>0))])) ]
2019-10-14 12:26:28,651 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(X1,1)])
 f2:forall(K63:Int,K64:Int)[ Ch(K63,K64)&turn(p2)&K63>=0&K63<xlen()&K64>=0&K64<ylen()=>((( !(Ch(0,0)&(K63>0|K64>0)) ) => ( !(Ch(0,0)&(K63>0|K64>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(Ch(X1,0)&(K63>X1|K64>0))])) ]
2019-10-14 12:26:29,274 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(X1,0)])
 f2:!(!Ch(0,0))=>(exists(K69:Int,K70:Int)[ (Ch(K69,K70)&turn(p1)&K69>=0&K69<xlen()&K70>=0&K70<ylen())&((( !(Ch(0,0)&(K69>0|K70>0)) ) => ( !(Ch(0,0)&(K69>0|K70>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(Ch(X1,1)&(K69>X1|K70>1))])&!(exists(X1:Int)[X1>=0&(Ch(X1,0)&(K69>X1|K70>0))])) ])
2019-10-14 12:26:29,309 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(X1,1)])&!(exists(X1:Int)[X1>=0&Ch(X1,0)])
 f2:forall(K67:Int,K68:Int)[ Ch(K67,K68)&turn(p2)&K67>=0&K67<xlen()&K68>=0&K68<ylen()=>((( !(Ch(0,0)&(K67>0|K68>0)) ) => ( !(Ch(0,0)&(K67>0|K68>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(Ch(X1,0)&(K67>X1|K68>0))])) ]
2019-10-14 12:26:29,338 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:forall(K16:Int,K17:Int)[K16>=0&K16<xlen()&K17>=0&K17<ylen()=>Ch(K16,K17)]&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)
 f2:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(X1,0)])
2019-10-14 12:26:30,286 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 1&! Ch(0,G0)])
 f2:!(!Ch(0,0))=>(exists(K73:Int,K74:Int)[ (Ch(K73,K74)&turn(p1)&K73>=0&K73<xlen()&K74>=0&K74<ylen())&((( !(Ch(0,0)&(K73>0|K74>0)) ) => ( !(Ch(0,0)&(K73>0|K74>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 1&(Ch(G0,1)&(K73>G0|K74>1))])&!(exists(G0:Int)[G0>=0&G0 = 1&! (Ch(0,G0)&(K73>0|K74>G0))])) ])
2019-10-14 12:26:30,336 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 1&! Ch(0,G0)])
 f2:!(!Ch(0,0))=>(exists(K73:Int,K74:Int)[ (Ch(K73,K74)&turn(p1)&K73>=0&K73<xlen()&K74>=0&K74<ylen())&((( !(Ch(0,0)&(K73>0|K74>0)) ) => ( !(Ch(0,0)&(K73>0|K74>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 1&(Ch(G0,1)&(K73>G0|K74>1))])&!(exists(G0:Int)[G0>=0&G0 = 1&! (Ch(0,G0)&(K73>0|K74>G0))])) ])
2019-10-14 12:26:30,375 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 1&Ch(G0,1)])&!(exists(G0:Int)[G0>=0&G0 = 1&! Ch(0,G0)])
 f2:forall(K71:Int,K72:Int)[ Ch(K71,K72)&turn(p2)&K71>=0&K71<xlen()&K72>=0&K72<ylen()=>((( !(Ch(0,0)&(K71>0|K72>0)) ) => ( !(Ch(0,0)&(K71>0|K72>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 1&! (Ch(0,G0)&(K71>0|K72>G0))])) ]
2019-10-14 12:26:31,016 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 1&! Ch(0,G0)])
 f2:!(!Ch(0,0))=>(exists(K77:Int,K78:Int)[ (Ch(K77,K78)&turn(p1)&K77>=0&K77<xlen()&K78>=0&K78<ylen())&((( !(Ch(0,0)&(K77>0|K78>0)) ) => ( !(Ch(0,0)&(K77>0|K78>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 1&(Ch(G0,1)&(K77>G0|K78>1))])&!(exists(G0:Int)[G0>=0&(Ch(G0,0)&(K77>G0|K78>0))&! (Ch(0,G0)&(K77>0|K78>G0))])) ])
2019-10-14 12:26:31,072 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 1&! Ch(0,G0)])
 f2:!(!Ch(0,0))=>(exists(K77:Int,K78:Int)[ (Ch(K77,K78)&turn(p1)&K77>=0&K77<xlen()&K78>=0&K78<ylen())&((( !(Ch(0,0)&(K77>0|K78>0)) ) => ( !(Ch(0,0)&(K77>0|K78>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 1&(Ch(G0,1)&(K77>G0|K78>1))])&!(exists(G0:Int)[G0>=0&(Ch(G0,0)&(K77>G0|K78>0))&! (Ch(0,G0)&(K77>0|K78>G0))])) ])
2019-10-14 12:26:31,113 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 1&Ch(G0,1)])&!(exists(G0:Int)[G0>=0&Ch(G0,0)&! Ch(0,G0)])
 f2:forall(K75:Int,K76:Int)[ Ch(K75,K76)&turn(p2)&K75>=0&K75<xlen()&K76>=0&K76<ylen()=>((( !(Ch(0,0)&(K75>0|K76>0)) ) => ( !(Ch(0,0)&(K75>0|K76>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 1&! (Ch(0,G0)&(K75>0|K76>G0))])) ]
2019-10-14 12:26:32,166 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 1&! Ch(0,G0)])&!(! Ch(1,1))
 f2:!(!Ch(0,0))=>(exists(K81:Int,K82:Int)[ (Ch(K81,K82)&turn(p1)&K81>=0&K81<xlen()&K82>=0&K82<ylen())&((( !(Ch(0,0)&(K81>0|K82>0)) ) => ( !(Ch(0,0)&(K81>0|K82>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(G0,0)&(K81>G0|K82>0))&! (Ch(0,G0)&(K81>0|K82>G0))])&!(exists(G0:Int)[G0>=0&(Ch(G0,1)&(K81>G0|K82>1))&! (Ch(1,0)&(K81>1|K82>0))])) ])
2019-10-14 12:26:32,483 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 1&! Ch(0,G0)])&!(! Ch(1,1))
 f2:!(!Ch(0,0))=>(exists(K81:Int,K82:Int)[ (Ch(K81,K82)&turn(p1)&K81>=0&K81<xlen()&K82>=0&K82<ylen())&((( !(Ch(0,0)&(K81>0|K82>0)) ) => ( !(Ch(0,0)&(K81>0|K82>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(G0,0)&(K81>G0|K82>0))&! (Ch(0,G0)&(K81>0|K82>G0))])&!(exists(G0:Int)[G0>=0&(Ch(G0,1)&(K81>G0|K82>1))&! (Ch(1,0)&(K81>1|K82>0))])) ])
2019-10-14 12:26:32,531 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(G0,0)&! Ch(0,G0)])&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(1,0)])
 f2:forall(K79:Int,K80:Int)[ Ch(K79,K80)&turn(p2)&K79>=0&K79<xlen()&K80>=0&K80<ylen()=>((( !(Ch(0,0)&(K79>0|K80>0)) ) => ( !(Ch(0,0)&(K79>0|K80>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 1&! (Ch(0,G0)&(K79>0|K80>G0))])&!(! (Ch(1,1)&(K79>1|K80>1)))) ]
2019-10-14 12:26:33,304 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(G0,0)&! turn(p1)])&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! turn(p1)])
 f2:!(!Ch(0,0))=>(exists(K85:Int,K86:Int)[ (Ch(K85,K86)&turn(p1)&K85>=0&K85<xlen()&K86>=0&K86<ylen())&((( !(Ch(0,0)&(K85>0|K86>0)) ) => ( !(Ch(0,0)&(K85>0|K86>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(G0,0)&(K85>G0|K86>0))&! (Ch(0,G0)&(K85>0|K86>G0))])&!(exists(G0:Int)[G0>=0&(Ch(G0,1)&(K85>G0|K86>1))&! (Ch(1,0)&(K85>1|K86>0))])) ])
2019-10-14 12:26:33,352 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(G0,0)&! Ch(0,G0)])&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(1,0)])
 f2:forall(K83:Int,K84:Int)[ Ch(K83,K84)&turn(p2)&K83>=0&K83<xlen()&K84>=0&K84<ylen()=>((( !(Ch(0,0)&(K83>0|K84>0)) ) => ( !(Ch(0,0)&(K83>0|K84>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(G0,0)&(K83>G0|K84>0))&! (!turn(p1))])&!(exists(G0:Int)[G0>=0&(Ch(G0,1)&(K83>G0|K84>1))&! (!turn(p1))])) ]
2019-10-14 12:27:03,187 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:!(!Ch(0,0))=>(exists(K89:Int,K90:Int)[ (Ch(K89,K90)&turn(p1)&K89>=0&K89<xlen()&K90>=0&K90<ylen())&(( !(Ch(0,0)&(K89>0|K90>0)) ) => ( !(Ch(0,0)&(K89>0|K90>0))&(!turn(p1)) )) ])
2019-10-14 12:27:03,233 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:forall(K87:Int,K88:Int)[ Ch(K87,K88)&turn(p2)&K87>=0&K87<xlen()&K88>=0&K88<ylen()=>(( !(Ch(0,0)&(K87>0|K88>0)) ) => ( !(Ch(0,0)&(K87>0|K88>0))&(!turn(p1)) )) ]
2019-10-14 12:27:03,416 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(Y10:Int,Y11:Int)[Y10>=0&Y11>=0&Ch(Y10,Y11)])
 f2:!(!Ch(0,0))=>(exists(K93:Int,K94:Int)[ (Ch(K93,K94)&turn(p1)&K93>=0&K93<xlen()&K94>=0&K94<ylen())&(( !(Ch(0,0)&(K93>0|K94>0)) ) => ( !(Ch(0,0)&(K93>0|K94>0))&(!turn(p1)) )) ])
2019-10-14 12:27:03,447 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:forall(K91:Int,K92:Int)[ Ch(K91,K92)&turn(p2)&K91>=0&K91<xlen()&K92>=0&K92<ylen()=>((( !(Ch(0,0)&(K91>0|K92>0)) ) => ( !(Ch(0,0)&(K91>0|K92>0))&(!turn(p1)) ))&!(exists(Y10:Int,Y11:Int)[Y10>=0&Y11>=0&(Ch(Y10,Y11)&(K91>Y10|K92>Y11))])) ]
2019-10-14 12:27:03,857 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(Y10:Int,Y11:Int)[Y10>=0&Y11>=0&Ch(Y10,Y11)])
 f2:!(!Ch(0,0))=>(exists(K97:Int,K98:Int)[ (Ch(K97,K98)&turn(p1)&K97>=0&K97<xlen()&K98>=0&K98<ylen())&((( !(Ch(0,0)&(K97>0|K98>0)) ) => ( !(Ch(0,0)&(K97>0|K98>0))&(!turn(p1)) ))&!(exists(Y10:Int,Y11:Int)[Y10>=0&Y11>=0&(Ch(Y10,Y11)&(K97>Y10|K98>Y11))])) ])
2019-10-14 12:27:03,894 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(Y10:Int,Y11:Int)[Y10>=0&Y11>=0&Ch(Y10,Y11)])
 f2:forall(K95:Int,K96:Int)[ Ch(K95,K96)&turn(p2)&K95>=0&K95<xlen()&K96>=0&K96<ylen()=>((( !(Ch(0,0)&(K95>0|K96>0)) ) => ( !(Ch(0,0)&(K95>0|K96>0))&(!turn(p1)) ))&!(exists(Y10:Int,Y11:Int)[Y10>=0&Y11>=0&(Ch(Y10,Y11)&(K95>Y10|K96>Y11))])) ]
2019-10-14 12:27:03,924 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:forall(K16:Int,K17:Int)[K16>=0&K16<xlen()&K17>=0&K17<ylen()=>Ch(K16,K17)]&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)
 f2:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(Y10:Int,Y11:Int)[Y10>=0&Y11>=0&Ch(Y10,Y11)])
2019-10-14 12:27:04,000 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:forall(K16:Int,K17:Int)[K16>=0&K16<xlen()&K17>=0&K17<ylen()=>Ch(K16,K17)]&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)
 f2:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(Y10:Int,Y11:Int)[Y10>=0&Y11>=0&Ch(Y10,Y11)])
2019-10-14 12:27:04,906 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 > 1&! Ch(G0,1)])
 f2:!(!Ch(0,0))=>(exists(K101:Int,K102:Int)[ (Ch(K101,K102)&turn(p1)&K101>=0&K101<xlen()&K102>=0&K102<ylen())&((( !(Ch(0,0)&(K101>0|K102>0)) ) => ( !(Ch(0,0)&(K101>0|K102>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 >= 1&(Ch(G0,G0)&(K101>G0|K102>G0))])) ])
2019-10-14 12:27:04,962 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 > 1&! Ch(G0,1)])
 f2:!(!Ch(0,0))=>(exists(K101:Int,K102:Int)[ (Ch(K101,K102)&turn(p1)&K101>=0&K101<xlen()&K102>=0&K102<ylen())&((( !(Ch(0,0)&(K101>0|K102>0)) ) => ( !(Ch(0,0)&(K101>0|K102>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 >= 1&(Ch(G0,G0)&(K101>G0|K102>G0))])) ])
2019-10-14 12:27:05,005 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 >= 1&Ch(G0,G0)])
 f2:forall(K99:Int,K100:Int)[ Ch(K99,K100)&turn(p2)&K99>=0&K99<xlen()&K100>=0&K100<ylen()=>((( !(Ch(0,0)&(K99>0|K100>0)) ) => ( !(Ch(0,0)&(K99>0|K100>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! G0 > 1&! (Ch(G0,1)&(K99>G0|K100>1))])) ]
2019-10-14 12:27:06,056 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 > 1&! Ch(G0,0)])
 f2:!(!Ch(0,0))=>(exists(K105:Int,K106:Int)[ (Ch(K105,K106)&turn(p1)&K105>=0&K105<xlen()&K106>=0&K106<ylen())&((( !(Ch(0,0)&(K105>0|K106>0)) ) => ( !(Ch(0,0)&(K105>0|K106>0))&(!turn(p1)) ))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K105>G0|K106>G1))&! (Ch(G1,G0)&(K105>G1|K106>G0))])) ])
2019-10-14 12:27:06,114 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 > 1&! Ch(G0,0)])
 f2:!(!Ch(0,0))=>(exists(K105:Int,K106:Int)[ (Ch(K105,K106)&turn(p1)&K105>=0&K105<xlen()&K106>=0&K106<ylen())&((( !(Ch(0,0)&(K105>0|K106>0)) ) => ( !(Ch(0,0)&(K105>0|K106>0))&(!turn(p1)) ))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K105>G0|K106>G1))&! (Ch(G1,G0)&(K105>G1|K106>G0))])) ])
2019-10-14 12:27:06,162 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,G0)])
 f2:forall(K103:Int,K104:Int)[ Ch(K103,K104)&turn(p2)&K103>=0&K103<xlen()&K104>=0&K104<ylen()=>((( !(Ch(0,0)&(K103>0|K104>0)) ) => ( !(Ch(0,0)&(K103>0|K104>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! G0 > 1&! (Ch(G0,0)&(K103>G0|K104>0))])) ]
2019-10-14 12:27:08,870 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&turn(p2)])
 f2:!(!Ch(0,0))=>(exists(K109:Int,K110:Int)[ (Ch(K109,K110)&turn(p1)&K109>=0&K109<xlen()&K110>=0&K110<ylen())&((( !(Ch(0,0)&(K109>0|K110>0)) ) => ( !(Ch(0,0)&(K109>0|K110>0))&(!turn(p1)) ))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K109>G0|K110>G1))&! (Ch(G1,G0)&(K109>G1|K110>G0))])) ])
2019-10-14 12:27:08,916 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,G0)])
 f2:forall(K107:Int,K108:Int)[ Ch(K107,K108)&turn(p2)&K107>=0&K107<xlen()&K108>=0&K108<ylen()=>((( !(Ch(0,0)&(K107>0|K108>0)) ) => ( !(Ch(0,0)&(K107>0|K108>0))&(!turn(p1)) ))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K107>G0|K108>G1))&(!turn(p2))])) ]
2019-10-14 12:27:44,541 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:!(!Ch(0,0))=>(exists(K113:Int,K114:Int)[ (Ch(K113,K114)&turn(p1)&K113>=0&K113<xlen()&K114>=0&K114<ylen())&(( !(Ch(0,0)&(K113>0|K114>0)) ) => ( !(Ch(0,0)&(K113>0|K114>0))&(!turn(p1)) )) ])
2019-10-14 12:27:44,578 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:forall(K111:Int,K112:Int)[ Ch(K111,K112)&turn(p2)&K111>=0&K111<xlen()&K112>=0&K112<ylen()=>(( !(Ch(0,0)&(K111>0|K112>0)) ) => ( !(Ch(0,0)&(K111>0|K112>0))&(!turn(p1)) )) ]
2019-10-14 12:27:44,762 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X0:_S1)[turn(X0)])
 f2:!(!Ch(0,0))=>(exists(K117:Int,K118:Int)[ (Ch(K117,K118)&turn(p1)&K117>=0&K117<xlen()&K118>=0&K118<ylen())&(( !(Ch(0,0)&(K117>0|K118>0)) ) => ( !(Ch(0,0)&(K117>0|K118>0))&(!turn(p1)) )) ])
2019-10-14 12:27:44,798 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:forall(K115:Int,K116:Int)[ Ch(K115,K116)&turn(p2)&K115>=0&K115<xlen()&K116>=0&K116<ylen()=>((( !(Ch(0,0)&(K115>0|K116>0)) ) => ( !(Ch(0,0)&(K115>0|K116>0))&(!turn(p1)) ))&!(exists(X0:_S1)[(!turn(X0))])) ]
2019-10-14 12:27:45,169 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X0:_S1)[turn(X0)])
 f2:!(!Ch(0,0))=>(exists(K121:Int,K122:Int)[ (Ch(K121,K122)&turn(p1)&K121>=0&K121<xlen()&K122>=0&K122<ylen())&((( !(Ch(0,0)&(K121>0|K122>0)) ) => ( !(Ch(0,0)&(K121>0|K122>0))&(!turn(p1)) ))&!(exists(X0:_S1)[(!turn(X0))])) ])
2019-10-14 12:27:45,199 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X0:_S1)[turn(X0)])
 f2:forall(K119:Int,K120:Int)[ Ch(K119,K120)&turn(p2)&K119>=0&K119<xlen()&K120>=0&K120<ylen()=>((( !(Ch(0,0)&(K119>0|K120>0)) ) => ( !(Ch(0,0)&(K119>0|K120>0))&(!turn(p1)) ))&!(exists(X0:_S1)[(!turn(X0))])) ]
2019-10-14 12:27:45,230 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:forall(K16:Int,K17:Int)[K16>=0&K16<xlen()&K17>=0&K17<ylen()=>Ch(K16,K17)]&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)
 f2:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X0:_S1)[turn(X0)])
2019-10-14 12:27:46,197 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() > G0&! Ch(G0,G0)])
 f2:!(!Ch(0,0))=>(exists(K126:Int,K127:Int)[ (Ch(K126,K127)&turn(p1)&K126>=0&K126<xlen()&K127>=0&K127<ylen())&((( !(Ch(0,0)&(K126>0|K127>0)) ) => ( !(Ch(0,0)&(K126>0|K127>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! G0 > 0&! (Ch(G0,1)&(K126>G0|K127>1))])) ])
2019-10-14 12:27:46,240 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() > G0&! Ch(G0,G0)])
 f2:!(!Ch(0,0))=>(exists(K126:Int,K127:Int)[ (Ch(K126,K127)&turn(p1)&K126>=0&K126<xlen()&K127>=0&K127<ylen())&((( !(Ch(0,0)&(K126>0|K127>0)) ) => ( !(Ch(0,0)&(K126>0|K127>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! G0 > 0&! (Ch(G0,1)&(K126>G0|K127>1))])) ])
2019-10-14 12:27:46,275 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 > 0&! Ch(G0,1)])
 f2:forall(K123:Int,K124:Int)[ Ch(K123,K124)&turn(p2)&K123>=0&K123<xlen()&K124>=0&K124<ylen()=>((( !(Ch(0,0)&(K123>0|K124>0)) ) => ( !(Ch(0,0)&(K123>0|K124>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K125:Int)[ (xlen()=K125)&(G0>=0& K125 > G0&! (Ch(G0,G0)&(K123>G0|K124>G0)))] ])) ]
2019-10-14 12:27:46,317 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 > 0&! Ch(G0,1)])
 f2:forall(K123:Int,K124:Int)[ Ch(K123,K124)&turn(p2)&K123>=0&K123<xlen()&K124>=0&K124<ylen()=>((( !(Ch(0,0)&(K123>0|K124>0)) ) => ( !(Ch(0,0)&(K123>0|K124>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K125:Int)[ (xlen()=K125)&(G0>=0& K125 > G0&! (Ch(G0,G0)&(K123>G0|K124>G0)))] ])) ]
2019-10-14 12:27:46,920 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() > G0&! Ch(G0,G0)])
 f2:!(!Ch(0,0))=>(exists(K131:Int,K132:Int)[ (Ch(K131,K132)&turn(p1)&K131>=0&K131<xlen()&K132>=0&K132<ylen())&((( !(Ch(0,0)&(K131>0|K132>0)) ) => ( !(Ch(0,0)&(K131>0|K132>0))&(!turn(p1)) ))&!(exists(G0:_S1)[(!turn(G0))&(Ch(1,1)&(K131>1|K132>1))])) ])
2019-10-14 12:27:46,964 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() > G0&! Ch(G0,G0)])
 f2:!(!Ch(0,0))=>(exists(K131:Int,K132:Int)[ (Ch(K131,K132)&turn(p1)&K131>=0&K131<xlen()&K132>=0&K132<ylen())&((( !(Ch(0,0)&(K131>0|K132>0)) ) => ( !(Ch(0,0)&(K131>0|K132>0))&(!turn(p1)) ))&!(exists(G0:_S1)[(!turn(G0))&(Ch(1,1)&(K131>1|K132>1))])) ])
2019-10-14 12:27:47,002 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:_S1)[turn(G0)&Ch(1,1)])
 f2:forall(K128:Int,K129:Int)[ Ch(K128,K129)&turn(p2)&K128>=0&K128<xlen()&K129>=0&K129<ylen()=>((( !(Ch(0,0)&(K128>0|K129>0)) ) => ( !(Ch(0,0)&(K128>0|K129>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K130:Int)[ (xlen()=K130)&(G0>=0& K130 > G0&! (Ch(G0,G0)&(K128>G0|K129>G0)))] ])) ]
2019-10-14 12:27:47,042 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:_S1)[turn(G0)&Ch(1,1)])
 f2:forall(K128:Int,K129:Int)[ Ch(K128,K129)&turn(p2)&K128>=0&K128<xlen()&K129>=0&K129<ylen()=>((( !(Ch(0,0)&(K128>0|K129>0)) ) => ( !(Ch(0,0)&(K128>0|K129>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K130:Int)[ (xlen()=K130)&(G0>=0& K130 > G0&! (Ch(G0,G0)&(K128>G0|K129>G0)))] ])) ]
2019-10-14 12:27:48,862 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() > G0&! Ch(G0,G0)])&!(! Ch(1,0))
 f2:!(!Ch(0,0))=>(exists(K136:Int,K137:Int)[ (Ch(K136,K137)&turn(p1)&K136>=0&K136<xlen()&K137>=0&K137<ylen())&((( !(Ch(0,0)&(K136>0|K137>0)) ) => ( !(Ch(0,0)&(K136>0|K137>0))&(!turn(p1)) ))&!(exists(G0:_S1)[(!turn(G0))&(Ch(1,1)&(K136>1|K137>1))])&!((Ch(0,1)&(K136>0|K137>1))&! (Ch(1,0)&(K136>1|K137>0)))) ])
2019-10-14 12:27:48,908 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() > G0&! Ch(G0,G0)])&!(! Ch(1,0))
 f2:!(!Ch(0,0))=>(exists(K136:Int,K137:Int)[ (Ch(K136,K137)&turn(p1)&K136>=0&K136<xlen()&K137>=0&K137<ylen())&((( !(Ch(0,0)&(K136>0|K137>0)) ) => ( !(Ch(0,0)&(K136>0|K137>0))&(!turn(p1)) ))&!(exists(G0:_S1)[(!turn(G0))&(Ch(1,1)&(K136>1|K137>1))])&!((Ch(0,1)&(K136>0|K137>1))&! (Ch(1,0)&(K136>1|K137>0)))) ])
2019-10-14 12:27:48,947 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:_S1)[turn(G0)&Ch(1,1)])&!(Ch(0,1)&! Ch(1,0))
 f2:forall(K133:Int,K134:Int)[ Ch(K133,K134)&turn(p2)&K133>=0&K133<xlen()&K134>=0&K134<ylen()=>((( !(Ch(0,0)&(K133>0|K134>0)) ) => ( !(Ch(0,0)&(K133>0|K134>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K135:Int)[ (xlen()=K135)&(G0>=0& K135 > G0&! (Ch(G0,G0)&(K133>G0|K134>G0)))] ])&!(! (Ch(1,0)&(K133>1|K134>0)))) ]
2019-10-14 12:27:48,991 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:_S1)[turn(G0)&Ch(1,1)])&!(Ch(0,1)&! Ch(1,0))
 f2:forall(K133:Int,K134:Int)[ Ch(K133,K134)&turn(p2)&K133>=0&K133<xlen()&K134>=0&K134<ylen()=>((( !(Ch(0,0)&(K133>0|K134>0)) ) => ( !(Ch(0,0)&(K133>0|K134>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K135:Int)[ (xlen()=K135)&(G0>=0& K135 > G0&! (Ch(G0,G0)&(K133>G0|K134>G0)))] ])&!(! (Ch(1,0)&(K133>1|K134>0)))) ]
2019-10-14 12:27:49,683 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:_S1)[turn(G0)&! turn(p1)])&!(exists(G0:Int)[G0>=0&Ch(1,G0)&! Ch(0,G0)])
 f2:!(!Ch(0,0))=>(exists(K140:Int,K141:Int)[ (Ch(K140,K141)&turn(p1)&K140>=0&K140<xlen()&K141>=0&K141<ylen())&((( !(Ch(0,0)&(K140>0|K141>0)) ) => ( !(Ch(0,0)&(K140>0|K141>0))&(!turn(p1)) ))&!(exists(G0:_S1)[(!turn(G0))&(Ch(1,1)&(K140>1|K141>1))])&!((Ch(0,1)&(K140>0|K141>1))&! (Ch(1,0)&(K140>1|K141>0)))) ])
2019-10-14 12:27:49,721 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:_S1)[turn(G0)&Ch(1,1)])&!(Ch(0,1)&! Ch(1,0))
 f2:forall(K138:Int,K139:Int)[ Ch(K138,K139)&turn(p2)&K138>=0&K138<xlen()&K139>=0&K139<ylen()=>((( !(Ch(0,0)&(K138>0|K139>0)) ) => ( !(Ch(0,0)&(K138>0|K139>0))&(!turn(p1)) ))&!(exists(G0:_S1)[(!turn(G0))&! (!turn(p1))])&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K138>1|K139>G0))&! (Ch(0,G0)&(K138>0|K139>G0))])) ]
2019-10-14 12:27:49,762 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:_S1)[turn(G0)&Ch(1,1)])&!(Ch(0,1)&! Ch(1,0))
 f2:forall(K138:Int,K139:Int)[ Ch(K138,K139)&turn(p2)&K138>=0&K138<xlen()&K139>=0&K139<ylen()=>((( !(Ch(0,0)&(K138>0|K139>0)) ) => ( !(Ch(0,0)&(K138>0|K139>0))&(!turn(p1)) ))&!(exists(G0:_S1)[(!turn(G0))&! (!turn(p1))])&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K138>1|K139>G0))&! (Ch(0,G0)&(K138>0|K139>G0))])) ]
2019-10-14 12:27:49,790 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:_S1)[turn(G0)&Ch(1,1)])&!(Ch(0,1)&! Ch(1,0))
 f2:forall(K138:Int,K139:Int)[ Ch(K138,K139)&turn(p2)&K138>=0&K138<xlen()&K139>=0&K139<ylen()=>((( !(Ch(0,0)&(K138>0|K139>0)) ) => ( !(Ch(0,0)&(K138>0|K139>0))&(!turn(p1)) ))&!(exists(G0:_S1)[(!turn(G0))&! (!turn(p1))])&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K138>1|K139>G0))&! (Ch(0,G0)&(K138>0|K139>G0))])) ]
2019-10-14 12:27:51,120 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:_S1)[turn(G0)&! turn(p1)])&!(exists(G0:Int)[G0>=0&Ch(1,G0)&! turn(p1)])
 f2:!(!Ch(0,0))=>(exists(K144:Int,K145:Int)[ (Ch(K144,K145)&turn(p1)&K144>=0&K144<xlen()&K145>=0&K145<ylen())&((( !(Ch(0,0)&(K144>0|K145>0)) ) => ( !(Ch(0,0)&(K144>0|K145>0))&(!turn(p1)) ))&!(exists(G0:_S1)[(!turn(G0))&(Ch(1,1)&(K144>1|K145>1))])&!((Ch(0,1)&(K144>0|K145>1))&! (Ch(1,0)&(K144>1|K145>0)))) ])
2019-10-14 12:27:51,170 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:_S1)[turn(G0)&Ch(1,1)])&!(Ch(0,1)&! Ch(1,0))
 f2:forall(K142:Int,K143:Int)[ Ch(K142,K143)&turn(p2)&K142>=0&K142<xlen()&K143>=0&K143<ylen()=>((( !(Ch(0,0)&(K142>0|K143>0)) ) => ( !(Ch(0,0)&(K142>0|K143>0))&(!turn(p1)) ))&!(exists(G0:_S1)[(!turn(G0))&! (!turn(p1))])&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K142>1|K143>G0))&! (!turn(p1))])) ]
2019-10-14 12:28:21,968 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:!(!Ch(0,0))=>(exists(K148:Int,K149:Int)[ (Ch(K148,K149)&turn(p1)&K148>=0&K148<xlen()&K149>=0&K149<ylen())&(( !(Ch(0,0)&(K148>0|K149>0)) ) => ( !(Ch(0,0)&(K148>0|K149>0))&(!turn(p1)) )) ])
2019-10-14 12:28:22,012 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:forall(K146:Int,K147:Int)[ Ch(K146,K147)&turn(p2)&K146>=0&K146<xlen()&K147>=0&K147<ylen()=>(( !(Ch(0,0)&(K146>0|K147>0)) ) => ( !(Ch(0,0)&(K146>0|K147>0))&(!turn(p1)) )) ]
2019-10-14 12:28:22,179 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&xlen() = X1])
 f2:!(!Ch(0,0))=>(exists(K152:Int,K153:Int)[ (Ch(K152,K153)&turn(p1)&K152>=0&K152<xlen()&K153>=0&K153<ylen())&(( !(Ch(0,0)&(K152>0|K153>0)) ) => ( !(Ch(0,0)&(K152>0|K153>0))&(!turn(p1)) )) ])
2019-10-14 12:28:22,207 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:forall(K150:Int,K151:Int)[ Ch(K150,K151)&turn(p2)&K150>=0&K150<xlen()&K151>=0&K151<ylen()=>((( !(Ch(0,0)&(K150>0|K151>0)) ) => ( !(Ch(0,0)&(K150>0|K151>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(xlen()=X1)])) ]
2019-10-14 12:28:22,589 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&xlen() = X1])
 f2:!(!Ch(0,0))=>(exists(K156:Int,K157:Int)[ (Ch(K156,K157)&turn(p1)&K156>=0&K156<xlen()&K157>=0&K157<ylen())&((( !(Ch(0,0)&(K156>0|K157>0)) ) => ( !(Ch(0,0)&(K156>0|K157>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(xlen()=X1)])) ])
2019-10-14 12:28:22,624 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&xlen() = X1])
 f2:forall(K154:Int,K155:Int)[ Ch(K154,K155)&turn(p2)&K154>=0&K154<xlen()&K155>=0&K155<ylen()=>((( !(Ch(0,0)&(K154>0|K155>0)) ) => ( !(Ch(0,0)&(K154>0|K155>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(xlen()=X1)])) ]
2019-10-14 12:28:22,657 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:forall(K16:Int,K17:Int)[K16>=0&K16<xlen()&K17>=0&K17<ylen()=>Ch(K16,K17)]&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)
 f2:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&xlen() = X1])
2019-10-14 12:28:23,478 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 > 0&! Ch(1,G0)])
 f2:!(!Ch(0,0))=>(exists(K160:Int,K161:Int)[ (Ch(K160,K161)&turn(p1)&K160>=0&K160<xlen()&K161>=0&K161<ylen())&((( !(Ch(0,0)&(K160>0|K161>0)) ) => ( !(Ch(0,0)&(K160>0|K161>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! G0 > 1&! (Ch(0,G0)&(K160>0|K161>G0))])) ])
2019-10-14 12:28:23,522 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 > 1&! Ch(0,G0)])
 f2:forall(K158:Int,K159:Int)[ Ch(K158,K159)&turn(p2)&K158>=0&K158<xlen()&K159>=0&K159<ylen()=>((( !(Ch(0,0)&(K158>0|K159>0)) ) => ( !(Ch(0,0)&(K158>0|K159>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! G0 > 0&! (Ch(1,G0)&(K158>1|K159>G0))])) ]
2019-10-14 12:28:23,572 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 > 1&! Ch(0,G0)])
 f2:forall(K158:Int,K159:Int)[ Ch(K158,K159)&turn(p2)&K158>=0&K158<xlen()&K159>=0&K159<ylen()=>((( !(Ch(0,0)&(K158>0|K159>0)) ) => ( !(Ch(0,0)&(K158>0|K159>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! G0 > 0&! (Ch(1,G0)&(K158>1|K159>G0))])) ]
2019-10-14 12:28:24,636 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 > 0&! Ch(1,G0)])&!(! Ch(1,1))
 f2:!(!Ch(0,0))=>(exists(K164:Int,K165:Int)[ (Ch(K164,K165)&turn(p1)&K164>=0&K164<xlen()&K165>=0&K165<ylen())&((( !(Ch(0,0)&(K164>0|K165>0)) ) => ( !(Ch(0,0)&(K164>0|K165>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! G0 > 1&! (Ch(0,G0)&(K164>0|K165>G0))])&!((Ch(1,1)&(K164>1|K165>1)))) ])
2019-10-14 12:28:24,681 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 > 1&! Ch(0,G0)])&!(Ch(1,1))
 f2:forall(K162:Int,K163:Int)[ Ch(K162,K163)&turn(p2)&K162>=0&K162<xlen()&K163>=0&K163<ylen()=>((( !(Ch(0,0)&(K162>0|K163>0)) ) => ( !(Ch(0,0)&(K162>0|K163>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! G0 > 0&! (Ch(1,G0)&(K162>1|K163>G0))])&!(! (Ch(1,1)&(K162>1|K163>1)))) ]
2019-10-14 12:28:25,374 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 > 0&! Ch(1,G0)])&!(! Ch(1,1))
 f2:!(!Ch(0,0))=>(exists(K168:Int,K169:Int)[ (Ch(K168,K169)&turn(p1)&K168>=0&K168<xlen()&K169>=0&K169<ylen())&((( !(Ch(0,0)&(K168>0|K169>0)) ) => ( !(Ch(0,0)&(K168>0|K169>0))&(!turn(p1)) ))&!((Ch(1,1)&(K168>1|K169>1)))&!(exists(G0:Int)[G0>=0&! G0 = 0&(Ch(1,G0)&(K168>1|K169>G0))])) ])
2019-10-14 12:28:25,418 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(Ch(1,1))&!(exists(G0:Int)[G0>=0&! G0 = 0&Ch(1,G0)])
 f2:forall(K166:Int,K167:Int)[ Ch(K166,K167)&turn(p2)&K166>=0&K166<xlen()&K167>=0&K167<ylen()=>((( !(Ch(0,0)&(K166>0|K167>0)) ) => ( !(Ch(0,0)&(K166>0|K167>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! G0 > 0&! (Ch(1,G0)&(K166>1|K167>G0))])&!(! (Ch(1,1)&(K166>1|K167>1)))) ]
2019-10-14 12:28:27,416 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 > 0&! Ch(1,G0)])&!(! Ch(1,1))&!(! Ch(0,1))
 f2:!(!Ch(0,0))=>(exists(K172:Int,K173:Int)[ (Ch(K172,K173)&turn(p1)&K172>=0&K172<xlen()&K173>=0&K173<ylen())&((( !(Ch(0,0)&(K172>0|K173>0)) ) => ( !(Ch(0,0)&(K172>0|K173>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! G0 = 0&(Ch(1,G0)&(K172>1|K173>G0))])&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K172>0|K173>G0))&! (Ch(G0,0)&(K172>G0|K173>0))])) ])
2019-10-14 12:28:27,464 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 = 0&Ch(1,G0)])&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(G0,0)])
 f2:forall(K170:Int,K171:Int)[ Ch(K170,K171)&turn(p2)&K170>=0&K170<xlen()&K171>=0&K171<ylen()=>((( !(Ch(0,0)&(K170>0|K171>0)) ) => ( !(Ch(0,0)&(K170>0|K171>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! G0 > 0&! (Ch(1,G0)&(K170>1|K171>G0))])&!(! (Ch(1,1)&(K170>1|K171>1)))&!(! (Ch(0,1)&(K170>0|K171>1)))) ]
2019-10-14 12:28:28,233 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() = G0&turn(p2)])&!(exists(G0:Int)[G0>=0&xlen() = G0&turn(p2)])&!(Ch(1,1)&! Ch(0,1))
 f2:!(!Ch(0,0))=>(exists(K176:Int,K177:Int)[ (Ch(K176,K177)&turn(p1)&K176>=0&K176<xlen()&K177>=0&K177<ylen())&((( !(Ch(0,0)&(K176>0|K177>0)) ) => ( !(Ch(0,0)&(K176>0|K177>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! G0 = 0&(Ch(1,G0)&(K176>1|K177>G0))])&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K176>0|K177>G0))&! (Ch(G0,0)&(K176>G0|K177>0))])) ])
2019-10-14 12:28:28,278 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 = 0&Ch(1,G0)])&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(G0,0)])
 f2:forall(K174:Int,K175:Int)[ Ch(K174,K175)&turn(p2)&K174>=0&K174<xlen()&K175>=0&K175<ylen()=>((( !(Ch(0,0)&(K174>0|K175>0)) ) => ( !(Ch(0,0)&(K174>0|K175>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(xlen()=G0)&(!turn(p2))])&!(exists(G0:Int)[G0>=0&(xlen()=G0)&(!turn(p2))])&!((Ch(1,1)&(K174>1|K175>1))&! (Ch(0,1)&(K174>0|K175>1)))) ]
2019-10-14 12:28:56,136 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:!(!Ch(0,0))=>(exists(K180:Int,K181:Int)[ (Ch(K180,K181)&turn(p1)&K180>=0&K180<xlen()&K181>=0&K181<ylen())&(( !(Ch(0,0)&(K180>0|K181>0)) ) => ( !(Ch(0,0)&(K180>0|K181>0))&(!turn(p1)) )) ])
2019-10-14 12:28:56,172 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:forall(K178:Int,K179:Int)[ Ch(K178,K179)&turn(p2)&K178>=0&K178<xlen()&K179>=0&K179<ylen()=>(( !(Ch(0,0)&(K178>0|K179>0)) ) => ( !(Ch(0,0)&(K178>0|K179>0))&(!turn(p1)) )) ]
2019-10-14 12:28:56,326 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&ylen() = X1])
 f2:!(!Ch(0,0))=>(exists(K184:Int,K185:Int)[ (Ch(K184,K185)&turn(p1)&K184>=0&K184<xlen()&K185>=0&K185<ylen())&(( !(Ch(0,0)&(K184>0|K185>0)) ) => ( !(Ch(0,0)&(K184>0|K185>0))&(!turn(p1)) )) ])
2019-10-14 12:28:56,358 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:forall(K182:Int,K183:Int)[ Ch(K182,K183)&turn(p2)&K182>=0&K182<xlen()&K183>=0&K183<ylen()=>((( !(Ch(0,0)&(K182>0|K183>0)) ) => ( !(Ch(0,0)&(K182>0|K183>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(ylen()=X1)])) ]
2019-10-14 12:28:56,708 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&ylen() = X1])
 f2:!(!Ch(0,0))=>(exists(K188:Int,K189:Int)[ (Ch(K188,K189)&turn(p1)&K188>=0&K188<xlen()&K189>=0&K189<ylen())&((( !(Ch(0,0)&(K188>0|K189>0)) ) => ( !(Ch(0,0)&(K188>0|K189>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(ylen()=X1)])) ])
2019-10-14 12:28:56,738 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&ylen() = X1])
 f2:forall(K186:Int,K187:Int)[ Ch(K186,K187)&turn(p2)&K186>=0&K186<xlen()&K187>=0&K187<ylen()=>((( !(Ch(0,0)&(K186>0|K187>0)) ) => ( !(Ch(0,0)&(K186>0|K187>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(ylen()=X1)])) ]
2019-10-14 12:28:56,767 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:forall(K16:Int,K17:Int)[K16>=0&K16<xlen()&K17>=0&K17<ylen()=>Ch(K16,K17)]&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)
 f2:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&ylen() = X1])
2019-10-14 12:28:57,628 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 >= 1&! Ch(G0,1)])
 f2:!(!Ch(0,0))=>(exists(K192:Int,K193:Int)[ (Ch(K192,K193)&turn(p1)&K192>=0&K192<xlen()&K193>=0&K193<ylen())&((( !(Ch(0,0)&(K192>0|K193>0)) ) => ( !(Ch(0,0)&(K192>0|K193>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! G0 >= 1&! (Ch(1,G0)&(K192>1|K193>G0))])) ])
2019-10-14 12:28:57,671 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 >= 1&! Ch(1,G0)])
 f2:forall(K190:Int,K191:Int)[ Ch(K190,K191)&turn(p2)&K190>=0&K190<xlen()&K191>=0&K191<ylen()=>((( !(Ch(0,0)&(K190>0|K191>0)) ) => ( !(Ch(0,0)&(K190>0|K191>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! G0 >= 1&! (Ch(G0,1)&(K190>G0|K191>1))])) ]
2019-10-14 12:28:58,356 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 >= 1&! Ch(G0,1)])
 f2:!(!Ch(0,0))=>(exists(K196:Int,K197:Int)[ (Ch(K196,K197)&turn(p1)&K196>=0&K196<xlen()&K197>=0&K197<ylen())&((( !(Ch(0,0)&(K196>0|K197>0)) ) => ( !(Ch(0,0)&(K196>0|K197>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 0&(Ch(G0,1)&(K196>G0|K197>1))])) ])
2019-10-14 12:28:58,404 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 > 0&Ch(G0,1)])
 f2:forall(K194:Int,K195:Int)[ Ch(K194,K195)&turn(p2)&K194>=0&K194<xlen()&K195>=0&K195<ylen()=>((( !(Ch(0,0)&(K194>0|K195>0)) ) => ( !(Ch(0,0)&(K194>0|K195>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! G0 >= 1&! (Ch(G0,1)&(K194>G0|K195>1))])) ]
2019-10-14 12:29:00,479 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&ylen() > G0&! Ch(G0,1)])
 f2:!(!Ch(0,0))=>(exists(K201:Int,K202:Int)[ (Ch(K201,K202)&turn(p1)&K201>=0&K201<xlen()&K202>=0&K202<ylen())&((( !(Ch(0,0)&(K201>0|K202>0)) ) => ( !(Ch(0,0)&(K201>0|K202>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 0&(Ch(G0,1)&(K201>G0|K202>1))])&!(exists(G0:Int)[G0>=0&(Ch(G0,1)&(K201>G0|K202>1))&! (Ch(1,G0)&(K201>1|K202>G0))])) ])
2019-10-14 12:29:00,556 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&ylen() > G0&! Ch(G0,1)])
 f2:!(!Ch(0,0))=>(exists(K201:Int,K202:Int)[ (Ch(K201,K202)&turn(p1)&K201>=0&K201<xlen()&K202>=0&K202<ylen())&((( !(Ch(0,0)&(K201>0|K202>0)) ) => ( !(Ch(0,0)&(K201>0|K202>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 0&(Ch(G0,1)&(K201>G0|K202>1))])&!(exists(G0:Int)[G0>=0&(Ch(G0,1)&(K201>G0|K202>1))&! (Ch(1,G0)&(K201>1|K202>G0))])) ])
2019-10-14 12:29:00,597 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 > 0&Ch(G0,1)])&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(1,G0)])
 f2:forall(K198:Int,K199:Int)[ Ch(K198,K199)&turn(p2)&K198>=0&K198<xlen()&K199>=0&K199<ylen()=>((( !(Ch(0,0)&(K198>0|K199>0)) ) => ( !(Ch(0,0)&(K198>0|K199>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K200:Int)[ (ylen()=K200)&(G0>=0& K200 > G0&! (Ch(G0,1)&(K198>G0|K199>1)))] ])) ]
2019-10-14 12:29:06,517 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&ylen() > G0&! Ch(G0,0)])
 f2:!(!Ch(0,0))=>(exists(K206:Int,K207:Int)[ (Ch(K206,K207)&turn(p1)&K206>=0&K206<xlen()&K207>=0&K207<ylen())&((( !(Ch(0,0)&(K206>0|K207>0)) ) => ( !(Ch(0,0)&(K206>0|K207>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 0&(Ch(G0,1)&(K206>G0|K207>1))])&!(exists(G0:Int)[G0>=0&(Ch(G0,1)&(K206>G0|K207>1))&! (Ch(1,G0)&(K206>1|K207>G0))])&!((Ch(1,0)&(K206>1|K207>0))&! (Ch(0,1)&(K206>0|K207>1)))) ])
2019-10-14 12:29:06,565 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&ylen() > G0&! Ch(G0,0)])
 f2:!(!Ch(0,0))=>(exists(K206:Int,K207:Int)[ (Ch(K206,K207)&turn(p1)&K206>=0&K206<xlen()&K207>=0&K207<ylen())&((( !(Ch(0,0)&(K206>0|K207>0)) ) => ( !(Ch(0,0)&(K206>0|K207>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 0&(Ch(G0,1)&(K206>G0|K207>1))])&!(exists(G0:Int)[G0>=0&(Ch(G0,1)&(K206>G0|K207>1))&! (Ch(1,G0)&(K206>1|K207>G0))])&!((Ch(1,0)&(K206>1|K207>0))&! (Ch(0,1)&(K206>0|K207>1)))) ])
2019-10-14 12:29:06,604 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 > 0&Ch(G0,1)])&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(1,G0)])&!(Ch(1,0)&! Ch(0,1))
 f2:forall(K203:Int,K204:Int)[ Ch(K203,K204)&turn(p2)&K203>=0&K203<xlen()&K204>=0&K204<ylen()=>((( !(Ch(0,0)&(K203>0|K204>0)) ) => ( !(Ch(0,0)&(K203>0|K204>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K205:Int)[ (ylen()=K205)&(G0>=0& K205 > G0&! (Ch(G0,0)&(K203>G0|K204>0)))] ])) ]
2019-10-14 12:29:06,638 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 > 0&Ch(G0,1)])&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(1,G0)])&!(Ch(1,0)&! Ch(0,1))
 f2:forall(K203:Int,K204:Int)[ Ch(K203,K204)&turn(p2)&K203>=0&K203<xlen()&K204>=0&K204<ylen()=>((( !(Ch(0,0)&(K203>0|K204>0)) ) => ( !(Ch(0,0)&(K203>0|K204>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K205:Int)[ (ylen()=K205)&(G0>=0& K205 > G0&! (Ch(G0,0)&(K203>G0|K204>0)))] ])) ]
2019-10-14 12:29:10,137 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! Ch(G0,0)&Ch(0,0)&ylen() > G0])
 f2:!(!Ch(0,0))=>(exists(K211:Int,K212:Int)[ (Ch(K211,K212)&turn(p1)&K211>=0&K211<xlen()&K212>=0&K212<ylen())&((( !(Ch(0,0)&(K211>0|K212>0)) ) => ( !(Ch(0,0)&(K211>0|K212>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 0&(Ch(G0,1)&(K211>G0|K212>1))])&!(exists(G0:Int)[G0>=0&(Ch(G0,1)&(K211>G0|K212>1))&! (Ch(1,G0)&(K211>1|K212>G0))])&!((Ch(1,0)&(K211>1|K212>0))&! (Ch(0,1)&(K211>0|K212>1)))) ])
2019-10-14 12:29:10,188 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! Ch(G0,0)&Ch(0,0)&ylen() > G0])
 f2:!(!Ch(0,0))=>(exists(K211:Int,K212:Int)[ (Ch(K211,K212)&turn(p1)&K211>=0&K211<xlen()&K212>=0&K212<ylen())&((( !(Ch(0,0)&(K211>0|K212>0)) ) => ( !(Ch(0,0)&(K211>0|K212>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 0&(Ch(G0,1)&(K211>G0|K212>1))])&!(exists(G0:Int)[G0>=0&(Ch(G0,1)&(K211>G0|K212>1))&! (Ch(1,G0)&(K211>1|K212>G0))])&!((Ch(1,0)&(K211>1|K212>0))&! (Ch(0,1)&(K211>0|K212>1)))) ])
2019-10-14 12:29:10,229 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 > 0&Ch(G0,1)])&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(1,G0)])&!(Ch(1,0)&! Ch(0,1))
 f2:forall(K208:Int,K209:Int)[ Ch(K208,K209)&turn(p2)&K208>=0&K208<xlen()&K209>=0&K209<ylen()=>((( !(Ch(0,0)&(K208>0|K209>0)) ) => ( !(Ch(0,0)&(K208>0|K209>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K210:Int)[ (ylen()=K210)&(G0>=0&! (Ch(G0,0)&(K208>G0|K209>0))&(Ch(0,0)&(K208>0|K209>0))& K210 > G0)] ])) ]
2019-10-14 12:29:10,267 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 > 0&Ch(G0,1)])&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(1,G0)])&!(Ch(1,0)&! Ch(0,1))
 f2:forall(K208:Int,K209:Int)[ Ch(K208,K209)&turn(p2)&K208>=0&K208<xlen()&K209>=0&K209<ylen()=>((( !(Ch(0,0)&(K208>0|K209>0)) ) => ( !(Ch(0,0)&(K208>0|K209>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K210:Int)[ (ylen()=K210)&(G0>=0&! (Ch(G0,0)&(K208>G0|K209>0))&(Ch(0,0)&(K208>0|K209>0))& K210 > G0)] ])) ]
2019-10-14 12:29:10,870 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&ylen() = G0&! turn(p1)])
 f2:!(!Ch(0,0))=>(exists(K215:Int,K216:Int)[ (Ch(K215,K216)&turn(p1)&K215>=0&K215<xlen()&K216>=0&K216<ylen())&((( !(Ch(0,0)&(K215>0|K216>0)) ) => ( !(Ch(0,0)&(K215>0|K216>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 0&(Ch(G0,1)&(K215>G0|K216>1))])&!(exists(G0:Int)[G0>=0&(Ch(G0,1)&(K215>G0|K216>1))&! (Ch(1,G0)&(K215>1|K216>G0))])&!((Ch(1,0)&(K215>1|K216>0))&! (Ch(0,1)&(K215>0|K216>1)))) ])
2019-10-14 12:29:10,908 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 > 0&Ch(G0,1)])&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(1,G0)])&!(Ch(1,0)&! Ch(0,1))
 f2:forall(K213:Int,K214:Int)[ Ch(K213,K214)&turn(p2)&K213>=0&K213<xlen()&K214>=0&K214<ylen()=>((( !(Ch(0,0)&(K213>0|K214>0)) ) => ( !(Ch(0,0)&(K213>0|K214>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(ylen()=G0)&! (!turn(p1))])) ]
2019-10-14 12:29:53,274 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:!(!Ch(0,0))=>(exists(K219:Int,K220:Int)[ (Ch(K219,K220)&turn(p1)&K219>=0&K219<xlen()&K220>=0&K220<ylen())&(( !(Ch(0,0)&(K219>0|K220>0)) ) => ( !(Ch(0,0)&(K219>0|K220>0))&(!turn(p1)) )) ])
2019-10-14 12:29:53,312 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:forall(K217:Int,K218:Int)[ Ch(K217,K218)&turn(p2)&K217>=0&K217<xlen()&K218>=0&K218<ylen()=>(( !(Ch(0,0)&(K217>0|K218>0)) ) => ( !(Ch(0,0)&(K217>0|K218>0))&(!turn(p1)) )) ]
2019-10-14 12:29:53,474 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&xlen() >= X1])
 f2:!(!Ch(0,0))=>(exists(K224:Int,K225:Int)[ (Ch(K224,K225)&turn(p1)&K224>=0&K224<xlen()&K225>=0&K225<ylen())&(( !(Ch(0,0)&(K224>0|K225>0)) ) => ( !(Ch(0,0)&(K224>0|K225>0))&(!turn(p1)) )) ])
2019-10-14 12:29:53,514 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:forall(K221:Int,K222:Int)[ Ch(K221,K222)&turn(p2)&K221>=0&K221<xlen()&K222>=0&K222<ylen()=>((( !(Ch(0,0)&(K221>0|K222>0)) ) => ( !(Ch(0,0)&(K221>0|K222>0))&(!turn(p1)) ))&!(exists(X1:Int)[ exists(K223:Int)[ (xlen()=K223)&(X1>=0& K223 >= X1)] ])) ]
2019-10-14 12:29:53,924 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&xlen() >= X1])
 f2:!(!Ch(0,0))=>(exists(K229:Int,K230:Int)[ (Ch(K229,K230)&turn(p1)&K229>=0&K229<xlen()&K230>=0&K230<ylen())&((( !(Ch(0,0)&(K229>0|K230>0)) ) => ( !(Ch(0,0)&(K229>0|K230>0))&(!turn(p1)) ))&!(exists(X1:Int)[ exists(K231:Int)[ (xlen()=K231)&(X1>=0& K231 > X1)] ])) ])
2019-10-14 12:29:53,956 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&xlen() > X1])
 f2:forall(K226:Int,K227:Int)[ Ch(K226,K227)&turn(p2)&K226>=0&K226<xlen()&K227>=0&K227<ylen()=>((( !(Ch(0,0)&(K226>0|K227>0)) ) => ( !(Ch(0,0)&(K226>0|K227>0))&(!turn(p1)) ))&!(exists(X1:Int)[ exists(K228:Int)[ (xlen()=K228)&(X1>=0& K228 >= X1)] ])) ]
2019-10-14 12:29:53,984 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:forall(K16:Int,K17:Int)[K16>=0&K16<xlen()&K17>=0&K17<ylen()=>Ch(K16,K17)]&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)
 f2:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&xlen() >= X1])
2019-10-14 12:29:54,842 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 1&! Ch(G0,G0)])
 f2:!(!Ch(0,0))=>(exists(K234:Int,K235:Int)[ (Ch(K234,K235)&turn(p1)&K234>=0&K234<xlen()&K235>=0&K235<ylen())&((( !(Ch(0,0)&(K234>0|K235>0)) ) => ( !(Ch(0,0)&(K234>0|K235>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 0&! (Ch(G0,1)&(K234>G0|K235>1))])) ])
2019-10-14 12:29:54,893 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 1&! Ch(G0,G0)])
 f2:!(!Ch(0,0))=>(exists(K234:Int,K235:Int)[ (Ch(K234,K235)&turn(p1)&K234>=0&K234<xlen()&K235>=0&K235<ylen())&((( !(Ch(0,0)&(K234>0|K235>0)) ) => ( !(Ch(0,0)&(K234>0|K235>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 0&! (Ch(G0,1)&(K234>G0|K235>1))])) ])
2019-10-14 12:29:54,932 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 0&! Ch(G0,1)])
 f2:forall(K232:Int,K233:Int)[ Ch(K232,K233)&turn(p2)&K232>=0&K232<xlen()&K233>=0&K233<ylen()=>((( !(Ch(0,0)&(K232>0|K233>0)) ) => ( !(Ch(0,0)&(K232>0|K233>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 1&! (Ch(G0,G0)&(K232>G0|K233>G0))])) ]
2019-10-14 12:29:55,580 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 1&! Ch(G0,G0)])
 f2:!(!Ch(0,0))=>(exists(K238:Int,K239:Int)[ (Ch(K238,K239)&turn(p1)&K238>=0&K238<xlen()&K239>=0&K239<ylen())&((( !(Ch(0,0)&(K238>0|K239>0)) ) => ( !(Ch(0,0)&(K238>0|K239>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 1&(Ch(G0,G0)&(K238>G0|K239>G0))])) ])
2019-10-14 12:29:55,621 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 1&! Ch(G0,G0)])
 f2:!(!Ch(0,0))=>(exists(K238:Int,K239:Int)[ (Ch(K238,K239)&turn(p1)&K238>=0&K238<xlen()&K239>=0&K239<ylen())&((( !(Ch(0,0)&(K238>0|K239>0)) ) => ( !(Ch(0,0)&(K238>0|K239>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 1&(Ch(G0,G0)&(K238>G0|K239>G0))])) ])
2019-10-14 12:29:55,658 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 1&Ch(G0,G0)])
 f2:forall(K236:Int,K237:Int)[ Ch(K236,K237)&turn(p2)&K236>=0&K236<xlen()&K237>=0&K237<ylen()=>((( !(Ch(0,0)&(K236>0|K237>0)) ) => ( !(Ch(0,0)&(K236>0|K237>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 1&! (Ch(G0,G0)&(K236>G0|K237>G0))])) ]
2019-10-14 12:29:57,631 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 1&! Ch(G0,G0)])&!(! Ch(1,0))
 f2:!(!Ch(0,0))=>(exists(K242:Int,K243:Int)[ (Ch(K242,K243)&turn(p1)&K242>=0&K242<xlen()&K243>=0&K243<ylen())&((( !(Ch(0,0)&(K242>0|K243>0)) ) => ( !(Ch(0,0)&(K242>0|K243>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 1&(Ch(G0,G0)&(K242>G0|K243>G0))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K242>G0|K243>G1))&! (Ch(G1,G0)&(K242>G1|K243>G0))])) ])
2019-10-14 12:29:57,679 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 1&! Ch(G0,G0)])&!(! Ch(1,0))
 f2:!(!Ch(0,0))=>(exists(K242:Int,K243:Int)[ (Ch(K242,K243)&turn(p1)&K242>=0&K242<xlen()&K243>=0&K243<ylen())&((( !(Ch(0,0)&(K242>0|K243>0)) ) => ( !(Ch(0,0)&(K242>0|K243>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 1&(Ch(G0,G0)&(K242>G0|K243>G0))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K242>G0|K243>G1))&! (Ch(G1,G0)&(K242>G1|K243>G0))])) ])
2019-10-14 12:29:57,722 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 1&Ch(G0,G0)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,G0)])
 f2:forall(K240:Int,K241:Int)[ Ch(K240,K241)&turn(p2)&K240>=0&K240<xlen()&K241>=0&K241<ylen()=>((( !(Ch(0,0)&(K240>0|K241>0)) ) => ( !(Ch(0,0)&(K240>0|K241>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 1&! (Ch(G0,G0)&(K240>G0|K241>G0))])&!(! (Ch(1,0)&(K240>1|K241>0)))) ]
2019-10-14 12:29:57,764 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 1&Ch(G0,G0)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,G0)])
 f2:forall(K240:Int,K241:Int)[ Ch(K240,K241)&turn(p2)&K240>=0&K240<xlen()&K241>=0&K241<ylen()=>((( !(Ch(0,0)&(K240>0|K241>0)) ) => ( !(Ch(0,0)&(K240>0|K241>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 1&! (Ch(G0,G0)&(K240>G0|K241>G0))])&!(! (Ch(1,0)&(K240>1|K241>0)))) ]
2019-10-14 12:29:58,579 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() >= G0&turn(p2)])&!(exists(G0:Int)[G0>=0&Ch(1,G0)&! Ch(0,G0)])
 f2:!(!Ch(0,0))=>(exists(K247:Int,K248:Int)[ (Ch(K247,K248)&turn(p1)&K247>=0&K247<xlen()&K248>=0&K248<ylen())&((( !(Ch(0,0)&(K247>0|K248>0)) ) => ( !(Ch(0,0)&(K247>0|K248>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 1&(Ch(G0,G0)&(K247>G0|K248>G0))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K247>G0|K248>G1))&! (Ch(G1,G0)&(K247>G1|K248>G0))])) ])
2019-10-14 12:29:58,620 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 1&Ch(G0,G0)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,G0)])
 f2:forall(K244:Int,K245:Int)[ Ch(K244,K245)&turn(p2)&K244>=0&K244<xlen()&K245>=0&K245<ylen()=>((( !(Ch(0,0)&(K244>0|K245>0)) ) => ( !(Ch(0,0)&(K244>0|K245>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K246:Int)[ (xlen()=K246)&(G0>=0& K246 >= G0&(!turn(p2)))] ])&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K244>1|K245>G0))&! (Ch(0,G0)&(K244>0|K245>G0))])) ]
2019-10-14 12:29:58,659 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 1&Ch(G0,G0)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,G0)])
 f2:forall(K244:Int,K245:Int)[ Ch(K244,K245)&turn(p2)&K244>=0&K244<xlen()&K245>=0&K245<ylen()=>((( !(Ch(0,0)&(K244>0|K245>0)) ) => ( !(Ch(0,0)&(K244>0|K245>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K246:Int)[ (xlen()=K246)&(G0>=0& K246 >= G0&(!turn(p2)))] ])&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K244>1|K245>G0))&! (Ch(0,G0)&(K244>0|K245>G0))])) ]
2019-10-14 12:29:58,691 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 1&Ch(G0,G0)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,G0)])
 f2:forall(K244:Int,K245:Int)[ Ch(K244,K245)&turn(p2)&K244>=0&K244<xlen()&K245>=0&K245<ylen()=>((( !(Ch(0,0)&(K244>0|K245>0)) ) => ( !(Ch(0,0)&(K244>0|K245>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K246:Int)[ (xlen()=K246)&(G0>=0& K246 >= G0&(!turn(p2)))] ])&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K244>1|K245>G0))&! (Ch(0,G0)&(K244>0|K245>G0))])) ]
2019-10-14 12:30:00,075 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() >= G0&turn(p2)])&!(exists(G0:Int)[G0>=0&Ch(G0,G0)&! Ch(0,G0)])
 f2:!(!Ch(0,0))=>(exists(K252:Int,K253:Int)[ (Ch(K252,K253)&turn(p1)&K252>=0&K252<xlen()&K253>=0&K253<ylen())&((( !(Ch(0,0)&(K252>0|K253>0)) ) => ( !(Ch(0,0)&(K252>0|K253>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 1&(Ch(G0,G0)&(K252>G0|K253>G0))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K252>G0|K253>G1))&! (Ch(G1,G0)&(K252>G1|K253>G0))])) ])
2019-10-14 12:30:00,117 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 1&Ch(G0,G0)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,G0)])
 f2:forall(K249:Int,K250:Int)[ Ch(K249,K250)&turn(p2)&K249>=0&K249<xlen()&K250>=0&K250<ylen()=>((( !(Ch(0,0)&(K249>0|K250>0)) ) => ( !(Ch(0,0)&(K249>0|K250>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K251:Int)[ (xlen()=K251)&(G0>=0& K251 >= G0&(!turn(p2)))] ])&!(exists(G0:Int)[G0>=0&(Ch(G0,G0)&(K249>G0|K250>G0))&! (Ch(0,G0)&(K249>0|K250>G0))])) ]
2019-10-14 12:30:00,153 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 1&Ch(G0,G0)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,G0)])
 f2:forall(K249:Int,K250:Int)[ Ch(K249,K250)&turn(p2)&K249>=0&K249<xlen()&K250>=0&K250<ylen()=>((( !(Ch(0,0)&(K249>0|K250>0)) ) => ( !(Ch(0,0)&(K249>0|K250>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K251:Int)[ (xlen()=K251)&(G0>=0& K251 >= G0&(!turn(p2)))] ])&!(exists(G0:Int)[G0>=0&(Ch(G0,G0)&(K249>G0|K250>G0))&! (Ch(0,G0)&(K249>0|K250>G0))])) ]
2019-10-14 12:30:00,183 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 1&Ch(G0,G0)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,G0)])
 f2:forall(K249:Int,K250:Int)[ Ch(K249,K250)&turn(p2)&K249>=0&K249<xlen()&K250>=0&K250<ylen()=>((( !(Ch(0,0)&(K249>0|K250>0)) ) => ( !(Ch(0,0)&(K249>0|K250>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K251:Int)[ (xlen()=K251)&(G0>=0& K251 >= G0&(!turn(p2)))] ])&!(exists(G0:Int)[G0>=0&(Ch(G0,G0)&(K249>G0|K250>G0))&! (Ch(0,G0)&(K249>0|K250>G0))])) ]
2019-10-14 12:30:38,388 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:!(!Ch(0,0))=>(exists(K256:Int,K257:Int)[ (Ch(K256,K257)&turn(p1)&K256>=0&K256<xlen()&K257>=0&K257<ylen())&(( !(Ch(0,0)&(K256>0|K257>0)) ) => ( !(Ch(0,0)&(K256>0|K257>0))&(!turn(p1)) )) ])
2019-10-14 12:30:38,423 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:forall(K254:Int,K255:Int)[ Ch(K254,K255)&turn(p2)&K254>=0&K254<xlen()&K255>=0&K255<ylen()=>(( !(Ch(0,0)&(K254>0|K255>0)) ) => ( !(Ch(0,0)&(K254>0|K255>0))&(!turn(p1)) )) ]
2019-10-14 12:30:38,570 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&ylen() >= X1])
 f2:!(!Ch(0,0))=>(exists(K261:Int,K262:Int)[ (Ch(K261,K262)&turn(p1)&K261>=0&K261<xlen()&K262>=0&K262<ylen())&(( !(Ch(0,0)&(K261>0|K262>0)) ) => ( !(Ch(0,0)&(K261>0|K262>0))&(!turn(p1)) )) ])
2019-10-14 12:30:38,598 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:forall(K258:Int,K259:Int)[ Ch(K258,K259)&turn(p2)&K258>=0&K258<xlen()&K259>=0&K259<ylen()=>((( !(Ch(0,0)&(K258>0|K259>0)) ) => ( !(Ch(0,0)&(K258>0|K259>0))&(!turn(p1)) ))&!(exists(X1:Int)[ exists(K260:Int)[ (ylen()=K260)&(X1>=0& K260 >= X1)] ])) ]
2019-10-14 12:30:38,957 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&ylen() >= X1])
 f2:!(!Ch(0,0))=>(exists(K266:Int,K267:Int)[ (Ch(K266,K267)&turn(p1)&K266>=0&K266<xlen()&K267>=0&K267<ylen())&((( !(Ch(0,0)&(K266>0|K267>0)) ) => ( !(Ch(0,0)&(K266>0|K267>0))&(!turn(p1)) ))&!(exists(X1:Int)[ exists(K268:Int)[ (xlen()=K268)&(X1>=0& K268 >= X1)] ])) ])
2019-10-14 12:30:38,990 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&xlen() >= X1])
 f2:forall(K263:Int,K264:Int)[ Ch(K263,K264)&turn(p2)&K263>=0&K263<xlen()&K264>=0&K264<ylen()=>((( !(Ch(0,0)&(K263>0|K264>0)) ) => ( !(Ch(0,0)&(K263>0|K264>0))&(!turn(p1)) ))&!(exists(X1:Int)[ exists(K265:Int)[ (ylen()=K265)&(X1>=0& K265 >= X1)] ])) ]
2019-10-14 12:30:39,018 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:forall(K16:Int,K17:Int)[K16>=0&K16<xlen()&K17>=0&K17<ylen()=>Ch(K16,K17)]&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)
 f2:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&ylen() >= X1])
2019-10-14 12:30:39,887 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&ylen() >= G0&! Ch(1,1)])
 f2:!(!Ch(0,0))=>(exists(K272:Int,K273:Int)[ (Ch(K272,K273)&turn(p1)&K272>=0&K272<xlen()&K273>=0&K273<ylen())&((( !(Ch(0,0)&(K272>0|K273>0)) ) => ( !(Ch(0,0)&(K272>0|K273>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K274:Int)[ (xlen()=K274)&(G0>=0& K274 >= G0&(Ch(1,1)&(K272>1|K273>1)))] ])) ])
2019-10-14 12:30:39,939 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() >= G0&Ch(1,1)])
 f2:forall(K269:Int,K270:Int)[ Ch(K269,K270)&turn(p2)&K269>=0&K269<xlen()&K270>=0&K270<ylen()=>((( !(Ch(0,0)&(K269>0|K270>0)) ) => ( !(Ch(0,0)&(K269>0|K270>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K271:Int)[ (ylen()=K271)&(G0>=0& K271 >= G0&! (Ch(1,1)&(K269>1|K270>1)))] ])) ]
2019-10-14 12:30:39,986 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() >= G0&Ch(1,1)])
 f2:forall(K269:Int,K270:Int)[ Ch(K269,K270)&turn(p2)&K269>=0&K269<xlen()&K270>=0&K270<ylen()=>((( !(Ch(0,0)&(K269>0|K270>0)) ) => ( !(Ch(0,0)&(K269>0|K270>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K271:Int)[ (ylen()=K271)&(G0>=0& K271 >= G0&! (Ch(1,1)&(K269>1|K270>1)))] ])) ]
2019-10-14 12:30:41,154 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&ylen() >= G0&! Ch(1,1)])&!(! Ch(0,1))
 f2:!(!Ch(0,0))=>(exists(K278:Int,K279:Int)[ (Ch(K278,K279)&turn(p1)&K278>=0&K278<xlen()&K279>=0&K279<ylen())&((( !(Ch(0,0)&(K278>0|K279>0)) ) => ( !(Ch(0,0)&(K278>0|K279>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K280:Int)[ (xlen()=K280)&(G0>=0& K280 >= G0&(Ch(1,1)&(K278>1|K279>1)))] ])&!(! (Ch(1,0)&(K278>1|K279>0)))) ])
2019-10-14 12:30:41,198 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() >= G0&Ch(1,1)])&!(! Ch(1,0))
 f2:forall(K275:Int,K276:Int)[ Ch(K275,K276)&turn(p2)&K275>=0&K275<xlen()&K276>=0&K276<ylen()=>((( !(Ch(0,0)&(K275>0|K276>0)) ) => ( !(Ch(0,0)&(K275>0|K276>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K277:Int)[ (ylen()=K277)&(G0>=0& K277 >= G0&! (Ch(1,1)&(K275>1|K276>1)))] ])&!(! (Ch(0,1)&(K275>0|K276>1)))) ]
2019-10-14 12:30:42,035 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&ylen() >= G0&! turn(p1)])&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(G0,0)])
 f2:!(!Ch(0,0))=>(exists(K284:Int,K285:Int)[ (Ch(K284,K285)&turn(p1)&K284>=0&K284<xlen()&K285>=0&K285<ylen())&((( !(Ch(0,0)&(K284>0|K285>0)) ) => ( !(Ch(0,0)&(K284>0|K285>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K286:Int)[ (xlen()=K286)&(G0>=0& K286 >= G0&(Ch(1,1)&(K284>1|K285>1)))] ])&!(! (Ch(1,0)&(K284>1|K285>0)))) ])
2019-10-14 12:30:42,086 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() >= G0&Ch(1,1)])&!(! Ch(1,0))
 f2:forall(K281:Int,K282:Int)[ Ch(K281,K282)&turn(p2)&K281>=0&K281<xlen()&K282>=0&K282<ylen()=>((( !(Ch(0,0)&(K281>0|K282>0)) ) => ( !(Ch(0,0)&(K281>0|K282>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K283:Int)[ (ylen()=K283)&(G0>=0& K283 >= G0&! (!turn(p1)))] ])&!(exists(G0:Int)[G0>=0&(Ch(G0,1)&(K281>G0|K282>1))&! (Ch(G0,0)&(K281>G0|K282>0))])) ]
2019-10-14 12:30:42,149 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() >= G0&Ch(1,1)])&!(! Ch(1,0))
 f2:forall(K281:Int,K282:Int)[ Ch(K281,K282)&turn(p2)&K281>=0&K281<xlen()&K282>=0&K282<ylen()=>((( !(Ch(0,0)&(K281>0|K282>0)) ) => ( !(Ch(0,0)&(K281>0|K282>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K283:Int)[ (ylen()=K283)&(G0>=0& K283 >= G0&! (!turn(p1)))] ])&!(exists(G0:Int)[G0>=0&(Ch(G0,1)&(K281>G0|K282>1))&! (Ch(G0,0)&(K281>G0|K282>0))])) ]
2019-10-14 12:30:42,187 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() >= G0&Ch(1,1)])&!(! Ch(1,0))
 f2:forall(K281:Int,K282:Int)[ Ch(K281,K282)&turn(p2)&K281>=0&K281<xlen()&K282>=0&K282<ylen()=>((( !(Ch(0,0)&(K281>0|K282>0)) ) => ( !(Ch(0,0)&(K281>0|K282>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K283:Int)[ (ylen()=K283)&(G0>=0& K283 >= G0&! (!turn(p1)))] ])&!(exists(G0:Int)[G0>=0&(Ch(G0,1)&(K281>G0|K282>1))&! (Ch(G0,0)&(K281>G0|K282>0))])) ]
2019-10-14 12:31:13,537 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&ylen() >= G0&! turn(p1)])&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(G0,0)])&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(1,G0)&! Ch(0,1)])
 f2:!(!Ch(0,0))=>(exists(K290:Int,K291:Int)[ (Ch(K290,K291)&turn(p1)&K290>=0&K290<xlen()&K291>=0&K291<ylen())&((( !(Ch(0,0)&(K290>0|K291>0)) ) => ( !(Ch(0,0)&(K290>0|K291>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K292:Int)[ (xlen()=K292)&(G0>=0& K292 >= G0&(Ch(1,1)&(K290>1|K291>1)))] ])&!(! (Ch(1,0)&(K290>1|K291>0)))&!(exists(G0:Int)[ exists(K293:Int)[ (ylen()=K293)&(G0>=0&G0 > 1& K293 > G0)] ])) ])
2019-10-14 12:31:13,578 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() >= G0&Ch(1,1)])&!(! Ch(1,0))&!(exists(G0:Int)[G0>=0&G0 > 1&ylen() > G0])
 f2:forall(K287:Int,K288:Int)[ Ch(K287,K288)&turn(p2)&K287>=0&K287<xlen()&K288>=0&K288<ylen()=>((( !(Ch(0,0)&(K287>0|K288>0)) ) => ( !(Ch(0,0)&(K287>0|K288>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K289:Int)[ (ylen()=K289)&(G0>=0& K289 >= G0&! (!turn(p1)))] ])&!(exists(G0:Int)[G0>=0&(Ch(G0,1)&(K287>G0|K288>1))&! (Ch(G0,0)&(K287>G0|K288>0))])&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K287>0|K288>G0))&! (Ch(1,G0)&(K287>1|K288>G0))&! (Ch(0,1)&(K287>0|K288>1))])) ]
2019-10-14 12:31:14,101 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&ylen() >= G0&! turn(p1)])&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(G0,0)])&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(1,G0)&! Ch(0,1)])
 f2:!(!Ch(0,0))=>(exists(K297:Int,K298:Int)[ (Ch(K297,K298)&turn(p1)&K297>=0&K297<xlen()&K298>=0&K298<ylen())&((( !(Ch(0,0)&(K297>0|K298>0)) ) => ( !(Ch(0,0)&(K297>0|K298>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K299:Int)[ (xlen()=K299)&(G0>=0& K299 >= G0&(Ch(1,1)&(K297>1|K298>1)))] ])&!(exists(G0:Int)[ exists(K300:Int)[ (ylen()=K300)&(G0>=0&G0 > 1& K300 > G0)] ])&!((Ch(0,1)&(K297>0|K298>1))&! (Ch(1,0)&(K297>1|K298>0)))) ])
2019-10-14 12:31:14,147 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&ylen() >= G0&! turn(p1)])&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(G0,0)])&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(1,G0)&! Ch(0,1)])
 f2:!(!Ch(0,0))=>(exists(K297:Int,K298:Int)[ (Ch(K297,K298)&turn(p1)&K297>=0&K297<xlen()&K298>=0&K298<ylen())&((( !(Ch(0,0)&(K297>0|K298>0)) ) => ( !(Ch(0,0)&(K297>0|K298>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K299:Int)[ (xlen()=K299)&(G0>=0& K299 >= G0&(Ch(1,1)&(K297>1|K298>1)))] ])&!(exists(G0:Int)[ exists(K300:Int)[ (ylen()=K300)&(G0>=0&G0 > 1& K300 > G0)] ])&!((Ch(0,1)&(K297>0|K298>1))&! (Ch(1,0)&(K297>1|K298>0)))) ])
2019-10-14 12:31:14,183 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&ylen() >= G0&! turn(p1)])&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(G0,0)])&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(1,G0)&! Ch(0,1)])
 f2:!(!Ch(0,0))=>(exists(K297:Int,K298:Int)[ (Ch(K297,K298)&turn(p1)&K297>=0&K297<xlen()&K298>=0&K298<ylen())&((( !(Ch(0,0)&(K297>0|K298>0)) ) => ( !(Ch(0,0)&(K297>0|K298>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K299:Int)[ (xlen()=K299)&(G0>=0& K299 >= G0&(Ch(1,1)&(K297>1|K298>1)))] ])&!(exists(G0:Int)[ exists(K300:Int)[ (ylen()=K300)&(G0>=0&G0 > 1& K300 > G0)] ])&!((Ch(0,1)&(K297>0|K298>1))&! (Ch(1,0)&(K297>1|K298>0)))) ])
2019-10-14 12:31:14,226 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() >= G0&Ch(1,1)])&!(exists(G0:Int)[G0>=0&G0 > 1&ylen() > G0])&!(Ch(0,1)&! Ch(1,0))
 f2:forall(K294:Int,K295:Int)[ Ch(K294,K295)&turn(p2)&K294>=0&K294<xlen()&K295>=0&K295<ylen()=>((( !(Ch(0,0)&(K294>0|K295>0)) ) => ( !(Ch(0,0)&(K294>0|K295>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K296:Int)[ (ylen()=K296)&(G0>=0& K296 >= G0&! (!turn(p1)))] ])&!(exists(G0:Int)[G0>=0&(Ch(G0,1)&(K294>G0|K295>1))&! (Ch(G0,0)&(K294>G0|K295>0))])&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K294>0|K295>G0))&! (Ch(1,G0)&(K294>1|K295>G0))&! (Ch(0,1)&(K294>0|K295>1))])) ]
2019-10-14 12:31:18,129 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&ylen() >= G0&! turn(p1)])&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(G0,0)])&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(1,G0)&! Ch(0,1)])
 f2:!(!Ch(0,0))=>(exists(K304:Int,K305:Int)[ (Ch(K304,K305)&turn(p1)&K304>=0&K304<xlen()&K305>=0&K305<ylen())&((( !(Ch(0,0)&(K304>0|K305>0)) ) => ( !(Ch(0,0)&(K304>0|K305>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K306:Int)[ (xlen()=K306)&(G0>=0& K306 >= G0&(Ch(1,1)&(K304>1|K305>1)))] ])&!((Ch(0,1)&(K304>0|K305>1))&! (Ch(1,0)&(K304>1|K305>0)))&!(exists(G0:Int)[ exists(K307:Int)[ (ylen()=K307)&(G0>=0& K307 > G0&G0 > 1&(Ch(1,0)&(K304>1|K305>0)))] ])) ])
2019-10-14 12:31:18,179 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&ylen() >= G0&! turn(p1)])&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(G0,0)])&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(1,G0)&! Ch(0,1)])
 f2:!(!Ch(0,0))=>(exists(K304:Int,K305:Int)[ (Ch(K304,K305)&turn(p1)&K304>=0&K304<xlen()&K305>=0&K305<ylen())&((( !(Ch(0,0)&(K304>0|K305>0)) ) => ( !(Ch(0,0)&(K304>0|K305>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K306:Int)[ (xlen()=K306)&(G0>=0& K306 >= G0&(Ch(1,1)&(K304>1|K305>1)))] ])&!((Ch(0,1)&(K304>0|K305>1))&! (Ch(1,0)&(K304>1|K305>0)))&!(exists(G0:Int)[ exists(K307:Int)[ (ylen()=K307)&(G0>=0& K307 > G0&G0 > 1&(Ch(1,0)&(K304>1|K305>0)))] ])) ])
2019-10-14 12:31:18,216 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&ylen() >= G0&! turn(p1)])&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(G0,0)])&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(1,G0)&! Ch(0,1)])
 f2:!(!Ch(0,0))=>(exists(K304:Int,K305:Int)[ (Ch(K304,K305)&turn(p1)&K304>=0&K304<xlen()&K305>=0&K305<ylen())&((( !(Ch(0,0)&(K304>0|K305>0)) ) => ( !(Ch(0,0)&(K304>0|K305>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K306:Int)[ (xlen()=K306)&(G0>=0& K306 >= G0&(Ch(1,1)&(K304>1|K305>1)))] ])&!((Ch(0,1)&(K304>0|K305>1))&! (Ch(1,0)&(K304>1|K305>0)))&!(exists(G0:Int)[ exists(K307:Int)[ (ylen()=K307)&(G0>=0& K307 > G0&G0 > 1&(Ch(1,0)&(K304>1|K305>0)))] ])) ])
2019-10-14 12:31:18,265 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() >= G0&Ch(1,1)])&!(Ch(0,1)&! Ch(1,0))&!(exists(G0:Int)[G0>=0&ylen() > G0&G0 > 1&Ch(1,0)])
 f2:forall(K301:Int,K302:Int)[ Ch(K301,K302)&turn(p2)&K301>=0&K301<xlen()&K302>=0&K302<ylen()=>((( !(Ch(0,0)&(K301>0|K302>0)) ) => ( !(Ch(0,0)&(K301>0|K302>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K303:Int)[ (ylen()=K303)&(G0>=0& K303 >= G0&! (!turn(p1)))] ])&!(exists(G0:Int)[G0>=0&(Ch(G0,1)&(K301>G0|K302>1))&! (Ch(G0,0)&(K301>G0|K302>0))])&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K301>0|K302>G0))&! (Ch(1,G0)&(K301>1|K302>G0))&! (Ch(0,1)&(K301>0|K302>1))])) ]
2019-10-14 12:31:18,317 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() >= G0&Ch(1,1)])&!(Ch(0,1)&! Ch(1,0))&!(exists(G0:Int)[G0>=0&ylen() > G0&G0 > 1&Ch(1,0)])
 f2:forall(K301:Int,K302:Int)[ Ch(K301,K302)&turn(p2)&K301>=0&K301<xlen()&K302>=0&K302<ylen()=>((( !(Ch(0,0)&(K301>0|K302>0)) ) => ( !(Ch(0,0)&(K301>0|K302>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K303:Int)[ (ylen()=K303)&(G0>=0& K303 >= G0&! (!turn(p1)))] ])&!(exists(G0:Int)[G0>=0&(Ch(G0,1)&(K301>G0|K302>1))&! (Ch(G0,0)&(K301>G0|K302>0))])&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K301>0|K302>G0))&! (Ch(1,G0)&(K301>1|K302>G0))&! (Ch(0,1)&(K301>0|K302>1))])) ]
2019-10-14 12:31:25,154 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&ylen() >= G0&! turn(p1)])&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(G0,0)])&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(1,G0)&! Ch(0,1)])&!(exists(G0:Int)[G0>=0&G0 > 1&xlen() > G0])
 f2:!(!Ch(0,0))=>(exists(K312:Int,K313:Int)[ (Ch(K312,K313)&turn(p1)&K312>=0&K312<xlen()&K313>=0&K313<ylen())&((( !(Ch(0,0)&(K312>0|K313>0)) ) => ( !(Ch(0,0)&(K312>0|K313>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K314:Int)[ (xlen()=K314)&(G0>=0& K314 >= G0&(Ch(1,1)&(K312>1|K313>1)))] ])&!((Ch(0,1)&(K312>0|K313>1))&! (Ch(1,0)&(K312>1|K313>0)))&!(exists(G0:Int)[G0>=0&(Ch(G0,0)&(K312>G0|K313>0))&! (Ch(0,G0)&(K312>0|K313>G0))])) ])
2019-10-14 12:31:25,207 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() >= G0&Ch(1,1)])&!(Ch(0,1)&! Ch(1,0))&!(exists(G0:Int)[G0>=0&Ch(G0,0)&! Ch(0,G0)])
 f2:forall(K308:Int,K309:Int)[ Ch(K308,K309)&turn(p2)&K308>=0&K308<xlen()&K309>=0&K309<ylen()=>((( !(Ch(0,0)&(K308>0|K309>0)) ) => ( !(Ch(0,0)&(K308>0|K309>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K310:Int)[ (ylen()=K310)&(G0>=0& K310 >= G0&! (!turn(p1)))] ])&!(exists(G0:Int)[G0>=0&(Ch(G0,1)&(K308>G0|K309>1))&! (Ch(G0,0)&(K308>G0|K309>0))])&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K308>0|K309>G0))&! (Ch(1,G0)&(K308>1|K309>G0))&! (Ch(0,1)&(K308>0|K309>1))])&!(exists(G0:Int)[ exists(K311:Int)[ (xlen()=K311)&(G0>=0&G0 > 1& K311 > G0)] ])) ]
2019-10-14 12:31:25,249 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() >= G0&Ch(1,1)])&!(Ch(0,1)&! Ch(1,0))&!(exists(G0:Int)[G0>=0&Ch(G0,0)&! Ch(0,G0)])
 f2:forall(K308:Int,K309:Int)[ Ch(K308,K309)&turn(p2)&K308>=0&K308<xlen()&K309>=0&K309<ylen()=>((( !(Ch(0,0)&(K308>0|K309>0)) ) => ( !(Ch(0,0)&(K308>0|K309>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K310:Int)[ (ylen()=K310)&(G0>=0& K310 >= G0&! (!turn(p1)))] ])&!(exists(G0:Int)[G0>=0&(Ch(G0,1)&(K308>G0|K309>1))&! (Ch(G0,0)&(K308>G0|K309>0))])&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K308>0|K309>G0))&! (Ch(1,G0)&(K308>1|K309>G0))&! (Ch(0,1)&(K308>0|K309>1))])&!(exists(G0:Int)[ exists(K311:Int)[ (xlen()=K311)&(G0>=0&G0 > 1& K311 > G0)] ])) ]
2019-10-14 12:31:25,284 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() >= G0&Ch(1,1)])&!(Ch(0,1)&! Ch(1,0))&!(exists(G0:Int)[G0>=0&Ch(G0,0)&! Ch(0,G0)])
 f2:forall(K308:Int,K309:Int)[ Ch(K308,K309)&turn(p2)&K308>=0&K308<xlen()&K309>=0&K309<ylen()=>((( !(Ch(0,0)&(K308>0|K309>0)) ) => ( !(Ch(0,0)&(K308>0|K309>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K310:Int)[ (ylen()=K310)&(G0>=0& K310 >= G0&! (!turn(p1)))] ])&!(exists(G0:Int)[G0>=0&(Ch(G0,1)&(K308>G0|K309>1))&! (Ch(G0,0)&(K308>G0|K309>0))])&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K308>0|K309>G0))&! (Ch(1,G0)&(K308>1|K309>G0))&! (Ch(0,1)&(K308>0|K309>1))])&!(exists(G0:Int)[ exists(K311:Int)[ (xlen()=K311)&(G0>=0&G0 > 1& K311 > G0)] ])) ]
2019-10-14 12:31:35,369 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&ylen() >= G0&! turn(p1)])&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(G0,0)])&!(exists(G0:Int)[G0>=0&G0 > 1&xlen() > G0])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(0,G0)&! Ch(1,G0)&Ch(G1,0)&! Ch(G1,1)])
 f2:!(!Ch(0,0))=>(exists(K319:Int,K320:Int)[ (Ch(K319,K320)&turn(p1)&K319>=0&K319<xlen()&K320>=0&K320<ylen())&((( !(Ch(0,0)&(K319>0|K320>0)) ) => ( !(Ch(0,0)&(K319>0|K320>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K321:Int)[ (xlen()=K321)&(G0>=0& K321 >= G0&(Ch(1,1)&(K319>1|K320>1)))] ])&!((Ch(0,1)&(K319>0|K320>1))&! (Ch(1,0)&(K319>1|K320>0)))&!(exists(G0:Int)[G0>=0&(Ch(G0,0)&(K319>G0|K320>0))&! (Ch(0,G0)&(K319>0|K320>G0))])&!(exists(G0:Int)[G0>=0&G0 > 1&(Ch(G0,1)&(K319>G0|K320>1))])) ])
2019-10-14 12:31:35,414 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() >= G0&Ch(1,1)])&!(Ch(0,1)&! Ch(1,0))&!(exists(G0:Int)[G0>=0&Ch(G0,0)&! Ch(0,G0)])&!(exists(G0:Int)[G0>=0&G0 > 1&Ch(G0,1)])
 f2:forall(K315:Int,K316:Int)[ Ch(K315,K316)&turn(p2)&K315>=0&K315<xlen()&K316>=0&K316<ylen()=>((( !(Ch(0,0)&(K315>0|K316>0)) ) => ( !(Ch(0,0)&(K315>0|K316>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K317:Int)[ (ylen()=K317)&(G0>=0& K317 >= G0&! (!turn(p1)))] ])&!(exists(G0:Int)[G0>=0&(Ch(G0,1)&(K315>G0|K316>1))&! (Ch(G0,0)&(K315>G0|K316>0))])&!(exists(G0:Int)[ exists(K318:Int)[ (xlen()=K318)&(G0>=0&G0 > 1& K318 > G0)] ])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(0,G0)&(K315>0|K316>G0))&! (Ch(1,G0)&(K315>1|K316>G0))&(Ch(G1,0)&(K315>G1|K316>0))&! (Ch(G1,1)&(K315>G1|K316>1))])) ]
2019-10-14 12:31:35,457 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() >= G0&Ch(1,1)])&!(Ch(0,1)&! Ch(1,0))&!(exists(G0:Int)[G0>=0&Ch(G0,0)&! Ch(0,G0)])&!(exists(G0:Int)[G0>=0&G0 > 1&Ch(G0,1)])
 f2:forall(K315:Int,K316:Int)[ Ch(K315,K316)&turn(p2)&K315>=0&K315<xlen()&K316>=0&K316<ylen()=>((( !(Ch(0,0)&(K315>0|K316>0)) ) => ( !(Ch(0,0)&(K315>0|K316>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K317:Int)[ (ylen()=K317)&(G0>=0& K317 >= G0&! (!turn(p1)))] ])&!(exists(G0:Int)[G0>=0&(Ch(G0,1)&(K315>G0|K316>1))&! (Ch(G0,0)&(K315>G0|K316>0))])&!(exists(G0:Int)[ exists(K318:Int)[ (xlen()=K318)&(G0>=0&G0 > 1& K318 > G0)] ])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(0,G0)&(K315>0|K316>G0))&! (Ch(1,G0)&(K315>1|K316>G0))&(Ch(G1,0)&(K315>G1|K316>0))&! (Ch(G1,1)&(K315>G1|K316>1))])) ]
2019-10-14 12:31:35,493 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() >= G0&Ch(1,1)])&!(Ch(0,1)&! Ch(1,0))&!(exists(G0:Int)[G0>=0&Ch(G0,0)&! Ch(0,G0)])&!(exists(G0:Int)[G0>=0&G0 > 1&Ch(G0,1)])
 f2:forall(K315:Int,K316:Int)[ Ch(K315,K316)&turn(p2)&K315>=0&K315<xlen()&K316>=0&K316<ylen()=>((( !(Ch(0,0)&(K315>0|K316>0)) ) => ( !(Ch(0,0)&(K315>0|K316>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K317:Int)[ (ylen()=K317)&(G0>=0& K317 >= G0&! (!turn(p1)))] ])&!(exists(G0:Int)[G0>=0&(Ch(G0,1)&(K315>G0|K316>1))&! (Ch(G0,0)&(K315>G0|K316>0))])&!(exists(G0:Int)[ exists(K318:Int)[ (xlen()=K318)&(G0>=0&G0 > 1& K318 > G0)] ])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(0,G0)&(K315>0|K316>G0))&! (Ch(1,G0)&(K315>1|K316>G0))&(Ch(G1,0)&(K315>G1|K316>0))&! (Ch(G1,1)&(K315>G1|K316>1))])) ]
2019-10-14 12:31:39,955 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&ylen() >= G0&! turn(p1)])&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(G0,0)])&!(exists(G0:Int)[G0>=0&G0 > 1&xlen() > G0])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(0,G0)&! Ch(1,G0)&Ch(G1,0)&! Ch(G1,1)])
 f2:!(!Ch(0,0))=>(exists(K326:Int,K327:Int)[ (Ch(K326,K327)&turn(p1)&K326>=0&K326<xlen()&K327>=0&K327<ylen())&((( !(Ch(0,0)&(K326>0|K327>0)) ) => ( !(Ch(0,0)&(K326>0|K327>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K328:Int)[ (xlen()=K328)&(G0>=0& K328 >= G0&(Ch(1,1)&(K326>1|K327>1)))] ])&!((Ch(0,1)&(K326>0|K327>1))&! (Ch(1,0)&(K326>1|K327>0)))&!(exists(G0:Int)[G0>=0&(Ch(G0,0)&(K326>G0|K327>0))&! (Ch(0,G0)&(K326>0|K327>G0))])&!(exists(G0:Int,Y11:Int)[G0>=0&Y11>=0&G0 > 1&(Ch(G0,Y11)&(K326>G0|K327>Y11))])) ])
2019-10-14 12:31:40,004 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() >= G0&Ch(1,1)])&!(Ch(0,1)&! Ch(1,0))&!(exists(G0:Int)[G0>=0&Ch(G0,0)&! Ch(0,G0)])&!(exists(G0:Int,Y11:Int)[G0>=0&Y11>=0&G0 > 1&Ch(G0,Y11)])
 f2:forall(K322:Int,K323:Int)[ Ch(K322,K323)&turn(p2)&K322>=0&K322<xlen()&K323>=0&K323<ylen()=>((( !(Ch(0,0)&(K322>0|K323>0)) ) => ( !(Ch(0,0)&(K322>0|K323>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K324:Int)[ (ylen()=K324)&(G0>=0& K324 >= G0&! (!turn(p1)))] ])&!(exists(G0:Int)[G0>=0&(Ch(G0,1)&(K322>G0|K323>1))&! (Ch(G0,0)&(K322>G0|K323>0))])&!(exists(G0:Int)[ exists(K325:Int)[ (xlen()=K325)&(G0>=0&G0 > 1& K325 > G0)] ])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(0,G0)&(K322>0|K323>G0))&! (Ch(1,G0)&(K322>1|K323>G0))&(Ch(G1,0)&(K322>G1|K323>0))&! (Ch(G1,1)&(K322>G1|K323>1))])) ]
2019-10-14 12:31:40,048 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() >= G0&Ch(1,1)])&!(Ch(0,1)&! Ch(1,0))&!(exists(G0:Int)[G0>=0&Ch(G0,0)&! Ch(0,G0)])&!(exists(G0:Int,Y11:Int)[G0>=0&Y11>=0&G0 > 1&Ch(G0,Y11)])
 f2:forall(K322:Int,K323:Int)[ Ch(K322,K323)&turn(p2)&K322>=0&K322<xlen()&K323>=0&K323<ylen()=>((( !(Ch(0,0)&(K322>0|K323>0)) ) => ( !(Ch(0,0)&(K322>0|K323>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K324:Int)[ (ylen()=K324)&(G0>=0& K324 >= G0&! (!turn(p1)))] ])&!(exists(G0:Int)[G0>=0&(Ch(G0,1)&(K322>G0|K323>1))&! (Ch(G0,0)&(K322>G0|K323>0))])&!(exists(G0:Int)[ exists(K325:Int)[ (xlen()=K325)&(G0>=0&G0 > 1& K325 > G0)] ])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(0,G0)&(K322>0|K323>G0))&! (Ch(1,G0)&(K322>1|K323>G0))&(Ch(G1,0)&(K322>G1|K323>0))&! (Ch(G1,1)&(K322>G1|K323>1))])) ]
2019-10-14 12:31:40,085 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() >= G0&Ch(1,1)])&!(Ch(0,1)&! Ch(1,0))&!(exists(G0:Int)[G0>=0&Ch(G0,0)&! Ch(0,G0)])&!(exists(G0:Int,Y11:Int)[G0>=0&Y11>=0&G0 > 1&Ch(G0,Y11)])
 f2:forall(K322:Int,K323:Int)[ Ch(K322,K323)&turn(p2)&K322>=0&K322<xlen()&K323>=0&K323<ylen()=>((( !(Ch(0,0)&(K322>0|K323>0)) ) => ( !(Ch(0,0)&(K322>0|K323>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K324:Int)[ (ylen()=K324)&(G0>=0& K324 >= G0&! (!turn(p1)))] ])&!(exists(G0:Int)[G0>=0&(Ch(G0,1)&(K322>G0|K323>1))&! (Ch(G0,0)&(K322>G0|K323>0))])&!(exists(G0:Int)[ exists(K325:Int)[ (xlen()=K325)&(G0>=0&G0 > 1& K325 > G0)] ])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(0,G0)&(K322>0|K323>G0))&! (Ch(1,G0)&(K322>1|K323>G0))&(Ch(G1,0)&(K322>G1|K323>0))&! (Ch(G1,1)&(K322>G1|K323>1))])) ]
2019-10-14 12:31:50,222 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&ylen() >= G0&! turn(p1)])&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(G0,0)])&!(exists(G0:Int)[G0>=0&G0 > 1&xlen() > G0])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(0,G0)&! Ch(1,G0)&Ch(G1,0)&! Ch(G1,1)])
 f2:!(!Ch(0,0))=>(exists(K333:Int,K334:Int)[ (Ch(K333,K334)&turn(p1)&K333>=0&K333<xlen()&K334>=0&K334<ylen())&((( !(Ch(0,0)&(K333>0|K334>0)) ) => ( !(Ch(0,0)&(K333>0|K334>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K335:Int)[ (xlen()=K335)&(G0>=0& K335 >= G0&(Ch(1,1)&(K333>1|K334>1)))] ])&!((Ch(0,1)&(K333>0|K334>1))&! (Ch(1,0)&(K333>1|K334>0)))&!(exists(G0:Int)[G0>=0&(Ch(G0,0)&(K333>G0|K334>0))&! (Ch(0,G0)&(K333>0|K334>G0))])&!(exists(G0:Int,Y10:Int)[G0>=0&Y10>=0&G0 > 1&(Ch(Y10,G0)&(K333>Y10|K334>G0))])) ])
2019-10-14 12:31:50,266 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() >= G0&Ch(1,1)])&!(Ch(0,1)&! Ch(1,0))&!(exists(G0:Int)[G0>=0&Ch(G0,0)&! Ch(0,G0)])&!(exists(G0:Int,Y10:Int)[G0>=0&Y10>=0&G0 > 1&Ch(Y10,G0)])
 f2:forall(K329:Int,K330:Int)[ Ch(K329,K330)&turn(p2)&K329>=0&K329<xlen()&K330>=0&K330<ylen()=>((( !(Ch(0,0)&(K329>0|K330>0)) ) => ( !(Ch(0,0)&(K329>0|K330>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K331:Int)[ (ylen()=K331)&(G0>=0& K331 >= G0&! (!turn(p1)))] ])&!(exists(G0:Int)[G0>=0&(Ch(G0,1)&(K329>G0|K330>1))&! (Ch(G0,0)&(K329>G0|K330>0))])&!(exists(G0:Int)[ exists(K332:Int)[ (xlen()=K332)&(G0>=0&G0 > 1& K332 > G0)] ])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(0,G0)&(K329>0|K330>G0))&! (Ch(1,G0)&(K329>1|K330>G0))&(Ch(G1,0)&(K329>G1|K330>0))&! (Ch(G1,1)&(K329>G1|K330>1))])) ]
2019-10-14 12:31:50,309 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() >= G0&Ch(1,1)])&!(Ch(0,1)&! Ch(1,0))&!(exists(G0:Int)[G0>=0&Ch(G0,0)&! Ch(0,G0)])&!(exists(G0:Int,Y10:Int)[G0>=0&Y10>=0&G0 > 1&Ch(Y10,G0)])
 f2:forall(K329:Int,K330:Int)[ Ch(K329,K330)&turn(p2)&K329>=0&K329<xlen()&K330>=0&K330<ylen()=>((( !(Ch(0,0)&(K329>0|K330>0)) ) => ( !(Ch(0,0)&(K329>0|K330>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K331:Int)[ (ylen()=K331)&(G0>=0& K331 >= G0&! (!turn(p1)))] ])&!(exists(G0:Int)[G0>=0&(Ch(G0,1)&(K329>G0|K330>1))&! (Ch(G0,0)&(K329>G0|K330>0))])&!(exists(G0:Int)[ exists(K332:Int)[ (xlen()=K332)&(G0>=0&G0 > 1& K332 > G0)] ])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(0,G0)&(K329>0|K330>G0))&! (Ch(1,G0)&(K329>1|K330>G0))&(Ch(G1,0)&(K329>G1|K330>0))&! (Ch(G1,1)&(K329>G1|K330>1))])) ]
2019-10-14 12:31:50,346 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() >= G0&Ch(1,1)])&!(Ch(0,1)&! Ch(1,0))&!(exists(G0:Int)[G0>=0&Ch(G0,0)&! Ch(0,G0)])&!(exists(G0:Int,Y10:Int)[G0>=0&Y10>=0&G0 > 1&Ch(Y10,G0)])
 f2:forall(K329:Int,K330:Int)[ Ch(K329,K330)&turn(p2)&K329>=0&K329<xlen()&K330>=0&K330<ylen()=>((( !(Ch(0,0)&(K329>0|K330>0)) ) => ( !(Ch(0,0)&(K329>0|K330>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K331:Int)[ (ylen()=K331)&(G0>=0& K331 >= G0&! (!turn(p1)))] ])&!(exists(G0:Int)[G0>=0&(Ch(G0,1)&(K329>G0|K330>1))&! (Ch(G0,0)&(K329>G0|K330>0))])&!(exists(G0:Int)[ exists(K332:Int)[ (xlen()=K332)&(G0>=0&G0 > 1& K332 > G0)] ])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(0,G0)&(K329>0|K330>G0))&! (Ch(1,G0)&(K329>1|K330>G0))&(Ch(G1,0)&(K329>G1|K330>0))&! (Ch(G1,1)&(K329>G1|K330>1))])) ]
2019-10-14 12:32:01,806 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&ylen() >= G0&! turn(p1)])&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(G0,0)])&!(exists(G0:Int)[G0>=0&G0 > 1&xlen() > G0])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(0,G0)&! Ch(1,G0)&Ch(G1,0)&! Ch(G1,1)])
 f2:!(!Ch(0,0))=>(exists(K340:Int,K341:Int)[ (Ch(K340,K341)&turn(p1)&K340>=0&K340<xlen()&K341>=0&K341<ylen())&((( !(Ch(0,0)&(K340>0|K341>0)) ) => ( !(Ch(0,0)&(K340>0|K341>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K342:Int)[ (xlen()=K342)&(G0>=0& K342 >= G0&(Ch(1,1)&(K340>1|K341>1)))] ])&!((Ch(0,1)&(K340>0|K341>1))&! (Ch(1,0)&(K340>1|K341>0)))&!(exists(G0:Int)[G0>=0&(Ch(G0,0)&(K340>G0|K341>0))&! (Ch(0,G0)&(K340>0|K341>G0))])&!(exists(G0:Int,Y10:Int)[G0>=0&Y10>=0&G0 > 1&(Ch(Y10,G0)&(K340>Y10|K341>G0))])&!(exists(G0:Int)[G0>=0&G0 > 1&(Ch(G0,1)&(K340>G0|K341>1))])) ])
2019-10-14 12:32:01,853 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() >= G0&Ch(1,1)])&!(Ch(0,1)&! Ch(1,0))&!(exists(G0:Int)[G0>=0&Ch(G0,0)&! Ch(0,G0)])&!(exists(G0:Int,Y10:Int)[G0>=0&Y10>=0&G0 > 1&Ch(Y10,G0)])&!(exists(G0:Int)[G0>=0&G0 > 1&Ch(G0,1)])
 f2:forall(K336:Int,K337:Int)[ Ch(K336,K337)&turn(p2)&K336>=0&K336<xlen()&K337>=0&K337<ylen()=>((( !(Ch(0,0)&(K336>0|K337>0)) ) => ( !(Ch(0,0)&(K336>0|K337>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K338:Int)[ (ylen()=K338)&(G0>=0& K338 >= G0&! (!turn(p1)))] ])&!(exists(G0:Int)[G0>=0&(Ch(G0,1)&(K336>G0|K337>1))&! (Ch(G0,0)&(K336>G0|K337>0))])&!(exists(G0:Int)[ exists(K339:Int)[ (xlen()=K339)&(G0>=0&G0 > 1& K339 > G0)] ])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(0,G0)&(K336>0|K337>G0))&! (Ch(1,G0)&(K336>1|K337>G0))&(Ch(G1,0)&(K336>G1|K337>0))&! (Ch(G1,1)&(K336>G1|K337>1))])) ]
2019-10-14 12:32:01,899 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() >= G0&Ch(1,1)])&!(Ch(0,1)&! Ch(1,0))&!(exists(G0:Int)[G0>=0&Ch(G0,0)&! Ch(0,G0)])&!(exists(G0:Int,Y10:Int)[G0>=0&Y10>=0&G0 > 1&Ch(Y10,G0)])&!(exists(G0:Int)[G0>=0&G0 > 1&Ch(G0,1)])
 f2:forall(K336:Int,K337:Int)[ Ch(K336,K337)&turn(p2)&K336>=0&K336<xlen()&K337>=0&K337<ylen()=>((( !(Ch(0,0)&(K336>0|K337>0)) ) => ( !(Ch(0,0)&(K336>0|K337>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K338:Int)[ (ylen()=K338)&(G0>=0& K338 >= G0&! (!turn(p1)))] ])&!(exists(G0:Int)[G0>=0&(Ch(G0,1)&(K336>G0|K337>1))&! (Ch(G0,0)&(K336>G0|K337>0))])&!(exists(G0:Int)[ exists(K339:Int)[ (xlen()=K339)&(G0>=0&G0 > 1& K339 > G0)] ])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(0,G0)&(K336>0|K337>G0))&! (Ch(1,G0)&(K336>1|K337>G0))&(Ch(G1,0)&(K336>G1|K337>0))&! (Ch(G1,1)&(K336>G1|K337>1))])) ]
2019-10-14 12:32:01,942 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() >= G0&Ch(1,1)])&!(Ch(0,1)&! Ch(1,0))&!(exists(G0:Int)[G0>=0&Ch(G0,0)&! Ch(0,G0)])&!(exists(G0:Int,Y10:Int)[G0>=0&Y10>=0&G0 > 1&Ch(Y10,G0)])&!(exists(G0:Int)[G0>=0&G0 > 1&Ch(G0,1)])
 f2:forall(K336:Int,K337:Int)[ Ch(K336,K337)&turn(p2)&K336>=0&K336<xlen()&K337>=0&K337<ylen()=>((( !(Ch(0,0)&(K336>0|K337>0)) ) => ( !(Ch(0,0)&(K336>0|K337>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K338:Int)[ (ylen()=K338)&(G0>=0& K338 >= G0&! (!turn(p1)))] ])&!(exists(G0:Int)[G0>=0&(Ch(G0,1)&(K336>G0|K337>1))&! (Ch(G0,0)&(K336>G0|K337>0))])&!(exists(G0:Int)[ exists(K339:Int)[ (xlen()=K339)&(G0>=0&G0 > 1& K339 > G0)] ])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(0,G0)&(K336>0|K337>G0))&! (Ch(1,G0)&(K336>1|K337>G0))&(Ch(G1,0)&(K336>G1|K337>0))&! (Ch(G1,1)&(K336>G1|K337>1))])) ]
2019-10-14 12:32:03,121 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&ylen() >= G0&! turn(p1)])&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(G0,0)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(0,G0)&! Ch(1,G0)&Ch(G1,0)&! Ch(G1,1)])
 f2:!(!Ch(0,0))=>(exists(K346:Int,K347:Int)[ (Ch(K346,K347)&turn(p1)&K346>=0&K346<xlen()&K347>=0&K347<ylen())&((( !(Ch(0,0)&(K346>0|K347>0)) ) => ( !(Ch(0,0)&(K346>0|K347>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K348:Int)[ (xlen()=K348)&(G0>=0& K348 >= G0&(Ch(1,1)&(K346>1|K347>1)))] ])&!((Ch(0,1)&(K346>0|K347>1))&! (Ch(1,0)&(K346>1|K347>0)))&!(exists(G0:Int)[G0>=0&(Ch(G0,0)&(K346>G0|K347>0))&! (Ch(0,G0)&(K346>0|K347>G0))])&!(exists(G0:Int,Y10:Int)[G0>=0&Y10>=0&G0 > 1&(Ch(Y10,G0)&(K346>Y10|K347>G0))])&!(exists(G0:Int)[G0>=0&G0 > 1&(Ch(G0,1)&(K346>G0|K347>1))])) ])
2019-10-14 12:32:13,476 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() >= G0&Ch(1,1)])&!(Ch(0,1)&! Ch(1,0))&!(exists(G0:Int)[G0>=0&Ch(G0,0)&! Ch(0,G0)])&!(exists(G0:Int,Y10:Int)[G0>=0&Y10>=0&G0 > 1&Ch(Y10,G0)])&!(exists(G0:Int)[G0>=0&G0 > 1&Ch(G0,1)])
 f2:forall(K343:Int,K344:Int)[ Ch(K343,K344)&turn(p2)&K343>=0&K343<xlen()&K344>=0&K344<ylen()=>((( !(Ch(0,0)&(K343>0|K344>0)) ) => ( !(Ch(0,0)&(K343>0|K344>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K345:Int)[ (ylen()=K345)&(G0>=0& K345 >= G0&! (!turn(p1)))] ])&!(exists(G0:Int)[G0>=0&(Ch(G0,1)&(K343>G0|K344>1))&! (Ch(G0,0)&(K343>G0|K344>0))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(0,G0)&(K343>0|K344>G0))&! (Ch(1,G0)&(K343>1|K344>G0))&(Ch(G1,0)&(K343>G1|K344>0))&! (Ch(G1,1)&(K343>G1|K344>1))])) ]
2019-10-14 16:40:12,899 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:!(!Ch(0,0))=>(exists(K21:Int,K22:Int)[ (Ch(K21,K22)&turn(p1)&K21>=0&K21<xlen()&K22>=0&K22<ylen())&(( !(Ch(0,0)&(K21>0|K22>0)) ) => ( !(Ch(0,0)&(K21>0|K22>0))&(!turn(p1)) )) ])
2019-10-14 16:40:12,957 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:forall(K19:Int,K20:Int)[ Ch(K19,K20)&turn(p2)&K19>=0&K19<xlen()&K20>=0&K20<ylen()=>(( !(Ch(0,0)&(K19>0|K20>0)) ) => ( !(Ch(0,0)&(K19>0|K20>0))&(!turn(p1)) )) ]
2019-10-14 16:40:13,133 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(0,X1)])
 f2:!(!Ch(0,0))=>(exists(K25:Int,K26:Int)[ (Ch(K25,K26)&turn(p1)&K25>=0&K25<xlen()&K26>=0&K26<ylen())&(( !(Ch(0,0)&(K25>0|K26>0)) ) => ( !(Ch(0,0)&(K25>0|K26>0))&(!turn(p1)) )) ])
2019-10-14 16:40:13,167 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:forall(K23:Int,K24:Int)[ Ch(K23,K24)&turn(p2)&K23>=0&K23<xlen()&K24>=0&K24<ylen()=>((( !(Ch(0,0)&(K23>0|K24>0)) ) => ( !(Ch(0,0)&(K23>0|K24>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(Ch(0,X1)&(K23>0|K24>X1))])) ]
2019-10-14 16:40:13,565 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(0,X1)])
 f2:!(!Ch(0,0))=>(exists(K29:Int,K30:Int)[ (Ch(K29,K30)&turn(p1)&K29>=0&K29<xlen()&K30>=0&K30<ylen())&((( !(Ch(0,0)&(K29>0|K30>0)) ) => ( !(Ch(0,0)&(K29>0|K30>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(Ch(1,X1)&(K29>1|K30>X1))])) ])
2019-10-14 16:40:13,600 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(1,X1)])
 f2:forall(K27:Int,K28:Int)[ Ch(K27,K28)&turn(p2)&K27>=0&K27<xlen()&K28>=0&K28<ylen()=>((( !(Ch(0,0)&(K27>0|K28>0)) ) => ( !(Ch(0,0)&(K27>0|K28>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(Ch(0,X1)&(K27>0|K28>X1))])) ]
2019-10-14 16:40:13,643 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(1,X1)])
 f2:forall(K27:Int,K28:Int)[ Ch(K27,K28)&turn(p2)&K27>=0&K27<xlen()&K28>=0&K28<ylen()=>((( !(Ch(0,0)&(K27>0|K28>0)) ) => ( !(Ch(0,0)&(K27>0|K28>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(Ch(0,X1)&(K27>0|K28>X1))])) ]
2019-10-14 16:40:14,276 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(0,X1)])
 f2:!(!Ch(0,0))=>(exists(K33:Int,K34:Int)[ (Ch(K33,K34)&turn(p1)&K33>=0&K33<xlen()&K34>=0&K34<ylen())&((( !(Ch(0,0)&(K33>0|K34>0)) ) => ( !(Ch(0,0)&(K33>0|K34>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(Ch(1,X1)&(K33>1|K34>X1))])&!(exists(X1:Int)[X1>=0&(Ch(0,X1)&(K33>0|K34>X1))])) ])
2019-10-14 16:40:14,313 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(1,X1)])&!(exists(X1:Int)[X1>=0&Ch(0,X1)])
 f2:forall(K31:Int,K32:Int)[ Ch(K31,K32)&turn(p2)&K31>=0&K31<xlen()&K32>=0&K32<ylen()=>((( !(Ch(0,0)&(K31>0|K32>0)) ) => ( !(Ch(0,0)&(K31>0|K32>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(Ch(0,X1)&(K31>0|K32>X1))])) ]
2019-10-14 16:40:14,341 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:forall(K16:Int,K17:Int)[K16>=0&K16<xlen()&K17>=0&K17<ylen()=>Ch(K16,K17)]&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)
 f2:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(0,X1)])
2019-10-14 16:40:15,321 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 0&! Ch(1,G0)])
 f2:!(!Ch(0,0))=>(exists(K37:Int,K38:Int)[ (Ch(K37,K38)&turn(p1)&K37>=0&K37<xlen()&K38>=0&K38<ylen())&((( !(Ch(0,0)&(K37>0|K38>0)) ) => ( !(Ch(0,0)&(K37>0|K38>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 0&(Ch(1,G0)&(K37>1|K38>G0))])&!(exists(G0:Int)[G0>=0&G0 = 0&! (Ch(1,G0)&(K37>1|K38>G0))])) ])
2019-10-14 16:40:15,368 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 > 0&Ch(1,G0)])&!(exists(G0:Int)[G0>=0&G0 = 0&! Ch(1,G0)])
 f2:forall(K35:Int,K36:Int)[ Ch(K35,K36)&turn(p2)&K35>=0&K35<xlen()&K36>=0&K36<ylen()=>((( !(Ch(0,0)&(K35>0|K36>0)) ) => ( !(Ch(0,0)&(K35>0|K36>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 0&! (Ch(1,G0)&(K35>1|K36>G0))])) ]
2019-10-14 16:40:15,998 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 0&! Ch(1,G0)])
 f2:!(!Ch(0,0))=>(exists(K41:Int,K42:Int)[ (Ch(K41,K42)&turn(p1)&K41>=0&K41<xlen()&K42>=0&K42<ylen())&((( !(Ch(0,0)&(K41>0|K42>0)) ) => ( !(Ch(0,0)&(K41>0|K42>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 0&(Ch(1,G0)&(K41>1|K42>G0))])&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K41>0|K42>G0))&! (Ch(G0,0)&(K41>G0|K42>0))])) ])
2019-10-14 16:40:16,064 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 0&! Ch(1,G0)])
 f2:!(!Ch(0,0))=>(exists(K41:Int,K42:Int)[ (Ch(K41,K42)&turn(p1)&K41>=0&K41<xlen()&K42>=0&K42<ylen())&((( !(Ch(0,0)&(K41>0|K42>0)) ) => ( !(Ch(0,0)&(K41>0|K42>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 0&(Ch(1,G0)&(K41>1|K42>G0))])&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K41>0|K42>G0))&! (Ch(G0,0)&(K41>G0|K42>0))])) ])
2019-10-14 16:40:16,104 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 > 0&Ch(1,G0)])&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(G0,0)])
 f2:forall(K39:Int,K40:Int)[ Ch(K39,K40)&turn(p2)&K39>=0&K39<xlen()&K40>=0&K40<ylen()=>((( !(Ch(0,0)&(K39>0|K40>0)) ) => ( !(Ch(0,0)&(K39>0|K40>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 0&! (Ch(1,G0)&(K39>1|K40>G0))])) ]
2019-10-14 16:40:17,134 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 0&! Ch(1,G0)])&!(turn(p2))
 f2:!(!Ch(0,0))=>(exists(K45:Int,K46:Int)[ (Ch(K45,K46)&turn(p1)&K45>=0&K45<xlen()&K46>=0&K46<ylen())&((( !(Ch(0,0)&(K45>0|K46>0)) ) => ( !(Ch(0,0)&(K45>0|K46>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K45>0|K46>G0))&! (Ch(G0,0)&(K45>G0|K46>0))])&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K45>1|K46>G0))&! (Ch(0,1)&(K45>0|K46>1))])) ])
2019-10-14 16:40:17,451 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 0&! Ch(1,G0)])&!(turn(p2))
 f2:!(!Ch(0,0))=>(exists(K45:Int,K46:Int)[ (Ch(K45,K46)&turn(p1)&K45>=0&K45<xlen()&K46>=0&K46<ylen())&((( !(Ch(0,0)&(K45>0|K46>0)) ) => ( !(Ch(0,0)&(K45>0|K46>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K45>0|K46>G0))&! (Ch(G0,0)&(K45>G0|K46>0))])&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K45>1|K46>G0))&! (Ch(0,1)&(K45>0|K46>1))])) ])
2019-10-14 16:40:17,505 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(G0,0)])&!(exists(G0:Int)[G0>=0&Ch(1,G0)&! Ch(0,1)])
 f2:forall(K43:Int,K44:Int)[ Ch(K43,K44)&turn(p2)&K43>=0&K43<xlen()&K44>=0&K44<ylen()=>((( !(Ch(0,0)&(K43>0|K44>0)) ) => ( !(Ch(0,0)&(K43>0|K44>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 0&! (Ch(1,G0)&(K43>1|K44>G0))])&!((!turn(p2)))) ]
2019-10-14 16:40:18,246 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(turn(p2))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&turn(p2)])
 f2:!(!Ch(0,0))=>(exists(K49:Int,K50:Int)[ (Ch(K49,K50)&turn(p1)&K49>=0&K49<xlen()&K50>=0&K50<ylen())&((( !(Ch(0,0)&(K49>0|K50>0)) ) => ( !(Ch(0,0)&(K49>0|K50>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K49>0|K50>G0))&! (Ch(G0,0)&(K49>G0|K50>0))])&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K49>1|K50>G0))&! (Ch(0,1)&(K49>0|K50>1))])) ])
2019-10-14 16:40:18,293 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(G0,0)])&!(exists(G0:Int)[G0>=0&Ch(1,G0)&! Ch(0,1)])
 f2:forall(K47:Int,K48:Int)[ Ch(K47,K48)&turn(p2)&K47>=0&K47<xlen()&K48>=0&K48<ylen()=>((( !(Ch(0,0)&(K47>0|K48>0)) ) => ( !(Ch(0,0)&(K47>0|K48>0))&(!turn(p1)) ))&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K47>0|K48>G0))&(!turn(p2))])) ]
2019-10-14 16:40:44,077 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&turn(p2)])&!(turn(p2))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(1,0)&! Ch(0,1)])
 f2:!(!Ch(0,0))=>(exists(K53:Int,K54:Int)[ (Ch(K53,K54)&turn(p1)&K53>=0&K53<xlen()&K54>=0&K54<ylen())&((( !(Ch(0,0)&(K53>0|K54>0)) ) => ( !(Ch(0,0)&(K53>0|K54>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K53>0|K54>G0))&! (Ch(G0,0)&(K53>G0|K54>0))])&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K53>1|K54>G0))&! (Ch(0,1)&(K53>0|K54>1))])) ])
2019-10-14 16:40:44,839 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&turn(p2)])&!(turn(p2))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(1,0)&! Ch(0,1)])
 f2:!(!Ch(0,0))=>(exists(K53:Int,K54:Int)[ (Ch(K53,K54)&turn(p1)&K53>=0&K53<xlen()&K54>=0&K54<ylen())&((( !(Ch(0,0)&(K53>0|K54>0)) ) => ( !(Ch(0,0)&(K53>0|K54>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K53>0|K54>G0))&! (Ch(G0,0)&(K53>G0|K54>0))])&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K53>1|K54>G0))&! (Ch(0,1)&(K53>0|K54>1))])) ])
2019-10-14 16:40:44,883 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(G0,0)])&!(exists(G0:Int)[G0>=0&Ch(1,G0)&! Ch(0,1)])
 f2:forall(K51:Int,K52:Int)[ Ch(K51,K52)&turn(p2)&K51>=0&K51<xlen()&K52>=0&K52<ylen()=>((( !(Ch(0,0)&(K51>0|K52>0)) ) => ( !(Ch(0,0)&(K51>0|K52>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K51>0|K52>G0))&(!turn(p2))])&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K51>0|K52>G0))&! (Ch(1,0)&(K51>1|K52>0))&! (Ch(0,1)&(K51>0|K52>1))])) ]
2019-10-14 16:40:44,925 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(G0,0)])&!(exists(G0:Int)[G0>=0&Ch(1,G0)&! Ch(0,1)])
 f2:forall(K51:Int,K52:Int)[ Ch(K51,K52)&turn(p2)&K51>=0&K51<xlen()&K52>=0&K52<ylen()=>((( !(Ch(0,0)&(K51>0|K52>0)) ) => ( !(Ch(0,0)&(K51>0|K52>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K51>0|K52>G0))&(!turn(p2))])&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K51>0|K52>G0))&! (Ch(1,0)&(K51>1|K52>0))&! (Ch(0,1)&(K51>0|K52>1))])) ]
2019-10-14 16:40:44,963 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(G0,0)])&!(exists(G0:Int)[G0>=0&Ch(1,G0)&! Ch(0,1)])
 f2:forall(K51:Int,K52:Int)[ Ch(K51,K52)&turn(p2)&K51>=0&K51<xlen()&K52>=0&K52<ylen()=>((( !(Ch(0,0)&(K51>0|K52>0)) ) => ( !(Ch(0,0)&(K51>0|K52>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K51>0|K52>G0))&(!turn(p2))])&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K51>0|K52>G0))&! (Ch(1,0)&(K51>1|K52>0))&! (Ch(0,1)&(K51>0|K52>1))])) ]
2019-10-14 16:41:22,193 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&turn(p2)])&!(turn(p2))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(1,0)&! Ch(0,1)])&!(exists(G0:Int)[G0>=0&Ch(1,0)&Ch(G0,1)&! Ch(1,1)])
 f2:!(!Ch(0,0))=>(exists(K57:Int,K58:Int)[ (Ch(K57,K58)&turn(p1)&K57>=0&K57<xlen()&K58>=0&K58<ylen())&((( !(Ch(0,0)&(K57>0|K58>0)) ) => ( !(Ch(0,0)&(K57>0|K58>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K57>0|K58>G0))&! (Ch(G0,0)&(K57>G0|K58>0))])&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K57>1|K58>G0))&! (Ch(0,1)&(K57>0|K58>1))])&!(exists(G0:Int)[G0>=0&G0 > 1&(Ch(0,G0)&(K57>0|K58>G0))])) ])
2019-10-14 16:41:22,859 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&turn(p2)])&!(turn(p2))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(1,0)&! Ch(0,1)])&!(exists(G0:Int)[G0>=0&Ch(1,0)&Ch(G0,1)&! Ch(1,1)])
 f2:!(!Ch(0,0))=>(exists(K57:Int,K58:Int)[ (Ch(K57,K58)&turn(p1)&K57>=0&K57<xlen()&K58>=0&K58<ylen())&((( !(Ch(0,0)&(K57>0|K58>0)) ) => ( !(Ch(0,0)&(K57>0|K58>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K57>0|K58>G0))&! (Ch(G0,0)&(K57>G0|K58>0))])&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K57>1|K58>G0))&! (Ch(0,1)&(K57>0|K58>1))])&!(exists(G0:Int)[G0>=0&G0 > 1&(Ch(0,G0)&(K57>0|K58>G0))])) ])
2019-10-14 16:41:22,898 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&turn(p2)])&!(turn(p2))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(1,0)&! Ch(0,1)])&!(exists(G0:Int)[G0>=0&Ch(1,0)&Ch(G0,1)&! Ch(1,1)])
 f2:!(!Ch(0,0))=>(exists(K57:Int,K58:Int)[ (Ch(K57,K58)&turn(p1)&K57>=0&K57<xlen()&K58>=0&K58<ylen())&((( !(Ch(0,0)&(K57>0|K58>0)) ) => ( !(Ch(0,0)&(K57>0|K58>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K57>0|K58>G0))&! (Ch(G0,0)&(K57>G0|K58>0))])&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K57>1|K58>G0))&! (Ch(0,1)&(K57>0|K58>1))])&!(exists(G0:Int)[G0>=0&G0 > 1&(Ch(0,G0)&(K57>0|K58>G0))])) ])
2019-10-14 16:41:22,965 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(G0,0)])&!(exists(G0:Int)[G0>=0&Ch(1,G0)&! Ch(0,1)])&!(exists(G0:Int)[G0>=0&G0 > 1&Ch(0,G0)])
 f2:forall(K55:Int,K56:Int)[ Ch(K55,K56)&turn(p2)&K55>=0&K55<xlen()&K56>=0&K56<ylen()=>((( !(Ch(0,0)&(K55>0|K56>0)) ) => ( !(Ch(0,0)&(K55>0|K56>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K55>0|K56>G0))&(!turn(p2))])&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K55>0|K56>G0))&! (Ch(1,0)&(K55>1|K56>0))&! (Ch(0,1)&(K55>0|K56>1))])&!(exists(G0:Int)[G0>=0&(Ch(1,0)&(K55>1|K56>0))&(Ch(G0,1)&(K55>G0|K56>1))&! (Ch(1,1)&(K55>1|K56>1))])) ]
2019-10-14 16:41:31,563 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&turn(p2)])&!(turn(p2))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(1,0)&! Ch(0,1)])&!(exists(G0:Int)[G0>=0&Ch(1,0)&Ch(G0,1)&! Ch(1,1)])
 f2:!(!Ch(0,0))=>(exists(K61:Int,K62:Int)[ (Ch(K61,K62)&turn(p1)&K61>=0&K61<xlen()&K62>=0&K62<ylen())&((( !(Ch(0,0)&(K61>0|K62>0)) ) => ( !(Ch(0,0)&(K61>0|K62>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(G0,1)&(K61>G0|K62>1))&! (Ch(1,G0)&(K61>1|K62>G0))])&!(exists(G0:Int)[G0>=0&G0 > 1&(Ch(G0,G0)&(K61>G0|K62>G0))])) ])
2019-10-14 16:41:31,606 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(1,G0)])&!(exists(G0:Int)[G0>=0&G0 > 1&Ch(G0,G0)])
 f2:forall(K59:Int,K60:Int)[ Ch(K59,K60)&turn(p2)&K59>=0&K59<xlen()&K60>=0&K60<ylen()=>((( !(Ch(0,0)&(K59>0|K60>0)) ) => ( !(Ch(0,0)&(K59>0|K60>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K59>0|K60>G0))&(!turn(p2))])&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K59>0|K60>G0))&! (Ch(1,0)&(K59>1|K60>0))&! (Ch(0,1)&(K59>0|K60>1))])&!(exists(G0:Int)[G0>=0&(Ch(1,0)&(K59>1|K60>0))&(Ch(G0,1)&(K59>G0|K60>1))&! (Ch(1,1)&(K59>1|K60>1))])) ]
2019-10-14 16:41:32,303 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&turn(p2)])&!(turn(p2))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(1,0)&! Ch(0,1)])&!(exists(G0:Int)[G0>=0&Ch(1,0)&Ch(G0,1)&! Ch(1,1)])
 f2:!(!Ch(0,0))=>(exists(K65:Int,K66:Int)[ (Ch(K65,K66)&turn(p1)&K65>=0&K65<xlen()&K66>=0&K66<ylen())&((( !(Ch(0,0)&(K65>0|K66>0)) ) => ( !(Ch(0,0)&(K65>0|K66>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(G0,1)&(K65>G0|K66>1))&! (Ch(1,G0)&(K65>1|K66>G0))])&!(exists(G0:Int)[G0>=0&G0 > 1&(Ch(G0,G0)&(K65>G0|K66>G0))])&!((Ch(1,1)&(K65>1|K66>1)))) ])
2019-10-14 16:41:32,343 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(1,G0)])&!(exists(G0:Int)[G0>=0&G0 > 1&Ch(G0,G0)])&!(Ch(1,1))
 f2:forall(K63:Int,K64:Int)[ Ch(K63,K64)&turn(p2)&K63>=0&K63<xlen()&K64>=0&K64<ylen()=>((( !(Ch(0,0)&(K63>0|K64>0)) ) => ( !(Ch(0,0)&(K63>0|K64>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K63>0|K64>G0))&(!turn(p2))])&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K63>0|K64>G0))&! (Ch(1,0)&(K63>1|K64>0))&! (Ch(0,1)&(K63>0|K64>1))])&!(exists(G0:Int)[G0>=0&(Ch(1,0)&(K63>1|K64>0))&(Ch(G0,1)&(K63>G0|K64>1))&! (Ch(1,1)&(K63>1|K64>1))])) ]
2019-10-14 16:41:32,390 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(1,G0)])&!(exists(G0:Int)[G0>=0&G0 > 1&Ch(G0,G0)])&!(Ch(1,1))
 f2:forall(K63:Int,K64:Int)[ Ch(K63,K64)&turn(p2)&K63>=0&K63<xlen()&K64>=0&K64<ylen()=>((( !(Ch(0,0)&(K63>0|K64>0)) ) => ( !(Ch(0,0)&(K63>0|K64>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K63>0|K64>G0))&(!turn(p2))])&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K63>0|K64>G0))&! (Ch(1,0)&(K63>1|K64>0))&! (Ch(0,1)&(K63>0|K64>1))])&!(exists(G0:Int)[G0>=0&(Ch(1,0)&(K63>1|K64>0))&(Ch(G0,1)&(K63>G0|K64>1))&! (Ch(1,1)&(K63>1|K64>1))])) ]
2019-10-14 16:42:00,229 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:!(!Ch(0,0))=>(exists(K69:Int,K70:Int)[ (Ch(K69,K70)&turn(p1)&K69>=0&K69<xlen()&K70>=0&K70<ylen())&(( !(Ch(0,0)&(K69>0|K70>0)) ) => ( !(Ch(0,0)&(K69>0|K70>0))&(!turn(p1)) )) ])
2019-10-14 16:42:00,271 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:forall(K67:Int,K68:Int)[ Ch(K67,K68)&turn(p2)&K67>=0&K67<xlen()&K68>=0&K68<ylen()=>(( !(Ch(0,0)&(K67>0|K68>0)) ) => ( !(Ch(0,0)&(K67>0|K68>0))&(!turn(p1)) )) ]
2019-10-14 16:42:00,440 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(X1,0)])
 f2:!(!Ch(0,0))=>(exists(K73:Int,K74:Int)[ (Ch(K73,K74)&turn(p1)&K73>=0&K73<xlen()&K74>=0&K74<ylen())&(( !(Ch(0,0)&(K73>0|K74>0)) ) => ( !(Ch(0,0)&(K73>0|K74>0))&(!turn(p1)) )) ])
2019-10-14 16:42:00,476 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:forall(K71:Int,K72:Int)[ Ch(K71,K72)&turn(p2)&K71>=0&K71<xlen()&K72>=0&K72<ylen()=>((( !(Ch(0,0)&(K71>0|K72>0)) ) => ( !(Ch(0,0)&(K71>0|K72>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(Ch(X1,0)&(K71>X1|K72>0))])) ]
2019-10-14 16:42:00,841 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(X1,0)])
 f2:!(!Ch(0,0))=>(exists(K77:Int,K78:Int)[ (Ch(K77,K78)&turn(p1)&K77>=0&K77<xlen()&K78>=0&K78<ylen())&((( !(Ch(0,0)&(K77>0|K78>0)) ) => ( !(Ch(0,0)&(K77>0|K78>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(Ch(X1,0)&(K77>X1|K78>0))])) ])
2019-10-14 16:42:00,877 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(X1,0)])
 f2:forall(K75:Int,K76:Int)[ Ch(K75,K76)&turn(p2)&K75>=0&K75<xlen()&K76>=0&K76<ylen()=>((( !(Ch(0,0)&(K75>0|K76>0)) ) => ( !(Ch(0,0)&(K75>0|K76>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(Ch(X1,0)&(K75>X1|K76>0))])) ]
2019-10-14 16:42:00,906 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:forall(K16:Int,K17:Int)[K16>=0&K16<xlen()&K17>=0&K17<ylen()=>Ch(K16,K17)]&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)
 f2:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(X1,0)])
2019-10-14 16:42:01,807 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 1&! Ch(0,G0)])
 f2:!(!Ch(0,0))=>(exists(K81:Int,K82:Int)[ (Ch(K81,K82)&turn(p1)&K81>=0&K81<xlen()&K82>=0&K82<ylen())&((( !(Ch(0,0)&(K81>0|K82>0)) ) => ( !(Ch(0,0)&(K81>0|K82>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 1&! (Ch(0,G0)&(K81>0|K82>G0))])) ])
2019-10-14 16:42:01,857 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 1&! Ch(0,G0)])
 f2:!(!Ch(0,0))=>(exists(K81:Int,K82:Int)[ (Ch(K81,K82)&turn(p1)&K81>=0&K81<xlen()&K82>=0&K82<ylen())&((( !(Ch(0,0)&(K81>0|K82>0)) ) => ( !(Ch(0,0)&(K81>0|K82>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 1&! (Ch(0,G0)&(K81>0|K82>G0))])) ])
2019-10-14 16:42:01,893 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 1&! Ch(0,G0)])
 f2:forall(K79:Int,K80:Int)[ Ch(K79,K80)&turn(p2)&K79>=0&K79<xlen()&K80>=0&K80<ylen()=>((( !(Ch(0,0)&(K79>0|K80>0)) ) => ( !(Ch(0,0)&(K79>0|K80>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 1&! (Ch(0,G0)&(K79>0|K80>G0))])) ]
2019-10-14 16:42:02,498 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 1&! Ch(0,G0)])
 f2:!(!Ch(0,0))=>(exists(K85:Int,K86:Int)[ (Ch(K85,K86)&turn(p1)&K85>=0&K85<xlen()&K86>=0&K86<ylen())&((( !(Ch(0,0)&(K85>0|K86>0)) ) => ( !(Ch(0,0)&(K85>0|K86>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 1&(Ch(1,G0)&(K85>1|K86>G0))])) ])
2019-10-14 16:42:02,546 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 1&! Ch(0,G0)])
 f2:!(!Ch(0,0))=>(exists(K85:Int,K86:Int)[ (Ch(K85,K86)&turn(p1)&K85>=0&K85<xlen()&K86>=0&K86<ylen())&((( !(Ch(0,0)&(K85>0|K86>0)) ) => ( !(Ch(0,0)&(K85>0|K86>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 1&(Ch(1,G0)&(K85>1|K86>G0))])) ])
2019-10-14 16:42:02,589 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 1&Ch(1,G0)])
 f2:forall(K83:Int,K84:Int)[ Ch(K83,K84)&turn(p2)&K83>=0&K83<xlen()&K84>=0&K84<ylen()=>((( !(Ch(0,0)&(K83>0|K84>0)) ) => ( !(Ch(0,0)&(K83>0|K84>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 1&! (Ch(0,G0)&(K83>0|K84>G0))])) ]
2019-10-14 16:42:02,632 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 1&Ch(1,G0)])
 f2:forall(K83:Int,K84:Int)[ Ch(K83,K84)&turn(p2)&K83>=0&K83<xlen()&K84>=0&K84<ylen()=>((( !(Ch(0,0)&(K83>0|K84>0)) ) => ( !(Ch(0,0)&(K83>0|K84>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 1&! (Ch(0,G0)&(K83>0|K84>G0))])) ]
2019-10-14 16:42:03,975 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 1&! Ch(0,G0)])&!(! turn(p1))
 f2:!(!Ch(0,0))=>(exists(K89:Int,K90:Int)[ (Ch(K89,K90)&turn(p1)&K89>=0&K89<xlen()&K90>=0&K90<ylen())&((( !(Ch(0,0)&(K89>0|K90>0)) ) => ( !(Ch(0,0)&(K89>0|K90>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 1&(Ch(1,G0)&(K89>1|K90>G0))])&!((Ch(0,1)&(K89>0|K90>1))&! (Ch(1,0)&(K89>1|K90>0)))) ])
2019-10-14 16:42:04,016 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 1&Ch(1,G0)])&!(Ch(0,1)&! Ch(1,0))
 f2:forall(K87:Int,K88:Int)[ Ch(K87,K88)&turn(p2)&K87>=0&K87<xlen()&K88>=0&K88<ylen()=>((( !(Ch(0,0)&(K87>0|K88>0)) ) => ( !(Ch(0,0)&(K87>0|K88>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 1&! (Ch(0,G0)&(K87>0|K88>G0))])&!(! (!turn(p1)))) ]
2019-10-14 16:42:04,564 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(! turn(p1))&!(exists(G0:Int)[G0>=0&Ch(G0,0)&! turn(p1)])
 f2:!(!Ch(0,0))=>(exists(K93:Int,K94:Int)[ (Ch(K93,K94)&turn(p1)&K93>=0&K93<xlen()&K94>=0&K94<ylen())&((( !(Ch(0,0)&(K93>0|K94>0)) ) => ( !(Ch(0,0)&(K93>0|K94>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 1&(Ch(1,G0)&(K93>1|K94>G0))])&!((Ch(0,1)&(K93>0|K94>1))&! (Ch(1,0)&(K93>1|K94>0)))) ])
2019-10-14 16:42:04,606 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 1&Ch(1,G0)])&!(Ch(0,1)&! Ch(1,0))
 f2:forall(K91:Int,K92:Int)[ Ch(K91,K92)&turn(p2)&K91>=0&K91<xlen()&K92>=0&K92<ylen()=>((( !(Ch(0,0)&(K91>0|K92>0)) ) => ( !(Ch(0,0)&(K91>0|K92>0))&(!turn(p1)) ))&!(! (!turn(p1)))&!(exists(G0:Int)[G0>=0&(Ch(G0,0)&(K91>G0|K92>0))&! (!turn(p1))])) ]
2019-10-14 16:42:31,286 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(G0,0)&! turn(p1)])&!(! turn(p1))&!(exists(G0:Int)[G0>=0&Ch(G0,0)&! Ch(1,0)&! Ch(G0,1)])
 f2:!(!Ch(0,0))=>(exists(K97:Int,K98:Int)[ (Ch(K97,K98)&turn(p1)&K97>=0&K97<xlen()&K98>=0&K98<ylen())&((( !(Ch(0,0)&(K97>0|K98>0)) ) => ( !(Ch(0,0)&(K97>0|K98>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 1&(Ch(1,G0)&(K97>1|K98>G0))])&!((Ch(0,1)&(K97>0|K98>1))&! (Ch(1,0)&(K97>1|K98>0)))) ])
2019-10-14 16:42:31,320 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 1&Ch(1,G0)])&!(Ch(0,1)&! Ch(1,0))
 f2:forall(K95:Int,K96:Int)[ Ch(K95,K96)&turn(p2)&K95>=0&K95<xlen()&K96>=0&K96<ylen()=>((( !(Ch(0,0)&(K95>0|K96>0)) ) => ( !(Ch(0,0)&(K95>0|K96>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(G0,0)&(K95>G0|K96>0))&! (!turn(p1))])&!(! (!turn(p1)))&!(exists(G0:Int)[G0>=0&(Ch(G0,0)&(K95>G0|K96>0))&! (Ch(1,0)&(K95>1|K96>0))&! (Ch(G0,1)&(K95>G0|K96>1))])) ]
2019-10-14 16:42:31,366 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 1&Ch(1,G0)])&!(Ch(0,1)&! Ch(1,0))
 f2:forall(K95:Int,K96:Int)[ Ch(K95,K96)&turn(p2)&K95>=0&K95<xlen()&K96>=0&K96<ylen()=>((( !(Ch(0,0)&(K95>0|K96>0)) ) => ( !(Ch(0,0)&(K95>0|K96>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(G0,0)&(K95>G0|K96>0))&! (!turn(p1))])&!(! (!turn(p1)))&!(exists(G0:Int)[G0>=0&(Ch(G0,0)&(K95>G0|K96>0))&! (Ch(1,0)&(K95>1|K96>0))&! (Ch(G0,1)&(K95>G0|K96>1))])) ]
2019-10-14 16:42:33,075 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(G0,0)&! turn(p1)])&!(! turn(p1))&!(exists(G0:Int)[G0>=0&Ch(G0,0)&! Ch(1,0)&! Ch(G0,1)])
 f2:!(!Ch(0,0))=>(exists(K101:Int,K102:Int)[ (Ch(K101,K102)&turn(p1)&K101>=0&K101<xlen()&K102>=0&K102<ylen())&((( !(Ch(0,0)&(K101>0|K102>0)) ) => ( !(Ch(0,0)&(K101>0|K102>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 1&(Ch(1,G0)&(K101>1|K102>G0))])&!((Ch(0,1)&(K101>0|K102>1))&! (Ch(1,0)&(K101>1|K102>0)))&!(exists(G0:Int)[G0>=0&(Ch(G0,0)&(K101>G0|K102>0))&! (Ch(0,G0)&(K101>0|K102>G0))])) ])
2019-10-14 16:42:33,130 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(G0,0)&! turn(p1)])&!(! turn(p1))&!(exists(G0:Int)[G0>=0&Ch(G0,0)&! Ch(1,0)&! Ch(G0,1)])
 f2:!(!Ch(0,0))=>(exists(K101:Int,K102:Int)[ (Ch(K101,K102)&turn(p1)&K101>=0&K101<xlen()&K102>=0&K102<ylen())&((( !(Ch(0,0)&(K101>0|K102>0)) ) => ( !(Ch(0,0)&(K101>0|K102>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 1&(Ch(1,G0)&(K101>1|K102>G0))])&!((Ch(0,1)&(K101>0|K102>1))&! (Ch(1,0)&(K101>1|K102>0)))&!(exists(G0:Int)[G0>=0&(Ch(G0,0)&(K101>G0|K102>0))&! (Ch(0,G0)&(K101>0|K102>G0))])) ])
2019-10-14 16:42:33,180 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 1&Ch(1,G0)])&!(Ch(0,1)&! Ch(1,0))&!(exists(G0:Int)[G0>=0&Ch(G0,0)&! Ch(0,G0)])
 f2:forall(K99:Int,K100:Int)[ Ch(K99,K100)&turn(p2)&K99>=0&K99<xlen()&K100>=0&K100<ylen()=>((( !(Ch(0,0)&(K99>0|K100>0)) ) => ( !(Ch(0,0)&(K99>0|K100>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(G0,0)&(K99>G0|K100>0))&! (!turn(p1))])&!(! (!turn(p1)))&!(exists(G0:Int)[G0>=0&(Ch(G0,0)&(K99>G0|K100>0))&! (Ch(1,0)&(K99>1|K100>0))&! (Ch(G0,1)&(K99>G0|K100>1))])) ]
2019-10-14 16:42:33,223 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 1&Ch(1,G0)])&!(Ch(0,1)&! Ch(1,0))&!(exists(G0:Int)[G0>=0&Ch(G0,0)&! Ch(0,G0)])
 f2:forall(K99:Int,K100:Int)[ Ch(K99,K100)&turn(p2)&K99>=0&K99<xlen()&K100>=0&K100<ylen()=>((( !(Ch(0,0)&(K99>0|K100>0)) ) => ( !(Ch(0,0)&(K99>0|K100>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(G0,0)&(K99>G0|K100>0))&! (!turn(p1))])&!(! (!turn(p1)))&!(exists(G0:Int)[G0>=0&(Ch(G0,0)&(K99>G0|K100>0))&! (Ch(1,0)&(K99>1|K100>0))&! (Ch(G0,1)&(K99>G0|K100>1))])) ]
2019-10-14 16:42:33,259 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 1&Ch(1,G0)])&!(Ch(0,1)&! Ch(1,0))&!(exists(G0:Int)[G0>=0&Ch(G0,0)&! Ch(0,G0)])
 f2:forall(K99:Int,K100:Int)[ Ch(K99,K100)&turn(p2)&K99>=0&K99<xlen()&K100>=0&K100<ylen()=>((( !(Ch(0,0)&(K99>0|K100>0)) ) => ( !(Ch(0,0)&(K99>0|K100>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(G0,0)&(K99>G0|K100>0))&! (!turn(p1))])&!(! (!turn(p1)))&!(exists(G0:Int)[G0>=0&(Ch(G0,0)&(K99>G0|K100>0))&! (Ch(1,0)&(K99>1|K100>0))&! (Ch(G0,1)&(K99>G0|K100>1))])) ]
2019-10-14 16:42:44,682 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(G0,0)&! turn(p1)])&!(! turn(p1))&!(exists(G0:Int,G1:Int,G2:Int)[G0>=0&G1>=0&G2>=0&! Ch(G0,1)&Ch(G0,0)&Ch(G1,G2)&! Ch(1,G2)])
 f2:!(!Ch(0,0))=>(exists(K105:Int,K106:Int)[ (Ch(K105,K106)&turn(p1)&K105>=0&K105<xlen()&K106>=0&K106<ylen())&((( !(Ch(0,0)&(K105>0|K106>0)) ) => ( !(Ch(0,0)&(K105>0|K106>0))&(!turn(p1)) ))&!((Ch(0,1)&(K105>0|K106>1))&! (Ch(1,0)&(K105>1|K106>0)))&!(exists(G0:Int)[G0>=0&(Ch(G0,0)&(K105>G0|K106>0))&! (Ch(0,G0)&(K105>0|K106>G0))])&!(exists(G0:Int)[G0>=0&G0 >= 1&(Ch(G0,1)&(K105>G0|K106>1))])) ])
2019-10-14 16:42:44,754 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(G0,0)&! turn(p1)])&!(! turn(p1))&!(exists(G0:Int,G1:Int,G2:Int)[G0>=0&G1>=0&G2>=0&! Ch(G0,1)&Ch(G0,0)&Ch(G1,G2)&! Ch(1,G2)])
 f2:!(!Ch(0,0))=>(exists(K105:Int,K106:Int)[ (Ch(K105,K106)&turn(p1)&K105>=0&K105<xlen()&K106>=0&K106<ylen())&((( !(Ch(0,0)&(K105>0|K106>0)) ) => ( !(Ch(0,0)&(K105>0|K106>0))&(!turn(p1)) ))&!((Ch(0,1)&(K105>0|K106>1))&! (Ch(1,0)&(K105>1|K106>0)))&!(exists(G0:Int)[G0>=0&(Ch(G0,0)&(K105>G0|K106>0))&! (Ch(0,G0)&(K105>0|K106>G0))])&!(exists(G0:Int)[G0>=0&G0 >= 1&(Ch(G0,1)&(K105>G0|K106>1))])) ])
2019-10-14 16:42:44,792 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(G0,0)&! turn(p1)])&!(! turn(p1))&!(exists(G0:Int,G1:Int,G2:Int)[G0>=0&G1>=0&G2>=0&! Ch(G0,1)&Ch(G0,0)&Ch(G1,G2)&! Ch(1,G2)])
 f2:!(!Ch(0,0))=>(exists(K105:Int,K106:Int)[ (Ch(K105,K106)&turn(p1)&K105>=0&K105<xlen()&K106>=0&K106<ylen())&((( !(Ch(0,0)&(K105>0|K106>0)) ) => ( !(Ch(0,0)&(K105>0|K106>0))&(!turn(p1)) ))&!((Ch(0,1)&(K105>0|K106>1))&! (Ch(1,0)&(K105>1|K106>0)))&!(exists(G0:Int)[G0>=0&(Ch(G0,0)&(K105>G0|K106>0))&! (Ch(0,G0)&(K105>0|K106>G0))])&!(exists(G0:Int)[G0>=0&G0 >= 1&(Ch(G0,1)&(K105>G0|K106>1))])) ])
2019-10-14 16:42:44,870 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(Ch(0,1)&! Ch(1,0))&!(exists(G0:Int)[G0>=0&Ch(G0,0)&! Ch(0,G0)])&!(exists(G0:Int)[G0>=0&G0 >= 1&Ch(G0,1)])
 f2:forall(K103:Int,K104:Int)[ Ch(K103,K104)&turn(p2)&K103>=0&K103<xlen()&K104>=0&K104<ylen()=>((( !(Ch(0,0)&(K103>0|K104>0)) ) => ( !(Ch(0,0)&(K103>0|K104>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(G0,0)&(K103>G0|K104>0))&! (!turn(p1))])&!(! (!turn(p1)))&!(exists(G0:Int,G1:Int,G2:Int)[G0>=0&G1>=0&G2>=0&! (Ch(G0,1)&(K103>G0|K104>1))&(Ch(G0,0)&(K103>G0|K104>0))&(Ch(G1,G2)&(K103>G1|K104>G2))&! (Ch(1,G2)&(K103>1|K104>G2))])) ]
2019-10-14 16:42:44,911 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(Ch(0,1)&! Ch(1,0))&!(exists(G0:Int)[G0>=0&Ch(G0,0)&! Ch(0,G0)])&!(exists(G0:Int)[G0>=0&G0 >= 1&Ch(G0,1)])
 f2:forall(K103:Int,K104:Int)[ Ch(K103,K104)&turn(p2)&K103>=0&K103<xlen()&K104>=0&K104<ylen()=>((( !(Ch(0,0)&(K103>0|K104>0)) ) => ( !(Ch(0,0)&(K103>0|K104>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(G0,0)&(K103>G0|K104>0))&! (!turn(p1))])&!(! (!turn(p1)))&!(exists(G0:Int,G1:Int,G2:Int)[G0>=0&G1>=0&G2>=0&! (Ch(G0,1)&(K103>G0|K104>1))&(Ch(G0,0)&(K103>G0|K104>0))&(Ch(G1,G2)&(K103>G1|K104>G2))&! (Ch(1,G2)&(K103>1|K104>G2))])) ]
2019-10-14 16:42:44,945 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(Ch(0,1)&! Ch(1,0))&!(exists(G0:Int)[G0>=0&Ch(G0,0)&! Ch(0,G0)])&!(exists(G0:Int)[G0>=0&G0 >= 1&Ch(G0,1)])
 f2:forall(K103:Int,K104:Int)[ Ch(K103,K104)&turn(p2)&K103>=0&K103<xlen()&K104>=0&K104<ylen()=>((( !(Ch(0,0)&(K103>0|K104>0)) ) => ( !(Ch(0,0)&(K103>0|K104>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(G0,0)&(K103>G0|K104>0))&! (!turn(p1))])&!(! (!turn(p1)))&!(exists(G0:Int,G1:Int,G2:Int)[G0>=0&G1>=0&G2>=0&! (Ch(G0,1)&(K103>G0|K104>1))&(Ch(G0,0)&(K103>G0|K104>0))&(Ch(G1,G2)&(K103>G1|K104>G2))&! (Ch(1,G2)&(K103>1|K104>G2))])) ]
2019-10-14 16:43:34,690 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(G0,0)&! turn(p1)])&!(! turn(p1))
 f2:!(!Ch(0,0))=>(exists(K109:Int,K110:Int)[ (Ch(K109,K110)&turn(p1)&K109>=0&K109<xlen()&K110>=0&K110<ylen())&((( !(Ch(0,0)&(K109>0|K110>0)) ) => ( !(Ch(0,0)&(K109>0|K110>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! (Ch(0,G0)&(K109>0|K110>G0))&G0 = 1&(Ch(G0,0)&(K109>G0|K110>0))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K109>G0|K110>G1))&! (Ch(0,G1)&(K109>0|K110>G1))])) ])
2019-10-14 16:43:34,730 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! Ch(0,G0)&G0 = 1&Ch(G0,0)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(0,G1)])
 f2:forall(K107:Int,K108:Int)[ Ch(K107,K108)&turn(p2)&K107>=0&K107<xlen()&K108>=0&K108<ylen()=>((( !(Ch(0,0)&(K107>0|K108>0)) ) => ( !(Ch(0,0)&(K107>0|K108>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(G0,0)&(K107>G0|K108>0))&! (!turn(p1))])&!(! (!turn(p1)))) ]
2019-10-14 16:44:00,022 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:!(!Ch(0,0))=>(exists(K113:Int,K114:Int)[ (Ch(K113,K114)&turn(p1)&K113>=0&K113<xlen()&K114>=0&K114<ylen())&(( !(Ch(0,0)&(K113>0|K114>0)) ) => ( !(Ch(0,0)&(K113>0|K114>0))&(!turn(p1)) )) ])
2019-10-14 16:44:00,058 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:forall(K111:Int,K112:Int)[ Ch(K111,K112)&turn(p2)&K111>=0&K111<xlen()&K112>=0&K112<ylen()=>(( !(Ch(0,0)&(K111>0|K112>0)) ) => ( !(Ch(0,0)&(K111>0|K112>0))&(!turn(p1)) )) ]
2019-10-14 16:44:00,225 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X0:_S1)[turn(X0)])
 f2:!(!Ch(0,0))=>(exists(K117:Int,K118:Int)[ (Ch(K117,K118)&turn(p1)&K117>=0&K117<xlen()&K118>=0&K118<ylen())&(( !(Ch(0,0)&(K117>0|K118>0)) ) => ( !(Ch(0,0)&(K117>0|K118>0))&(!turn(p1)) )) ])
2019-10-14 16:44:00,256 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:forall(K115:Int,K116:Int)[ Ch(K115,K116)&turn(p2)&K115>=0&K115<xlen()&K116>=0&K116<ylen()=>((( !(Ch(0,0)&(K115>0|K116>0)) ) => ( !(Ch(0,0)&(K115>0|K116>0))&(!turn(p1)) ))&!(exists(X0:_S1)[(!turn(X0))])) ]
2019-10-14 16:44:00,617 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X0:_S1)[turn(X0)])
 f2:!(!Ch(0,0))=>(exists(K121:Int,K122:Int)[ (Ch(K121,K122)&turn(p1)&K121>=0&K121<xlen()&K122>=0&K122<ylen())&((( !(Ch(0,0)&(K121>0|K122>0)) ) => ( !(Ch(0,0)&(K121>0|K122>0))&(!turn(p1)) ))&!(exists(X0:_S1)[(!turn(X0))])) ])
2019-10-14 16:44:00,651 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X0:_S1)[turn(X0)])
 f2:forall(K119:Int,K120:Int)[ Ch(K119,K120)&turn(p2)&K119>=0&K119<xlen()&K120>=0&K120<ylen()=>((( !(Ch(0,0)&(K119>0|K120>0)) ) => ( !(Ch(0,0)&(K119>0|K120>0))&(!turn(p1)) ))&!(exists(X0:_S1)[(!turn(X0))])) ]
2019-10-14 16:44:00,682 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:forall(K16:Int,K17:Int)[K16>=0&K16<xlen()&K17>=0&K17<ylen()=>Ch(K16,K17)]&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)
 f2:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X0:_S1)[turn(X0)])
2019-10-14 16:44:01,529 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 > 1&! Ch(G0,0)])
 f2:!(!Ch(0,0))=>(exists(K125:Int,K126:Int)[ (Ch(K125,K126)&turn(p1)&K125>=0&K125<xlen()&K126>=0&K126<ylen())&((( !(Ch(0,0)&(K125>0|K126>0)) ) => ( !(Ch(0,0)&(K125>0|K126>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! G0 > 0&! (Ch(G0,1)&(K125>G0|K126>1))])) ])
2019-10-14 16:44:01,575 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 > 1&! Ch(G0,0)])
 f2:!(!Ch(0,0))=>(exists(K125:Int,K126:Int)[ (Ch(K125,K126)&turn(p1)&K125>=0&K125<xlen()&K126>=0&K126<ylen())&((( !(Ch(0,0)&(K125>0|K126>0)) ) => ( !(Ch(0,0)&(K125>0|K126>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! G0 > 0&! (Ch(G0,1)&(K125>G0|K126>1))])) ])
2019-10-14 16:44:01,618 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 > 0&! Ch(G0,1)])
 f2:forall(K123:Int,K124:Int)[ Ch(K123,K124)&turn(p2)&K123>=0&K123<xlen()&K124>=0&K124<ylen()=>((( !(Ch(0,0)&(K123>0|K124>0)) ) => ( !(Ch(0,0)&(K123>0|K124>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! G0 > 1&! (Ch(G0,0)&(K123>G0|K124>0))])) ]
2019-10-14 16:44:02,215 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 > 1&! Ch(G0,0)])
 f2:!(!Ch(0,0))=>(exists(K129:Int,K130:Int)[ (Ch(K129,K130)&turn(p1)&K129>=0&K129<xlen()&K130>=0&K130<ylen())&((( !(Ch(0,0)&(K129>0|K130>0)) ) => ( !(Ch(0,0)&(K129>0|K130>0))&(!turn(p1)) ))&!(exists(G0:_S1)[(!turn(G0))&(Ch(1,1)&(K129>1|K130>1))])) ])
2019-10-14 16:44:02,260 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 > 1&! Ch(G0,0)])
 f2:!(!Ch(0,0))=>(exists(K129:Int,K130:Int)[ (Ch(K129,K130)&turn(p1)&K129>=0&K129<xlen()&K130>=0&K130<ylen())&((( !(Ch(0,0)&(K129>0|K130>0)) ) => ( !(Ch(0,0)&(K129>0|K130>0))&(!turn(p1)) ))&!(exists(G0:_S1)[(!turn(G0))&(Ch(1,1)&(K129>1|K130>1))])) ])
2019-10-14 16:44:02,305 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:_S1)[turn(G0)&Ch(1,1)])
 f2:forall(K127:Int,K128:Int)[ Ch(K127,K128)&turn(p2)&K127>=0&K127<xlen()&K128>=0&K128<ylen()=>((( !(Ch(0,0)&(K127>0|K128>0)) ) => ( !(Ch(0,0)&(K127>0|K128>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! G0 > 1&! (Ch(G0,0)&(K127>G0|K128>0))])) ]
2019-10-14 16:44:03,764 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 > 1&! Ch(G0,G0)])
 f2:!(!Ch(0,0))=>(exists(K133:Int,K134:Int)[ (Ch(K133,K134)&turn(p1)&K133>=0&K133<xlen()&K134>=0&K134<ylen())&((( !(Ch(0,0)&(K133>0|K134>0)) ) => ( !(Ch(0,0)&(K133>0|K134>0))&(!turn(p1)) ))&!(exists(G0:_S1)[(!turn(G0))&(Ch(1,1)&(K133>1|K134>1))])&!((Ch(1,0)&(K133>1|K134>0))&! (Ch(0,1)&(K133>0|K134>1)))) ])
2019-10-14 16:44:03,807 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 > 1&! Ch(G0,G0)])
 f2:!(!Ch(0,0))=>(exists(K133:Int,K134:Int)[ (Ch(K133,K134)&turn(p1)&K133>=0&K133<xlen()&K134>=0&K134<ylen())&((( !(Ch(0,0)&(K133>0|K134>0)) ) => ( !(Ch(0,0)&(K133>0|K134>0))&(!turn(p1)) ))&!(exists(G0:_S1)[(!turn(G0))&(Ch(1,1)&(K133>1|K134>1))])&!((Ch(1,0)&(K133>1|K134>0))&! (Ch(0,1)&(K133>0|K134>1)))) ])
2019-10-14 16:44:03,840 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:_S1)[turn(G0)&Ch(1,1)])&!(Ch(1,0)&! Ch(0,1))
 f2:forall(K131:Int,K132:Int)[ Ch(K131,K132)&turn(p2)&K131>=0&K131<xlen()&K132>=0&K132<ylen()=>((( !(Ch(0,0)&(K131>0|K132>0)) ) => ( !(Ch(0,0)&(K131>0|K132>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! G0 > 1&! (Ch(G0,G0)&(K131>G0|K132>G0))])) ]
2019-10-14 16:44:08,236 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 > 1&! Ch(G0,G0)])&!(turn(p2))
 f2:!(!Ch(0,0))=>(exists(K137:Int,K138:Int)[ (Ch(K137,K138)&turn(p1)&K137>=0&K137<xlen()&K138>=0&K138<ylen())&((( !(Ch(0,0)&(K137>0|K138>0)) ) => ( !(Ch(0,0)&(K137>0|K138>0))&(!turn(p1)) ))&!(exists(G0:_S1)[(!turn(G0))&(Ch(1,1)&(K137>1|K138>1))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K137>G0|K138>G1))&! (Ch(G1,G0)&(K137>G1|K138>G0))])) ])
2019-10-14 16:44:08,284 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 > 1&! Ch(G0,G0)])&!(turn(p2))
 f2:!(!Ch(0,0))=>(exists(K137:Int,K138:Int)[ (Ch(K137,K138)&turn(p1)&K137>=0&K137<xlen()&K138>=0&K138<ylen())&((( !(Ch(0,0)&(K137>0|K138>0)) ) => ( !(Ch(0,0)&(K137>0|K138>0))&(!turn(p1)) ))&!(exists(G0:_S1)[(!turn(G0))&(Ch(1,1)&(K137>1|K138>1))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K137>G0|K138>G1))&! (Ch(G1,G0)&(K137>G1|K138>G0))])) ])
2019-10-14 16:44:08,321 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 > 1&! Ch(G0,G0)])&!(turn(p2))
 f2:!(!Ch(0,0))=>(exists(K137:Int,K138:Int)[ (Ch(K137,K138)&turn(p1)&K137>=0&K137<xlen()&K138>=0&K138<ylen())&((( !(Ch(0,0)&(K137>0|K138>0)) ) => ( !(Ch(0,0)&(K137>0|K138>0))&(!turn(p1)) ))&!(exists(G0:_S1)[(!turn(G0))&(Ch(1,1)&(K137>1|K138>1))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K137>G0|K138>G1))&! (Ch(G1,G0)&(K137>G1|K138>G0))])) ])
2019-10-14 16:44:08,358 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:_S1)[turn(G0)&Ch(1,1)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,G0)])
 f2:forall(K135:Int,K136:Int)[ Ch(K135,K136)&turn(p2)&K135>=0&K135<xlen()&K136>=0&K136<ylen()=>((( !(Ch(0,0)&(K135>0|K136>0)) ) => ( !(Ch(0,0)&(K135>0|K136>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! G0 > 1&! (Ch(G0,G0)&(K135>G0|K136>G0))])&!((!turn(p2)))) ]
2019-10-14 16:44:09,425 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(turn(p2))&!(exists(G0:_S1)[turn(G0)&turn(p2)])
 f2:!(!Ch(0,0))=>(exists(K141:Int,K142:Int)[ (Ch(K141,K142)&turn(p1)&K141>=0&K141<xlen()&K142>=0&K142<ylen())&((( !(Ch(0,0)&(K141>0|K142>0)) ) => ( !(Ch(0,0)&(K141>0|K142>0))&(!turn(p1)) ))&!(exists(G0:_S1)[(!turn(G0))&(Ch(1,1)&(K141>1|K142>1))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K141>G0|K142>G1))&! (Ch(G1,G0)&(K141>G1|K142>G0))])) ])
2019-10-14 16:44:09,465 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:_S1)[turn(G0)&Ch(1,1)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,G0)])
 f2:forall(K139:Int,K140:Int)[ Ch(K139,K140)&turn(p2)&K139>=0&K139<xlen()&K140>=0&K140<ylen()=>((( !(Ch(0,0)&(K139>0|K140>0)) ) => ( !(Ch(0,0)&(K139>0|K140>0))&(!turn(p1)) ))&!((!turn(p2)))&!(exists(G0:_S1)[(!turn(G0))&(!turn(p2))])) ]
2019-10-14 16:44:37,050 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:_S1)[turn(G0)&turn(p2)])&!(turn(p2))&!(Ch(0,0)&! Ch(1,0)&! Ch(0,1))
 f2:!(!Ch(0,0))=>(exists(K145:Int,K146:Int)[ (Ch(K145,K146)&turn(p1)&K145>=0&K145<xlen()&K146>=0&K146<ylen())&((( !(Ch(0,0)&(K145>0|K146>0)) ) => ( !(Ch(0,0)&(K145>0|K146>0))&(!turn(p1)) ))&!(exists(G0:_S1)[(!turn(G0))&(Ch(1,1)&(K145>1|K146>1))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K145>G0|K146>G1))&! (Ch(G1,G0)&(K145>G1|K146>G0))])) ])
2019-10-14 16:44:37,232 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:_S1)[turn(G0)&turn(p2)])&!(turn(p2))&!(Ch(0,0)&! Ch(1,0)&! Ch(0,1))
 f2:!(!Ch(0,0))=>(exists(K145:Int,K146:Int)[ (Ch(K145,K146)&turn(p1)&K145>=0&K145<xlen()&K146>=0&K146<ylen())&((( !(Ch(0,0)&(K145>0|K146>0)) ) => ( !(Ch(0,0)&(K145>0|K146>0))&(!turn(p1)) ))&!(exists(G0:_S1)[(!turn(G0))&(Ch(1,1)&(K145>1|K146>1))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K145>G0|K146>G1))&! (Ch(G1,G0)&(K145>G1|K146>G0))])) ])
2019-10-14 16:44:37,280 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:_S1)[turn(G0)&Ch(1,1)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,G0)])
 f2:forall(K143:Int,K144:Int)[ Ch(K143,K144)&turn(p2)&K143>=0&K143<xlen()&K144>=0&K144<ylen()=>((( !(Ch(0,0)&(K143>0|K144>0)) ) => ( !(Ch(0,0)&(K143>0|K144>0))&(!turn(p1)) ))&!(exists(G0:_S1)[(!turn(G0))&(!turn(p2))])&!((!turn(p2)))&!((Ch(0,0)&(K143>0|K144>0))&! (Ch(1,0)&(K143>1|K144>0))&! (Ch(0,1)&(K143>0|K144>1)))) ]
2019-10-14 16:44:37,316 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:_S1)[turn(G0)&Ch(1,1)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,G0)])
 f2:forall(K143:Int,K144:Int)[ Ch(K143,K144)&turn(p2)&K143>=0&K143<xlen()&K144>=0&K144<ylen()=>((( !(Ch(0,0)&(K143>0|K144>0)) ) => ( !(Ch(0,0)&(K143>0|K144>0))&(!turn(p1)) ))&!(exists(G0:_S1)[(!turn(G0))&(!turn(p2))])&!((!turn(p2)))&!((Ch(0,0)&(K143>0|K144>0))&! (Ch(1,0)&(K143>1|K144>0))&! (Ch(0,1)&(K143>0|K144>1)))) ]
2019-10-14 16:44:37,344 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:_S1)[turn(G0)&Ch(1,1)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,G0)])
 f2:forall(K143:Int,K144:Int)[ Ch(K143,K144)&turn(p2)&K143>=0&K143<xlen()&K144>=0&K144<ylen()=>((( !(Ch(0,0)&(K143>0|K144>0)) ) => ( !(Ch(0,0)&(K143>0|K144>0))&(!turn(p1)) ))&!(exists(G0:_S1)[(!turn(G0))&(!turn(p2))])&!((!turn(p2)))&!((Ch(0,0)&(K143>0|K144>0))&! (Ch(1,0)&(K143>1|K144>0))&! (Ch(0,1)&(K143>0|K144>1)))) ]
2019-10-14 16:45:18,932 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:_S1)[turn(G0)&turn(p2)])&!(turn(p2))&!(Ch(0,0)&! Ch(1,0)&! Ch(0,1))&!(exists(G0:Int)[G0>=0&Ch(1,G0)&Ch(0,1)&! Ch(1,1)])
 f2:!(!Ch(0,0))=>(exists(K149:Int,K150:Int)[ (Ch(K149,K150)&turn(p1)&K149>=0&K149<xlen()&K150>=0&K150<ylen())&((( !(Ch(0,0)&(K149>0|K150>0)) ) => ( !(Ch(0,0)&(K149>0|K150>0))&(!turn(p1)) ))&!(exists(G0:_S1)[(!turn(G0))&(Ch(1,1)&(K149>1|K150>1))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K149>G0|K150>G1))&! (Ch(G1,G0)&(K149>G1|K150>G0))])&!(exists(G0:Int)[ exists(K151:Int)[ (xlen()=K151)&(G0>=0&G0 > 1& K151 > G0)] ])) ])
2019-10-14 16:45:18,977 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:_S1)[turn(G0)&turn(p2)])&!(turn(p2))&!(Ch(0,0)&! Ch(1,0)&! Ch(0,1))&!(exists(G0:Int)[G0>=0&Ch(1,G0)&Ch(0,1)&! Ch(1,1)])
 f2:!(!Ch(0,0))=>(exists(K149:Int,K150:Int)[ (Ch(K149,K150)&turn(p1)&K149>=0&K149<xlen()&K150>=0&K150<ylen())&((( !(Ch(0,0)&(K149>0|K150>0)) ) => ( !(Ch(0,0)&(K149>0|K150>0))&(!turn(p1)) ))&!(exists(G0:_S1)[(!turn(G0))&(Ch(1,1)&(K149>1|K150>1))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K149>G0|K150>G1))&! (Ch(G1,G0)&(K149>G1|K150>G0))])&!(exists(G0:Int)[ exists(K151:Int)[ (xlen()=K151)&(G0>=0&G0 > 1& K151 > G0)] ])) ])
2019-10-14 16:45:19,023 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:_S1)[turn(G0)&turn(p2)])&!(turn(p2))&!(Ch(0,0)&! Ch(1,0)&! Ch(0,1))&!(exists(G0:Int)[G0>=0&Ch(1,G0)&Ch(0,1)&! Ch(1,1)])
 f2:!(!Ch(0,0))=>(exists(K149:Int,K150:Int)[ (Ch(K149,K150)&turn(p1)&K149>=0&K149<xlen()&K150>=0&K150<ylen())&((( !(Ch(0,0)&(K149>0|K150>0)) ) => ( !(Ch(0,0)&(K149>0|K150>0))&(!turn(p1)) ))&!(exists(G0:_S1)[(!turn(G0))&(Ch(1,1)&(K149>1|K150>1))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K149>G0|K150>G1))&! (Ch(G1,G0)&(K149>G1|K150>G0))])&!(exists(G0:Int)[ exists(K151:Int)[ (xlen()=K151)&(G0>=0&G0 > 1& K151 > G0)] ])) ])
2019-10-14 16:45:19,066 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:_S1)[turn(G0)&Ch(1,1)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,G0)])&!(exists(G0:Int)[G0>=0&G0 > 1&xlen() > G0])
 f2:forall(K147:Int,K148:Int)[ Ch(K147,K148)&turn(p2)&K147>=0&K147<xlen()&K148>=0&K148<ylen()=>((( !(Ch(0,0)&(K147>0|K148>0)) ) => ( !(Ch(0,0)&(K147>0|K148>0))&(!turn(p1)) ))&!(exists(G0:_S1)[(!turn(G0))&(!turn(p2))])&!((!turn(p2)))&!((Ch(0,0)&(K147>0|K148>0))&! (Ch(1,0)&(K147>1|K148>0))&! (Ch(0,1)&(K147>0|K148>1)))&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K147>1|K148>G0))&(Ch(0,1)&(K147>0|K148>1))&! (Ch(1,1)&(K147>1|K148>1))])) ]
2019-10-14 16:45:22,166 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:_S1)[turn(G0)&turn(p2)])&!(turn(p2))&!(Ch(0,0)&! Ch(1,0)&! Ch(0,1))&!(exists(G0:Int)[G0>=0&Ch(1,G0)&Ch(0,1)&! Ch(1,1)])
 f2:!(!Ch(0,0))=>(exists(K154:Int,K155:Int)[ (Ch(K154,K155)&turn(p1)&K154>=0&K154<xlen()&K155>=0&K155<ylen())&((( !(Ch(0,0)&(K154>0|K155>0)) ) => ( !(Ch(0,0)&(K154>0|K155>0))&(!turn(p1)) ))&!(exists(G0:_S1)[(!turn(G0))&(Ch(1,1)&(K154>1|K155>1))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K154>G0|K155>G1))&! (Ch(G1,G0)&(K154>G1|K155>G0))])&!(exists(G0:Int)[G0>=0&! G0 = 0&(Ch(G0,G0)&(K154>G0|K155>G0))])) ])
2019-10-14 16:45:23,729 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:_S1)[turn(G0)&turn(p2)])&!(turn(p2))&!(Ch(0,0)&! Ch(1,0)&! Ch(0,1))&!(exists(G0:Int)[G0>=0&Ch(1,G0)&Ch(0,1)&! Ch(1,1)])
 f2:!(!Ch(0,0))=>(exists(K154:Int,K155:Int)[ (Ch(K154,K155)&turn(p1)&K154>=0&K154<xlen()&K155>=0&K155<ylen())&((( !(Ch(0,0)&(K154>0|K155>0)) ) => ( !(Ch(0,0)&(K154>0|K155>0))&(!turn(p1)) ))&!(exists(G0:_S1)[(!turn(G0))&(Ch(1,1)&(K154>1|K155>1))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K154>G0|K155>G1))&! (Ch(G1,G0)&(K154>G1|K155>G0))])&!(exists(G0:Int)[G0>=0&! G0 = 0&(Ch(G0,G0)&(K154>G0|K155>G0))])) ])
2019-10-14 16:45:23,776 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:_S1)[turn(G0)&turn(p2)])&!(turn(p2))&!(Ch(0,0)&! Ch(1,0)&! Ch(0,1))&!(exists(G0:Int)[G0>=0&Ch(1,G0)&Ch(0,1)&! Ch(1,1)])
 f2:!(!Ch(0,0))=>(exists(K154:Int,K155:Int)[ (Ch(K154,K155)&turn(p1)&K154>=0&K154<xlen()&K155>=0&K155<ylen())&((( !(Ch(0,0)&(K154>0|K155>0)) ) => ( !(Ch(0,0)&(K154>0|K155>0))&(!turn(p1)) ))&!(exists(G0:_S1)[(!turn(G0))&(Ch(1,1)&(K154>1|K155>1))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K154>G0|K155>G1))&! (Ch(G1,G0)&(K154>G1|K155>G0))])&!(exists(G0:Int)[G0>=0&! G0 = 0&(Ch(G0,G0)&(K154>G0|K155>G0))])) ])
2019-10-14 16:45:23,887 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:_S1)[turn(G0)&Ch(1,1)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,G0)])&!(exists(G0:Int)[G0>=0&! G0 = 0&Ch(G0,G0)])
 f2:forall(K152:Int,K153:Int)[ Ch(K152,K153)&turn(p2)&K152>=0&K152<xlen()&K153>=0&K153<ylen()=>((( !(Ch(0,0)&(K152>0|K153>0)) ) => ( !(Ch(0,0)&(K152>0|K153>0))&(!turn(p1)) ))&!(exists(G0:_S1)[(!turn(G0))&(!turn(p2))])&!((!turn(p2)))&!((Ch(0,0)&(K152>0|K153>0))&! (Ch(1,0)&(K152>1|K153>0))&! (Ch(0,1)&(K152>0|K153>1)))&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K152>1|K153>G0))&(Ch(0,1)&(K152>0|K153>1))&! (Ch(1,1)&(K152>1|K153>1))])) ]
2019-10-14 16:45:23,933 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:_S1)[turn(G0)&Ch(1,1)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,G0)])&!(exists(G0:Int)[G0>=0&! G0 = 0&Ch(G0,G0)])
 f2:forall(K152:Int,K153:Int)[ Ch(K152,K153)&turn(p2)&K152>=0&K152<xlen()&K153>=0&K153<ylen()=>((( !(Ch(0,0)&(K152>0|K153>0)) ) => ( !(Ch(0,0)&(K152>0|K153>0))&(!turn(p1)) ))&!(exists(G0:_S1)[(!turn(G0))&(!turn(p2))])&!((!turn(p2)))&!((Ch(0,0)&(K152>0|K153>0))&! (Ch(1,0)&(K152>1|K153>0))&! (Ch(0,1)&(K152>0|K153>1)))&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K152>1|K153>G0))&(Ch(0,1)&(K152>0|K153>1))&! (Ch(1,1)&(K152>1|K153>1))])) ]
2019-10-14 16:45:23,966 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:_S1)[turn(G0)&Ch(1,1)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,G0)])&!(exists(G0:Int)[G0>=0&! G0 = 0&Ch(G0,G0)])
 f2:forall(K152:Int,K153:Int)[ Ch(K152,K153)&turn(p2)&K152>=0&K152<xlen()&K153>=0&K153<ylen()=>((( !(Ch(0,0)&(K152>0|K153>0)) ) => ( !(Ch(0,0)&(K152>0|K153>0))&(!turn(p1)) ))&!(exists(G0:_S1)[(!turn(G0))&(!turn(p2))])&!((!turn(p2)))&!((Ch(0,0)&(K152>0|K153>0))&! (Ch(1,0)&(K152>1|K153>0))&! (Ch(0,1)&(K152>0|K153>1)))&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K152>1|K153>G0))&(Ch(0,1)&(K152>0|K153>1))&! (Ch(1,1)&(K152>1|K153>1))])) ]
2019-10-14 16:45:37,185 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:_S1)[turn(G0)&turn(p2)])&!(turn(p2))&!(Ch(0,0)&! Ch(1,0)&! Ch(0,1))
 f2:!(!Ch(0,0))=>(exists(K158:Int,K159:Int)[ (Ch(K158,K159)&turn(p1)&K158>=0&K158<xlen()&K159>=0&K159<ylen())&((( !(Ch(0,0)&(K158>0|K159>0)) ) => ( !(Ch(0,0)&(K158>0|K159>0))&(!turn(p1)) ))&!(exists(G0:_S1)[(!turn(G0))&(Ch(1,1)&(K158>1|K159>1))])&!(exists(G0:Int)[G0>=0&! G0 = 0&(Ch(G0,G0)&(K158>G0|K159>G0))])) ])
2019-10-14 16:45:37,219 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:_S1)[turn(G0)&Ch(1,1)])&!(exists(G0:Int)[G0>=0&! G0 = 0&Ch(G0,G0)])
 f2:forall(K156:Int,K157:Int)[ Ch(K156,K157)&turn(p2)&K156>=0&K156<xlen()&K157>=0&K157<ylen()=>((( !(Ch(0,0)&(K156>0|K157>0)) ) => ( !(Ch(0,0)&(K156>0|K157>0))&(!turn(p1)) ))&!(exists(G0:_S1)[(!turn(G0))&(!turn(p2))])&!((!turn(p2)))&!((Ch(0,0)&(K156>0|K157>0))&! (Ch(1,0)&(K156>1|K157>0))&! (Ch(0,1)&(K156>0|K157>1)))) ]
2019-10-14 16:46:05,326 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:!(!Ch(0,0))=>(exists(K162:Int,K163:Int)[ (Ch(K162,K163)&turn(p1)&K162>=0&K162<xlen()&K163>=0&K163<ylen())&(( !(Ch(0,0)&(K162>0|K163>0)) ) => ( !(Ch(0,0)&(K162>0|K163>0))&(!turn(p1)) )) ])
2019-10-14 16:46:05,364 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:forall(K160:Int,K161:Int)[ Ch(K160,K161)&turn(p2)&K160>=0&K160<xlen()&K161>=0&K161<ylen()=>(( !(Ch(0,0)&(K160>0|K161>0)) ) => ( !(Ch(0,0)&(K160>0|K161>0))&(!turn(p1)) )) ]
2019-10-14 16:46:05,518 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&xlen() = X1])
 f2:!(!Ch(0,0))=>(exists(K166:Int,K167:Int)[ (Ch(K166,K167)&turn(p1)&K166>=0&K166<xlen()&K167>=0&K167<ylen())&(( !(Ch(0,0)&(K166>0|K167>0)) ) => ( !(Ch(0,0)&(K166>0|K167>0))&(!turn(p1)) )) ])
2019-10-14 16:46:05,546 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:forall(K164:Int,K165:Int)[ Ch(K164,K165)&turn(p2)&K164>=0&K164<xlen()&K165>=0&K165<ylen()=>((( !(Ch(0,0)&(K164>0|K165>0)) ) => ( !(Ch(0,0)&(K164>0|K165>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(xlen()=X1)])) ]
2019-10-14 16:46:05,889 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&xlen() = X1])
 f2:!(!Ch(0,0))=>(exists(K170:Int,K171:Int)[ (Ch(K170,K171)&turn(p1)&K170>=0&K170<xlen()&K171>=0&K171<ylen())&((( !(Ch(0,0)&(K170>0|K171>0)) ) => ( !(Ch(0,0)&(K170>0|K171>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(xlen()=X1)])) ])
2019-10-14 16:46:05,921 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&xlen() = X1])
 f2:forall(K168:Int,K169:Int)[ Ch(K168,K169)&turn(p2)&K168>=0&K168<xlen()&K169>=0&K169<ylen()=>((( !(Ch(0,0)&(K168>0|K169>0)) ) => ( !(Ch(0,0)&(K168>0|K169>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(xlen()=X1)])) ]
2019-10-14 16:46:05,948 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:forall(K16:Int,K17:Int)[K16>=0&K16<xlen()&K17>=0&K17<ylen()=>Ch(K16,K17)]&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)
 f2:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&xlen() = X1])
2019-10-14 16:46:06,797 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 > 0&! Ch(G0,1)])
 f2:!(!Ch(0,0))=>(exists(K174:Int,K175:Int)[ (Ch(K174,K175)&turn(p1)&K174>=0&K174<xlen()&K175>=0&K175<ylen())&((( !(Ch(0,0)&(K174>0|K175>0)) ) => ( !(Ch(0,0)&(K174>0|K175>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! G0 > 1&! (Ch(0,G0)&(K174>0|K175>G0))])) ])
2019-10-14 16:46:06,836 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 > 1&! Ch(0,G0)])
 f2:forall(K172:Int,K173:Int)[ Ch(K172,K173)&turn(p2)&K172>=0&K172<xlen()&K173>=0&K173<ylen()=>((( !(Ch(0,0)&(K172>0|K173>0)) ) => ( !(Ch(0,0)&(K172>0|K173>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! G0 > 0&! (Ch(G0,1)&(K172>G0|K173>1))])) ]
2019-10-14 16:46:07,454 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 > 0&! Ch(G0,1)])
 f2:!(!Ch(0,0))=>(exists(K178:Int,K179:Int)[ (Ch(K178,K179)&turn(p1)&K178>=0&K178<xlen()&K179>=0&K179<ylen())&((( !(Ch(0,0)&(K178>0|K179>0)) ) => ( !(Ch(0,0)&(K178>0|K179>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(xlen()=G0)&(Ch(1,1)&(K178>1|K179>1))])) ])
2019-10-14 16:46:07,493 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() = G0&Ch(1,1)])
 f2:forall(K176:Int,K177:Int)[ Ch(K176,K177)&turn(p2)&K176>=0&K176<xlen()&K177>=0&K177<ylen()=>((( !(Ch(0,0)&(K176>0|K177>0)) ) => ( !(Ch(0,0)&(K176>0|K177>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! G0 > 0&! (Ch(G0,1)&(K176>G0|K177>1))])) ]
2019-10-14 16:46:07,533 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() = G0&Ch(1,1)])
 f2:forall(K176:Int,K177:Int)[ Ch(K176,K177)&turn(p2)&K176>=0&K176<xlen()&K177>=0&K177<ylen()=>((( !(Ch(0,0)&(K176>0|K177>0)) ) => ( !(Ch(0,0)&(K176>0|K177>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! G0 > 0&! (Ch(G0,1)&(K176>G0|K177>1))])) ]
2019-10-14 16:46:09,068 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 > 0&! Ch(G0,1)])&!(! turn(p1))
 f2:!(!Ch(0,0))=>(exists(K182:Int,K183:Int)[ (Ch(K182,K183)&turn(p1)&K182>=0&K182<xlen()&K183>=0&K183<ylen())&((( !(Ch(0,0)&(K182>0|K183>0)) ) => ( !(Ch(0,0)&(K182>0|K183>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(xlen()=G0)&(Ch(1,1)&(K182>1|K183>1))])&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K182>0|K183>G0))&! (Ch(G0,0)&(K182>G0|K183>0))])) ])
2019-10-14 16:46:09,109 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() = G0&Ch(1,1)])&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(G0,0)])
 f2:forall(K180:Int,K181:Int)[ Ch(K180,K181)&turn(p2)&K180>=0&K180<xlen()&K181>=0&K181<ylen()=>((( !(Ch(0,0)&(K180>0|K181>0)) ) => ( !(Ch(0,0)&(K180>0|K181>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! G0 > 0&! (Ch(G0,1)&(K180>G0|K181>1))])&!(! (!turn(p1)))) ]
2019-10-14 16:46:09,641 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(! turn(p1))&!(exists(G0:Int)[G0>=0&xlen() = G0&! turn(p1)])
 f2:!(!Ch(0,0))=>(exists(K186:Int,K187:Int)[ (Ch(K186,K187)&turn(p1)&K186>=0&K186<xlen()&K187>=0&K187<ylen())&((( !(Ch(0,0)&(K186>0|K187>0)) ) => ( !(Ch(0,0)&(K186>0|K187>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(xlen()=G0)&(Ch(1,1)&(K186>1|K187>1))])&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K186>0|K187>G0))&! (Ch(G0,0)&(K186>G0|K187>0))])) ])
2019-10-14 16:46:09,679 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() = G0&Ch(1,1)])&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(G0,0)])
 f2:forall(K184:Int,K185:Int)[ Ch(K184,K185)&turn(p2)&K184>=0&K184<xlen()&K185>=0&K185<ylen()=>((( !(Ch(0,0)&(K184>0|K185>0)) ) => ( !(Ch(0,0)&(K184>0|K185>0))&(!turn(p1)) ))&!(! (!turn(p1)))&!(exists(G0:Int)[G0>=0&(xlen()=G0)&! (!turn(p1))])) ]
2019-10-14 16:46:34,997 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() = G0&! turn(p1)])&!(! turn(p1))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(1,G1)&! Ch(G0,1)])
 f2:!(!Ch(0,0))=>(exists(K190:Int,K191:Int)[ (Ch(K190,K191)&turn(p1)&K190>=0&K190<xlen()&K191>=0&K191<ylen())&((( !(Ch(0,0)&(K190>0|K191>0)) ) => ( !(Ch(0,0)&(K190>0|K191>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(xlen()=G0)&(Ch(1,1)&(K190>1|K191>1))])&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K190>0|K191>G0))&! (Ch(G0,0)&(K190>G0|K191>0))])) ])
2019-10-14 16:46:35,398 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() = G0&! turn(p1)])&!(! turn(p1))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(1,G1)&! Ch(G0,1)])
 f2:!(!Ch(0,0))=>(exists(K190:Int,K191:Int)[ (Ch(K190,K191)&turn(p1)&K190>=0&K190<xlen()&K191>=0&K191<ylen())&((( !(Ch(0,0)&(K190>0|K191>0)) ) => ( !(Ch(0,0)&(K190>0|K191>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(xlen()=G0)&(Ch(1,1)&(K190>1|K191>1))])&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K190>0|K191>G0))&! (Ch(G0,0)&(K190>G0|K191>0))])) ])
2019-10-14 16:46:35,434 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() = G0&! turn(p1)])&!(! turn(p1))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(1,G1)&! Ch(G0,1)])
 f2:!(!Ch(0,0))=>(exists(K190:Int,K191:Int)[ (Ch(K190,K191)&turn(p1)&K190>=0&K190<xlen()&K191>=0&K191<ylen())&((( !(Ch(0,0)&(K190>0|K191>0)) ) => ( !(Ch(0,0)&(K190>0|K191>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(xlen()=G0)&(Ch(1,1)&(K190>1|K191>1))])&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K190>0|K191>G0))&! (Ch(G0,0)&(K190>G0|K191>0))])) ])
2019-10-14 16:46:35,504 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() = G0&Ch(1,1)])&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(G0,0)])
 f2:forall(K188:Int,K189:Int)[ Ch(K188,K189)&turn(p2)&K188>=0&K188<xlen()&K189>=0&K189<ylen()=>((( !(Ch(0,0)&(K188>0|K189>0)) ) => ( !(Ch(0,0)&(K188>0|K189>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(xlen()=G0)&! (!turn(p1))])&!(! (!turn(p1)))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K188>G0|K189>G1))&! (Ch(1,G1)&(K188>1|K189>G1))&! (Ch(G0,1)&(K188>G0|K189>1))])) ]
2019-10-14 16:46:35,548 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() = G0&Ch(1,1)])&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(G0,0)])
 f2:forall(K188:Int,K189:Int)[ Ch(K188,K189)&turn(p2)&K188>=0&K188<xlen()&K189>=0&K189<ylen()=>((( !(Ch(0,0)&(K188>0|K189>0)) ) => ( !(Ch(0,0)&(K188>0|K189>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(xlen()=G0)&! (!turn(p1))])&!(! (!turn(p1)))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K188>G0|K189>G1))&! (Ch(1,G1)&(K188>1|K189>G1))&! (Ch(G0,1)&(K188>G0|K189>1))])) ]
2019-10-14 16:46:43,795 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() = G0&! turn(p1)])&!(! turn(p1))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(1,G1)&! Ch(G0,1)])
 f2:!(!Ch(0,0))=>(exists(K194:Int,K195:Int)[ (Ch(K194,K195)&turn(p1)&K194>=0&K194<xlen()&K195>=0&K195<ylen())&((( !(Ch(0,0)&(K194>0|K195>0)) ) => ( !(Ch(0,0)&(K194>0|K195>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K194>1|K195>G0))&! (Ch(G0,0)&(K194>G0|K195>0))])&!((Ch(0,1)&(K194>0|K195>1))&! (Ch(1,0)&(K194>1|K195>0)))) ])
2019-10-14 16:46:43,827 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(1,G0)&! Ch(G0,0)])&!(Ch(0,1)&! Ch(1,0))
 f2:forall(K192:Int,K193:Int)[ Ch(K192,K193)&turn(p2)&K192>=0&K192<xlen()&K193>=0&K193<ylen()=>((( !(Ch(0,0)&(K192>0|K193>0)) ) => ( !(Ch(0,0)&(K192>0|K193>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(xlen()=G0)&! (!turn(p1))])&!(! (!turn(p1)))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K192>G0|K193>G1))&! (Ch(1,G1)&(K192>1|K193>G1))&! (Ch(G0,1)&(K192>G0|K193>1))])) ]
2019-10-14 16:46:43,864 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(1,G0)&! Ch(G0,0)])&!(Ch(0,1)&! Ch(1,0))
 f2:forall(K192:Int,K193:Int)[ Ch(K192,K193)&turn(p2)&K192>=0&K192<xlen()&K193>=0&K193<ylen()=>((( !(Ch(0,0)&(K192>0|K193>0)) ) => ( !(Ch(0,0)&(K192>0|K193>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(xlen()=G0)&! (!turn(p1))])&!(! (!turn(p1)))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K192>G0|K193>G1))&! (Ch(1,G1)&(K192>1|K193>G1))&! (Ch(G0,1)&(K192>G0|K193>1))])) ]
2019-10-14 16:47:10,703 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() = G0&! turn(p1)])&!(! turn(p1))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(1,G1)&! Ch(G0,1)])
 f2:!(!Ch(0,0))=>(exists(K198:Int,K199:Int)[ (Ch(K198,K199)&turn(p1)&K198>=0&K198<xlen()&K199>=0&K199<ylen())&((( !(Ch(0,0)&(K198>0|K199>0)) ) => ( !(Ch(0,0)&(K198>0|K199>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K198>1|K199>G0))&! (Ch(G0,0)&(K198>G0|K199>0))])&!((Ch(0,1)&(K198>0|K199>1))&! (Ch(1,0)&(K198>1|K199>0)))&!(exists(G0:Int)[G0>=0&(Ch(G0,0)&(K198>G0|K199>0))&! (Ch(0,G0)&(K198>0|K199>G0))&! (Ch(1,1)&(K198>1|K199>1))])) ])
2019-10-14 16:47:10,761 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() = G0&! turn(p1)])&!(! turn(p1))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(1,G1)&! Ch(G0,1)])
 f2:!(!Ch(0,0))=>(exists(K198:Int,K199:Int)[ (Ch(K198,K199)&turn(p1)&K198>=0&K198<xlen()&K199>=0&K199<ylen())&((( !(Ch(0,0)&(K198>0|K199>0)) ) => ( !(Ch(0,0)&(K198>0|K199>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K198>1|K199>G0))&! (Ch(G0,0)&(K198>G0|K199>0))])&!((Ch(0,1)&(K198>0|K199>1))&! (Ch(1,0)&(K198>1|K199>0)))&!(exists(G0:Int)[G0>=0&(Ch(G0,0)&(K198>G0|K199>0))&! (Ch(0,G0)&(K198>0|K199>G0))&! (Ch(1,1)&(K198>1|K199>1))])) ])
2019-10-14 16:47:10,813 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(1,G0)&! Ch(G0,0)])&!(Ch(0,1)&! Ch(1,0))&!(exists(G0:Int)[G0>=0&Ch(G0,0)&! Ch(0,G0)&! Ch(1,1)])
 f2:forall(K196:Int,K197:Int)[ Ch(K196,K197)&turn(p2)&K196>=0&K196<xlen()&K197>=0&K197<ylen()=>((( !(Ch(0,0)&(K196>0|K197>0)) ) => ( !(Ch(0,0)&(K196>0|K197>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(xlen()=G0)&! (!turn(p1))])&!(! (!turn(p1)))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K196>G0|K197>G1))&! (Ch(1,G1)&(K196>1|K197>G1))&! (Ch(G0,1)&(K196>G0|K197>1))])) ]
2019-10-14 16:47:10,855 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(1,G0)&! Ch(G0,0)])&!(Ch(0,1)&! Ch(1,0))&!(exists(G0:Int)[G0>=0&Ch(G0,0)&! Ch(0,G0)&! Ch(1,1)])
 f2:forall(K196:Int,K197:Int)[ Ch(K196,K197)&turn(p2)&K196>=0&K196<xlen()&K197>=0&K197<ylen()=>((( !(Ch(0,0)&(K196>0|K197>0)) ) => ( !(Ch(0,0)&(K196>0|K197>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(xlen()=G0)&! (!turn(p1))])&!(! (!turn(p1)))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K196>G0|K197>G1))&! (Ch(1,G1)&(K196>1|K197>G1))&! (Ch(G0,1)&(K196>G0|K197>1))])) ]
2019-10-14 16:48:04,442 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:!(!Ch(0,0))=>(exists(K202:Int,K203:Int)[ (Ch(K202,K203)&turn(p1)&K202>=0&K202<xlen()&K203>=0&K203<ylen())&(( !(Ch(0,0)&(K202>0|K203>0)) ) => ( !(Ch(0,0)&(K202>0|K203>0))&(!turn(p1)) )) ])
2019-10-14 16:48:04,479 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:forall(K200:Int,K201:Int)[ Ch(K200,K201)&turn(p2)&K200>=0&K200<xlen()&K201>=0&K201<ylen()=>(( !(Ch(0,0)&(K200>0|K201>0)) ) => ( !(Ch(0,0)&(K200>0|K201>0))&(!turn(p1)) )) ]
2019-10-14 16:48:04,628 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&ylen() = X1])
 f2:!(!Ch(0,0))=>(exists(K206:Int,K207:Int)[ (Ch(K206,K207)&turn(p1)&K206>=0&K206<xlen()&K207>=0&K207<ylen())&(( !(Ch(0,0)&(K206>0|K207>0)) ) => ( !(Ch(0,0)&(K206>0|K207>0))&(!turn(p1)) )) ])
2019-10-14 16:48:04,658 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:forall(K204:Int,K205:Int)[ Ch(K204,K205)&turn(p2)&K204>=0&K204<xlen()&K205>=0&K205<ylen()=>((( !(Ch(0,0)&(K204>0|K205>0)) ) => ( !(Ch(0,0)&(K204>0|K205>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(ylen()=X1)])) ]
2019-10-14 16:48:05,008 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&ylen() = X1])
 f2:!(!Ch(0,0))=>(exists(K210:Int,K211:Int)[ (Ch(K210,K211)&turn(p1)&K210>=0&K210<xlen()&K211>=0&K211<ylen())&((( !(Ch(0,0)&(K210>0|K211>0)) ) => ( !(Ch(0,0)&(K210>0|K211>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(ylen()=X1)])) ])
2019-10-14 16:48:05,039 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&ylen() = X1])
 f2:forall(K208:Int,K209:Int)[ Ch(K208,K209)&turn(p2)&K208>=0&K208<xlen()&K209>=0&K209<ylen()=>((( !(Ch(0,0)&(K208>0|K209>0)) ) => ( !(Ch(0,0)&(K208>0|K209>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(ylen()=X1)])) ]
2019-10-14 16:48:05,073 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:forall(K16:Int,K17:Int)[K16>=0&K16<xlen()&K17>=0&K17<ylen()=>Ch(K16,K17)]&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)
 f2:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&ylen() = X1])
2019-10-14 16:48:05,914 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() > G0&! Ch(0,G0)])
 f2:!(!Ch(0,0))=>(exists(K215:Int,K216:Int)[ (Ch(K215,K216)&turn(p1)&K215>=0&K215<xlen()&K216>=0&K216<ylen())&((( !(Ch(0,0)&(K215>0|K216>0)) ) => ( !(Ch(0,0)&(K215>0|K216>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! G0 >= 1&! (Ch(1,G0)&(K215>1|K216>G0))])) ])
2019-10-14 16:48:05,969 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() > G0&! Ch(0,G0)])
 f2:!(!Ch(0,0))=>(exists(K215:Int,K216:Int)[ (Ch(K215,K216)&turn(p1)&K215>=0&K215<xlen()&K216>=0&K216<ylen())&((( !(Ch(0,0)&(K215>0|K216>0)) ) => ( !(Ch(0,0)&(K215>0|K216>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! G0 >= 1&! (Ch(1,G0)&(K215>1|K216>G0))])) ])
2019-10-14 16:48:06,008 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 >= 1&! Ch(1,G0)])
 f2:forall(K212:Int,K213:Int)[ Ch(K212,K213)&turn(p2)&K212>=0&K212<xlen()&K213>=0&K213<ylen()=>((( !(Ch(0,0)&(K212>0|K213>0)) ) => ( !(Ch(0,0)&(K212>0|K213>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K214:Int)[ (xlen()=K214)&(G0>=0& K214 > G0&! (Ch(0,G0)&(K212>0|K213>G0)))] ])) ]
2019-10-14 16:48:06,047 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 >= 1&! Ch(1,G0)])
 f2:forall(K212:Int,K213:Int)[ Ch(K212,K213)&turn(p2)&K212>=0&K212<xlen()&K213>=0&K213<ylen()=>((( !(Ch(0,0)&(K212>0|K213>0)) ) => ( !(Ch(0,0)&(K212>0|K213>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K214:Int)[ (xlen()=K214)&(G0>=0& K214 > G0&! (Ch(0,G0)&(K212>0|K213>G0)))] ])) ]
2019-10-14 16:48:06,654 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() > G0&! Ch(0,G0)])
 f2:!(!Ch(0,0))=>(exists(K220:Int,K221:Int)[ (Ch(K220,K221)&turn(p1)&K220>=0&K220<xlen()&K221>=0&K221<ylen())&((( !(Ch(0,0)&(K220>0|K221>0)) ) => ( !(Ch(0,0)&(K220>0|K221>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 0&(Ch(G0,1)&(K220>G0|K221>1))])) ])
2019-10-14 16:48:06,718 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() > G0&! Ch(0,G0)])
 f2:!(!Ch(0,0))=>(exists(K220:Int,K221:Int)[ (Ch(K220,K221)&turn(p1)&K220>=0&K220<xlen()&K221>=0&K221<ylen())&((( !(Ch(0,0)&(K220>0|K221>0)) ) => ( !(Ch(0,0)&(K220>0|K221>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 0&(Ch(G0,1)&(K220>G0|K221>1))])) ])
2019-10-14 16:48:06,763 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 > 0&Ch(G0,1)])
 f2:forall(K217:Int,K218:Int)[ Ch(K217,K218)&turn(p2)&K217>=0&K217<xlen()&K218>=0&K218<ylen()=>((( !(Ch(0,0)&(K217>0|K218>0)) ) => ( !(Ch(0,0)&(K217>0|K218>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K219:Int)[ (xlen()=K219)&(G0>=0& K219 > G0&! (Ch(0,G0)&(K217>0|K218>G0)))] ])) ]
2019-10-14 16:48:06,802 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 > 0&Ch(G0,1)])
 f2:forall(K217:Int,K218:Int)[ Ch(K217,K218)&turn(p2)&K217>=0&K217<xlen()&K218>=0&K218<ylen()=>((( !(Ch(0,0)&(K217>0|K218>0)) ) => ( !(Ch(0,0)&(K217>0|K218>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K219:Int)[ (xlen()=K219)&(G0>=0& K219 > G0&! (Ch(0,G0)&(K217>0|K218>G0)))] ])) ]
2019-10-14 16:48:08,524 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() > G0&! Ch(G0,0)])
 f2:!(!Ch(0,0))=>(exists(K225:Int,K226:Int)[ (Ch(K225,K226)&turn(p1)&K225>=0&K225<xlen()&K226>=0&K226<ylen())&((( !(Ch(0,0)&(K225>0|K226>0)) ) => ( !(Ch(0,0)&(K225>0|K226>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 0&(Ch(G0,1)&(K225>G0|K226>1))])&!(exists(G0:Int)[G0>=0&(Ch(G0,1)&(K225>G0|K226>1))&! (Ch(1,G0)&(K225>1|K226>G0))])) ])
2019-10-14 16:48:08,595 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() > G0&! Ch(G0,0)])
 f2:!(!Ch(0,0))=>(exists(K225:Int,K226:Int)[ (Ch(K225,K226)&turn(p1)&K225>=0&K225<xlen()&K226>=0&K226<ylen())&((( !(Ch(0,0)&(K225>0|K226>0)) ) => ( !(Ch(0,0)&(K225>0|K226>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 0&(Ch(G0,1)&(K225>G0|K226>1))])&!(exists(G0:Int)[G0>=0&(Ch(G0,1)&(K225>G0|K226>1))&! (Ch(1,G0)&(K225>1|K226>G0))])) ])
2019-10-14 16:48:08,640 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 > 0&Ch(G0,1)])&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(1,G0)])
 f2:forall(K222:Int,K223:Int)[ Ch(K222,K223)&turn(p2)&K222>=0&K222<xlen()&K223>=0&K223<ylen()=>((( !(Ch(0,0)&(K222>0|K223>0)) ) => ( !(Ch(0,0)&(K222>0|K223>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K224:Int)[ (xlen()=K224)&(G0>=0& K224 > G0&! (Ch(G0,0)&(K222>G0|K223>0)))] ])) ]
2019-10-14 16:48:08,676 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 > 0&Ch(G0,1)])&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(1,G0)])
 f2:forall(K222:Int,K223:Int)[ Ch(K222,K223)&turn(p2)&K222>=0&K222<xlen()&K223>=0&K223<ylen()=>((( !(Ch(0,0)&(K222>0|K223>0)) ) => ( !(Ch(0,0)&(K222>0|K223>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K224:Int)[ (xlen()=K224)&(G0>=0& K224 > G0&! (Ch(G0,0)&(K222>G0|K223>0)))] ])) ]
2019-10-14 16:48:14,786 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() > G0&! Ch(G0,G0)])
 f2:!(!Ch(0,0))=>(exists(K230:Int,K231:Int)[ (Ch(K230,K231)&turn(p1)&K230>=0&K230<xlen()&K231>=0&K231<ylen())&((( !(Ch(0,0)&(K230>0|K231>0)) ) => ( !(Ch(0,0)&(K230>0|K231>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 0&(Ch(G0,1)&(K230>G0|K231>1))])&!(exists(G0:Int)[G0>=0&(Ch(G0,1)&(K230>G0|K231>1))&! (Ch(1,G0)&(K230>1|K231>G0))])&!((Ch(1,0)&(K230>1|K231>0))&! (Ch(0,1)&(K230>0|K231>1)))) ])
2019-10-14 16:48:14,835 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() > G0&! Ch(G0,G0)])
 f2:!(!Ch(0,0))=>(exists(K230:Int,K231:Int)[ (Ch(K230,K231)&turn(p1)&K230>=0&K230<xlen()&K231>=0&K231<ylen())&((( !(Ch(0,0)&(K230>0|K231>0)) ) => ( !(Ch(0,0)&(K230>0|K231>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 0&(Ch(G0,1)&(K230>G0|K231>1))])&!(exists(G0:Int)[G0>=0&(Ch(G0,1)&(K230>G0|K231>1))&! (Ch(1,G0)&(K230>1|K231>G0))])&!((Ch(1,0)&(K230>1|K231>0))&! (Ch(0,1)&(K230>0|K231>1)))) ])
2019-10-14 16:48:14,873 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 > 0&Ch(G0,1)])&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(1,G0)])&!(Ch(1,0)&! Ch(0,1))
 f2:forall(K227:Int,K228:Int)[ Ch(K227,K228)&turn(p2)&K227>=0&K227<xlen()&K228>=0&K228<ylen()=>((( !(Ch(0,0)&(K227>0|K228>0)) ) => ( !(Ch(0,0)&(K227>0|K228>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K229:Int)[ (xlen()=K229)&(G0>=0& K229 > G0&! (Ch(G0,G0)&(K227>G0|K228>G0)))] ])) ]
2019-10-14 16:48:14,906 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 > 0&Ch(G0,1)])&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(1,G0)])&!(Ch(1,0)&! Ch(0,1))
 f2:forall(K227:Int,K228:Int)[ Ch(K227,K228)&turn(p2)&K227>=0&K227<xlen()&K228>=0&K228<ylen()=>((( !(Ch(0,0)&(K227>0|K228>0)) ) => ( !(Ch(0,0)&(K227>0|K228>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K229:Int)[ (xlen()=K229)&(G0>=0& K229 > G0&! (Ch(G0,G0)&(K227>G0|K228>G0)))] ])) ]
2019-10-14 16:48:18,439 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&ylen() = G0&turn(p2)])
 f2:!(!Ch(0,0))=>(exists(K234:Int,K235:Int)[ (Ch(K234,K235)&turn(p1)&K234>=0&K234<xlen()&K235>=0&K235<ylen())&((( !(Ch(0,0)&(K234>0|K235>0)) ) => ( !(Ch(0,0)&(K234>0|K235>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 0&(Ch(G0,1)&(K234>G0|K235>1))])&!(exists(G0:Int)[G0>=0&(Ch(G0,1)&(K234>G0|K235>1))&! (Ch(1,G0)&(K234>1|K235>G0))])&!((Ch(1,0)&(K234>1|K235>0))&! (Ch(0,1)&(K234>0|K235>1)))) ])
2019-10-14 16:48:18,481 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 > 0&Ch(G0,1)])&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(1,G0)])&!(Ch(1,0)&! Ch(0,1))
 f2:forall(K232:Int,K233:Int)[ Ch(K232,K233)&turn(p2)&K232>=0&K232<xlen()&K233>=0&K233<ylen()=>((( !(Ch(0,0)&(K232>0|K233>0)) ) => ( !(Ch(0,0)&(K232>0|K233>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(ylen()=G0)&(!turn(p2))])) ]
2019-10-14 16:48:19,506 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! Ch(G0,G0)&Ch(0,0)&xlen() > G0])
 f2:!(!Ch(0,0))=>(exists(K239:Int,K240:Int)[ (Ch(K239,K240)&turn(p1)&K239>=0&K239<xlen()&K240>=0&K240<ylen())&((( !(Ch(0,0)&(K239>0|K240>0)) ) => ( !(Ch(0,0)&(K239>0|K240>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 0&(Ch(G0,1)&(K239>G0|K240>1))])&!(exists(G0:Int)[G0>=0&(Ch(G0,1)&(K239>G0|K240>1))&! (Ch(1,G0)&(K239>1|K240>G0))])&!((Ch(1,0)&(K239>1|K240>0))&! (Ch(0,1)&(K239>0|K240>1)))) ])
2019-10-14 16:48:19,550 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! Ch(G0,G0)&Ch(0,0)&xlen() > G0])
 f2:!(!Ch(0,0))=>(exists(K239:Int,K240:Int)[ (Ch(K239,K240)&turn(p1)&K239>=0&K239<xlen()&K240>=0&K240<ylen())&((( !(Ch(0,0)&(K239>0|K240>0)) ) => ( !(Ch(0,0)&(K239>0|K240>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 0&(Ch(G0,1)&(K239>G0|K240>1))])&!(exists(G0:Int)[G0>=0&(Ch(G0,1)&(K239>G0|K240>1))&! (Ch(1,G0)&(K239>1|K240>G0))])&!((Ch(1,0)&(K239>1|K240>0))&! (Ch(0,1)&(K239>0|K240>1)))) ])
2019-10-14 16:48:19,593 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 > 0&Ch(G0,1)])&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(1,G0)])&!(Ch(1,0)&! Ch(0,1))
 f2:forall(K236:Int,K237:Int)[ Ch(K236,K237)&turn(p2)&K236>=0&K236<xlen()&K237>=0&K237<ylen()=>((( !(Ch(0,0)&(K236>0|K237>0)) ) => ( !(Ch(0,0)&(K236>0|K237>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K238:Int)[ (xlen()=K238)&(G0>=0&! (Ch(G0,G0)&(K236>G0|K237>G0))&(Ch(0,0)&(K236>0|K237>0))& K238 > G0)] ])) ]
2019-10-14 16:48:19,628 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 > 0&Ch(G0,1)])&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(1,G0)])&!(Ch(1,0)&! Ch(0,1))
 f2:forall(K236:Int,K237:Int)[ Ch(K236,K237)&turn(p2)&K236>=0&K236<xlen()&K237>=0&K237<ylen()=>((( !(Ch(0,0)&(K236>0|K237>0)) ) => ( !(Ch(0,0)&(K236>0|K237>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K238:Int)[ (xlen()=K238)&(G0>=0&! (Ch(G0,G0)&(K236>G0|K237>G0))&(Ch(0,0)&(K236>0|K237>0))& K238 > G0)] ])) ]
2019-10-14 16:48:29,590 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:!(!Ch(0,0))=>(exists(K243:Int,K244:Int)[ (Ch(K243,K244)&turn(p1)&K243>=0&K243<xlen()&K244>=0&K244<ylen())&((( !(Ch(0,0)&(K243>0|K244>0)) ) => ( !(Ch(0,0)&(K243>0|K244>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 0&(Ch(G0,1)&(K243>G0|K244>1))])&!(exists(G0:Int)[G0>=0&(Ch(G0,1)&(K243>G0|K244>1))&! (Ch(1,G0)&(K243>1|K244>G0))])&!((Ch(1,0)&(K243>1|K244>0))&! (Ch(0,1)&(K243>0|K244>1)))) ])
2019-10-14 16:48:29,628 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 > 0&Ch(G0,1)])&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(1,G0)])&!(Ch(1,0)&! Ch(0,1))
 f2:forall(K241:Int,K242:Int)[ Ch(K241,K242)&turn(p2)&K241>=0&K241<xlen()&K242>=0&K242<ylen()=>(( !(Ch(0,0)&(K241>0|K242>0)) ) => ( !(Ch(0,0)&(K241>0|K242>0))&(!turn(p1)) )) ]
2019-10-14 16:48:29,887 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(turn(p2))
 f2:!(!Ch(0,0))=>(exists(K247:Int,K248:Int)[ (Ch(K247,K248)&turn(p1)&K247>=0&K247<xlen()&K248>=0&K248<ylen())&((( !(Ch(0,0)&(K247>0|K248>0)) ) => ( !(Ch(0,0)&(K247>0|K248>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 0&(Ch(G0,1)&(K247>G0|K248>1))])&!(exists(G0:Int)[G0>=0&(Ch(G0,1)&(K247>G0|K248>1))&! (Ch(1,G0)&(K247>1|K248>G0))])&!((Ch(1,0)&(K247>1|K248>0))&! (Ch(0,1)&(K247>0|K248>1)))) ])
2019-10-14 16:48:29,925 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 > 0&Ch(G0,1)])&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(1,G0)])&!(Ch(1,0)&! Ch(0,1))
 f2:forall(K245:Int,K246:Int)[ Ch(K245,K246)&turn(p2)&K245>=0&K245<xlen()&K246>=0&K246<ylen()=>((( !(Ch(0,0)&(K245>0|K246>0)) ) => ( !(Ch(0,0)&(K245>0|K246>0))&(!turn(p1)) ))&!((!turn(p2)))) ]
2019-10-14 16:48:55,038 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(turn(p2))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(1,0)&! Ch(0,1)])
 f2:!(!Ch(0,0))=>(exists(K251:Int,K252:Int)[ (Ch(K251,K252)&turn(p1)&K251>=0&K251<xlen()&K252>=0&K252<ylen())&((( !(Ch(0,0)&(K251>0|K252>0)) ) => ( !(Ch(0,0)&(K251>0|K252>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 0&(Ch(G0,1)&(K251>G0|K252>1))])&!(exists(G0:Int)[G0>=0&(Ch(G0,1)&(K251>G0|K252>1))&! (Ch(1,G0)&(K251>1|K252>G0))])&!((Ch(1,0)&(K251>1|K252>0))&! (Ch(0,1)&(K251>0|K252>1)))) ])
2019-10-14 16:48:55,086 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 > 0&Ch(G0,1)])&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(1,G0)])&!(Ch(1,0)&! Ch(0,1))
 f2:forall(K249:Int,K250:Int)[ Ch(K249,K250)&turn(p2)&K249>=0&K249<xlen()&K250>=0&K250<ylen()=>((( !(Ch(0,0)&(K249>0|K250>0)) ) => ( !(Ch(0,0)&(K249>0|K250>0))&(!turn(p1)) ))&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K249>0|K250>G0))&! (Ch(1,0)&(K249>1|K250>0))&! (Ch(0,1)&(K249>0|K250>1))])) ]
2019-10-14 16:48:55,127 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 > 0&Ch(G0,1)])&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(1,G0)])&!(Ch(1,0)&! Ch(0,1))
 f2:forall(K249:Int,K250:Int)[ Ch(K249,K250)&turn(p2)&K249>=0&K249<xlen()&K250>=0&K250<ylen()=>((( !(Ch(0,0)&(K249>0|K250>0)) ) => ( !(Ch(0,0)&(K249>0|K250>0))&(!turn(p1)) ))&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K249>0|K250>G0))&! (Ch(1,0)&(K249>1|K250>0))&! (Ch(0,1)&(K249>0|K250>1))])) ]
2019-10-14 16:48:55,157 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 > 0&Ch(G0,1)])&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(1,G0)])&!(Ch(1,0)&! Ch(0,1))
 f2:forall(K249:Int,K250:Int)[ Ch(K249,K250)&turn(p2)&K249>=0&K249<xlen()&K250>=0&K250<ylen()=>((( !(Ch(0,0)&(K249>0|K250>0)) ) => ( !(Ch(0,0)&(K249>0|K250>0))&(!turn(p1)) ))&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K249>0|K250>G0))&! (Ch(1,0)&(K249>1|K250>0))&! (Ch(0,1)&(K249>0|K250>1))])) ]
2019-10-14 16:49:29,996 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(turn(p2))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(1,0)&! Ch(0,1)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(1,G0)&Ch(0,G1)&! Ch(G1,G1)])
 f2:!(!Ch(0,0))=>(exists(K255:Int,K256:Int)[ (Ch(K255,K256)&turn(p1)&K255>=0&K255<xlen()&K256>=0&K256<ylen())&((( !(Ch(0,0)&(K255>0|K256>0)) ) => ( !(Ch(0,0)&(K255>0|K256>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 0&(Ch(G0,1)&(K255>G0|K256>1))])&!(exists(G0:Int)[G0>=0&(Ch(G0,1)&(K255>G0|K256>1))&! (Ch(1,G0)&(K255>1|K256>G0))])&!((Ch(1,0)&(K255>1|K256>0))&! (Ch(0,1)&(K255>0|K256>1)))&!(exists(G0:Int)[ exists(K257:Int)[ (ylen()=K257)&(G0>=0&G0 > 1& K257 > G0)] ])) ])
2019-10-14 16:49:30,044 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(turn(p2))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(1,0)&! Ch(0,1)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(1,G0)&Ch(0,G1)&! Ch(G1,G1)])
 f2:!(!Ch(0,0))=>(exists(K255:Int,K256:Int)[ (Ch(K255,K256)&turn(p1)&K255>=0&K255<xlen()&K256>=0&K256<ylen())&((( !(Ch(0,0)&(K255>0|K256>0)) ) => ( !(Ch(0,0)&(K255>0|K256>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 0&(Ch(G0,1)&(K255>G0|K256>1))])&!(exists(G0:Int)[G0>=0&(Ch(G0,1)&(K255>G0|K256>1))&! (Ch(1,G0)&(K255>1|K256>G0))])&!((Ch(1,0)&(K255>1|K256>0))&! (Ch(0,1)&(K255>0|K256>1)))&!(exists(G0:Int)[ exists(K257:Int)[ (ylen()=K257)&(G0>=0&G0 > 1& K257 > G0)] ])) ])
2019-10-14 16:49:30,086 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(turn(p2))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(1,0)&! Ch(0,1)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(1,G0)&Ch(0,G1)&! Ch(G1,G1)])
 f2:!(!Ch(0,0))=>(exists(K255:Int,K256:Int)[ (Ch(K255,K256)&turn(p1)&K255>=0&K255<xlen()&K256>=0&K256<ylen())&((( !(Ch(0,0)&(K255>0|K256>0)) ) => ( !(Ch(0,0)&(K255>0|K256>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 0&(Ch(G0,1)&(K255>G0|K256>1))])&!(exists(G0:Int)[G0>=0&(Ch(G0,1)&(K255>G0|K256>1))&! (Ch(1,G0)&(K255>1|K256>G0))])&!((Ch(1,0)&(K255>1|K256>0))&! (Ch(0,1)&(K255>0|K256>1)))&!(exists(G0:Int)[ exists(K257:Int)[ (ylen()=K257)&(G0>=0&G0 > 1& K257 > G0)] ])) ])
2019-10-14 16:49:30,129 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 > 0&Ch(G0,1)])&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(1,G0)])&!(Ch(1,0)&! Ch(0,1))&!(exists(G0:Int)[G0>=0&G0 > 1&ylen() > G0])
 f2:forall(K253:Int,K254:Int)[ Ch(K253,K254)&turn(p2)&K253>=0&K253<xlen()&K254>=0&K254<ylen()=>((( !(Ch(0,0)&(K253>0|K254>0)) ) => ( !(Ch(0,0)&(K253>0|K254>0))&(!turn(p1)) ))&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K253>0|K254>G0))&! (Ch(1,0)&(K253>1|K254>0))&! (Ch(0,1)&(K253>0|K254>1))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(1,G0)&(K253>1|K254>G0))&(Ch(0,G1)&(K253>0|K254>G1))&! (Ch(G1,G1)&(K253>G1|K254>G1))])) ]
2019-10-14 16:49:33,310 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(turn(p2))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(1,0)&! Ch(0,1)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(1,G0)&Ch(0,G1)&! Ch(G1,G1)])
 f2:!(!Ch(0,0))=>(exists(K260:Int,K261:Int)[ (Ch(K260,K261)&turn(p1)&K260>=0&K260<xlen()&K261>=0&K261<ylen())&((( !(Ch(0,0)&(K260>0|K261>0)) ) => ( !(Ch(0,0)&(K260>0|K261>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 0&(Ch(G0,1)&(K260>G0|K261>1))])&!(exists(G0:Int)[G0>=0&(Ch(G0,1)&(K260>G0|K261>1))&! (Ch(1,G0)&(K260>1|K261>G0))])&!((Ch(1,0)&(K260>1|K261>0))&! (Ch(0,1)&(K260>0|K261>1)))&!(exists(G0:Int,G1:Int)[ exists(K262:Int)[ (ylen()=K262)&(G0>=0&G1>=0& K262 > G0&G1 > G0&(Ch(G1,G1)&(K260>G1|K261>G1)))] ])) ])
2019-10-14 16:49:33,352 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 > 0&Ch(G0,1)])&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(1,G0)])&!(Ch(1,0)&! Ch(0,1))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&ylen() > G0&G1 > G0&Ch(G1,G1)])
 f2:forall(K258:Int,K259:Int)[ Ch(K258,K259)&turn(p2)&K258>=0&K258<xlen()&K259>=0&K259<ylen()=>((( !(Ch(0,0)&(K258>0|K259>0)) ) => ( !(Ch(0,0)&(K258>0|K259>0))&(!turn(p1)) ))&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K258>0|K259>G0))&! (Ch(1,0)&(K258>1|K259>0))&! (Ch(0,1)&(K258>0|K259>1))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(1,G0)&(K258>1|K259>G0))&(Ch(0,G1)&(K258>0|K259>G1))&! (Ch(G1,G1)&(K258>G1|K259>G1))])) ]
2019-10-14 16:49:33,396 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 > 0&Ch(G0,1)])&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(1,G0)])&!(Ch(1,0)&! Ch(0,1))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&ylen() > G0&G1 > G0&Ch(G1,G1)])
 f2:forall(K258:Int,K259:Int)[ Ch(K258,K259)&turn(p2)&K258>=0&K258<xlen()&K259>=0&K259<ylen()=>((( !(Ch(0,0)&(K258>0|K259>0)) ) => ( !(Ch(0,0)&(K258>0|K259>0))&(!turn(p1)) ))&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K258>0|K259>G0))&! (Ch(1,0)&(K258>1|K259>0))&! (Ch(0,1)&(K258>0|K259>1))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(1,G0)&(K258>1|K259>G0))&(Ch(0,G1)&(K258>0|K259>G1))&! (Ch(G1,G1)&(K258>G1|K259>G1))])) ]
2019-10-14 16:49:33,431 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 > 0&Ch(G0,1)])&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(1,G0)])&!(Ch(1,0)&! Ch(0,1))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&ylen() > G0&G1 > G0&Ch(G1,G1)])
 f2:forall(K258:Int,K259:Int)[ Ch(K258,K259)&turn(p2)&K258>=0&K258<xlen()&K259>=0&K259<ylen()=>((( !(Ch(0,0)&(K258>0|K259>0)) ) => ( !(Ch(0,0)&(K258>0|K259>0))&(!turn(p1)) ))&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K258>0|K259>G0))&! (Ch(1,0)&(K258>1|K259>0))&! (Ch(0,1)&(K258>0|K259>1))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(1,G0)&(K258>1|K259>G0))&(Ch(0,G1)&(K258>0|K259>G1))&! (Ch(G1,G1)&(K258>G1|K259>G1))])) ]
2019-10-14 16:49:36,829 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(turn(p2))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(1,0)&! Ch(0,1)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(1,G0)&Ch(0,G1)&! Ch(G1,G1)])
 f2:!(!Ch(0,0))=>(exists(K265:Int,K266:Int)[ (Ch(K265,K266)&turn(p1)&K265>=0&K265<xlen()&K266>=0&K266<ylen())&((( !(Ch(0,0)&(K265>0|K266>0)) ) => ( !(Ch(0,0)&(K265>0|K266>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(G0,1)&(K265>G0|K266>1))&! (Ch(1,G0)&(K265>1|K266>G0))])&!((Ch(1,0)&(K265>1|K266>0))&! (Ch(0,1)&(K265>0|K266>1)))&!(exists(G0:Int,G1:Int)[ exists(K267:Int)[ (ylen()=K267)&(G0>=0&G1>=0& K267 > G0&G1 > G0&(Ch(G1,G1)&(K265>G1|K266>G1)))] ])&!(exists(G0:Int)[G0>=0&G0 > 0&(Ch(1,G0)&(K265>1|K266>G0))])) ])
2019-10-14 16:49:36,874 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(1,G0)])&!(Ch(1,0)&! Ch(0,1))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&ylen() > G0&G1 > G0&Ch(G1,G1)])&!(exists(G0:Int)[G0>=0&G0 > 0&Ch(1,G0)])
 f2:forall(K263:Int,K264:Int)[ Ch(K263,K264)&turn(p2)&K263>=0&K263<xlen()&K264>=0&K264<ylen()=>((( !(Ch(0,0)&(K263>0|K264>0)) ) => ( !(Ch(0,0)&(K263>0|K264>0))&(!turn(p1)) ))&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K263>0|K264>G0))&! (Ch(1,0)&(K263>1|K264>0))&! (Ch(0,1)&(K263>0|K264>1))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(1,G0)&(K263>1|K264>G0))&(Ch(0,G1)&(K263>0|K264>G1))&! (Ch(G1,G1)&(K263>G1|K264>G1))])) ]
2019-10-14 16:49:36,918 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(1,G0)])&!(Ch(1,0)&! Ch(0,1))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&ylen() > G0&G1 > G0&Ch(G1,G1)])&!(exists(G0:Int)[G0>=0&G0 > 0&Ch(1,G0)])
 f2:forall(K263:Int,K264:Int)[ Ch(K263,K264)&turn(p2)&K263>=0&K263<xlen()&K264>=0&K264<ylen()=>((( !(Ch(0,0)&(K263>0|K264>0)) ) => ( !(Ch(0,0)&(K263>0|K264>0))&(!turn(p1)) ))&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K263>0|K264>G0))&! (Ch(1,0)&(K263>1|K264>0))&! (Ch(0,1)&(K263>0|K264>1))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(1,G0)&(K263>1|K264>G0))&(Ch(0,G1)&(K263>0|K264>G1))&! (Ch(G1,G1)&(K263>G1|K264>G1))])) ]
2019-10-14 16:49:36,957 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(1,G0)])&!(Ch(1,0)&! Ch(0,1))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&ylen() > G0&G1 > G0&Ch(G1,G1)])&!(exists(G0:Int)[G0>=0&G0 > 0&Ch(1,G0)])
 f2:forall(K263:Int,K264:Int)[ Ch(K263,K264)&turn(p2)&K263>=0&K263<xlen()&K264>=0&K264<ylen()=>((( !(Ch(0,0)&(K263>0|K264>0)) ) => ( !(Ch(0,0)&(K263>0|K264>0))&(!turn(p1)) ))&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K263>0|K264>G0))&! (Ch(1,0)&(K263>1|K264>0))&! (Ch(0,1)&(K263>0|K264>1))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(1,G0)&(K263>1|K264>G0))&(Ch(0,G1)&(K263>0|K264>G1))&! (Ch(G1,G1)&(K263>G1|K264>G1))])) ]
2019-10-14 16:49:42,690 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(turn(p2))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(1,0)&! Ch(0,1)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(1,G0)&Ch(0,G1)&! Ch(G1,G1)])
 f2:!(!Ch(0,0))=>(exists(K270:Int,K271:Int)[ (Ch(K270,K271)&turn(p1)&K270>=0&K270<xlen()&K271>=0&K271<ylen())&((( !(Ch(0,0)&(K270>0|K271>0)) ) => ( !(Ch(0,0)&(K270>0|K271>0))&(!turn(p1)) ))&!((Ch(1,0)&(K270>1|K271>0))&! (Ch(0,1)&(K270>0|K271>1)))&!(exists(G0:Int,G1:Int)[ exists(K272:Int)[ (ylen()=K272)&(G0>=0&G1>=0& K272 > G0&G1 > G0&(Ch(G1,G1)&(K270>G1|K271>G1)))] ])&!(exists(G0:Int)[G0>=0&G0 > 0&(Ch(1,G0)&(K270>1|K271>G0))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! (Ch(1,G0)&(K270>1|K271>G0))&G1 > G0&(Ch(0,G1)&(K270>0|K271>G1))])) ])
2019-10-14 16:49:42,760 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(turn(p2))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(1,0)&! Ch(0,1)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(1,G0)&Ch(0,G1)&! Ch(G1,G1)])
 f2:!(!Ch(0,0))=>(exists(K270:Int,K271:Int)[ (Ch(K270,K271)&turn(p1)&K270>=0&K270<xlen()&K271>=0&K271<ylen())&((( !(Ch(0,0)&(K270>0|K271>0)) ) => ( !(Ch(0,0)&(K270>0|K271>0))&(!turn(p1)) ))&!((Ch(1,0)&(K270>1|K271>0))&! (Ch(0,1)&(K270>0|K271>1)))&!(exists(G0:Int,G1:Int)[ exists(K272:Int)[ (ylen()=K272)&(G0>=0&G1>=0& K272 > G0&G1 > G0&(Ch(G1,G1)&(K270>G1|K271>G1)))] ])&!(exists(G0:Int)[G0>=0&G0 > 0&(Ch(1,G0)&(K270>1|K271>G0))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! (Ch(1,G0)&(K270>1|K271>G0))&G1 > G0&(Ch(0,G1)&(K270>0|K271>G1))])) ])
2019-10-14 16:49:42,823 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(turn(p2))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(1,0)&! Ch(0,1)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(1,G0)&Ch(0,G1)&! Ch(G1,G1)])
 f2:!(!Ch(0,0))=>(exists(K270:Int,K271:Int)[ (Ch(K270,K271)&turn(p1)&K270>=0&K270<xlen()&K271>=0&K271<ylen())&((( !(Ch(0,0)&(K270>0|K271>0)) ) => ( !(Ch(0,0)&(K270>0|K271>0))&(!turn(p1)) ))&!((Ch(1,0)&(K270>1|K271>0))&! (Ch(0,1)&(K270>0|K271>1)))&!(exists(G0:Int,G1:Int)[ exists(K272:Int)[ (ylen()=K272)&(G0>=0&G1>=0& K272 > G0&G1 > G0&(Ch(G1,G1)&(K270>G1|K271>G1)))] ])&!(exists(G0:Int)[G0>=0&G0 > 0&(Ch(1,G0)&(K270>1|K271>G0))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! (Ch(1,G0)&(K270>1|K271>G0))&G1 > G0&(Ch(0,G1)&(K270>0|K271>G1))])) ])
2019-10-14 16:49:42,883 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(Ch(1,0)&! Ch(0,1))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&ylen() > G0&G1 > G0&Ch(G1,G1)])&!(exists(G0:Int)[G0>=0&G0 > 0&Ch(1,G0)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! Ch(1,G0)&G1 > G0&Ch(0,G1)])
 f2:forall(K268:Int,K269:Int)[ Ch(K268,K269)&turn(p2)&K268>=0&K268<xlen()&K269>=0&K269<ylen()=>((( !(Ch(0,0)&(K268>0|K269>0)) ) => ( !(Ch(0,0)&(K268>0|K269>0))&(!turn(p1)) ))&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K268>0|K269>G0))&! (Ch(1,0)&(K268>1|K269>0))&! (Ch(0,1)&(K268>0|K269>1))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(1,G0)&(K268>1|K269>G0))&(Ch(0,G1)&(K268>0|K269>G1))&! (Ch(G1,G1)&(K268>G1|K269>G1))])) ]
2019-10-14 16:49:42,926 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(Ch(1,0)&! Ch(0,1))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&ylen() > G0&G1 > G0&Ch(G1,G1)])&!(exists(G0:Int)[G0>=0&G0 > 0&Ch(1,G0)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! Ch(1,G0)&G1 > G0&Ch(0,G1)])
 f2:forall(K268:Int,K269:Int)[ Ch(K268,K269)&turn(p2)&K268>=0&K268<xlen()&K269>=0&K269<ylen()=>((( !(Ch(0,0)&(K268>0|K269>0)) ) => ( !(Ch(0,0)&(K268>0|K269>0))&(!turn(p1)) ))&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K268>0|K269>G0))&! (Ch(1,0)&(K268>1|K269>0))&! (Ch(0,1)&(K268>0|K269>1))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(1,G0)&(K268>1|K269>G0))&(Ch(0,G1)&(K268>0|K269>G1))&! (Ch(G1,G1)&(K268>G1|K269>G1))])) ]
2019-10-14 16:49:42,963 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(Ch(1,0)&! Ch(0,1))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&ylen() > G0&G1 > G0&Ch(G1,G1)])&!(exists(G0:Int)[G0>=0&G0 > 0&Ch(1,G0)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! Ch(1,G0)&G1 > G0&Ch(0,G1)])
 f2:forall(K268:Int,K269:Int)[ Ch(K268,K269)&turn(p2)&K268>=0&K268<xlen()&K269>=0&K269<ylen()=>((( !(Ch(0,0)&(K268>0|K269>0)) ) => ( !(Ch(0,0)&(K268>0|K269>0))&(!turn(p1)) ))&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K268>0|K269>G0))&! (Ch(1,0)&(K268>1|K269>0))&! (Ch(0,1)&(K268>0|K269>1))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(1,G0)&(K268>1|K269>G0))&(Ch(0,G1)&(K268>0|K269>G1))&! (Ch(G1,G1)&(K268>G1|K269>G1))])) ]
2019-10-14 16:50:07,170 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(turn(p2))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(1,0)&! Ch(0,1)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(1,G0)&Ch(0,G1)&! Ch(G1,G1)])
 f2:!(!Ch(0,0))=>(exists(K275:Int,K276:Int)[ (Ch(K275,K276)&turn(p1)&K275>=0&K275<xlen()&K276>=0&K276<ylen())&((( !(Ch(0,0)&(K275>0|K276>0)) ) => ( !(Ch(0,0)&(K275>0|K276>0))&(!turn(p1)) ))&!(exists(G0:Int,G1:Int)[ exists(K277:Int)[ (ylen()=K277)&(G0>=0&G1>=0& K277 > G0&G1 > G0&(Ch(G1,G1)&(K275>G1|K276>G1)))] ])&!(exists(G0:Int)[G0>=0&G0 > 0&(Ch(1,G0)&(K275>1|K276>G0))])&!(exists(G0:Int,G1:Int)[ exists(K278:Int)[ (ylen()=K278)&(G0>=0&G1>=0&G1 > G0&! (Ch(1,G0)&(K275>1|K276>G0))&(Ch(0,1)&(K275>0|K276>1))& K278 > G1)] ])) ])
2019-10-14 16:50:07,211 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&ylen() > G0&G1 > G0&Ch(G1,G1)])&!(exists(G0:Int)[G0>=0&G0 > 0&Ch(1,G0)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&G1 > G0&! Ch(1,G0)&Ch(0,1)&ylen() > G1])
 f2:forall(K273:Int,K274:Int)[ Ch(K273,K274)&turn(p2)&K273>=0&K273<xlen()&K274>=0&K274<ylen()=>((( !(Ch(0,0)&(K273>0|K274>0)) ) => ( !(Ch(0,0)&(K273>0|K274>0))&(!turn(p1)) ))&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K273>0|K274>G0))&! (Ch(1,0)&(K273>1|K274>0))&! (Ch(0,1)&(K273>0|K274>1))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(1,G0)&(K273>1|K274>G0))&(Ch(0,G1)&(K273>0|K274>G1))&! (Ch(G1,G1)&(K273>G1|K274>G1))])) ]
2019-10-14 16:50:07,256 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&ylen() > G0&G1 > G0&Ch(G1,G1)])&!(exists(G0:Int)[G0>=0&G0 > 0&Ch(1,G0)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&G1 > G0&! Ch(1,G0)&Ch(0,1)&ylen() > G1])
 f2:forall(K273:Int,K274:Int)[ Ch(K273,K274)&turn(p2)&K273>=0&K273<xlen()&K274>=0&K274<ylen()=>((( !(Ch(0,0)&(K273>0|K274>0)) ) => ( !(Ch(0,0)&(K273>0|K274>0))&(!turn(p1)) ))&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K273>0|K274>G0))&! (Ch(1,0)&(K273>1|K274>0))&! (Ch(0,1)&(K273>0|K274>1))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(1,G0)&(K273>1|K274>G0))&(Ch(0,G1)&(K273>0|K274>G1))&! (Ch(G1,G1)&(K273>G1|K274>G1))])) ]
2019-10-14 16:50:35,271 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:!(!Ch(0,0))=>(exists(K281:Int,K282:Int)[ (Ch(K281,K282)&turn(p1)&K281>=0&K281<xlen()&K282>=0&K282<ylen())&(( !(Ch(0,0)&(K281>0|K282>0)) ) => ( !(Ch(0,0)&(K281>0|K282>0))&(!turn(p1)) )) ])
2019-10-14 16:50:35,306 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:forall(K279:Int,K280:Int)[ Ch(K279,K280)&turn(p2)&K279>=0&K279<xlen()&K280>=0&K280<ylen()=>(( !(Ch(0,0)&(K279>0|K280>0)) ) => ( !(Ch(0,0)&(K279>0|K280>0))&(!turn(p1)) )) ]
2019-10-14 16:50:35,454 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&xlen() >= X1])
 f2:!(!Ch(0,0))=>(exists(K286:Int,K287:Int)[ (Ch(K286,K287)&turn(p1)&K286>=0&K286<xlen()&K287>=0&K287<ylen())&(( !(Ch(0,0)&(K286>0|K287>0)) ) => ( !(Ch(0,0)&(K286>0|K287>0))&(!turn(p1)) )) ])
2019-10-14 16:50:35,483 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:forall(K283:Int,K284:Int)[ Ch(K283,K284)&turn(p2)&K283>=0&K283<xlen()&K284>=0&K284<ylen()=>((( !(Ch(0,0)&(K283>0|K284>0)) ) => ( !(Ch(0,0)&(K283>0|K284>0))&(!turn(p1)) ))&!(exists(X1:Int)[ exists(K285:Int)[ (xlen()=K285)&(X1>=0& K285 >= X1)] ])) ]
2019-10-14 16:50:35,835 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&xlen() >= X1])
 f2:!(!Ch(0,0))=>(exists(K291:Int,K292:Int)[ (Ch(K291,K292)&turn(p1)&K291>=0&K291<xlen()&K292>=0&K292<ylen())&((( !(Ch(0,0)&(K291>0|K292>0)) ) => ( !(Ch(0,0)&(K291>0|K292>0))&(!turn(p1)) ))&!(exists(X1:Int)[ exists(K293:Int)[ (xlen()=K293)&(X1>=0& K293 >= X1)] ])) ])
2019-10-14 16:50:35,868 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&xlen() >= X1])
 f2:forall(K288:Int,K289:Int)[ Ch(K288,K289)&turn(p2)&K288>=0&K288<xlen()&K289>=0&K289<ylen()=>((( !(Ch(0,0)&(K288>0|K289>0)) ) => ( !(Ch(0,0)&(K288>0|K289>0))&(!turn(p1)) ))&!(exists(X1:Int)[ exists(K290:Int)[ (xlen()=K290)&(X1>=0& K290 >= X1)] ])) ]
2019-10-14 16:50:35,895 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:forall(K16:Int,K17:Int)[K16>=0&K16<xlen()&K17>=0&K17<ylen()=>Ch(K16,K17)]&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)
 f2:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&xlen() >= X1])
2019-10-14 16:50:36,732 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 >= 1&! Ch(G0,1)])
 f2:!(!Ch(0,0))=>(exists(K296:Int,K297:Int)[ (Ch(K296,K297)&turn(p1)&K296>=0&K296<xlen()&K297>=0&K297<ylen())&((( !(Ch(0,0)&(K296>0|K297>0)) ) => ( !(Ch(0,0)&(K296>0|K297>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 0&! (Ch(G0,1)&(K296>G0|K297>1))])) ])
2019-10-14 16:50:36,779 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 0&! Ch(G0,1)])
 f2:forall(K294:Int,K295:Int)[ Ch(K294,K295)&turn(p2)&K294>=0&K294<xlen()&K295>=0&K295<ylen()=>((( !(Ch(0,0)&(K294>0|K295>0)) ) => ( !(Ch(0,0)&(K294>0|K295>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! G0 >= 1&! (Ch(G0,1)&(K294>G0|K295>1))])) ]
2019-10-14 16:50:37,380 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 >= 1&! Ch(G0,1)])
 f2:!(!Ch(0,0))=>(exists(K300:Int,K301:Int)[ (Ch(K300,K301)&turn(p1)&K300>=0&K300<xlen()&K301>=0&K301<ylen())&((( !(Ch(0,0)&(K300>0|K301>0)) ) => ( !(Ch(0,0)&(K300>0|K301>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K302:Int)[ (xlen()=K302)&(G0>=0& K302 >= G0&(Ch(1,1)&(K300>1|K301>1)))] ])) ])
2019-10-14 16:50:37,418 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() >= G0&Ch(1,1)])
 f2:forall(K298:Int,K299:Int)[ Ch(K298,K299)&turn(p2)&K298>=0&K298<xlen()&K299>=0&K299<ylen()=>((( !(Ch(0,0)&(K298>0|K299>0)) ) => ( !(Ch(0,0)&(K298>0|K299>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! G0 >= 1&! (Ch(G0,1)&(K298>G0|K299>1))])) ]
2019-10-14 16:50:39,100 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 >= 1&! Ch(G0,1)])&!(! Ch(1,1))
 f2:!(!Ch(0,0))=>(exists(K305:Int,K306:Int)[ (Ch(K305,K306)&turn(p1)&K305>=0&K305<xlen()&K306>=0&K306<ylen())&((( !(Ch(0,0)&(K305>0|K306>0)) ) => ( !(Ch(0,0)&(K305>0|K306>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(G0,1)&(K305>G0|K306>1))&! (Ch(1,0)&(K305>1|K306>0))])) ])
2019-10-14 16:50:39,148 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(1,0)])
 f2:forall(K303:Int,K304:Int)[ Ch(K303,K304)&turn(p2)&K303>=0&K303<xlen()&K304>=0&K304<ylen()=>((( !(Ch(0,0)&(K303>0|K304>0)) ) => ( !(Ch(0,0)&(K303>0|K304>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! G0 >= 1&! (Ch(G0,1)&(K303>G0|K304>1))])&!(! (Ch(1,1)&(K303>1|K304>1)))) ]
2019-10-14 16:50:39,193 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(1,0)])
 f2:forall(K303:Int,K304:Int)[ Ch(K303,K304)&turn(p2)&K303>=0&K303<xlen()&K304>=0&K304<ylen()=>((( !(Ch(0,0)&(K303>0|K304>0)) ) => ( !(Ch(0,0)&(K303>0|K304>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! G0 >= 1&! (Ch(G0,1)&(K303>G0|K304>1))])&!(! (Ch(1,1)&(K303>1|K304>1)))) ]
2019-10-14 16:50:41,677 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 >= 1&! Ch(G0,1)])&!(! Ch(1,1))&!(! turn(p1))
 f2:!(!Ch(0,0))=>(exists(K309:Int,K310:Int)[ (Ch(K309,K310)&turn(p1)&K309>=0&K309<xlen()&K310>=0&K310<ylen())&((( !(Ch(0,0)&(K309>0|K310>0)) ) => ( !(Ch(0,0)&(K309>0|K310>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(G0,1)&(K309>G0|K310>1))&! (Ch(1,0)&(K309>1|K310>0))])&!((Ch(1,1)&(K309>1|K310>1)))) ])
2019-10-14 16:50:41,713 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(1,0)])&!(Ch(1,1))
 f2:forall(K307:Int,K308:Int)[ Ch(K307,K308)&turn(p2)&K307>=0&K307<xlen()&K308>=0&K308<ylen()=>((( !(Ch(0,0)&(K307>0|K308>0)) ) => ( !(Ch(0,0)&(K307>0|K308>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! G0 >= 1&! (Ch(G0,1)&(K307>G0|K308>1))])&!(! (Ch(1,1)&(K307>1|K308>1)))&!(! (!turn(p1)))) ]
2019-10-14 16:50:42,261 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(! turn(p1))&!(exists(G0:Int)[G0>=0&xlen() >= G0&! turn(p1)])&!(exists(G0:Int)[G0>=0&xlen() >= G0&! turn(p1)])
 f2:!(!Ch(0,0))=>(exists(K315:Int,K316:Int)[ (Ch(K315,K316)&turn(p1)&K315>=0&K315<xlen()&K316>=0&K316<ylen())&((( !(Ch(0,0)&(K315>0|K316>0)) ) => ( !(Ch(0,0)&(K315>0|K316>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(G0,1)&(K315>G0|K316>1))&! (Ch(1,0)&(K315>1|K316>0))])&!((Ch(1,1)&(K315>1|K316>1)))) ])
2019-10-14 16:50:42,299 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(1,0)])&!(Ch(1,1))
 f2:forall(K311:Int,K312:Int)[ Ch(K311,K312)&turn(p2)&K311>=0&K311<xlen()&K312>=0&K312<ylen()=>((( !(Ch(0,0)&(K311>0|K312>0)) ) => ( !(Ch(0,0)&(K311>0|K312>0))&(!turn(p1)) ))&!(! (!turn(p1)))&!(exists(G0:Int)[ exists(K313:Int)[ (xlen()=K313)&(G0>=0& K313 >= G0&! (!turn(p1)))] ])&!(exists(G0:Int)[ exists(K314:Int)[ (xlen()=K314)&(G0>=0& K314 >= G0&! (!turn(p1)))] ])) ]
2019-10-14 16:51:07,768 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() >= G0&! turn(p1)])&!(exists(G0:Int)[G0>=0&xlen() >= G0&! turn(p1)])&!(! turn(p1))&!(exists(G0:Int)[G0>=0&Ch(G0,0)&! Ch(1,0)&! Ch(G0,1)])
 f2:!(!Ch(0,0))=>(exists(K321:Int,K322:Int)[ (Ch(K321,K322)&turn(p1)&K321>=0&K321<xlen()&K322>=0&K322<ylen())&((( !(Ch(0,0)&(K321>0|K322>0)) ) => ( !(Ch(0,0)&(K321>0|K322>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(G0,1)&(K321>G0|K322>1))&! (Ch(1,0)&(K321>1|K322>0))])&!((Ch(1,1)&(K321>1|K322>1)))) ])
2019-10-14 16:51:07,803 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(1,0)])&!(Ch(1,1))
 f2:forall(K317:Int,K318:Int)[ Ch(K317,K318)&turn(p2)&K317>=0&K317<xlen()&K318>=0&K318<ylen()=>((( !(Ch(0,0)&(K317>0|K318>0)) ) => ( !(Ch(0,0)&(K317>0|K318>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K319:Int)[ (xlen()=K319)&(G0>=0& K319 >= G0&! (!turn(p1)))] ])&!(exists(G0:Int)[ exists(K320:Int)[ (xlen()=K320)&(G0>=0& K320 >= G0&! (!turn(p1)))] ])&!(! (!turn(p1)))&!(exists(G0:Int)[G0>=0&(Ch(G0,0)&(K317>G0|K318>0))&! (Ch(1,0)&(K317>1|K318>0))&! (Ch(G0,1)&(K317>G0|K318>1))])) ]
2019-10-14 16:51:07,849 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(1,0)])&!(Ch(1,1))
 f2:forall(K317:Int,K318:Int)[ Ch(K317,K318)&turn(p2)&K317>=0&K317<xlen()&K318>=0&K318<ylen()=>((( !(Ch(0,0)&(K317>0|K318>0)) ) => ( !(Ch(0,0)&(K317>0|K318>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K319:Int)[ (xlen()=K319)&(G0>=0& K319 >= G0&! (!turn(p1)))] ])&!(exists(G0:Int)[ exists(K320:Int)[ (xlen()=K320)&(G0>=0& K320 >= G0&! (!turn(p1)))] ])&!(! (!turn(p1)))&!(exists(G0:Int)[G0>=0&(Ch(G0,0)&(K317>G0|K318>0))&! (Ch(1,0)&(K317>1|K318>0))&! (Ch(G0,1)&(K317>G0|K318>1))])) ]
2019-10-14 16:51:08,490 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() >= G0&! turn(p1)])&!(exists(G0:Int)[G0>=0&xlen() >= G0&! turn(p1)])&!(! turn(p1))&!(exists(G0:Int)[G0>=0&Ch(G0,0)&! Ch(1,0)&! Ch(G0,1)])
 f2:!(!Ch(0,0))=>(exists(K327:Int,K328:Int)[ (Ch(K327,K328)&turn(p1)&K327>=0&K327<xlen()&K328>=0&K328<ylen())&((( !(Ch(0,0)&(K327>0|K328>0)) ) => ( !(Ch(0,0)&(K327>0|K328>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(G0,1)&(K327>G0|K328>1))&! (Ch(1,0)&(K327>1|K328>0))])&!(exists(G0:Int)[G0>=0&(Ch(G0,0)&(K327>G0|K328>0))&! (Ch(0,G0)&(K327>0|K328>G0))])) ])
2019-10-14 16:51:18,883 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(1,0)])&!(exists(G0:Int)[G0>=0&Ch(G0,0)&! Ch(0,G0)])
 f2:forall(K323:Int,K324:Int)[ Ch(K323,K324)&turn(p2)&K323>=0&K323<xlen()&K324>=0&K324<ylen()=>((( !(Ch(0,0)&(K323>0|K324>0)) ) => ( !(Ch(0,0)&(K323>0|K324>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K325:Int)[ (xlen()=K325)&(G0>=0& K325 >= G0&! (!turn(p1)))] ])&!(exists(G0:Int)[ exists(K326:Int)[ (xlen()=K326)&(G0>=0& K326 >= G0&! (!turn(p1)))] ])&!(! (!turn(p1)))&!(exists(G0:Int)[G0>=0&(Ch(G0,0)&(K323>G0|K324>0))&! (Ch(1,0)&(K323>1|K324>0))&! (Ch(G0,1)&(K323>G0|K324>1))])) ]
2019-10-14 16:51:18,923 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(1,0)])&!(exists(G0:Int)[G0>=0&Ch(G0,0)&! Ch(0,G0)])
 f2:forall(K323:Int,K324:Int)[ Ch(K323,K324)&turn(p2)&K323>=0&K323<xlen()&K324>=0&K324<ylen()=>((( !(Ch(0,0)&(K323>0|K324>0)) ) => ( !(Ch(0,0)&(K323>0|K324>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K325:Int)[ (xlen()=K325)&(G0>=0& K325 >= G0&! (!turn(p1)))] ])&!(exists(G0:Int)[ exists(K326:Int)[ (xlen()=K326)&(G0>=0& K326 >= G0&! (!turn(p1)))] ])&!(! (!turn(p1)))&!(exists(G0:Int)[G0>=0&(Ch(G0,0)&(K323>G0|K324>0))&! (Ch(1,0)&(K323>1|K324>0))&! (Ch(G0,1)&(K323>G0|K324>1))])) ]
2019-10-14 16:51:18,958 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(1,0)])&!(exists(G0:Int)[G0>=0&Ch(G0,0)&! Ch(0,G0)])
 f2:forall(K323:Int,K324:Int)[ Ch(K323,K324)&turn(p2)&K323>=0&K323<xlen()&K324>=0&K324<ylen()=>((( !(Ch(0,0)&(K323>0|K324>0)) ) => ( !(Ch(0,0)&(K323>0|K324>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K325:Int)[ (xlen()=K325)&(G0>=0& K325 >= G0&! (!turn(p1)))] ])&!(exists(G0:Int)[ exists(K326:Int)[ (xlen()=K326)&(G0>=0& K326 >= G0&! (!turn(p1)))] ])&!(! (!turn(p1)))&!(exists(G0:Int)[G0>=0&(Ch(G0,0)&(K323>G0|K324>0))&! (Ch(1,0)&(K323>1|K324>0))&! (Ch(G0,1)&(K323>G0|K324>1))])) ]
2019-10-14 16:51:19,007 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() >= G0&! turn(p1)])&!(exists(G0:Int)[G0>=0&xlen() >= G0&! turn(p1)])&!(! turn(p1))&!(exists(G0:Int)[G0>=0&Ch(G0,0)&! Ch(1,0)&! Ch(G0,1)])
 f2:!(!Ch(0,0))=>(exists(K333:Int,K334:Int)[ (Ch(K333,K334)&turn(p1)&K333>=0&K333<xlen()&K334>=0&K334<ylen())&((( !(Ch(0,0)&(K333>0|K334>0)) ) => ( !(Ch(0,0)&(K333>0|K334>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(G0,1)&(K333>G0|K334>1))&! (Ch(1,0)&(K333>1|K334>0))])&!(exists(G0:Int)[G0>=0&! (Ch(0,G0)&(K333>0|K334>G0))&(Ch(G0,0)&(K333>G0|K334>0))])) ])
2019-10-14 16:51:29,097 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(1,0)])&!(exists(G0:Int)[G0>=0&! Ch(0,G0)&Ch(G0,0)])
 f2:forall(K329:Int,K330:Int)[ Ch(K329,K330)&turn(p2)&K329>=0&K329<xlen()&K330>=0&K330<ylen()=>((( !(Ch(0,0)&(K329>0|K330>0)) ) => ( !(Ch(0,0)&(K329>0|K330>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K331:Int)[ (xlen()=K331)&(G0>=0& K331 >= G0&! (!turn(p1)))] ])&!(exists(G0:Int)[ exists(K332:Int)[ (xlen()=K332)&(G0>=0& K332 >= G0&! (!turn(p1)))] ])&!(! (!turn(p1)))&!(exists(G0:Int)[G0>=0&(Ch(G0,0)&(K329>G0|K330>0))&! (Ch(1,0)&(K329>1|K330>0))&! (Ch(G0,1)&(K329>G0|K330>1))])) ]
2019-10-14 16:51:29,142 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(1,0)])&!(exists(G0:Int)[G0>=0&! Ch(0,G0)&Ch(G0,0)])
 f2:forall(K329:Int,K330:Int)[ Ch(K329,K330)&turn(p2)&K329>=0&K329<xlen()&K330>=0&K330<ylen()=>((( !(Ch(0,0)&(K329>0|K330>0)) ) => ( !(Ch(0,0)&(K329>0|K330>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K331:Int)[ (xlen()=K331)&(G0>=0& K331 >= G0&! (!turn(p1)))] ])&!(exists(G0:Int)[ exists(K332:Int)[ (xlen()=K332)&(G0>=0& K332 >= G0&! (!turn(p1)))] ])&!(! (!turn(p1)))&!(exists(G0:Int)[G0>=0&(Ch(G0,0)&(K329>G0|K330>0))&! (Ch(1,0)&(K329>1|K330>0))&! (Ch(G0,1)&(K329>G0|K330>1))])) ]
2019-10-14 16:51:29,177 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(1,0)])&!(exists(G0:Int)[G0>=0&! Ch(0,G0)&Ch(G0,0)])
 f2:forall(K329:Int,K330:Int)[ Ch(K329,K330)&turn(p2)&K329>=0&K329<xlen()&K330>=0&K330<ylen()=>((( !(Ch(0,0)&(K329>0|K330>0)) ) => ( !(Ch(0,0)&(K329>0|K330>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K331:Int)[ (xlen()=K331)&(G0>=0& K331 >= G0&! (!turn(p1)))] ])&!(exists(G0:Int)[ exists(K332:Int)[ (xlen()=K332)&(G0>=0& K332 >= G0&! (!turn(p1)))] ])&!(! (!turn(p1)))&!(exists(G0:Int)[G0>=0&(Ch(G0,0)&(K329>G0|K330>0))&! (Ch(1,0)&(K329>1|K330>0))&! (Ch(G0,1)&(K329>G0|K330>1))])) ]
2019-10-14 16:51:29,228 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() >= G0&! turn(p1)])&!(exists(G0:Int)[G0>=0&xlen() >= G0&! turn(p1)])&!(! turn(p1))&!(exists(G0:Int)[G0>=0&Ch(G0,0)&! Ch(1,0)&! Ch(G0,1)])
 f2:!(!Ch(0,0))=>(exists(K339:Int,K340:Int)[ (Ch(K339,K340)&turn(p1)&K339>=0&K339<xlen()&K340>=0&K340<ylen())&((( !(Ch(0,0)&(K339>0|K340>0)) ) => ( !(Ch(0,0)&(K339>0|K340>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(G0,1)&(K339>G0|K340>1))&! (Ch(1,0)&(K339>1|K340>0))])&!(exists(G0:Int)[G0>=0&(Ch(G0,0)&(K339>G0|K340>0))&! (Ch(0,G0)&(K339>0|K340>G0))])) ])
2019-10-14 16:51:39,605 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(1,0)])&!(exists(G0:Int)[G0>=0&Ch(G0,0)&! Ch(0,G0)])
 f2:forall(K335:Int,K336:Int)[ Ch(K335,K336)&turn(p2)&K335>=0&K335<xlen()&K336>=0&K336<ylen()=>((( !(Ch(0,0)&(K335>0|K336>0)) ) => ( !(Ch(0,0)&(K335>0|K336>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K337:Int)[ (xlen()=K337)&(G0>=0& K337 >= G0&! (!turn(p1)))] ])&!(exists(G0:Int)[ exists(K338:Int)[ (xlen()=K338)&(G0>=0& K338 >= G0&! (!turn(p1)))] ])&!(! (!turn(p1)))&!(exists(G0:Int)[G0>=0&(Ch(G0,0)&(K335>G0|K336>0))&! (Ch(1,0)&(K335>1|K336>0))&! (Ch(G0,1)&(K335>G0|K336>1))])) ]
2019-10-14 16:51:39,645 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(1,0)])&!(exists(G0:Int)[G0>=0&Ch(G0,0)&! Ch(0,G0)])
 f2:forall(K335:Int,K336:Int)[ Ch(K335,K336)&turn(p2)&K335>=0&K335<xlen()&K336>=0&K336<ylen()=>((( !(Ch(0,0)&(K335>0|K336>0)) ) => ( !(Ch(0,0)&(K335>0|K336>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K337:Int)[ (xlen()=K337)&(G0>=0& K337 >= G0&! (!turn(p1)))] ])&!(exists(G0:Int)[ exists(K338:Int)[ (xlen()=K338)&(G0>=0& K338 >= G0&! (!turn(p1)))] ])&!(! (!turn(p1)))&!(exists(G0:Int)[G0>=0&(Ch(G0,0)&(K335>G0|K336>0))&! (Ch(1,0)&(K335>1|K336>0))&! (Ch(G0,1)&(K335>G0|K336>1))])) ]
2019-10-14 16:51:39,686 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(1,0)])&!(exists(G0:Int)[G0>=0&Ch(G0,0)&! Ch(0,G0)])
 f2:forall(K335:Int,K336:Int)[ Ch(K335,K336)&turn(p2)&K335>=0&K335<xlen()&K336>=0&K336<ylen()=>((( !(Ch(0,0)&(K335>0|K336>0)) ) => ( !(Ch(0,0)&(K335>0|K336>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K337:Int)[ (xlen()=K337)&(G0>=0& K337 >= G0&! (!turn(p1)))] ])&!(exists(G0:Int)[ exists(K338:Int)[ (xlen()=K338)&(G0>=0& K338 >= G0&! (!turn(p1)))] ])&!(! (!turn(p1)))&!(exists(G0:Int)[G0>=0&(Ch(G0,0)&(K335>G0|K336>0))&! (Ch(1,0)&(K335>1|K336>0))&! (Ch(G0,1)&(K335>G0|K336>1))])) ]
2019-10-14 16:51:39,745 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() >= G0&! turn(p1)])&!(exists(G0:Int)[G0>=0&xlen() >= G0&! turn(p1)])&!(! turn(p1))&!(exists(G0:Int)[G0>=0&Ch(G0,0)&! Ch(1,0)&! Ch(G0,1)])
 f2:!(!Ch(0,0))=>(exists(K345:Int,K346:Int)[ (Ch(K345,K346)&turn(p1)&K345>=0&K345<xlen()&K346>=0&K346<ylen())&((( !(Ch(0,0)&(K345>0|K346>0)) ) => ( !(Ch(0,0)&(K345>0|K346>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(G0,1)&(K345>G0|K346>1))&! (Ch(1,0)&(K345>1|K346>0))])&!(exists(G0:Int)[G0>=0&! (Ch(0,G0)&(K345>0|K346>G0))&(Ch(G0,0)&(K345>G0|K346>0))])) ])
2019-10-14 16:51:49,841 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(1,0)])&!(exists(G0:Int)[G0>=0&! Ch(0,G0)&Ch(G0,0)])
 f2:forall(K341:Int,K342:Int)[ Ch(K341,K342)&turn(p2)&K341>=0&K341<xlen()&K342>=0&K342<ylen()=>((( !(Ch(0,0)&(K341>0|K342>0)) ) => ( !(Ch(0,0)&(K341>0|K342>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K343:Int)[ (xlen()=K343)&(G0>=0& K343 >= G0&! (!turn(p1)))] ])&!(exists(G0:Int)[ exists(K344:Int)[ (xlen()=K344)&(G0>=0& K344 >= G0&! (!turn(p1)))] ])&!(! (!turn(p1)))&!(exists(G0:Int)[G0>=0&(Ch(G0,0)&(K341>G0|K342>0))&! (Ch(1,0)&(K341>1|K342>0))&! (Ch(G0,1)&(K341>G0|K342>1))])) ]
2019-10-14 16:51:49,883 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(1,0)])&!(exists(G0:Int)[G0>=0&! Ch(0,G0)&Ch(G0,0)])
 f2:forall(K341:Int,K342:Int)[ Ch(K341,K342)&turn(p2)&K341>=0&K341<xlen()&K342>=0&K342<ylen()=>((( !(Ch(0,0)&(K341>0|K342>0)) ) => ( !(Ch(0,0)&(K341>0|K342>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K343:Int)[ (xlen()=K343)&(G0>=0& K343 >= G0&! (!turn(p1)))] ])&!(exists(G0:Int)[ exists(K344:Int)[ (xlen()=K344)&(G0>=0& K344 >= G0&! (!turn(p1)))] ])&!(! (!turn(p1)))&!(exists(G0:Int)[G0>=0&(Ch(G0,0)&(K341>G0|K342>0))&! (Ch(1,0)&(K341>1|K342>0))&! (Ch(G0,1)&(K341>G0|K342>1))])) ]
2019-10-14 16:51:49,915 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(1,0)])&!(exists(G0:Int)[G0>=0&! Ch(0,G0)&Ch(G0,0)])
 f2:forall(K341:Int,K342:Int)[ Ch(K341,K342)&turn(p2)&K341>=0&K341<xlen()&K342>=0&K342<ylen()=>((( !(Ch(0,0)&(K341>0|K342>0)) ) => ( !(Ch(0,0)&(K341>0|K342>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K343:Int)[ (xlen()=K343)&(G0>=0& K343 >= G0&! (!turn(p1)))] ])&!(exists(G0:Int)[ exists(K344:Int)[ (xlen()=K344)&(G0>=0& K344 >= G0&! (!turn(p1)))] ])&!(! (!turn(p1)))&!(exists(G0:Int)[G0>=0&(Ch(G0,0)&(K341>G0|K342>0))&! (Ch(1,0)&(K341>1|K342>0))&! (Ch(G0,1)&(K341>G0|K342>1))])) ]
2019-10-14 16:51:49,964 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() >= G0&! turn(p1)])&!(exists(G0:Int)[G0>=0&xlen() >= G0&! turn(p1)])&!(! turn(p1))&!(exists(G0:Int)[G0>=0&Ch(G0,0)&! Ch(1,0)&! Ch(G0,1)])
 f2:!(!Ch(0,0))=>(exists(K351:Int,K352:Int)[ (Ch(K351,K352)&turn(p1)&K351>=0&K351<xlen()&K352>=0&K352<ylen())&((( !(Ch(0,0)&(K351>0|K352>0)) ) => ( !(Ch(0,0)&(K351>0|K352>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(G0,1)&(K351>G0|K352>1))&! (Ch(1,0)&(K351>1|K352>0))])&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K351>1|K352>G0))&! (Ch(G0,1)&(K351>G0|K352>1))])) ])
2019-10-14 16:51:50,010 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(1,0)])&!(exists(G0:Int)[G0>=0&Ch(1,G0)&! Ch(G0,1)])
 f2:forall(K347:Int,K348:Int)[ Ch(K347,K348)&turn(p2)&K347>=0&K347<xlen()&K348>=0&K348<ylen()=>((( !(Ch(0,0)&(K347>0|K348>0)) ) => ( !(Ch(0,0)&(K347>0|K348>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K349:Int)[ (xlen()=K349)&(G0>=0& K349 >= G0&! (!turn(p1)))] ])&!(exists(G0:Int)[ exists(K350:Int)[ (xlen()=K350)&(G0>=0& K350 >= G0&! (!turn(p1)))] ])&!(! (!turn(p1)))&!(exists(G0:Int)[G0>=0&(Ch(G0,0)&(K347>G0|K348>0))&! (Ch(1,0)&(K347>1|K348>0))&! (Ch(G0,1)&(K347>G0|K348>1))])) ]
2019-10-14 16:51:50,047 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(1,0)])&!(exists(G0:Int)[G0>=0&Ch(1,G0)&! Ch(G0,1)])
 f2:forall(K347:Int,K348:Int)[ Ch(K347,K348)&turn(p2)&K347>=0&K347<xlen()&K348>=0&K348<ylen()=>((( !(Ch(0,0)&(K347>0|K348>0)) ) => ( !(Ch(0,0)&(K347>0|K348>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K349:Int)[ (xlen()=K349)&(G0>=0& K349 >= G0&! (!turn(p1)))] ])&!(exists(G0:Int)[ exists(K350:Int)[ (xlen()=K350)&(G0>=0& K350 >= G0&! (!turn(p1)))] ])&!(! (!turn(p1)))&!(exists(G0:Int)[G0>=0&(Ch(G0,0)&(K347>G0|K348>0))&! (Ch(1,0)&(K347>1|K348>0))&! (Ch(G0,1)&(K347>G0|K348>1))])) ]
2019-10-14 16:51:50,080 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(1,0)])&!(exists(G0:Int)[G0>=0&Ch(1,G0)&! Ch(G0,1)])
 f2:forall(K347:Int,K348:Int)[ Ch(K347,K348)&turn(p2)&K347>=0&K347<xlen()&K348>=0&K348<ylen()=>((( !(Ch(0,0)&(K347>0|K348>0)) ) => ( !(Ch(0,0)&(K347>0|K348>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K349:Int)[ (xlen()=K349)&(G0>=0& K349 >= G0&! (!turn(p1)))] ])&!(exists(G0:Int)[ exists(K350:Int)[ (xlen()=K350)&(G0>=0& K350 >= G0&! (!turn(p1)))] ])&!(! (!turn(p1)))&!(exists(G0:Int)[G0>=0&(Ch(G0,0)&(K347>G0|K348>0))&! (Ch(1,0)&(K347>1|K348>0))&! (Ch(G0,1)&(K347>G0|K348>1))])) ]
2019-10-14 16:51:59,740 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() >= G0&! turn(p1)])&!(exists(G0:Int)[G0>=0&xlen() >= G0&! turn(p1)])&!(! turn(p1))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! Ch(G0,1)&Ch(G0,0)&Ch(0,G1)&! Ch(1,G1)])
 f2:!(!Ch(0,0))=>(exists(K357:Int,K358:Int)[ (Ch(K357,K358)&turn(p1)&K357>=0&K357<xlen()&K358>=0&K358<ylen())&((( !(Ch(0,0)&(K357>0|K358>0)) ) => ( !(Ch(0,0)&(K357>0|K358>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(G0,1)&(K357>G0|K358>1))&! (Ch(1,0)&(K357>1|K358>0))])&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K357>1|K358>G0))&! (Ch(G0,1)&(K357>G0|K358>1))])&!(exists(G0:Int)[ exists(K359:Int)[ (xlen()=K359)&(G0>=0&G0 > 1& K359 > G0)] ])) ])
2019-10-14 16:51:59,794 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() >= G0&! turn(p1)])&!(exists(G0:Int)[G0>=0&xlen() >= G0&! turn(p1)])&!(! turn(p1))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! Ch(G0,1)&Ch(G0,0)&Ch(0,G1)&! Ch(1,G1)])
 f2:!(!Ch(0,0))=>(exists(K357:Int,K358:Int)[ (Ch(K357,K358)&turn(p1)&K357>=0&K357<xlen()&K358>=0&K358<ylen())&((( !(Ch(0,0)&(K357>0|K358>0)) ) => ( !(Ch(0,0)&(K357>0|K358>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(G0,1)&(K357>G0|K358>1))&! (Ch(1,0)&(K357>1|K358>0))])&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K357>1|K358>G0))&! (Ch(G0,1)&(K357>G0|K358>1))])&!(exists(G0:Int)[ exists(K359:Int)[ (xlen()=K359)&(G0>=0&G0 > 1& K359 > G0)] ])) ])
2019-10-14 16:51:59,834 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() >= G0&! turn(p1)])&!(exists(G0:Int)[G0>=0&xlen() >= G0&! turn(p1)])&!(! turn(p1))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! Ch(G0,1)&Ch(G0,0)&Ch(0,G1)&! Ch(1,G1)])
 f2:!(!Ch(0,0))=>(exists(K357:Int,K358:Int)[ (Ch(K357,K358)&turn(p1)&K357>=0&K357<xlen()&K358>=0&K358<ylen())&((( !(Ch(0,0)&(K357>0|K358>0)) ) => ( !(Ch(0,0)&(K357>0|K358>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(G0,1)&(K357>G0|K358>1))&! (Ch(1,0)&(K357>1|K358>0))])&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K357>1|K358>G0))&! (Ch(G0,1)&(K357>G0|K358>1))])&!(exists(G0:Int)[ exists(K359:Int)[ (xlen()=K359)&(G0>=0&G0 > 1& K359 > G0)] ])) ])
2019-10-14 16:51:59,879 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(1,0)])&!(exists(G0:Int)[G0>=0&Ch(1,G0)&! Ch(G0,1)])&!(exists(G0:Int)[G0>=0&G0 > 1&xlen() > G0])
 f2:forall(K353:Int,K354:Int)[ Ch(K353,K354)&turn(p2)&K353>=0&K353<xlen()&K354>=0&K354<ylen()=>((( !(Ch(0,0)&(K353>0|K354>0)) ) => ( !(Ch(0,0)&(K353>0|K354>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K355:Int)[ (xlen()=K355)&(G0>=0& K355 >= G0&! (!turn(p1)))] ])&!(exists(G0:Int)[ exists(K356:Int)[ (xlen()=K356)&(G0>=0& K356 >= G0&! (!turn(p1)))] ])&!(! (!turn(p1)))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! (Ch(G0,1)&(K353>G0|K354>1))&(Ch(G0,0)&(K353>G0|K354>0))&(Ch(0,G1)&(K353>0|K354>G1))&! (Ch(1,G1)&(K353>1|K354>G1))])) ]
2019-10-14 16:52:03,119 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() >= G0&! turn(p1)])&!(exists(G0:Int)[G0>=0&xlen() >= G0&! turn(p1)])&!(! turn(p1))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! Ch(G0,1)&Ch(G0,0)&Ch(0,G1)&! Ch(1,G1)])
 f2:!(!Ch(0,0))=>(exists(K364:Int,K365:Int)[ (Ch(K364,K365)&turn(p1)&K364>=0&K364<xlen()&K365>=0&K365<ylen())&((( !(Ch(0,0)&(K364>0|K365>0)) ) => ( !(Ch(0,0)&(K364>0|K365>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(G0,1)&(K364>G0|K365>1))&! (Ch(1,0)&(K364>1|K365>0))])&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K364>1|K365>G0))&! (Ch(G0,1)&(K364>G0|K365>1))])&!(exists(G0:Int)[G0>=0&G0 >= 1&(Ch(G0,G0)&(K364>G0|K365>G0))])) ])
2019-10-14 16:52:03,171 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(1,0)])&!(exists(G0:Int)[G0>=0&Ch(1,G0)&! Ch(G0,1)])&!(exists(G0:Int)[G0>=0&G0 >= 1&Ch(G0,G0)])
 f2:forall(K360:Int,K361:Int)[ Ch(K360,K361)&turn(p2)&K360>=0&K360<xlen()&K361>=0&K361<ylen()=>((( !(Ch(0,0)&(K360>0|K361>0)) ) => ( !(Ch(0,0)&(K360>0|K361>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K362:Int)[ (xlen()=K362)&(G0>=0& K362 >= G0&! (!turn(p1)))] ])&!(exists(G0:Int)[ exists(K363:Int)[ (xlen()=K363)&(G0>=0& K363 >= G0&! (!turn(p1)))] ])&!(! (!turn(p1)))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! (Ch(G0,1)&(K360>G0|K361>1))&(Ch(G0,0)&(K360>G0|K361>0))&(Ch(0,G1)&(K360>0|K361>G1))&! (Ch(1,G1)&(K360>1|K361>G1))])) ]
2019-10-14 16:52:03,216 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(1,0)])&!(exists(G0:Int)[G0>=0&Ch(1,G0)&! Ch(G0,1)])&!(exists(G0:Int)[G0>=0&G0 >= 1&Ch(G0,G0)])
 f2:forall(K360:Int,K361:Int)[ Ch(K360,K361)&turn(p2)&K360>=0&K360<xlen()&K361>=0&K361<ylen()=>((( !(Ch(0,0)&(K360>0|K361>0)) ) => ( !(Ch(0,0)&(K360>0|K361>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K362:Int)[ (xlen()=K362)&(G0>=0& K362 >= G0&! (!turn(p1)))] ])&!(exists(G0:Int)[ exists(K363:Int)[ (xlen()=K363)&(G0>=0& K363 >= G0&! (!turn(p1)))] ])&!(! (!turn(p1)))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! (Ch(G0,1)&(K360>G0|K361>1))&(Ch(G0,0)&(K360>G0|K361>0))&(Ch(0,G1)&(K360>0|K361>G1))&! (Ch(1,G1)&(K360>1|K361>G1))])) ]
2019-10-14 16:52:03,254 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(1,0)])&!(exists(G0:Int)[G0>=0&Ch(1,G0)&! Ch(G0,1)])&!(exists(G0:Int)[G0>=0&G0 >= 1&Ch(G0,G0)])
 f2:forall(K360:Int,K361:Int)[ Ch(K360,K361)&turn(p2)&K360>=0&K360<xlen()&K361>=0&K361<ylen()=>((( !(Ch(0,0)&(K360>0|K361>0)) ) => ( !(Ch(0,0)&(K360>0|K361>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K362:Int)[ (xlen()=K362)&(G0>=0& K362 >= G0&! (!turn(p1)))] ])&!(exists(G0:Int)[ exists(K363:Int)[ (xlen()=K363)&(G0>=0& K363 >= G0&! (!turn(p1)))] ])&!(! (!turn(p1)))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! (Ch(G0,1)&(K360>G0|K361>1))&(Ch(G0,0)&(K360>G0|K361>0))&(Ch(0,G1)&(K360>0|K361>G1))&! (Ch(1,G1)&(K360>1|K361>G1))])) ]
2019-10-14 16:52:05,387 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() >= G0&! turn(p1)])&!(exists(G0:Int)[G0>=0&xlen() >= G0&! turn(p1)])&!(! turn(p1))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! Ch(G0,1)&Ch(G0,0)&Ch(0,G1)&! Ch(1,G1)])
 f2:!(!Ch(0,0))=>(exists(K370:Int,K371:Int)[ (Ch(K370,K371)&turn(p1)&K370>=0&K370<xlen()&K371>=0&K371<ylen())&((( !(Ch(0,0)&(K370>0|K371>0)) ) => ( !(Ch(0,0)&(K370>0|K371>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(G0,1)&(K370>G0|K371>1))&! (Ch(1,0)&(K370>1|K371>0))])&!(exists(G0:Int)[G0>=0&G0 >= 1&(Ch(G0,G0)&(K370>G0|K371>G0))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! (Ch(G0,1)&(K370>G0|K371>1))&! G0 >= G1&(Ch(G1,0)&(K370>G1|K371>0))])) ])
2019-10-14 16:52:15,450 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(1,0)])&!(exists(G0:Int)[G0>=0&G0 >= 1&Ch(G0,G0)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! Ch(G0,1)&! G0 >= G1&Ch(G1,0)])
 f2:forall(K366:Int,K367:Int)[ Ch(K366,K367)&turn(p2)&K366>=0&K366<xlen()&K367>=0&K367<ylen()=>((( !(Ch(0,0)&(K366>0|K367>0)) ) => ( !(Ch(0,0)&(K366>0|K367>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K368:Int)[ (xlen()=K368)&(G0>=0& K368 >= G0&! (!turn(p1)))] ])&!(exists(G0:Int)[ exists(K369:Int)[ (xlen()=K369)&(G0>=0& K369 >= G0&! (!turn(p1)))] ])&!(! (!turn(p1)))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! (Ch(G0,1)&(K366>G0|K367>1))&(Ch(G0,0)&(K366>G0|K367>0))&(Ch(0,G1)&(K366>0|K367>G1))&! (Ch(1,G1)&(K366>1|K367>G1))])) ]
2019-10-14 16:52:15,501 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(1,0)])&!(exists(G0:Int)[G0>=0&G0 >= 1&Ch(G0,G0)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! Ch(G0,1)&! G0 >= G1&Ch(G1,0)])
 f2:forall(K366:Int,K367:Int)[ Ch(K366,K367)&turn(p2)&K366>=0&K366<xlen()&K367>=0&K367<ylen()=>((( !(Ch(0,0)&(K366>0|K367>0)) ) => ( !(Ch(0,0)&(K366>0|K367>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K368:Int)[ (xlen()=K368)&(G0>=0& K368 >= G0&! (!turn(p1)))] ])&!(exists(G0:Int)[ exists(K369:Int)[ (xlen()=K369)&(G0>=0& K369 >= G0&! (!turn(p1)))] ])&!(! (!turn(p1)))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! (Ch(G0,1)&(K366>G0|K367>1))&(Ch(G0,0)&(K366>G0|K367>0))&(Ch(0,G1)&(K366>0|K367>G1))&! (Ch(1,G1)&(K366>1|K367>G1))])) ]
2019-10-14 16:52:15,538 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(1,0)])&!(exists(G0:Int)[G0>=0&G0 >= 1&Ch(G0,G0)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! Ch(G0,1)&! G0 >= G1&Ch(G1,0)])
 f2:forall(K366:Int,K367:Int)[ Ch(K366,K367)&turn(p2)&K366>=0&K366<xlen()&K367>=0&K367<ylen()=>((( !(Ch(0,0)&(K366>0|K367>0)) ) => ( !(Ch(0,0)&(K366>0|K367>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K368:Int)[ (xlen()=K368)&(G0>=0& K368 >= G0&! (!turn(p1)))] ])&!(exists(G0:Int)[ exists(K369:Int)[ (xlen()=K369)&(G0>=0& K369 >= G0&! (!turn(p1)))] ])&!(! (!turn(p1)))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! (Ch(G0,1)&(K366>G0|K367>1))&(Ch(G0,0)&(K366>G0|K367>0))&(Ch(0,G1)&(K366>0|K367>G1))&! (Ch(1,G1)&(K366>1|K367>G1))])) ]
2019-10-14 16:52:15,610 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() >= G0&! turn(p1)])&!(exists(G0:Int)[G0>=0&xlen() >= G0&! turn(p1)])&!(! turn(p1))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! Ch(G0,1)&Ch(G0,0)&Ch(0,G1)&! Ch(1,G1)])
 f2:!(!Ch(0,0))=>(exists(K376:Int,K377:Int)[ (Ch(K376,K377)&turn(p1)&K376>=0&K376<xlen()&K377>=0&K377<ylen())&((( !(Ch(0,0)&(K376>0|K377>0)) ) => ( !(Ch(0,0)&(K376>0|K377>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(G0,1)&(K376>G0|K377>1))&! (Ch(1,0)&(K376>1|K377>0))])&!(exists(G0:Int)[G0>=0&G0 >= 1&(Ch(G0,G0)&(K376>G0|K377>G0))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! (Ch(G0,1)&(K376>G0|K377>1))&(Ch(G1,0)&(K376>G1|K377>0))&! G0 >= G1])) ])
2019-10-14 16:52:25,663 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(1,0)])&!(exists(G0:Int)[G0>=0&G0 >= 1&Ch(G0,G0)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! Ch(G0,1)&Ch(G1,0)&! G0 >= G1])
 f2:forall(K372:Int,K373:Int)[ Ch(K372,K373)&turn(p2)&K372>=0&K372<xlen()&K373>=0&K373<ylen()=>((( !(Ch(0,0)&(K372>0|K373>0)) ) => ( !(Ch(0,0)&(K372>0|K373>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K374:Int)[ (xlen()=K374)&(G0>=0& K374 >= G0&! (!turn(p1)))] ])&!(exists(G0:Int)[ exists(K375:Int)[ (xlen()=K375)&(G0>=0& K375 >= G0&! (!turn(p1)))] ])&!(! (!turn(p1)))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! (Ch(G0,1)&(K372>G0|K373>1))&(Ch(G0,0)&(K372>G0|K373>0))&(Ch(0,G1)&(K372>0|K373>G1))&! (Ch(1,G1)&(K372>1|K373>G1))])) ]
2019-10-14 16:52:25,715 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(1,0)])&!(exists(G0:Int)[G0>=0&G0 >= 1&Ch(G0,G0)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! Ch(G0,1)&Ch(G1,0)&! G0 >= G1])
 f2:forall(K372:Int,K373:Int)[ Ch(K372,K373)&turn(p2)&K372>=0&K372<xlen()&K373>=0&K373<ylen()=>((( !(Ch(0,0)&(K372>0|K373>0)) ) => ( !(Ch(0,0)&(K372>0|K373>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K374:Int)[ (xlen()=K374)&(G0>=0& K374 >= G0&! (!turn(p1)))] ])&!(exists(G0:Int)[ exists(K375:Int)[ (xlen()=K375)&(G0>=0& K375 >= G0&! (!turn(p1)))] ])&!(! (!turn(p1)))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! (Ch(G0,1)&(K372>G0|K373>1))&(Ch(G0,0)&(K372>G0|K373>0))&(Ch(0,G1)&(K372>0|K373>G1))&! (Ch(1,G1)&(K372>1|K373>G1))])) ]
2019-10-14 16:52:25,755 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(1,0)])&!(exists(G0:Int)[G0>=0&G0 >= 1&Ch(G0,G0)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! Ch(G0,1)&Ch(G1,0)&! G0 >= G1])
 f2:forall(K372:Int,K373:Int)[ Ch(K372,K373)&turn(p2)&K372>=0&K372<xlen()&K373>=0&K373<ylen()=>((( !(Ch(0,0)&(K372>0|K373>0)) ) => ( !(Ch(0,0)&(K372>0|K373>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K374:Int)[ (xlen()=K374)&(G0>=0& K374 >= G0&! (!turn(p1)))] ])&!(exists(G0:Int)[ exists(K375:Int)[ (xlen()=K375)&(G0>=0& K375 >= G0&! (!turn(p1)))] ])&!(! (!turn(p1)))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! (Ch(G0,1)&(K372>G0|K373>1))&(Ch(G0,0)&(K372>G0|K373>0))&(Ch(0,G1)&(K372>0|K373>G1))&! (Ch(1,G1)&(K372>1|K373>G1))])) ]
2019-10-14 16:52:25,828 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() >= G0&! turn(p1)])&!(exists(G0:Int)[G0>=0&xlen() >= G0&! turn(p1)])&!(! turn(p1))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! Ch(G0,1)&Ch(G0,0)&Ch(0,G1)&! Ch(1,G1)])
 f2:!(!Ch(0,0))=>(exists(K382:Int,K383:Int)[ (Ch(K382,K383)&turn(p1)&K382>=0&K382<xlen()&K383>=0&K383<ylen())&((( !(Ch(0,0)&(K382>0|K383>0)) ) => ( !(Ch(0,0)&(K382>0|K383>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(G0,1)&(K382>G0|K383>1))&! (Ch(1,0)&(K382>1|K383>0))])&!(exists(G0:Int)[G0>=0&G0 >= 1&(Ch(G0,G0)&(K382>G0|K383>G0))])&!(exists(G0:Int)[G0>=0&(Ch(G0,0)&(K382>G0|K383>0))&! (Ch(0,G0)&(K382>0|K383>G0))])) ])
2019-10-14 16:52:35,885 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(1,0)])&!(exists(G0:Int)[G0>=0&G0 >= 1&Ch(G0,G0)])&!(exists(G0:Int)[G0>=0&Ch(G0,0)&! Ch(0,G0)])
 f2:forall(K378:Int,K379:Int)[ Ch(K378,K379)&turn(p2)&K378>=0&K378<xlen()&K379>=0&K379<ylen()=>((( !(Ch(0,0)&(K378>0|K379>0)) ) => ( !(Ch(0,0)&(K378>0|K379>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K380:Int)[ (xlen()=K380)&(G0>=0& K380 >= G0&! (!turn(p1)))] ])&!(exists(G0:Int)[ exists(K381:Int)[ (xlen()=K381)&(G0>=0& K381 >= G0&! (!turn(p1)))] ])&!(! (!turn(p1)))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! (Ch(G0,1)&(K378>G0|K379>1))&(Ch(G0,0)&(K378>G0|K379>0))&(Ch(0,G1)&(K378>0|K379>G1))&! (Ch(1,G1)&(K378>1|K379>G1))])) ]
2019-10-14 16:52:35,929 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(1,0)])&!(exists(G0:Int)[G0>=0&G0 >= 1&Ch(G0,G0)])&!(exists(G0:Int)[G0>=0&Ch(G0,0)&! Ch(0,G0)])
 f2:forall(K378:Int,K379:Int)[ Ch(K378,K379)&turn(p2)&K378>=0&K378<xlen()&K379>=0&K379<ylen()=>((( !(Ch(0,0)&(K378>0|K379>0)) ) => ( !(Ch(0,0)&(K378>0|K379>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K380:Int)[ (xlen()=K380)&(G0>=0& K380 >= G0&! (!turn(p1)))] ])&!(exists(G0:Int)[ exists(K381:Int)[ (xlen()=K381)&(G0>=0& K381 >= G0&! (!turn(p1)))] ])&!(! (!turn(p1)))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! (Ch(G0,1)&(K378>G0|K379>1))&(Ch(G0,0)&(K378>G0|K379>0))&(Ch(0,G1)&(K378>0|K379>G1))&! (Ch(1,G1)&(K378>1|K379>G1))])) ]
2019-10-14 16:52:35,966 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(1,0)])&!(exists(G0:Int)[G0>=0&G0 >= 1&Ch(G0,G0)])&!(exists(G0:Int)[G0>=0&Ch(G0,0)&! Ch(0,G0)])
 f2:forall(K378:Int,K379:Int)[ Ch(K378,K379)&turn(p2)&K378>=0&K378<xlen()&K379>=0&K379<ylen()=>((( !(Ch(0,0)&(K378>0|K379>0)) ) => ( !(Ch(0,0)&(K378>0|K379>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K380:Int)[ (xlen()=K380)&(G0>=0& K380 >= G0&! (!turn(p1)))] ])&!(exists(G0:Int)[ exists(K381:Int)[ (xlen()=K381)&(G0>=0& K381 >= G0&! (!turn(p1)))] ])&!(! (!turn(p1)))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! (Ch(G0,1)&(K378>G0|K379>1))&(Ch(G0,0)&(K378>G0|K379>0))&(Ch(0,G1)&(K378>0|K379>G1))&! (Ch(1,G1)&(K378>1|K379>G1))])) ]
2019-10-14 16:52:36,034 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() >= G0&! turn(p1)])&!(exists(G0:Int)[G0>=0&xlen() >= G0&! turn(p1)])&!(! turn(p1))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! Ch(G0,1)&Ch(G0,0)&Ch(0,G1)&! Ch(1,G1)])
 f2:!(!Ch(0,0))=>(exists(K388:Int,K389:Int)[ (Ch(K388,K389)&turn(p1)&K388>=0&K388<xlen()&K389>=0&K389<ylen())&((( !(Ch(0,0)&(K388>0|K389>0)) ) => ( !(Ch(0,0)&(K388>0|K389>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(G0,1)&(K388>G0|K389>1))&! (Ch(1,0)&(K388>1|K389>0))])&!(exists(G0:Int)[G0>=0&G0 >= 1&(Ch(G0,G0)&(K388>G0|K389>G0))])&!(exists(G0:Int)[G0>=0&! (Ch(0,G0)&(K388>0|K389>G0))&(Ch(G0,0)&(K388>G0|K389>0))])) ])
2019-10-14 16:52:46,094 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(1,0)])&!(exists(G0:Int)[G0>=0&G0 >= 1&Ch(G0,G0)])&!(exists(G0:Int)[G0>=0&! Ch(0,G0)&Ch(G0,0)])
 f2:forall(K384:Int,K385:Int)[ Ch(K384,K385)&turn(p2)&K384>=0&K384<xlen()&K385>=0&K385<ylen()=>((( !(Ch(0,0)&(K384>0|K385>0)) ) => ( !(Ch(0,0)&(K384>0|K385>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K386:Int)[ (xlen()=K386)&(G0>=0& K386 >= G0&! (!turn(p1)))] ])&!(exists(G0:Int)[ exists(K387:Int)[ (xlen()=K387)&(G0>=0& K387 >= G0&! (!turn(p1)))] ])&!(! (!turn(p1)))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! (Ch(G0,1)&(K384>G0|K385>1))&(Ch(G0,0)&(K384>G0|K385>0))&(Ch(0,G1)&(K384>0|K385>G1))&! (Ch(1,G1)&(K384>1|K385>G1))])) ]
2019-10-14 16:52:46,146 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(1,0)])&!(exists(G0:Int)[G0>=0&G0 >= 1&Ch(G0,G0)])&!(exists(G0:Int)[G0>=0&! Ch(0,G0)&Ch(G0,0)])
 f2:forall(K384:Int,K385:Int)[ Ch(K384,K385)&turn(p2)&K384>=0&K384<xlen()&K385>=0&K385<ylen()=>((( !(Ch(0,0)&(K384>0|K385>0)) ) => ( !(Ch(0,0)&(K384>0|K385>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K386:Int)[ (xlen()=K386)&(G0>=0& K386 >= G0&! (!turn(p1)))] ])&!(exists(G0:Int)[ exists(K387:Int)[ (xlen()=K387)&(G0>=0& K387 >= G0&! (!turn(p1)))] ])&!(! (!turn(p1)))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! (Ch(G0,1)&(K384>G0|K385>1))&(Ch(G0,0)&(K384>G0|K385>0))&(Ch(0,G1)&(K384>0|K385>G1))&! (Ch(1,G1)&(K384>1|K385>G1))])) ]
2019-10-14 16:52:46,183 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(1,0)])&!(exists(G0:Int)[G0>=0&G0 >= 1&Ch(G0,G0)])&!(exists(G0:Int)[G0>=0&! Ch(0,G0)&Ch(G0,0)])
 f2:forall(K384:Int,K385:Int)[ Ch(K384,K385)&turn(p2)&K384>=0&K384<xlen()&K385>=0&K385<ylen()=>((( !(Ch(0,0)&(K384>0|K385>0)) ) => ( !(Ch(0,0)&(K384>0|K385>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K386:Int)[ (xlen()=K386)&(G0>=0& K386 >= G0&! (!turn(p1)))] ])&!(exists(G0:Int)[ exists(K387:Int)[ (xlen()=K387)&(G0>=0& K387 >= G0&! (!turn(p1)))] ])&!(! (!turn(p1)))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! (Ch(G0,1)&(K384>G0|K385>1))&(Ch(G0,0)&(K384>G0|K385>0))&(Ch(0,G1)&(K384>0|K385>G1))&! (Ch(1,G1)&(K384>1|K385>G1))])) ]
2019-10-14 16:52:46,320 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() >= G0&! turn(p1)])&!(exists(G0:Int)[G0>=0&xlen() >= G0&! turn(p1)])&!(! turn(p1))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! Ch(G0,1)&Ch(G0,0)&Ch(0,G1)&! Ch(1,G1)])
 f2:!(!Ch(0,0))=>(exists(K394:Int,K395:Int)[ (Ch(K394,K395)&turn(p1)&K394>=0&K394<xlen()&K395>=0&K395<ylen())&((( !(Ch(0,0)&(K394>0|K395>0)) ) => ( !(Ch(0,0)&(K394>0|K395>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(G0,1)&(K394>G0|K395>1))&! (Ch(1,0)&(K394>1|K395>0))])&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K394>1|K395>G0))&! (Ch(G0,1)&(K394>G0|K395>1))])&!(exists(G0:Int)[G0>=0&G0 >= 1&(Ch(G0,G0)&(K394>G0|K395>G0))])&!(exists(G0:Int)[G0>=0&G0 >= 1&(Ch(G0,1)&(K394>G0|K395>1))])) ])
2019-10-14 16:52:46,362 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(1,0)])&!(exists(G0:Int)[G0>=0&Ch(1,G0)&! Ch(G0,1)])&!(exists(G0:Int)[G0>=0&G0 >= 1&Ch(G0,G0)])&!(exists(G0:Int)[G0>=0&G0 >= 1&Ch(G0,1)])
 f2:forall(K390:Int,K391:Int)[ Ch(K390,K391)&turn(p2)&K390>=0&K390<xlen()&K391>=0&K391<ylen()=>((( !(Ch(0,0)&(K390>0|K391>0)) ) => ( !(Ch(0,0)&(K390>0|K391>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K392:Int)[ (xlen()=K392)&(G0>=0& K392 >= G0&! (!turn(p1)))] ])&!(exists(G0:Int)[ exists(K393:Int)[ (xlen()=K393)&(G0>=0& K393 >= G0&! (!turn(p1)))] ])&!(! (!turn(p1)))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! (Ch(G0,1)&(K390>G0|K391>1))&(Ch(G0,0)&(K390>G0|K391>0))&(Ch(0,G1)&(K390>0|K391>G1))&! (Ch(1,G1)&(K390>1|K391>G1))])) ]
2019-10-14 16:52:46,403 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(1,0)])&!(exists(G0:Int)[G0>=0&Ch(1,G0)&! Ch(G0,1)])&!(exists(G0:Int)[G0>=0&G0 >= 1&Ch(G0,G0)])&!(exists(G0:Int)[G0>=0&G0 >= 1&Ch(G0,1)])
 f2:forall(K390:Int,K391:Int)[ Ch(K390,K391)&turn(p2)&K390>=0&K390<xlen()&K391>=0&K391<ylen()=>((( !(Ch(0,0)&(K390>0|K391>0)) ) => ( !(Ch(0,0)&(K390>0|K391>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K392:Int)[ (xlen()=K392)&(G0>=0& K392 >= G0&! (!turn(p1)))] ])&!(exists(G0:Int)[ exists(K393:Int)[ (xlen()=K393)&(G0>=0& K393 >= G0&! (!turn(p1)))] ])&!(! (!turn(p1)))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! (Ch(G0,1)&(K390>G0|K391>1))&(Ch(G0,0)&(K390>G0|K391>0))&(Ch(0,G1)&(K390>0|K391>G1))&! (Ch(1,G1)&(K390>1|K391>G1))])) ]
2019-10-14 16:52:46,438 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(1,0)])&!(exists(G0:Int)[G0>=0&Ch(1,G0)&! Ch(G0,1)])&!(exists(G0:Int)[G0>=0&G0 >= 1&Ch(G0,G0)])&!(exists(G0:Int)[G0>=0&G0 >= 1&Ch(G0,1)])
 f2:forall(K390:Int,K391:Int)[ Ch(K390,K391)&turn(p2)&K390>=0&K390<xlen()&K391>=0&K391<ylen()=>((( !(Ch(0,0)&(K390>0|K391>0)) ) => ( !(Ch(0,0)&(K390>0|K391>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K392:Int)[ (xlen()=K392)&(G0>=0& K392 >= G0&! (!turn(p1)))] ])&!(exists(G0:Int)[ exists(K393:Int)[ (xlen()=K393)&(G0>=0& K393 >= G0&! (!turn(p1)))] ])&!(! (!turn(p1)))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! (Ch(G0,1)&(K390>G0|K391>1))&(Ch(G0,0)&(K390>G0|K391>0))&(Ch(0,G1)&(K390>0|K391>G1))&! (Ch(1,G1)&(K390>1|K391>G1))])) ]
2019-10-14 16:52:51,514 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() >= G0&! turn(p1)])&!(exists(G0:Int)[G0>=0&xlen() >= G0&! turn(p1)])&!(! turn(p1))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! Ch(G0,1)&Ch(G0,0)&Ch(0,G1)&! Ch(1,G1)])
 f2:!(!Ch(0,0))=>(exists(K400:Int,K401:Int)[ (Ch(K400,K401)&turn(p1)&K400>=0&K400<xlen()&K401>=0&K401<ylen())&((( !(Ch(0,0)&(K400>0|K401>0)) ) => ( !(Ch(0,0)&(K400>0|K401>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(G0,1)&(K400>G0|K401>1))&! (Ch(1,0)&(K400>1|K401>0))])&!(exists(G0:Int)[G0>=0&G0 >= 1&(Ch(G0,G0)&(K400>G0|K401>G0))])&!(exists(G0:Int)[G0>=0&G0 >= 1&(Ch(G0,1)&(K400>G0|K401>1))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! (Ch(G0,1)&(K400>G0|K401>1))&! G0 >= G1&(Ch(G1,0)&(K400>G1|K401>0))])) ])
2019-10-14 16:53:01,573 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(1,0)])&!(exists(G0:Int)[G0>=0&G0 >= 1&Ch(G0,G0)])&!(exists(G0:Int)[G0>=0&G0 >= 1&Ch(G0,1)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! Ch(G0,1)&! G0 >= G1&Ch(G1,0)])
 f2:forall(K396:Int,K397:Int)[ Ch(K396,K397)&turn(p2)&K396>=0&K396<xlen()&K397>=0&K397<ylen()=>((( !(Ch(0,0)&(K396>0|K397>0)) ) => ( !(Ch(0,0)&(K396>0|K397>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K398:Int)[ (xlen()=K398)&(G0>=0& K398 >= G0&! (!turn(p1)))] ])&!(exists(G0:Int)[ exists(K399:Int)[ (xlen()=K399)&(G0>=0& K399 >= G0&! (!turn(p1)))] ])&!(! (!turn(p1)))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! (Ch(G0,1)&(K396>G0|K397>1))&(Ch(G0,0)&(K396>G0|K397>0))&(Ch(0,G1)&(K396>0|K397>G1))&! (Ch(1,G1)&(K396>1|K397>G1))])) ]
2019-10-14 16:53:01,618 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(1,0)])&!(exists(G0:Int)[G0>=0&G0 >= 1&Ch(G0,G0)])&!(exists(G0:Int)[G0>=0&G0 >= 1&Ch(G0,1)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! Ch(G0,1)&! G0 >= G1&Ch(G1,0)])
 f2:forall(K396:Int,K397:Int)[ Ch(K396,K397)&turn(p2)&K396>=0&K396<xlen()&K397>=0&K397<ylen()=>((( !(Ch(0,0)&(K396>0|K397>0)) ) => ( !(Ch(0,0)&(K396>0|K397>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K398:Int)[ (xlen()=K398)&(G0>=0& K398 >= G0&! (!turn(p1)))] ])&!(exists(G0:Int)[ exists(K399:Int)[ (xlen()=K399)&(G0>=0& K399 >= G0&! (!turn(p1)))] ])&!(! (!turn(p1)))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! (Ch(G0,1)&(K396>G0|K397>1))&(Ch(G0,0)&(K396>G0|K397>0))&(Ch(0,G1)&(K396>0|K397>G1))&! (Ch(1,G1)&(K396>1|K397>G1))])) ]
2019-10-14 16:53:01,658 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(1,0)])&!(exists(G0:Int)[G0>=0&G0 >= 1&Ch(G0,G0)])&!(exists(G0:Int)[G0>=0&G0 >= 1&Ch(G0,1)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! Ch(G0,1)&! G0 >= G1&Ch(G1,0)])
 f2:forall(K396:Int,K397:Int)[ Ch(K396,K397)&turn(p2)&K396>=0&K396<xlen()&K397>=0&K397<ylen()=>((( !(Ch(0,0)&(K396>0|K397>0)) ) => ( !(Ch(0,0)&(K396>0|K397>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K398:Int)[ (xlen()=K398)&(G0>=0& K398 >= G0&! (!turn(p1)))] ])&!(exists(G0:Int)[ exists(K399:Int)[ (xlen()=K399)&(G0>=0& K399 >= G0&! (!turn(p1)))] ])&!(! (!turn(p1)))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! (Ch(G0,1)&(K396>G0|K397>1))&(Ch(G0,0)&(K396>G0|K397>0))&(Ch(0,G1)&(K396>0|K397>G1))&! (Ch(1,G1)&(K396>1|K397>G1))])) ]
2019-10-14 16:53:01,751 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() >= G0&! turn(p1)])&!(exists(G0:Int)[G0>=0&xlen() >= G0&! turn(p1)])&!(! turn(p1))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! Ch(G0,1)&Ch(G0,0)&Ch(0,G1)&! Ch(1,G1)])
 f2:!(!Ch(0,0))=>(exists(K406:Int,K407:Int)[ (Ch(K406,K407)&turn(p1)&K406>=0&K406<xlen()&K407>=0&K407<ylen())&((( !(Ch(0,0)&(K406>0|K407>0)) ) => ( !(Ch(0,0)&(K406>0|K407>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(G0,1)&(K406>G0|K407>1))&! (Ch(1,0)&(K406>1|K407>0))])&!(exists(G0:Int)[G0>=0&G0 >= 1&(Ch(G0,G0)&(K406>G0|K407>G0))])&!(exists(G0:Int)[G0>=0&G0 >= 1&(Ch(G0,1)&(K406>G0|K407>1))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! (Ch(G0,1)&(K406>G0|K407>1))&(Ch(G1,0)&(K406>G1|K407>0))&! G0 >= G1])) ])
2019-10-14 16:53:11,817 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(1,0)])&!(exists(G0:Int)[G0>=0&G0 >= 1&Ch(G0,G0)])&!(exists(G0:Int)[G0>=0&G0 >= 1&Ch(G0,1)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! Ch(G0,1)&Ch(G1,0)&! G0 >= G1])
 f2:forall(K402:Int,K403:Int)[ Ch(K402,K403)&turn(p2)&K402>=0&K402<xlen()&K403>=0&K403<ylen()=>((( !(Ch(0,0)&(K402>0|K403>0)) ) => ( !(Ch(0,0)&(K402>0|K403>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K404:Int)[ (xlen()=K404)&(G0>=0& K404 >= G0&! (!turn(p1)))] ])&!(exists(G0:Int)[ exists(K405:Int)[ (xlen()=K405)&(G0>=0& K405 >= G0&! (!turn(p1)))] ])&!(! (!turn(p1)))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! (Ch(G0,1)&(K402>G0|K403>1))&(Ch(G0,0)&(K402>G0|K403>0))&(Ch(0,G1)&(K402>0|K403>G1))&! (Ch(1,G1)&(K402>1|K403>G1))])) ]
2019-10-14 16:53:11,864 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(1,0)])&!(exists(G0:Int)[G0>=0&G0 >= 1&Ch(G0,G0)])&!(exists(G0:Int)[G0>=0&G0 >= 1&Ch(G0,1)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! Ch(G0,1)&Ch(G1,0)&! G0 >= G1])
 f2:forall(K402:Int,K403:Int)[ Ch(K402,K403)&turn(p2)&K402>=0&K402<xlen()&K403>=0&K403<ylen()=>((( !(Ch(0,0)&(K402>0|K403>0)) ) => ( !(Ch(0,0)&(K402>0|K403>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K404:Int)[ (xlen()=K404)&(G0>=0& K404 >= G0&! (!turn(p1)))] ])&!(exists(G0:Int)[ exists(K405:Int)[ (xlen()=K405)&(G0>=0& K405 >= G0&! (!turn(p1)))] ])&!(! (!turn(p1)))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! (Ch(G0,1)&(K402>G0|K403>1))&(Ch(G0,0)&(K402>G0|K403>0))&(Ch(0,G1)&(K402>0|K403>G1))&! (Ch(1,G1)&(K402>1|K403>G1))])) ]
2019-10-14 16:53:11,899 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(1,0)])&!(exists(G0:Int)[G0>=0&G0 >= 1&Ch(G0,G0)])&!(exists(G0:Int)[G0>=0&G0 >= 1&Ch(G0,1)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! Ch(G0,1)&Ch(G1,0)&! G0 >= G1])
 f2:forall(K402:Int,K403:Int)[ Ch(K402,K403)&turn(p2)&K402>=0&K402<xlen()&K403>=0&K403<ylen()=>((( !(Ch(0,0)&(K402>0|K403>0)) ) => ( !(Ch(0,0)&(K402>0|K403>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K404:Int)[ (xlen()=K404)&(G0>=0& K404 >= G0&! (!turn(p1)))] ])&!(exists(G0:Int)[ exists(K405:Int)[ (xlen()=K405)&(G0>=0& K405 >= G0&! (!turn(p1)))] ])&!(! (!turn(p1)))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! (Ch(G0,1)&(K402>G0|K403>1))&(Ch(G0,0)&(K402>G0|K403>0))&(Ch(0,G1)&(K402>0|K403>G1))&! (Ch(1,G1)&(K402>1|K403>G1))])) ]
2019-10-14 16:53:11,982 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() >= G0&! turn(p1)])&!(exists(G0:Int)[G0>=0&xlen() >= G0&! turn(p1)])&!(! turn(p1))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! Ch(G0,1)&Ch(G0,0)&Ch(0,G1)&! Ch(1,G1)])
 f2:!(!Ch(0,0))=>(exists(K412:Int,K413:Int)[ (Ch(K412,K413)&turn(p1)&K412>=0&K412<xlen()&K413>=0&K413<ylen())&((( !(Ch(0,0)&(K412>0|K413>0)) ) => ( !(Ch(0,0)&(K412>0|K413>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(G0,1)&(K412>G0|K413>1))&! (Ch(1,0)&(K412>1|K413>0))])&!(exists(G0:Int)[G0>=0&G0 >= 1&(Ch(G0,G0)&(K412>G0|K413>G0))])&!(exists(G0:Int)[G0>=0&(Ch(G0,0)&(K412>G0|K413>0))&! (Ch(0,G0)&(K412>0|K413>G0))])) ])
2019-10-14 16:53:22,037 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(1,0)])&!(exists(G0:Int)[G0>=0&G0 >= 1&Ch(G0,G0)])&!(exists(G0:Int)[G0>=0&Ch(G0,0)&! Ch(0,G0)])
 f2:forall(K408:Int,K409:Int)[ Ch(K408,K409)&turn(p2)&K408>=0&K408<xlen()&K409>=0&K409<ylen()=>((( !(Ch(0,0)&(K408>0|K409>0)) ) => ( !(Ch(0,0)&(K408>0|K409>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K410:Int)[ (xlen()=K410)&(G0>=0& K410 >= G0&! (!turn(p1)))] ])&!(exists(G0:Int)[ exists(K411:Int)[ (xlen()=K411)&(G0>=0& K411 >= G0&! (!turn(p1)))] ])&!(! (!turn(p1)))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! (Ch(G0,1)&(K408>G0|K409>1))&(Ch(G0,0)&(K408>G0|K409>0))&(Ch(0,G1)&(K408>0|K409>G1))&! (Ch(1,G1)&(K408>1|K409>G1))])) ]
2019-10-14 16:53:22,082 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(1,0)])&!(exists(G0:Int)[G0>=0&G0 >= 1&Ch(G0,G0)])&!(exists(G0:Int)[G0>=0&Ch(G0,0)&! Ch(0,G0)])
 f2:forall(K408:Int,K409:Int)[ Ch(K408,K409)&turn(p2)&K408>=0&K408<xlen()&K409>=0&K409<ylen()=>((( !(Ch(0,0)&(K408>0|K409>0)) ) => ( !(Ch(0,0)&(K408>0|K409>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K410:Int)[ (xlen()=K410)&(G0>=0& K410 >= G0&! (!turn(p1)))] ])&!(exists(G0:Int)[ exists(K411:Int)[ (xlen()=K411)&(G0>=0& K411 >= G0&! (!turn(p1)))] ])&!(! (!turn(p1)))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! (Ch(G0,1)&(K408>G0|K409>1))&(Ch(G0,0)&(K408>G0|K409>0))&(Ch(0,G1)&(K408>0|K409>G1))&! (Ch(1,G1)&(K408>1|K409>G1))])) ]
2019-10-14 16:53:22,119 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(1,0)])&!(exists(G0:Int)[G0>=0&G0 >= 1&Ch(G0,G0)])&!(exists(G0:Int)[G0>=0&Ch(G0,0)&! Ch(0,G0)])
 f2:forall(K408:Int,K409:Int)[ Ch(K408,K409)&turn(p2)&K408>=0&K408<xlen()&K409>=0&K409<ylen()=>((( !(Ch(0,0)&(K408>0|K409>0)) ) => ( !(Ch(0,0)&(K408>0|K409>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K410:Int)[ (xlen()=K410)&(G0>=0& K410 >= G0&! (!turn(p1)))] ])&!(exists(G0:Int)[ exists(K411:Int)[ (xlen()=K411)&(G0>=0& K411 >= G0&! (!turn(p1)))] ])&!(! (!turn(p1)))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! (Ch(G0,1)&(K408>G0|K409>1))&(Ch(G0,0)&(K408>G0|K409>0))&(Ch(0,G1)&(K408>0|K409>G1))&! (Ch(1,G1)&(K408>1|K409>G1))])) ]
2019-10-14 16:53:22,205 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() >= G0&! turn(p1)])&!(exists(G0:Int)[G0>=0&xlen() >= G0&! turn(p1)])&!(! turn(p1))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! Ch(G0,1)&Ch(G0,0)&Ch(0,G1)&! Ch(1,G1)])
 f2:!(!Ch(0,0))=>(exists(K418:Int,K419:Int)[ (Ch(K418,K419)&turn(p1)&K418>=0&K418<xlen()&K419>=0&K419<ylen())&((( !(Ch(0,0)&(K418>0|K419>0)) ) => ( !(Ch(0,0)&(K418>0|K419>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(G0,1)&(K418>G0|K419>1))&! (Ch(1,0)&(K418>1|K419>0))])&!(exists(G0:Int)[G0>=0&G0 >= 1&(Ch(G0,G0)&(K418>G0|K419>G0))])&!(exists(G0:Int)[G0>=0&! (Ch(0,G0)&(K418>0|K419>G0))&(Ch(G0,0)&(K418>G0|K419>0))])) ])
2019-10-14 16:53:32,266 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(1,0)])&!(exists(G0:Int)[G0>=0&G0 >= 1&Ch(G0,G0)])&!(exists(G0:Int)[G0>=0&! Ch(0,G0)&Ch(G0,0)])
 f2:forall(K414:Int,K415:Int)[ Ch(K414,K415)&turn(p2)&K414>=0&K414<xlen()&K415>=0&K415<ylen()=>((( !(Ch(0,0)&(K414>0|K415>0)) ) => ( !(Ch(0,0)&(K414>0|K415>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K416:Int)[ (xlen()=K416)&(G0>=0& K416 >= G0&! (!turn(p1)))] ])&!(exists(G0:Int)[ exists(K417:Int)[ (xlen()=K417)&(G0>=0& K417 >= G0&! (!turn(p1)))] ])&!(! (!turn(p1)))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! (Ch(G0,1)&(K414>G0|K415>1))&(Ch(G0,0)&(K414>G0|K415>0))&(Ch(0,G1)&(K414>0|K415>G1))&! (Ch(1,G1)&(K414>1|K415>G1))])) ]
2019-10-14 16:53:32,312 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(1,0)])&!(exists(G0:Int)[G0>=0&G0 >= 1&Ch(G0,G0)])&!(exists(G0:Int)[G0>=0&! Ch(0,G0)&Ch(G0,0)])
 f2:forall(K414:Int,K415:Int)[ Ch(K414,K415)&turn(p2)&K414>=0&K414<xlen()&K415>=0&K415<ylen()=>((( !(Ch(0,0)&(K414>0|K415>0)) ) => ( !(Ch(0,0)&(K414>0|K415>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K416:Int)[ (xlen()=K416)&(G0>=0& K416 >= G0&! (!turn(p1)))] ])&!(exists(G0:Int)[ exists(K417:Int)[ (xlen()=K417)&(G0>=0& K417 >= G0&! (!turn(p1)))] ])&!(! (!turn(p1)))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! (Ch(G0,1)&(K414>G0|K415>1))&(Ch(G0,0)&(K414>G0|K415>0))&(Ch(0,G1)&(K414>0|K415>G1))&! (Ch(1,G1)&(K414>1|K415>G1))])) ]
2019-10-14 16:53:32,346 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(1,0)])&!(exists(G0:Int)[G0>=0&G0 >= 1&Ch(G0,G0)])&!(exists(G0:Int)[G0>=0&! Ch(0,G0)&Ch(G0,0)])
 f2:forall(K414:Int,K415:Int)[ Ch(K414,K415)&turn(p2)&K414>=0&K414<xlen()&K415>=0&K415<ylen()=>((( !(Ch(0,0)&(K414>0|K415>0)) ) => ( !(Ch(0,0)&(K414>0|K415>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K416:Int)[ (xlen()=K416)&(G0>=0& K416 >= G0&! (!turn(p1)))] ])&!(exists(G0:Int)[ exists(K417:Int)[ (xlen()=K417)&(G0>=0& K417 >= G0&! (!turn(p1)))] ])&!(! (!turn(p1)))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! (Ch(G0,1)&(K414>G0|K415>1))&(Ch(G0,0)&(K414>G0|K415>0))&(Ch(0,G1)&(K414>0|K415>G1))&! (Ch(1,G1)&(K414>1|K415>G1))])) ]
2019-10-14 16:53:32,481 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() >= G0&! turn(p1)])&!(exists(G0:Int)[G0>=0&xlen() >= G0&! turn(p1)])&!(! turn(p1))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! Ch(G0,1)&Ch(G0,0)&Ch(0,G1)&! Ch(1,G1)])
 f2:!(!Ch(0,0))=>(exists(K424:Int,K425:Int)[ (Ch(K424,K425)&turn(p1)&K424>=0&K424<xlen()&K425>=0&K425<ylen())&((( !(Ch(0,0)&(K424>0|K425>0)) ) => ( !(Ch(0,0)&(K424>0|K425>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(G0,1)&(K424>G0|K425>1))&! (Ch(1,0)&(K424>1|K425>0))])&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K424>1|K425>G0))&! (Ch(G0,1)&(K424>G0|K425>1))])&!(exists(G0:Int)[G0>=0&G0 >= 1&(Ch(G0,G0)&(K424>G0|K425>G0))])&!(exists(G0:Int)[G0>=0&G0 >= 1&! G0 = 1&(Ch(G0,0)&(K424>G0|K425>0))])) ])
2019-10-14 16:54:11,177 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() >= G0&! turn(p1)])&!(exists(G0:Int)[G0>=0&xlen() >= G0&! turn(p1)])&!(! turn(p1))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! Ch(G0,1)&Ch(G0,0)&Ch(0,G1)&! Ch(1,G1)])
 f2:!(!Ch(0,0))=>(exists(K424:Int,K425:Int)[ (Ch(K424,K425)&turn(p1)&K424>=0&K424<xlen()&K425>=0&K425<ylen())&((( !(Ch(0,0)&(K424>0|K425>0)) ) => ( !(Ch(0,0)&(K424>0|K425>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(G0,1)&(K424>G0|K425>1))&! (Ch(1,0)&(K424>1|K425>0))])&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K424>1|K425>G0))&! (Ch(G0,1)&(K424>G0|K425>1))])&!(exists(G0:Int)[G0>=0&G0 >= 1&(Ch(G0,G0)&(K424>G0|K425>G0))])&!(exists(G0:Int)[G0>=0&G0 >= 1&! G0 = 1&(Ch(G0,0)&(K424>G0|K425>0))])) ])
2019-10-14 16:54:11,220 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() >= G0&! turn(p1)])&!(exists(G0:Int)[G0>=0&xlen() >= G0&! turn(p1)])&!(! turn(p1))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! Ch(G0,1)&Ch(G0,0)&Ch(0,G1)&! Ch(1,G1)])
 f2:!(!Ch(0,0))=>(exists(K424:Int,K425:Int)[ (Ch(K424,K425)&turn(p1)&K424>=0&K424<xlen()&K425>=0&K425<ylen())&((( !(Ch(0,0)&(K424>0|K425>0)) ) => ( !(Ch(0,0)&(K424>0|K425>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(G0,1)&(K424>G0|K425>1))&! (Ch(1,0)&(K424>1|K425>0))])&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K424>1|K425>G0))&! (Ch(G0,1)&(K424>G0|K425>1))])&!(exists(G0:Int)[G0>=0&G0 >= 1&(Ch(G0,G0)&(K424>G0|K425>G0))])&!(exists(G0:Int)[G0>=0&G0 >= 1&! G0 = 1&(Ch(G0,0)&(K424>G0|K425>0))])) ])
2019-10-14 16:54:11,325 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(1,0)])&!(exists(G0:Int)[G0>=0&Ch(1,G0)&! Ch(G0,1)])&!(exists(G0:Int)[G0>=0&G0 >= 1&Ch(G0,G0)])&!(exists(G0:Int)[G0>=0&G0 >= 1&! G0 = 1&Ch(G0,0)])
 f2:forall(K420:Int,K421:Int)[ Ch(K420,K421)&turn(p2)&K420>=0&K420<xlen()&K421>=0&K421<ylen()=>((( !(Ch(0,0)&(K420>0|K421>0)) ) => ( !(Ch(0,0)&(K420>0|K421>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K422:Int)[ (xlen()=K422)&(G0>=0& K422 >= G0&! (!turn(p1)))] ])&!(exists(G0:Int)[ exists(K423:Int)[ (xlen()=K423)&(G0>=0& K423 >= G0&! (!turn(p1)))] ])&!(! (!turn(p1)))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! (Ch(G0,1)&(K420>G0|K421>1))&(Ch(G0,0)&(K420>G0|K421>0))&(Ch(0,G1)&(K420>0|K421>G1))&! (Ch(1,G1)&(K420>1|K421>G1))])) ]
2019-10-14 16:54:11,369 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(1,0)])&!(exists(G0:Int)[G0>=0&Ch(1,G0)&! Ch(G0,1)])&!(exists(G0:Int)[G0>=0&G0 >= 1&Ch(G0,G0)])&!(exists(G0:Int)[G0>=0&G0 >= 1&! G0 = 1&Ch(G0,0)])
 f2:forall(K420:Int,K421:Int)[ Ch(K420,K421)&turn(p2)&K420>=0&K420<xlen()&K421>=0&K421<ylen()=>((( !(Ch(0,0)&(K420>0|K421>0)) ) => ( !(Ch(0,0)&(K420>0|K421>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K422:Int)[ (xlen()=K422)&(G0>=0& K422 >= G0&! (!turn(p1)))] ])&!(exists(G0:Int)[ exists(K423:Int)[ (xlen()=K423)&(G0>=0& K423 >= G0&! (!turn(p1)))] ])&!(! (!turn(p1)))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! (Ch(G0,1)&(K420>G0|K421>1))&(Ch(G0,0)&(K420>G0|K421>0))&(Ch(0,G1)&(K420>0|K421>G1))&! (Ch(1,G1)&(K420>1|K421>G1))])) ]
2019-10-14 16:54:11,406 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(1,0)])&!(exists(G0:Int)[G0>=0&Ch(1,G0)&! Ch(G0,1)])&!(exists(G0:Int)[G0>=0&G0 >= 1&Ch(G0,G0)])&!(exists(G0:Int)[G0>=0&G0 >= 1&! G0 = 1&Ch(G0,0)])
 f2:forall(K420:Int,K421:Int)[ Ch(K420,K421)&turn(p2)&K420>=0&K420<xlen()&K421>=0&K421<ylen()=>((( !(Ch(0,0)&(K420>0|K421>0)) ) => ( !(Ch(0,0)&(K420>0|K421>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K422:Int)[ (xlen()=K422)&(G0>=0& K422 >= G0&! (!turn(p1)))] ])&!(exists(G0:Int)[ exists(K423:Int)[ (xlen()=K423)&(G0>=0& K423 >= G0&! (!turn(p1)))] ])&!(! (!turn(p1)))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! (Ch(G0,1)&(K420>G0|K421>1))&(Ch(G0,0)&(K420>G0|K421>0))&(Ch(0,G1)&(K420>0|K421>G1))&! (Ch(1,G1)&(K420>1|K421>G1))])) ]
2019-10-14 17:08:09,170 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() >= G0&! turn(p1)])&!(exists(G0:Int)[G0>=0&xlen() >= G0&! turn(p1)])&!(! turn(p1))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! Ch(G0,1)&Ch(G0,0)&Ch(0,G1)&! Ch(1,G1)])&!(exists(G0:Int)[G0>=0&G0 > 1&ylen() > G0])
 f2:!(!Ch(0,0))=>(exists(K431:Int,K432:Int)[ (Ch(K431,K432)&turn(p1)&K431>=0&K431<xlen()&K432>=0&K432<ylen())&((( !(Ch(0,0)&(K431>0|K432>0)) ) => ( !(Ch(0,0)&(K431>0|K432>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(G0,1)&(K431>G0|K432>1))&! (Ch(1,0)&(K431>1|K432>0))])&!(exists(G0:Int)[G0>=0&G0 >= 1&(Ch(G0,G0)&(K431>G0|K432>G0))])&!(exists(G0:Int)[G0>=0&G0 >= 1&! G0 = 1&(Ch(G0,0)&(K431>G0|K432>0))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K431>G0|K432>G1))&! (Ch(G1,G0)&(K431>G1|K432>G0))])) ])
2019-10-14 17:08:09,370 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(1,0)])&!(exists(G0:Int)[G0>=0&G0 >= 1&Ch(G0,G0)])&!(exists(G0:Int)[G0>=0&G0 >= 1&! G0 = 1&Ch(G0,0)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,G0)])
 f2:forall(K426:Int,K427:Int)[ Ch(K426,K427)&turn(p2)&K426>=0&K426<xlen()&K427>=0&K427<ylen()=>((( !(Ch(0,0)&(K426>0|K427>0)) ) => ( !(Ch(0,0)&(K426>0|K427>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K428:Int)[ (xlen()=K428)&(G0>=0& K428 >= G0&! (!turn(p1)))] ])&!(exists(G0:Int)[ exists(K429:Int)[ (xlen()=K429)&(G0>=0& K429 >= G0&! (!turn(p1)))] ])&!(! (!turn(p1)))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! (Ch(G0,1)&(K426>G0|K427>1))&(Ch(G0,0)&(K426>G0|K427>0))&(Ch(0,G1)&(K426>0|K427>G1))&! (Ch(1,G1)&(K426>1|K427>G1))])&!(exists(G0:Int)[ exists(K430:Int)[ (ylen()=K430)&(G0>=0&G0 > 1& K430 > G0)] ])) ]
2019-10-14 17:08:09,415 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(1,0)])&!(exists(G0:Int)[G0>=0&G0 >= 1&Ch(G0,G0)])&!(exists(G0:Int)[G0>=0&G0 >= 1&! G0 = 1&Ch(G0,0)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,G0)])
 f2:forall(K426:Int,K427:Int)[ Ch(K426,K427)&turn(p2)&K426>=0&K426<xlen()&K427>=0&K427<ylen()=>((( !(Ch(0,0)&(K426>0|K427>0)) ) => ( !(Ch(0,0)&(K426>0|K427>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K428:Int)[ (xlen()=K428)&(G0>=0& K428 >= G0&! (!turn(p1)))] ])&!(exists(G0:Int)[ exists(K429:Int)[ (xlen()=K429)&(G0>=0& K429 >= G0&! (!turn(p1)))] ])&!(! (!turn(p1)))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! (Ch(G0,1)&(K426>G0|K427>1))&(Ch(G0,0)&(K426>G0|K427>0))&(Ch(0,G1)&(K426>0|K427>G1))&! (Ch(1,G1)&(K426>1|K427>G1))])&!(exists(G0:Int)[ exists(K430:Int)[ (ylen()=K430)&(G0>=0&G0 > 1& K430 > G0)] ])) ]
2019-10-14 17:08:09,454 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(1,0)])&!(exists(G0:Int)[G0>=0&G0 >= 1&Ch(G0,G0)])&!(exists(G0:Int)[G0>=0&G0 >= 1&! G0 = 1&Ch(G0,0)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,G0)])
 f2:forall(K426:Int,K427:Int)[ Ch(K426,K427)&turn(p2)&K426>=0&K426<xlen()&K427>=0&K427<ylen()=>((( !(Ch(0,0)&(K426>0|K427>0)) ) => ( !(Ch(0,0)&(K426>0|K427>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K428:Int)[ (xlen()=K428)&(G0>=0& K428 >= G0&! (!turn(p1)))] ])&!(exists(G0:Int)[ exists(K429:Int)[ (xlen()=K429)&(G0>=0& K429 >= G0&! (!turn(p1)))] ])&!(! (!turn(p1)))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! (Ch(G0,1)&(K426>G0|K427>1))&(Ch(G0,0)&(K426>G0|K427>0))&(Ch(0,G1)&(K426>0|K427>G1))&! (Ch(1,G1)&(K426>1|K427>G1))])&!(exists(G0:Int)[ exists(K430:Int)[ (ylen()=K430)&(G0>=0&G0 > 1& K430 > G0)] ])) ]
2019-10-14 17:08:18,111 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() >= G0&! turn(p1)])&!(exists(G0:Int)[G0>=0&xlen() >= G0&! turn(p1)])&!(! turn(p1))&!(exists(G0:Int)[G0>=0&G0 > 1&Ch(G0,1)])
 f2:!(!Ch(0,0))=>(exists(K437:Int,K438:Int)[ (Ch(K437,K438)&turn(p1)&K437>=0&K437<xlen()&K438>=0&K438<ylen())&((( !(Ch(0,0)&(K437>0|K438>0)) ) => ( !(Ch(0,0)&(K437>0|K438>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(G0,1)&(K437>G0|K438>1))&! (Ch(1,0)&(K437>1|K438>0))])&!(exists(G0:Int)[G0>=0&G0 >= 1&(Ch(G0,G0)&(K437>G0|K438>G0))])&!(exists(G0:Int)[G0>=0&G0 >= 1&! G0 = 1&(Ch(G0,0)&(K437>G0|K438>0))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K437>G0|K438>G1))&! (Ch(G1,G0)&(K437>G1|K438>G0))])) ])
2019-10-14 17:08:18,153 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(1,0)])&!(exists(G0:Int)[G0>=0&G0 >= 1&Ch(G0,G0)])&!(exists(G0:Int)[G0>=0&G0 >= 1&! G0 = 1&Ch(G0,0)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,G0)])
 f2:forall(K433:Int,K434:Int)[ Ch(K433,K434)&turn(p2)&K433>=0&K433<xlen()&K434>=0&K434<ylen()=>((( !(Ch(0,0)&(K433>0|K434>0)) ) => ( !(Ch(0,0)&(K433>0|K434>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K435:Int)[ (xlen()=K435)&(G0>=0& K435 >= G0&! (!turn(p1)))] ])&!(exists(G0:Int)[ exists(K436:Int)[ (xlen()=K436)&(G0>=0& K436 >= G0&! (!turn(p1)))] ])&!(! (!turn(p1)))&!(exists(G0:Int)[G0>=0&G0 > 1&(Ch(G0,1)&(K433>G0|K434>1))])) ]
2019-10-14 17:08:18,205 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(1,0)])&!(exists(G0:Int)[G0>=0&G0 >= 1&Ch(G0,G0)])&!(exists(G0:Int)[G0>=0&G0 >= 1&! G0 = 1&Ch(G0,0)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,G0)])
 f2:forall(K433:Int,K434:Int)[ Ch(K433,K434)&turn(p2)&K433>=0&K433<xlen()&K434>=0&K434<ylen()=>((( !(Ch(0,0)&(K433>0|K434>0)) ) => ( !(Ch(0,0)&(K433>0|K434>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K435:Int)[ (xlen()=K435)&(G0>=0& K435 >= G0&! (!turn(p1)))] ])&!(exists(G0:Int)[ exists(K436:Int)[ (xlen()=K436)&(G0>=0& K436 >= G0&! (!turn(p1)))] ])&!(! (!turn(p1)))&!(exists(G0:Int)[G0>=0&G0 > 1&(Ch(G0,1)&(K433>G0|K434>1))])) ]
2019-10-14 17:08:18,246 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(1,0)])&!(exists(G0:Int)[G0>=0&G0 >= 1&Ch(G0,G0)])&!(exists(G0:Int)[G0>=0&G0 >= 1&! G0 = 1&Ch(G0,0)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,G0)])
 f2:forall(K433:Int,K434:Int)[ Ch(K433,K434)&turn(p2)&K433>=0&K433<xlen()&K434>=0&K434<ylen()=>((( !(Ch(0,0)&(K433>0|K434>0)) ) => ( !(Ch(0,0)&(K433>0|K434>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K435:Int)[ (xlen()=K435)&(G0>=0& K435 >= G0&! (!turn(p1)))] ])&!(exists(G0:Int)[ exists(K436:Int)[ (xlen()=K436)&(G0>=0& K436 >= G0&! (!turn(p1)))] ])&!(! (!turn(p1)))&!(exists(G0:Int)[G0>=0&G0 > 1&(Ch(G0,1)&(K433>G0|K434>1))])) ]
2019-10-14 17:08:25,840 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() >= G0&! turn(p1)])&!(exists(G0:Int)[G0>=0&xlen() >= G0&! turn(p1)])&!(! turn(p1))&!(exists(G0:Int)[G0>=0&G0 > 1&Ch(G0,0)])
 f2:!(!Ch(0,0))=>(exists(K443:Int,K444:Int)[ (Ch(K443,K444)&turn(p1)&K443>=0&K443<xlen()&K444>=0&K444<ylen())&((( !(Ch(0,0)&(K443>0|K444>0)) ) => ( !(Ch(0,0)&(K443>0|K444>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(G0,1)&(K443>G0|K444>1))&! (Ch(1,0)&(K443>1|K444>0))])&!(exists(G0:Int)[G0>=0&G0 >= 1&(Ch(G0,G0)&(K443>G0|K444>G0))])&!(exists(G0:Int)[G0>=0&G0 >= 1&! G0 = 1&(Ch(G0,0)&(K443>G0|K444>0))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K443>G0|K444>G1))&! (Ch(G1,G0)&(K443>G1|K444>G0))])) ])
2019-10-14 17:08:25,897 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(1,0)])&!(exists(G0:Int)[G0>=0&G0 >= 1&Ch(G0,G0)])&!(exists(G0:Int)[G0>=0&G0 >= 1&! G0 = 1&Ch(G0,0)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,G0)])
 f2:forall(K439:Int,K440:Int)[ Ch(K439,K440)&turn(p2)&K439>=0&K439<xlen()&K440>=0&K440<ylen()=>((( !(Ch(0,0)&(K439>0|K440>0)) ) => ( !(Ch(0,0)&(K439>0|K440>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K441:Int)[ (xlen()=K441)&(G0>=0& K441 >= G0&! (!turn(p1)))] ])&!(exists(G0:Int)[ exists(K442:Int)[ (xlen()=K442)&(G0>=0& K442 >= G0&! (!turn(p1)))] ])&!(! (!turn(p1)))&!(exists(G0:Int)[G0>=0&G0 > 1&(Ch(G0,0)&(K439>G0|K440>0))])) ]
2019-10-14 17:08:52,127 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:!(!Ch(0,0))=>(exists(K447:Int,K448:Int)[ (Ch(K447,K448)&turn(p1)&K447>=0&K447<xlen()&K448>=0&K448<ylen())&(( !(Ch(0,0)&(K447>0|K448>0)) ) => ( !(Ch(0,0)&(K447>0|K448>0))&(!turn(p1)) )) ])
2019-10-14 17:08:52,172 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:forall(K445:Int,K446:Int)[ Ch(K445,K446)&turn(p2)&K445>=0&K445<xlen()&K446>=0&K446<ylen()=>(( !(Ch(0,0)&(K445>0|K446>0)) ) => ( !(Ch(0,0)&(K445>0|K446>0))&(!turn(p1)) )) ]
2019-10-14 17:08:52,355 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&ylen() >= X1])
 f2:!(!Ch(0,0))=>(exists(K452:Int,K453:Int)[ (Ch(K452,K453)&turn(p1)&K452>=0&K452<xlen()&K453>=0&K453<ylen())&(( !(Ch(0,0)&(K452>0|K453>0)) ) => ( !(Ch(0,0)&(K452>0|K453>0))&(!turn(p1)) )) ])
2019-10-14 17:08:52,388 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:forall(K449:Int,K450:Int)[ Ch(K449,K450)&turn(p2)&K449>=0&K449<xlen()&K450>=0&K450<ylen()=>((( !(Ch(0,0)&(K449>0|K450>0)) ) => ( !(Ch(0,0)&(K449>0|K450>0))&(!turn(p1)) ))&!(exists(X1:Int)[ exists(K451:Int)[ (ylen()=K451)&(X1>=0& K451 >= X1)] ])) ]
2019-10-14 17:08:52,781 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&ylen() >= X1])
 f2:!(!Ch(0,0))=>(exists(K457:Int,K458:Int)[ (Ch(K457,K458)&turn(p1)&K457>=0&K457<xlen()&K458>=0&K458<ylen())&((( !(Ch(0,0)&(K457>0|K458>0)) ) => ( !(Ch(0,0)&(K457>0|K458>0))&(!turn(p1)) ))&!(exists(X1:Int)[ exists(K459:Int)[ (ylen()=K459)&(X1>=0& K459 >= X1)] ])) ])
2019-10-14 17:08:52,815 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&ylen() >= X1])
 f2:forall(K454:Int,K455:Int)[ Ch(K454,K455)&turn(p2)&K454>=0&K454<xlen()&K455>=0&K455<ylen()=>((( !(Ch(0,0)&(K454>0|K455>0)) ) => ( !(Ch(0,0)&(K454>0|K455>0))&(!turn(p1)) ))&!(exists(X1:Int)[ exists(K456:Int)[ (ylen()=K456)&(X1>=0& K456 >= X1)] ])) ]
2019-10-14 17:08:52,843 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:forall(K16:Int,K17:Int)[K16>=0&K16<xlen()&K17>=0&K17<ylen()=>Ch(K16,K17)]&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)
 f2:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&ylen() >= X1])
2019-10-14 17:08:53,684 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 1&! Ch(0,G0)])
 f2:!(!Ch(0,0))=>(exists(K462:Int,K463:Int)[ (Ch(K462,K463)&turn(p1)&K462>=0&K462<xlen()&K463>=0&K463<ylen())&((( !(Ch(0,0)&(K462>0|K463>0)) ) => ( !(Ch(0,0)&(K462>0|K463>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 1&! (Ch(G0,0)&(K462>G0|K463>0))])) ])
2019-10-14 17:08:53,738 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 1&! Ch(0,G0)])
 f2:!(!Ch(0,0))=>(exists(K462:Int,K463:Int)[ (Ch(K462,K463)&turn(p1)&K462>=0&K462<xlen()&K463>=0&K463<ylen())&((( !(Ch(0,0)&(K462>0|K463>0)) ) => ( !(Ch(0,0)&(K462>0|K463>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 1&! (Ch(G0,0)&(K462>G0|K463>0))])) ])
2019-10-14 17:08:53,785 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 1&! Ch(G0,0)])
 f2:forall(K460:Int,K461:Int)[ Ch(K460,K461)&turn(p2)&K460>=0&K460<xlen()&K461>=0&K461<ylen()=>((( !(Ch(0,0)&(K460>0|K461>0)) ) => ( !(Ch(0,0)&(K460>0|K461>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 1&! (Ch(0,G0)&(K460>0|K461>G0))])) ]
2019-10-14 17:08:53,838 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 1&! Ch(G0,0)])
 f2:forall(K460:Int,K461:Int)[ Ch(K460,K461)&turn(p2)&K460>=0&K460<xlen()&K461>=0&K461<ylen()=>((( !(Ch(0,0)&(K460>0|K461>0)) ) => ( !(Ch(0,0)&(K460>0|K461>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 1&! (Ch(0,G0)&(K460>0|K461>G0))])) ]
2019-10-14 17:08:54,481 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 1&! Ch(0,G0)])
 f2:!(!Ch(0,0))=>(exists(K466:Int,K467:Int)[ (Ch(K466,K467)&turn(p1)&K466>=0&K466<xlen()&K467>=0&K467<ylen())&((( !(Ch(0,0)&(K466>0|K467>0)) ) => ( !(Ch(0,0)&(K466>0|K467>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K468:Int)[ (ylen()=K468)&(G0>=0& K468 >= G0&(Ch(1,1)&(K466>1|K467>1)))] ])) ])
2019-10-14 17:08:54,523 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 1&! Ch(0,G0)])
 f2:!(!Ch(0,0))=>(exists(K466:Int,K467:Int)[ (Ch(K466,K467)&turn(p1)&K466>=0&K466<xlen()&K467>=0&K467<ylen())&((( !(Ch(0,0)&(K466>0|K467>0)) ) => ( !(Ch(0,0)&(K466>0|K467>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K468:Int)[ (ylen()=K468)&(G0>=0& K468 >= G0&(Ch(1,1)&(K466>1|K467>1)))] ])) ])
2019-10-14 17:08:54,559 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&ylen() >= G0&Ch(1,1)])
 f2:forall(K464:Int,K465:Int)[ Ch(K464,K465)&turn(p2)&K464>=0&K464<xlen()&K465>=0&K465<ylen()=>((( !(Ch(0,0)&(K464>0|K465>0)) ) => ( !(Ch(0,0)&(K464>0|K465>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 1&! (Ch(0,G0)&(K464>0|K465>G0))])) ]
2019-10-14 17:08:56,504 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 1&! Ch(0,G0)])&!(turn(p2))
 f2:!(!Ch(0,0))=>(exists(K471:Int,K472:Int)[ (Ch(K471,K472)&turn(p1)&K471>=0&K471<xlen()&K472>=0&K472<ylen())&((( !(Ch(0,0)&(K471>0|K472>0)) ) => ( !(Ch(0,0)&(K471>0|K472>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K473:Int)[ (ylen()=K473)&(G0>=0& K473 >= G0&(Ch(1,1)&(K471>1|K472>1)))] ])&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K471>0|K472>G0))&! (Ch(G0,0)&(K471>G0|K472>0))])) ])
2019-10-14 17:08:56,539 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&ylen() >= G0&Ch(1,1)])&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(G0,0)])
 f2:forall(K469:Int,K470:Int)[ Ch(K469,K470)&turn(p2)&K469>=0&K469<xlen()&K470>=0&K470<ylen()=>((( !(Ch(0,0)&(K469>0|K470>0)) ) => ( !(Ch(0,0)&(K469>0|K470>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 1&! (Ch(0,G0)&(K469>0|K470>G0))])&!((!turn(p2)))) ]
2019-10-14 17:08:57,096 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(turn(p2))&!(exists(G0:Int)[G0>=0&ylen() >= G0&turn(p2)])
 f2:!(!Ch(0,0))=>(exists(K477:Int,K478:Int)[ (Ch(K477,K478)&turn(p1)&K477>=0&K477<xlen()&K478>=0&K478<ylen())&((( !(Ch(0,0)&(K477>0|K478>0)) ) => ( !(Ch(0,0)&(K477>0|K478>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K479:Int)[ (ylen()=K479)&(G0>=0& K479 >= G0&(Ch(1,1)&(K477>1|K478>1)))] ])&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K477>0|K478>G0))&! (Ch(G0,0)&(K477>G0|K478>0))])) ])
2019-10-14 17:08:57,132 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&ylen() >= G0&Ch(1,1)])&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(G0,0)])
 f2:forall(K474:Int,K475:Int)[ Ch(K474,K475)&turn(p2)&K474>=0&K474<xlen()&K475>=0&K475<ylen()=>((( !(Ch(0,0)&(K474>0|K475>0)) ) => ( !(Ch(0,0)&(K474>0|K475>0))&(!turn(p1)) ))&!((!turn(p2)))&!(exists(G0:Int)[ exists(K476:Int)[ (ylen()=K476)&(G0>=0& K476 >= G0&(!turn(p2)))] ])) ]
2019-10-14 17:09:21,616 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&ylen() >= G0&turn(p2)])&!(turn(p2))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(1,G1)&! Ch(G0,1)])
 f2:!(!Ch(0,0))=>(exists(K483:Int,K484:Int)[ (Ch(K483,K484)&turn(p1)&K483>=0&K483<xlen()&K484>=0&K484<ylen())&((( !(Ch(0,0)&(K483>0|K484>0)) ) => ( !(Ch(0,0)&(K483>0|K484>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K485:Int)[ (ylen()=K485)&(G0>=0& K485 >= G0&(Ch(1,1)&(K483>1|K484>1)))] ])&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K483>0|K484>G0))&! (Ch(G0,0)&(K483>G0|K484>0))])) ])
2019-10-14 17:09:21,749 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&ylen() >= G0&turn(p2)])&!(turn(p2))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(1,G1)&! Ch(G0,1)])
 f2:!(!Ch(0,0))=>(exists(K483:Int,K484:Int)[ (Ch(K483,K484)&turn(p1)&K483>=0&K483<xlen()&K484>=0&K484<ylen())&((( !(Ch(0,0)&(K483>0|K484>0)) ) => ( !(Ch(0,0)&(K483>0|K484>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K485:Int)[ (ylen()=K485)&(G0>=0& K485 >= G0&(Ch(1,1)&(K483>1|K484>1)))] ])&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K483>0|K484>G0))&! (Ch(G0,0)&(K483>G0|K484>0))])) ])
2019-10-14 17:09:21,787 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&ylen() >= G0&turn(p2)])&!(turn(p2))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(1,G1)&! Ch(G0,1)])
 f2:!(!Ch(0,0))=>(exists(K483:Int,K484:Int)[ (Ch(K483,K484)&turn(p1)&K483>=0&K483<xlen()&K484>=0&K484<ylen())&((( !(Ch(0,0)&(K483>0|K484>0)) ) => ( !(Ch(0,0)&(K483>0|K484>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K485:Int)[ (ylen()=K485)&(G0>=0& K485 >= G0&(Ch(1,1)&(K483>1|K484>1)))] ])&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K483>0|K484>G0))&! (Ch(G0,0)&(K483>G0|K484>0))])) ])
2019-10-14 17:09:21,878 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&ylen() >= G0&Ch(1,1)])&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(G0,0)])
 f2:forall(K480:Int,K481:Int)[ Ch(K480,K481)&turn(p2)&K480>=0&K480<xlen()&K481>=0&K481<ylen()=>((( !(Ch(0,0)&(K480>0|K481>0)) ) => ( !(Ch(0,0)&(K480>0|K481>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K482:Int)[ (ylen()=K482)&(G0>=0& K482 >= G0&(!turn(p2)))] ])&!((!turn(p2)))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K480>G0|K481>G1))&! (Ch(1,G1)&(K480>1|K481>G1))&! (Ch(G0,1)&(K480>G0|K481>1))])) ]
2019-10-14 17:09:21,920 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&ylen() >= G0&Ch(1,1)])&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(G0,0)])
 f2:forall(K480:Int,K481:Int)[ Ch(K480,K481)&turn(p2)&K480>=0&K480<xlen()&K481>=0&K481<ylen()=>((( !(Ch(0,0)&(K480>0|K481>0)) ) => ( !(Ch(0,0)&(K480>0|K481>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K482:Int)[ (ylen()=K482)&(G0>=0& K482 >= G0&(!turn(p2)))] ])&!((!turn(p2)))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K480>G0|K481>G1))&! (Ch(1,G1)&(K480>1|K481>G1))&! (Ch(G0,1)&(K480>G0|K481>1))])) ]
2019-10-14 17:09:30,384 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&ylen() >= G0&turn(p2)])&!(turn(p2))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(1,G1)&! Ch(G0,1)])
 f2:!(!Ch(0,0))=>(exists(K489:Int,K490:Int)[ (Ch(K489,K490)&turn(p1)&K489>=0&K489<xlen()&K490>=0&K490<ylen())&((( !(Ch(0,0)&(K489>0|K490>0)) ) => ( !(Ch(0,0)&(K489>0|K490>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(G0,1)&(K489>G0|K490>1))&! (Ch(G0,0)&(K489>G0|K490>0))])&!(exists(G0:Int)[G0>=0&(Ch(G0,1)&(K489>G0|K490>1))&! (Ch(1,G0)&(K489>1|K490>G0))])) ])
2019-10-14 17:09:30,420 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(G0,0)])&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(1,G0)])
 f2:forall(K486:Int,K487:Int)[ Ch(K486,K487)&turn(p2)&K486>=0&K486<xlen()&K487>=0&K487<ylen()=>((( !(Ch(0,0)&(K486>0|K487>0)) ) => ( !(Ch(0,0)&(K486>0|K487>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K488:Int)[ (ylen()=K488)&(G0>=0& K488 >= G0&(!turn(p2)))] ])&!((!turn(p2)))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K486>G0|K487>G1))&! (Ch(1,G1)&(K486>1|K487>G1))&! (Ch(G0,1)&(K486>G0|K487>1))])) ]
2019-10-14 17:09:30,462 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(G0,0)])&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(1,G0)])
 f2:forall(K486:Int,K487:Int)[ Ch(K486,K487)&turn(p2)&K486>=0&K486<xlen()&K487>=0&K487<ylen()=>((( !(Ch(0,0)&(K486>0|K487>0)) ) => ( !(Ch(0,0)&(K486>0|K487>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K488:Int)[ (ylen()=K488)&(G0>=0& K488 >= G0&(!turn(p2)))] ])&!((!turn(p2)))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K486>G0|K487>G1))&! (Ch(1,G1)&(K486>1|K487>G1))&! (Ch(G0,1)&(K486>G0|K487>1))])) ]
2019-10-14 17:09:58,213 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&ylen() >= G0&turn(p2)])&!(turn(p2))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(1,G1)&! Ch(G0,1)])
 f2:!(!Ch(0,0))=>(exists(K494:Int,K495:Int)[ (Ch(K494,K495)&turn(p1)&K494>=0&K494<xlen()&K495>=0&K495<ylen())&((( !(Ch(0,0)&(K494>0|K495>0)) ) => ( !(Ch(0,0)&(K494>0|K495>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(G0,1)&(K494>G0|K495>1))&! (Ch(G0,0)&(K494>G0|K495>0))])&!(exists(G0:Int)[G0>=0&(Ch(G0,1)&(K494>G0|K495>1))&! (Ch(1,G0)&(K494>1|K495>G0))])&!((Ch(1,0)&(K494>1|K495>0))&! (Ch(1,1)&(K494>1|K495>1))&! (Ch(0,1)&(K494>0|K495>1)))) ])
2019-10-14 17:09:58,262 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(G0,0)])&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(1,G0)])&!(Ch(1,0)&! Ch(1,1)&! Ch(0,1))
 f2:forall(K491:Int,K492:Int)[ Ch(K491,K492)&turn(p2)&K491>=0&K491<xlen()&K492>=0&K492<ylen()=>((( !(Ch(0,0)&(K491>0|K492>0)) ) => ( !(Ch(0,0)&(K491>0|K492>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K493:Int)[ (ylen()=K493)&(G0>=0& K493 >= G0&(!turn(p2)))] ])&!((!turn(p2)))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K491>G0|K492>G1))&! (Ch(1,G1)&(K491>1|K492>G1))&! (Ch(G0,1)&(K491>G0|K492>1))])) ]
2019-10-14 17:09:58,302 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(G0,0)])&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(1,G0)])&!(Ch(1,0)&! Ch(1,1)&! Ch(0,1))
 f2:forall(K491:Int,K492:Int)[ Ch(K491,K492)&turn(p2)&K491>=0&K491<xlen()&K492>=0&K492<ylen()=>((( !(Ch(0,0)&(K491>0|K492>0)) ) => ( !(Ch(0,0)&(K491>0|K492>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K493:Int)[ (ylen()=K493)&(G0>=0& K493 >= G0&(!turn(p2)))] ])&!((!turn(p2)))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K491>G0|K492>G1))&! (Ch(1,G1)&(K491>1|K492>G1))&! (Ch(G0,1)&(K491>G0|K492>1))])) ]
2019-10-14 17:10:48,309 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:!(!Ch(0,0))=>(exists(K498:Int,K499:Int)[ (Ch(K498,K499)&turn(p1)&K498>=0&K498<xlen()&K499>=0&K499<ylen())&(( !(Ch(0,0)&(K498>0|K499>0)) ) => ( !(Ch(0,0)&(K498>0|K499>0))&(!turn(p1)) )) ])
2019-10-14 17:10:48,344 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:forall(K496:Int,K497:Int)[ Ch(K496,K497)&turn(p2)&K496>=0&K496<xlen()&K497>=0&K497<ylen()=>(( !(Ch(0,0)&(K496>0|K497>0)) ) => ( !(Ch(0,0)&(K496>0|K497>0))&(!turn(p1)) )) ]
2019-10-14 17:10:48,499 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X0:_S1)[! turn(X0)])
 f2:!(!Ch(0,0))=>(exists(K502:Int,K503:Int)[ (Ch(K502,K503)&turn(p1)&K502>=0&K502<xlen()&K503>=0&K503<ylen())&(( !(Ch(0,0)&(K502>0|K503>0)) ) => ( !(Ch(0,0)&(K502>0|K503>0))&(!turn(p1)) )) ])
2019-10-14 17:10:48,529 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:forall(K500:Int,K501:Int)[ Ch(K500,K501)&turn(p2)&K500>=0&K500<xlen()&K501>=0&K501<ylen()=>((( !(Ch(0,0)&(K500>0|K501>0)) ) => ( !(Ch(0,0)&(K500>0|K501>0))&(!turn(p1)) ))&!(exists(X0:_S1)[! (!turn(X0))])) ]
2019-10-14 17:10:48,901 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X0:_S1)[! turn(X0)])
 f2:!(!Ch(0,0))=>(exists(K506:Int,K507:Int)[ (Ch(K506,K507)&turn(p1)&K506>=0&K506<xlen()&K507>=0&K507<ylen())&((( !(Ch(0,0)&(K506>0|K507>0)) ) => ( !(Ch(0,0)&(K506>0|K507>0))&(!turn(p1)) ))&!(exists(X0:_S1)[! (!turn(X0))])) ])
2019-10-14 17:10:48,934 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X0:_S1)[! turn(X0)])
 f2:forall(K504:Int,K505:Int)[ Ch(K504,K505)&turn(p2)&K504>=0&K504<xlen()&K505>=0&K505<ylen()=>((( !(Ch(0,0)&(K504>0|K505>0)) ) => ( !(Ch(0,0)&(K504>0|K505>0))&(!turn(p1)) ))&!(exists(X0:_S1)[! (!turn(X0))])) ]
2019-10-14 17:10:48,965 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:forall(K16:Int,K17:Int)[K16>=0&K16<xlen()&K17>=0&K17<ylen()=>Ch(K16,K17)]&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)
 f2:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X0:_S1)[! turn(X0)])
2019-10-14 17:10:49,818 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 > 1&! Ch(G0,0)])
 f2:!(!Ch(0,0))=>(exists(K510:Int,K511:Int)[ (Ch(K510,K511)&turn(p1)&K510>=0&K510<xlen()&K511>=0&K511<ylen())&((( !(Ch(0,0)&(K510>0|K511>0)) ) => ( !(Ch(0,0)&(K510>0|K511>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! G0 > 0&! (Ch(G0,1)&(K510>G0|K511>1))])) ])
2019-10-14 17:10:49,863 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 > 1&! Ch(G0,0)])
 f2:!(!Ch(0,0))=>(exists(K510:Int,K511:Int)[ (Ch(K510,K511)&turn(p1)&K510>=0&K510<xlen()&K511>=0&K511<ylen())&((( !(Ch(0,0)&(K510>0|K511>0)) ) => ( !(Ch(0,0)&(K510>0|K511>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! G0 > 0&! (Ch(G0,1)&(K510>G0|K511>1))])) ])
2019-10-14 17:10:49,901 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 > 0&! Ch(G0,1)])
 f2:forall(K508:Int,K509:Int)[ Ch(K508,K509)&turn(p2)&K508>=0&K508<xlen()&K509>=0&K509<ylen()=>((( !(Ch(0,0)&(K508>0|K509>0)) ) => ( !(Ch(0,0)&(K508>0|K509>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! G0 > 1&! (Ch(G0,0)&(K508>G0|K509>0))])) ]
2019-10-14 17:10:50,532 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 > 1&! Ch(G0,0)])
 f2:!(!Ch(0,0))=>(exists(K514:Int,K515:Int)[ (Ch(K514,K515)&turn(p1)&K514>=0&K514<xlen()&K515>=0&K515<ylen())&((( !(Ch(0,0)&(K514>0|K515>0)) ) => ( !(Ch(0,0)&(K514>0|K515>0))&(!turn(p1)) ))&!(exists(G0:_S1)[! (!turn(G0))&(Ch(1,1)&(K514>1|K515>1))])) ])
2019-10-14 17:10:50,577 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 > 1&! Ch(G0,0)])
 f2:!(!Ch(0,0))=>(exists(K514:Int,K515:Int)[ (Ch(K514,K515)&turn(p1)&K514>=0&K514<xlen()&K515>=0&K515<ylen())&((( !(Ch(0,0)&(K514>0|K515>0)) ) => ( !(Ch(0,0)&(K514>0|K515>0))&(!turn(p1)) ))&!(exists(G0:_S1)[! (!turn(G0))&(Ch(1,1)&(K514>1|K515>1))])) ])
2019-10-14 17:10:50,619 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:_S1)[! turn(G0)&Ch(1,1)])
 f2:forall(K512:Int,K513:Int)[ Ch(K512,K513)&turn(p2)&K512>=0&K512<xlen()&K513>=0&K513<ylen()=>((( !(Ch(0,0)&(K512>0|K513>0)) ) => ( !(Ch(0,0)&(K512>0|K513>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! G0 > 1&! (Ch(G0,0)&(K512>G0|K513>0))])) ]
2019-10-14 17:10:52,457 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 > 1&! Ch(G0,0)])&!(! Ch(1,1))
 f2:!(!Ch(0,0))=>(exists(K518:Int,K519:Int)[ (Ch(K518,K519)&turn(p1)&K518>=0&K518<xlen()&K519>=0&K519<ylen())&((( !(Ch(0,0)&(K518>0|K519>0)) ) => ( !(Ch(0,0)&(K518>0|K519>0))&(!turn(p1)) ))&!(exists(G0:_S1)[! (!turn(G0))&(Ch(1,1)&(K518>1|K519>1))])&!(exists(G0:Int)[G0>=0&(Ch(G0,0)&(K518>G0|K519>0))&! (Ch(0,G0)&(K518>0|K519>G0))])) ])
2019-10-14 17:10:52,507 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 > 1&! Ch(G0,0)])&!(! Ch(1,1))
 f2:!(!Ch(0,0))=>(exists(K518:Int,K519:Int)[ (Ch(K518,K519)&turn(p1)&K518>=0&K518<xlen()&K519>=0&K519<ylen())&((( !(Ch(0,0)&(K518>0|K519>0)) ) => ( !(Ch(0,0)&(K518>0|K519>0))&(!turn(p1)) ))&!(exists(G0:_S1)[! (!turn(G0))&(Ch(1,1)&(K518>1|K519>1))])&!(exists(G0:Int)[G0>=0&(Ch(G0,0)&(K518>G0|K519>0))&! (Ch(0,G0)&(K518>0|K519>G0))])) ])
2019-10-14 17:10:52,548 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:_S1)[! turn(G0)&Ch(1,1)])&!(exists(G0:Int)[G0>=0&Ch(G0,0)&! Ch(0,G0)])
 f2:forall(K516:Int,K517:Int)[ Ch(K516,K517)&turn(p2)&K516>=0&K516<xlen()&K517>=0&K517<ylen()=>((( !(Ch(0,0)&(K516>0|K517>0)) ) => ( !(Ch(0,0)&(K516>0|K517>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! G0 > 1&! (Ch(G0,0)&(K516>G0|K517>0))])&!(! (Ch(1,1)&(K516>1|K517>1)))) ]
2019-10-14 17:10:53,303 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:_S1)[! turn(G0)&! turn(p1)])&!(exists(G0:_S1)[! turn(G0)&! turn(p1)])
 f2:!(!Ch(0,0))=>(exists(K522:Int,K523:Int)[ (Ch(K522,K523)&turn(p1)&K522>=0&K522<xlen()&K523>=0&K523<ylen())&((( !(Ch(0,0)&(K522>0|K523>0)) ) => ( !(Ch(0,0)&(K522>0|K523>0))&(!turn(p1)) ))&!(exists(G0:_S1)[! (!turn(G0))&(Ch(1,1)&(K522>1|K523>1))])&!(exists(G0:Int)[G0>=0&(Ch(G0,0)&(K522>G0|K523>0))&! (Ch(0,G0)&(K522>0|K523>G0))])) ])
2019-10-14 17:10:53,343 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:_S1)[! turn(G0)&Ch(1,1)])&!(exists(G0:Int)[G0>=0&Ch(G0,0)&! Ch(0,G0)])
 f2:forall(K520:Int,K521:Int)[ Ch(K520,K521)&turn(p2)&K520>=0&K520<xlen()&K521>=0&K521<ylen()=>((( !(Ch(0,0)&(K520>0|K521>0)) ) => ( !(Ch(0,0)&(K520>0|K521>0))&(!turn(p1)) ))&!(exists(G0:_S1)[! (!turn(G0))&! (!turn(p1))])&!(exists(G0:_S1)[! (!turn(G0))&! (!turn(p1))])) ]
2019-10-14 17:11:19,722 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:_S1)[! turn(G0)&! turn(p1)])&!(exists(G0:_S1)[! turn(G0)&! turn(p1)])&!(exists(G0:Int)[G0>=0&Ch(G0,0)&! Ch(1,0)&! Ch(0,1)])
 f2:!(!Ch(0,0))=>(exists(K526:Int,K527:Int)[ (Ch(K526,K527)&turn(p1)&K526>=0&K526<xlen()&K527>=0&K527<ylen())&((( !(Ch(0,0)&(K526>0|K527>0)) ) => ( !(Ch(0,0)&(K526>0|K527>0))&(!turn(p1)) ))&!(exists(G0:_S1)[! (!turn(G0))&(Ch(1,1)&(K526>1|K527>1))])&!(exists(G0:Int)[G0>=0&(Ch(G0,0)&(K526>G0|K527>0))&! (Ch(0,G0)&(K526>0|K527>G0))])) ])
2019-10-14 17:11:19,792 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:_S1)[! turn(G0)&! turn(p1)])&!(exists(G0:_S1)[! turn(G0)&! turn(p1)])&!(exists(G0:Int)[G0>=0&Ch(G0,0)&! Ch(1,0)&! Ch(0,1)])
 f2:!(!Ch(0,0))=>(exists(K526:Int,K527:Int)[ (Ch(K526,K527)&turn(p1)&K526>=0&K526<xlen()&K527>=0&K527<ylen())&((( !(Ch(0,0)&(K526>0|K527>0)) ) => ( !(Ch(0,0)&(K526>0|K527>0))&(!turn(p1)) ))&!(exists(G0:_S1)[! (!turn(G0))&(Ch(1,1)&(K526>1|K527>1))])&!(exists(G0:Int)[G0>=0&(Ch(G0,0)&(K526>G0|K527>0))&! (Ch(0,G0)&(K526>0|K527>G0))])) ])
2019-10-14 17:11:19,829 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:_S1)[! turn(G0)&! turn(p1)])&!(exists(G0:_S1)[! turn(G0)&! turn(p1)])&!(exists(G0:Int)[G0>=0&Ch(G0,0)&! Ch(1,0)&! Ch(0,1)])
 f2:!(!Ch(0,0))=>(exists(K526:Int,K527:Int)[ (Ch(K526,K527)&turn(p1)&K526>=0&K526<xlen()&K527>=0&K527<ylen())&((( !(Ch(0,0)&(K526>0|K527>0)) ) => ( !(Ch(0,0)&(K526>0|K527>0))&(!turn(p1)) ))&!(exists(G0:_S1)[! (!turn(G0))&(Ch(1,1)&(K526>1|K527>1))])&!(exists(G0:Int)[G0>=0&(Ch(G0,0)&(K526>G0|K527>0))&! (Ch(0,G0)&(K526>0|K527>G0))])) ])
2019-10-14 17:11:19,889 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:_S1)[! turn(G0)&Ch(1,1)])&!(exists(G0:Int)[G0>=0&Ch(G0,0)&! Ch(0,G0)])
 f2:forall(K524:Int,K525:Int)[ Ch(K524,K525)&turn(p2)&K524>=0&K524<xlen()&K525>=0&K525<ylen()=>((( !(Ch(0,0)&(K524>0|K525>0)) ) => ( !(Ch(0,0)&(K524>0|K525>0))&(!turn(p1)) ))&!(exists(G0:_S1)[! (!turn(G0))&! (!turn(p1))])&!(exists(G0:_S1)[! (!turn(G0))&! (!turn(p1))])&!(exists(G0:Int)[G0>=0&(Ch(G0,0)&(K524>G0|K525>0))&! (Ch(1,0)&(K524>1|K525>0))&! (Ch(0,1)&(K524>0|K525>1))])) ]
2019-10-14 17:11:28,756 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:_S1)[! turn(G0)&! turn(p1)])&!(exists(G0:_S1)[! turn(G0)&! turn(p1)])&!(exists(G0:Int)[G0>=0&Ch(G0,0)&! Ch(1,0)&! Ch(0,1)])&!(exists(G0:Int)[G0>=0&G0 > 1&xlen() > G0])
 f2:!(!Ch(0,0))=>(exists(K531:Int,K532:Int)[ (Ch(K531,K532)&turn(p1)&K531>=0&K531<xlen()&K532>=0&K532<ylen())&((( !(Ch(0,0)&(K531>0|K532>0)) ) => ( !(Ch(0,0)&(K531>0|K532>0))&(!turn(p1)) ))&!(exists(G0:_S1)[! (!turn(G0))&(Ch(1,1)&(K531>1|K532>1))])&!(exists(G0:Int)[G0>=0&(Ch(G0,0)&(K531>G0|K532>0))&! (Ch(0,G0)&(K531>0|K532>G0))])&!((Ch(0,1)&(K531>0|K532>1))&! (Ch(1,0)&(K531>1|K532>0)))) ])
2019-10-14 17:11:28,804 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:_S1)[! turn(G0)&Ch(1,1)])&!(exists(G0:Int)[G0>=0&Ch(G0,0)&! Ch(0,G0)])&!(Ch(0,1)&! Ch(1,0))
 f2:forall(K528:Int,K529:Int)[ Ch(K528,K529)&turn(p2)&K528>=0&K528<xlen()&K529>=0&K529<ylen()=>((( !(Ch(0,0)&(K528>0|K529>0)) ) => ( !(Ch(0,0)&(K528>0|K529>0))&(!turn(p1)) ))&!(exists(G0:_S1)[! (!turn(G0))&! (!turn(p1))])&!(exists(G0:_S1)[! (!turn(G0))&! (!turn(p1))])&!(exists(G0:Int)[G0>=0&(Ch(G0,0)&(K528>G0|K529>0))&! (Ch(1,0)&(K528>1|K529>0))&! (Ch(0,1)&(K528>0|K529>1))])&!(exists(G0:Int)[ exists(K530:Int)[ (xlen()=K530)&(G0>=0&G0 > 1& K530 > G0)] ])) ]
2019-10-14 17:11:28,846 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:_S1)[! turn(G0)&Ch(1,1)])&!(exists(G0:Int)[G0>=0&Ch(G0,0)&! Ch(0,G0)])&!(Ch(0,1)&! Ch(1,0))
 f2:forall(K528:Int,K529:Int)[ Ch(K528,K529)&turn(p2)&K528>=0&K528<xlen()&K529>=0&K529<ylen()=>((( !(Ch(0,0)&(K528>0|K529>0)) ) => ( !(Ch(0,0)&(K528>0|K529>0))&(!turn(p1)) ))&!(exists(G0:_S1)[! (!turn(G0))&! (!turn(p1))])&!(exists(G0:_S1)[! (!turn(G0))&! (!turn(p1))])&!(exists(G0:Int)[G0>=0&(Ch(G0,0)&(K528>G0|K529>0))&! (Ch(1,0)&(K528>1|K529>0))&! (Ch(0,1)&(K528>0|K529>1))])&!(exists(G0:Int)[ exists(K530:Int)[ (xlen()=K530)&(G0>=0&G0 > 1& K530 > G0)] ])) ]
2019-10-14 17:11:28,883 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:_S1)[! turn(G0)&Ch(1,1)])&!(exists(G0:Int)[G0>=0&Ch(G0,0)&! Ch(0,G0)])&!(Ch(0,1)&! Ch(1,0))
 f2:forall(K528:Int,K529:Int)[ Ch(K528,K529)&turn(p2)&K528>=0&K528<xlen()&K529>=0&K529<ylen()=>((( !(Ch(0,0)&(K528>0|K529>0)) ) => ( !(Ch(0,0)&(K528>0|K529>0))&(!turn(p1)) ))&!(exists(G0:_S1)[! (!turn(G0))&! (!turn(p1))])&!(exists(G0:_S1)[! (!turn(G0))&! (!turn(p1))])&!(exists(G0:Int)[G0>=0&(Ch(G0,0)&(K528>G0|K529>0))&! (Ch(1,0)&(K528>1|K529>0))&! (Ch(0,1)&(K528>0|K529>1))])&!(exists(G0:Int)[ exists(K530:Int)[ (xlen()=K530)&(G0>=0&G0 > 1& K530 > G0)] ])) ]
2019-10-14 17:11:33,756 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:_S1)[! turn(G0)&! turn(p1)])&!(exists(G0:_S1)[! turn(G0)&! turn(p1)])&!(exists(G0:Int)[G0>=0&xlen() > G0&G0 > 1&Ch(1,1)])
 f2:!(!Ch(0,0))=>(exists(K536:Int,K537:Int)[ (Ch(K536,K537)&turn(p1)&K536>=0&K536<xlen()&K537>=0&K537<ylen())&((( !(Ch(0,0)&(K536>0|K537>0)) ) => ( !(Ch(0,0)&(K536>0|K537>0))&(!turn(p1)) ))&!(exists(G0:_S1)[! (!turn(G0))&(Ch(1,1)&(K536>1|K537>1))])&!(exists(G0:Int)[G0>=0&(Ch(G0,0)&(K536>G0|K537>0))&! (Ch(0,G0)&(K536>0|K537>G0))])&!((Ch(0,1)&(K536>0|K537>1))&! (Ch(1,0)&(K536>1|K537>0)))) ])
2019-10-14 17:11:33,805 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:_S1)[! turn(G0)&Ch(1,1)])&!(exists(G0:Int)[G0>=0&Ch(G0,0)&! Ch(0,G0)])&!(Ch(0,1)&! Ch(1,0))
 f2:forall(K533:Int,K534:Int)[ Ch(K533,K534)&turn(p2)&K533>=0&K533<xlen()&K534>=0&K534<ylen()=>((( !(Ch(0,0)&(K533>0|K534>0)) ) => ( !(Ch(0,0)&(K533>0|K534>0))&(!turn(p1)) ))&!(exists(G0:_S1)[! (!turn(G0))&! (!turn(p1))])&!(exists(G0:_S1)[! (!turn(G0))&! (!turn(p1))])&!(exists(G0:Int)[ exists(K535:Int)[ (xlen()=K535)&(G0>=0& K535 > G0&G0 > 1&(Ch(1,1)&(K533>1|K534>1)))] ])) ]
2019-10-14 17:12:00,112 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:!(!Ch(0,0))=>(exists(K540:Int,K541:Int)[ (Ch(K540,K541)&turn(p1)&K540>=0&K540<xlen()&K541>=0&K541<ylen())&(( !(Ch(0,0)&(K540>0|K541>0)) ) => ( !(Ch(0,0)&(K540>0|K541>0))&(!turn(p1)) )) ])
2019-10-14 17:12:00,149 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:forall(K538:Int,K539:Int)[ Ch(K538,K539)&turn(p2)&K538>=0&K538<xlen()&K539>=0&K539<ylen()=>(( !(Ch(0,0)&(K538>0|K539>0)) ) => ( !(Ch(0,0)&(K538>0|K539>0))&(!turn(p1)) )) ]
2019-10-14 17:12:00,305 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&! xlen() = X1])
 f2:!(!Ch(0,0))=>(exists(K544:Int,K545:Int)[ (Ch(K544,K545)&turn(p1)&K544>=0&K544<xlen()&K545>=0&K545<ylen())&(( !(Ch(0,0)&(K544>0|K545>0)) ) => ( !(Ch(0,0)&(K544>0|K545>0))&(!turn(p1)) )) ])
2019-10-14 17:12:00,334 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:forall(K542:Int,K543:Int)[ Ch(K542,K543)&turn(p2)&K542>=0&K542<xlen()&K543>=0&K543<ylen()=>((( !(Ch(0,0)&(K542>0|K543>0)) ) => ( !(Ch(0,0)&(K542>0|K543>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&! (xlen()=X1)])) ]
2019-10-14 17:12:00,701 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&! xlen() = X1])
 f2:!(!Ch(0,0))=>(exists(K548:Int,K549:Int)[ (Ch(K548,K549)&turn(p1)&K548>=0&K548<xlen()&K549>=0&K549<ylen())&((( !(Ch(0,0)&(K548>0|K549>0)) ) => ( !(Ch(0,0)&(K548>0|K549>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&! (xlen()=X1)])) ])
2019-10-14 17:12:00,733 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&! xlen() = X1])
 f2:forall(K546:Int,K547:Int)[ Ch(K546,K547)&turn(p2)&K546>=0&K546<xlen()&K547>=0&K547<ylen()=>((( !(Ch(0,0)&(K546>0|K547>0)) ) => ( !(Ch(0,0)&(K546>0|K547>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&! (xlen()=X1)])) ]
2019-10-14 17:12:00,770 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:forall(K16:Int,K17:Int)[K16>=0&K16<xlen()&K17>=0&K17<ylen()=>Ch(K16,K17)]&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)
 f2:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&! xlen() = X1])
2019-10-14 17:12:01,646 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&ylen() > G0&! Ch(G0,G0)])
 f2:!(!Ch(0,0))=>(exists(K553:Int,K554:Int)[ (Ch(K553,K554)&turn(p1)&K553>=0&K553<xlen()&K554>=0&K554<ylen())&((( !(Ch(0,0)&(K553>0|K554>0)) ) => ( !(Ch(0,0)&(K553>0|K554>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! G0 > 1&! (Ch(G0,0)&(K553>G0|K554>0))])) ])
2019-10-14 17:12:01,692 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&ylen() > G0&! Ch(G0,G0)])
 f2:!(!Ch(0,0))=>(exists(K553:Int,K554:Int)[ (Ch(K553,K554)&turn(p1)&K553>=0&K553<xlen()&K554>=0&K554<ylen())&((( !(Ch(0,0)&(K553>0|K554>0)) ) => ( !(Ch(0,0)&(K553>0|K554>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! G0 > 1&! (Ch(G0,0)&(K553>G0|K554>0))])) ])
2019-10-14 17:12:01,727 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 > 1&! Ch(G0,0)])
 f2:forall(K550:Int,K551:Int)[ Ch(K550,K551)&turn(p2)&K550>=0&K550<xlen()&K551>=0&K551<ylen()=>((( !(Ch(0,0)&(K550>0|K551>0)) ) => ( !(Ch(0,0)&(K550>0|K551>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K552:Int)[ (ylen()=K552)&(G0>=0& K552 > G0&! (Ch(G0,G0)&(K550>G0|K551>G0)))] ])) ]
2019-10-14 17:12:01,777 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 > 1&! Ch(G0,0)])
 f2:forall(K550:Int,K551:Int)[ Ch(K550,K551)&turn(p2)&K550>=0&K550<xlen()&K551>=0&K551<ylen()=>((( !(Ch(0,0)&(K550>0|K551>0)) ) => ( !(Ch(0,0)&(K550>0|K551>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K552:Int)[ (ylen()=K552)&(G0>=0& K552 > G0&! (Ch(G0,G0)&(K550>G0|K551>G0)))] ])) ]
2019-10-14 17:12:02,531 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&ylen() > G0&! Ch(G0,G0)])
 f2:!(!Ch(0,0))=>(exists(K558:Int,K559:Int)[ (Ch(K558,K559)&turn(p1)&K558>=0&K558<xlen()&K559>=0&K559<ylen())&((( !(Ch(0,0)&(K558>0|K559>0)) ) => ( !(Ch(0,0)&(K558>0|K559>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! G0 = 0&(Ch(1,G0)&(K558>1|K559>G0))])) ])
2019-10-14 17:12:02,600 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&ylen() > G0&! Ch(G0,G0)])
 f2:!(!Ch(0,0))=>(exists(K558:Int,K559:Int)[ (Ch(K558,K559)&turn(p1)&K558>=0&K558<xlen()&K559>=0&K559<ylen())&((( !(Ch(0,0)&(K558>0|K559>0)) ) => ( !(Ch(0,0)&(K558>0|K559>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! G0 = 0&(Ch(1,G0)&(K558>1|K559>G0))])) ])
2019-10-14 17:12:02,635 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 = 0&Ch(1,G0)])
 f2:forall(K555:Int,K556:Int)[ Ch(K555,K556)&turn(p2)&K555>=0&K555<xlen()&K556>=0&K556<ylen()=>((( !(Ch(0,0)&(K555>0|K556>0)) ) => ( !(Ch(0,0)&(K555>0|K556>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K557:Int)[ (ylen()=K557)&(G0>=0& K557 > G0&! (Ch(G0,G0)&(K555>G0|K556>G0)))] ])) ]
2019-10-14 17:12:02,679 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 = 0&Ch(1,G0)])
 f2:forall(K555:Int,K556:Int)[ Ch(K555,K556)&turn(p2)&K555>=0&K555<xlen()&K556>=0&K556<ylen()=>((( !(Ch(0,0)&(K555>0|K556>0)) ) => ( !(Ch(0,0)&(K555>0|K556>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K557:Int)[ (ylen()=K557)&(G0>=0& K557 > G0&! (Ch(G0,G0)&(K555>G0|K556>G0)))] ])) ]
2019-10-14 17:12:04,770 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&ylen() > G0&! Ch(G0,G0)])&!(turn(p2))
 f2:!(!Ch(0,0))=>(exists(K563:Int,K564:Int)[ (Ch(K563,K564)&turn(p1)&K563>=0&K563<xlen()&K564>=0&K564<ylen())&((( !(Ch(0,0)&(K563>0|K564>0)) ) => ( !(Ch(0,0)&(K563>0|K564>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! G0 = 0&(Ch(1,G0)&(K563>1|K564>G0))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K563>G0|K564>G1))&! (Ch(G1,G0)&(K563>G1|K564>G0))])) ])
2019-10-14 17:12:14,838 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 = 0&Ch(1,G0)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,G0)])
 f2:forall(K560:Int,K561:Int)[ Ch(K560,K561)&turn(p2)&K560>=0&K560<xlen()&K561>=0&K561<ylen()=>((( !(Ch(0,0)&(K560>0|K561>0)) ) => ( !(Ch(0,0)&(K560>0|K561>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K562:Int)[ (ylen()=K562)&(G0>=0& K562 > G0&! (Ch(G0,G0)&(K560>G0|K561>G0)))] ])&!((!turn(p2)))) ]
2019-10-14 17:12:14,874 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 = 0&Ch(1,G0)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,G0)])
 f2:forall(K560:Int,K561:Int)[ Ch(K560,K561)&turn(p2)&K560>=0&K560<xlen()&K561>=0&K561<ylen()=>((( !(Ch(0,0)&(K560>0|K561>0)) ) => ( !(Ch(0,0)&(K560>0|K561>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K562:Int)[ (ylen()=K562)&(G0>=0& K562 > G0&! (Ch(G0,G0)&(K560>G0|K561>G0)))] ])&!((!turn(p2)))) ]
2019-10-14 17:12:14,955 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&ylen() > G0&! Ch(G0,G0)])&!(! Ch(0,1))
 f2:!(!Ch(0,0))=>(exists(K568:Int,K569:Int)[ (Ch(K568,K569)&turn(p1)&K568>=0&K568<xlen()&K569>=0&K569<ylen())&((( !(Ch(0,0)&(K568>0|K569>0)) ) => ( !(Ch(0,0)&(K568>0|K569>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! G0 = 0&(Ch(1,G0)&(K568>1|K569>G0))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! (Ch(G0,G1)&(K568>G0|K569>G1))&(Ch(G1,G0)&(K568>G1|K569>G0))])) ])
2019-10-14 17:12:15,002 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&ylen() > G0&! Ch(G0,G0)])&!(! Ch(0,1))
 f2:!(!Ch(0,0))=>(exists(K568:Int,K569:Int)[ (Ch(K568,K569)&turn(p1)&K568>=0&K568<xlen()&K569>=0&K569<ylen())&((( !(Ch(0,0)&(K568>0|K569>0)) ) => ( !(Ch(0,0)&(K568>0|K569>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! G0 = 0&(Ch(1,G0)&(K568>1|K569>G0))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! (Ch(G0,G1)&(K568>G0|K569>G1))&(Ch(G1,G0)&(K568>G1|K569>G0))])) ])
2019-10-14 17:12:15,044 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 = 0&Ch(1,G0)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! Ch(G0,G1)&Ch(G1,G0)])
 f2:forall(K565:Int,K566:Int)[ Ch(K565,K566)&turn(p2)&K565>=0&K565<xlen()&K566>=0&K566<ylen()=>((( !(Ch(0,0)&(K565>0|K566>0)) ) => ( !(Ch(0,0)&(K565>0|K566>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K567:Int)[ (ylen()=K567)&(G0>=0& K567 > G0&! (Ch(G0,G0)&(K565>G0|K566>G0)))] ])&!(! (Ch(0,1)&(K565>0|K566>1)))) ]
2019-10-14 17:12:15,079 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 = 0&Ch(1,G0)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! Ch(G0,G1)&Ch(G1,G0)])
 f2:forall(K565:Int,K566:Int)[ Ch(K565,K566)&turn(p2)&K565>=0&K565<xlen()&K566>=0&K566<ylen()=>((( !(Ch(0,0)&(K565>0|K566>0)) ) => ( !(Ch(0,0)&(K565>0|K566>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K567:Int)[ (ylen()=K567)&(G0>=0& K567 > G0&! (Ch(G0,G0)&(K565>G0|K566>G0)))] ])&!(! (Ch(0,1)&(K565>0|K566>1)))) ]
2019-10-14 17:12:15,880 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! xlen() = G0&turn(p2)])&!(exists(G0:Int)[G0>=0&! xlen() = G0&turn(p2)])
 f2:!(!Ch(0,0))=>(exists(K572:Int,K573:Int)[ (Ch(K572,K573)&turn(p1)&K572>=0&K572<xlen()&K573>=0&K573<ylen())&((( !(Ch(0,0)&(K572>0|K573>0)) ) => ( !(Ch(0,0)&(K572>0|K573>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! G0 = 0&(Ch(1,G0)&(K572>1|K573>G0))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! (Ch(G0,G1)&(K572>G0|K573>G1))&(Ch(G1,G0)&(K572>G1|K573>G0))])) ])
2019-10-14 17:12:15,928 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 = 0&Ch(1,G0)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! Ch(G0,G1)&Ch(G1,G0)])
 f2:forall(K570:Int,K571:Int)[ Ch(K570,K571)&turn(p2)&K570>=0&K570<xlen()&K571>=0&K571<ylen()=>((( !(Ch(0,0)&(K570>0|K571>0)) ) => ( !(Ch(0,0)&(K570>0|K571>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! (xlen()=G0)&(!turn(p2))])&!(exists(G0:Int)[G0>=0&! (xlen()=G0)&(!turn(p2))])) ]
2019-10-14 17:12:41,342 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! xlen() = G0&turn(p2)])&!(exists(G0:Int)[G0>=0&! xlen() = G0&turn(p2)])&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(1,G0)&! Ch(0,1)])
 f2:!(!Ch(0,0))=>(exists(K576:Int,K577:Int)[ (Ch(K576,K577)&turn(p1)&K576>=0&K576<xlen()&K577>=0&K577<ylen())&((( !(Ch(0,0)&(K576>0|K577>0)) ) => ( !(Ch(0,0)&(K576>0|K577>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! G0 = 0&(Ch(1,G0)&(K576>1|K577>G0))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! (Ch(G0,G1)&(K576>G0|K577>G1))&(Ch(G1,G0)&(K576>G1|K577>G0))])) ])
2019-10-14 17:12:48,816 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! xlen() = G0&turn(p2)])&!(exists(G0:Int)[G0>=0&! xlen() = G0&turn(p2)])&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(1,G0)&! Ch(0,1)])
 f2:!(!Ch(0,0))=>(exists(K576:Int,K577:Int)[ (Ch(K576,K577)&turn(p1)&K576>=0&K576<xlen()&K577>=0&K577<ylen())&((( !(Ch(0,0)&(K576>0|K577>0)) ) => ( !(Ch(0,0)&(K576>0|K577>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! G0 = 0&(Ch(1,G0)&(K576>1|K577>G0))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! (Ch(G0,G1)&(K576>G0|K577>G1))&(Ch(G1,G0)&(K576>G1|K577>G0))])) ])
2019-10-14 17:12:48,894 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 = 0&Ch(1,G0)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! Ch(G0,G1)&Ch(G1,G0)])
 f2:forall(K574:Int,K575:Int)[ Ch(K574,K575)&turn(p2)&K574>=0&K574<xlen()&K575>=0&K575<ylen()=>((( !(Ch(0,0)&(K574>0|K575>0)) ) => ( !(Ch(0,0)&(K574>0|K575>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! (xlen()=G0)&(!turn(p2))])&!(exists(G0:Int)[G0>=0&! (xlen()=G0)&(!turn(p2))])&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K574>0|K575>G0))&! (Ch(1,G0)&(K574>1|K575>G0))&! (Ch(0,1)&(K574>0|K575>1))])) ]
2019-10-14 17:12:48,940 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 = 0&Ch(1,G0)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! Ch(G0,G1)&Ch(G1,G0)])
 f2:forall(K574:Int,K575:Int)[ Ch(K574,K575)&turn(p2)&K574>=0&K574<xlen()&K575>=0&K575<ylen()=>((( !(Ch(0,0)&(K574>0|K575>0)) ) => ( !(Ch(0,0)&(K574>0|K575>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! (xlen()=G0)&(!turn(p2))])&!(exists(G0:Int)[G0>=0&! (xlen()=G0)&(!turn(p2))])&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K574>0|K575>G0))&! (Ch(1,G0)&(K574>1|K575>G0))&! (Ch(0,1)&(K574>0|K575>1))])) ]
2019-10-14 17:12:48,977 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 = 0&Ch(1,G0)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! Ch(G0,G1)&Ch(G1,G0)])
 f2:forall(K574:Int,K575:Int)[ Ch(K574,K575)&turn(p2)&K574>=0&K574<xlen()&K575>=0&K575<ylen()=>((( !(Ch(0,0)&(K574>0|K575>0)) ) => ( !(Ch(0,0)&(K574>0|K575>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! (xlen()=G0)&(!turn(p2))])&!(exists(G0:Int)[G0>=0&! (xlen()=G0)&(!turn(p2))])&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K574>0|K575>G0))&! (Ch(1,G0)&(K574>1|K575>G0))&! (Ch(0,1)&(K574>0|K575>1))])) ]
2019-10-14 18:49:38,484 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:!(!Ch(0,0))=>(exists(K21:Int,K22:Int)[ (Ch(K21,K22)&turn(p1)&K21>=0&K21<xlen()&K22>=0&K22<ylen())&(( !(Ch(0,0)&(K21>0|K22>0)) ) => ( !(Ch(0,0)&(K21>0|K22>0))&(!turn(p1)) )) ])
2019-10-14 18:49:38,561 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:forall(K19:Int,K20:Int)[ Ch(K19,K20)&turn(p2)&K19>=0&K19<xlen()&K20>=0&K20<ylen()=>(( !(Ch(0,0)&(K19>0|K20>0)) ) => ( !(Ch(0,0)&(K19>0|K20>0))&(!turn(p1)) )) ]
2019-10-14 18:49:38,734 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(0,X1)])
 f2:!(!Ch(0,0))=>(exists(K25:Int,K26:Int)[ (Ch(K25,K26)&turn(p1)&K25>=0&K25<xlen()&K26>=0&K26<ylen())&(( !(Ch(0,0)&(K25>0|K26>0)) ) => ( !(Ch(0,0)&(K25>0|K26>0))&(!turn(p1)) )) ])
2019-10-14 18:49:38,769 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:forall(K23:Int,K24:Int)[ Ch(K23,K24)&turn(p2)&K23>=0&K23<xlen()&K24>=0&K24<ylen()=>((( !(Ch(0,0)&(K23>0|K24>0)) ) => ( !(Ch(0,0)&(K23>0|K24>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(Ch(0,X1)&(K23>0|K24>X1))])) ]
2019-10-14 18:49:39,167 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(0,X1)])
 f2:!(!Ch(0,0))=>(exists(K29:Int,K30:Int)[ (Ch(K29,K30)&turn(p1)&K29>=0&K29<xlen()&K30>=0&K30<ylen())&((( !(Ch(0,0)&(K29>0|K30>0)) ) => ( !(Ch(0,0)&(K29>0|K30>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(Ch(1,X1)&(K29>1|K30>X1))])) ])
2019-10-14 18:49:39,216 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(1,X1)])
 f2:forall(K27:Int,K28:Int)[ Ch(K27,K28)&turn(p2)&K27>=0&K27<xlen()&K28>=0&K28<ylen()=>((( !(Ch(0,0)&(K27>0|K28>0)) ) => ( !(Ch(0,0)&(K27>0|K28>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(Ch(0,X1)&(K27>0|K28>X1))])) ]
2019-10-14 18:49:39,258 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(1,X1)])
 f2:forall(K27:Int,K28:Int)[ Ch(K27,K28)&turn(p2)&K27>=0&K27<xlen()&K28>=0&K28<ylen()=>((( !(Ch(0,0)&(K27>0|K28>0)) ) => ( !(Ch(0,0)&(K27>0|K28>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(Ch(0,X1)&(K27>0|K28>X1))])) ]
2019-10-14 18:49:39,911 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(0,X1)])
 f2:!(!Ch(0,0))=>(exists(K33:Int,K34:Int)[ (Ch(K33,K34)&turn(p1)&K33>=0&K33<xlen()&K34>=0&K34<ylen())&((( !(Ch(0,0)&(K33>0|K34>0)) ) => ( !(Ch(0,0)&(K33>0|K34>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(Ch(1,X1)&(K33>1|K34>X1))])&!(exists(X1:Int)[X1>=0&(Ch(0,X1)&(K33>0|K34>X1))])) ])
2019-10-14 18:49:39,948 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(1,X1)])&!(exists(X1:Int)[X1>=0&Ch(0,X1)])
 f2:forall(K31:Int,K32:Int)[ Ch(K31,K32)&turn(p2)&K31>=0&K31<xlen()&K32>=0&K32<ylen()=>((( !(Ch(0,0)&(K31>0|K32>0)) ) => ( !(Ch(0,0)&(K31>0|K32>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(Ch(0,X1)&(K31>0|K32>X1))])) ]
2019-10-14 18:49:39,980 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:forall(K16:Int,K17:Int)[K16>=0&K16<xlen()&K17>=0&K17<ylen()=>Ch(K16,K17)]&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)
 f2:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(0,X1)])
2019-10-14 18:49:40,954 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 0&! Ch(1,G0)])
 f2:!(!Ch(0,0))=>(exists(K37:Int,K38:Int)[ (Ch(K37,K38)&turn(p1)&K37>=0&K37<xlen()&K38>=0&K38<ylen())&((( !(Ch(0,0)&(K37>0|K38>0)) ) => ( !(Ch(0,0)&(K37>0|K38>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 0&(Ch(1,G0)&(K37>1|K38>G0))])&!(exists(G0:Int)[G0>=0&G0 = 0&! (Ch(1,G0)&(K37>1|K38>G0))])) ])
2019-10-14 18:49:41,000 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 > 0&Ch(1,G0)])&!(exists(G0:Int)[G0>=0&G0 = 0&! Ch(1,G0)])
 f2:forall(K35:Int,K36:Int)[ Ch(K35,K36)&turn(p2)&K35>=0&K35<xlen()&K36>=0&K36<ylen()=>((( !(Ch(0,0)&(K35>0|K36>0)) ) => ( !(Ch(0,0)&(K35>0|K36>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 0&! (Ch(1,G0)&(K35>1|K36>G0))])) ]
2019-10-14 18:49:41,607 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 0&! Ch(1,G0)])
 f2:!(!Ch(0,0))=>(exists(K41:Int,K42:Int)[ (Ch(K41,K42)&turn(p1)&K41>=0&K41<xlen()&K42>=0&K42<ylen())&((( !(Ch(0,0)&(K41>0|K42>0)) ) => ( !(Ch(0,0)&(K41>0|K42>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 0&(Ch(1,G0)&(K41>1|K42>G0))])&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K41>0|K42>G0))&! (Ch(G0,0)&(K41>G0|K42>0))])) ])
2019-10-14 18:49:41,671 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 0&! Ch(1,G0)])
 f2:!(!Ch(0,0))=>(exists(K41:Int,K42:Int)[ (Ch(K41,K42)&turn(p1)&K41>=0&K41<xlen()&K42>=0&K42<ylen())&((( !(Ch(0,0)&(K41>0|K42>0)) ) => ( !(Ch(0,0)&(K41>0|K42>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 0&(Ch(1,G0)&(K41>1|K42>G0))])&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K41>0|K42>G0))&! (Ch(G0,0)&(K41>G0|K42>0))])) ])
2019-10-14 18:49:41,709 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 > 0&Ch(1,G0)])&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(G0,0)])
 f2:forall(K39:Int,K40:Int)[ Ch(K39,K40)&turn(p2)&K39>=0&K39<xlen()&K40>=0&K40<ylen()=>((( !(Ch(0,0)&(K39>0|K40>0)) ) => ( !(Ch(0,0)&(K39>0|K40>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 0&! (Ch(1,G0)&(K39>1|K40>G0))])) ]
2019-10-14 18:49:42,749 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 0&! Ch(1,G0)])&!(turn(p2))
 f2:!(!Ch(0,0))=>(exists(K45:Int,K46:Int)[ (Ch(K45,K46)&turn(p1)&K45>=0&K45<xlen()&K46>=0&K46<ylen())&((( !(Ch(0,0)&(K45>0|K46>0)) ) => ( !(Ch(0,0)&(K45>0|K46>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K45>0|K46>G0))&! (Ch(G0,0)&(K45>G0|K46>0))])&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K45>1|K46>G0))&! (Ch(0,1)&(K45>0|K46>1))])) ])
2019-10-14 18:49:43,088 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 0&! Ch(1,G0)])&!(turn(p2))
 f2:!(!Ch(0,0))=>(exists(K45:Int,K46:Int)[ (Ch(K45,K46)&turn(p1)&K45>=0&K45<xlen()&K46>=0&K46<ylen())&((( !(Ch(0,0)&(K45>0|K46>0)) ) => ( !(Ch(0,0)&(K45>0|K46>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K45>0|K46>G0))&! (Ch(G0,0)&(K45>G0|K46>0))])&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K45>1|K46>G0))&! (Ch(0,1)&(K45>0|K46>1))])) ])
2019-10-14 18:49:43,135 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(G0,0)])&!(exists(G0:Int)[G0>=0&Ch(1,G0)&! Ch(0,1)])
 f2:forall(K43:Int,K44:Int)[ Ch(K43,K44)&turn(p2)&K43>=0&K43<xlen()&K44>=0&K44<ylen()=>((( !(Ch(0,0)&(K43>0|K44>0)) ) => ( !(Ch(0,0)&(K43>0|K44>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 0&! (Ch(1,G0)&(K43>1|K44>G0))])&!((!turn(p2)))) ]
2019-10-14 18:49:43,842 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(turn(p2))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&turn(p2)])
 f2:!(!Ch(0,0))=>(exists(K49:Int,K50:Int)[ (Ch(K49,K50)&turn(p1)&K49>=0&K49<xlen()&K50>=0&K50<ylen())&((( !(Ch(0,0)&(K49>0|K50>0)) ) => ( !(Ch(0,0)&(K49>0|K50>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K49>0|K50>G0))&! (Ch(G0,0)&(K49>G0|K50>0))])&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K49>1|K50>G0))&! (Ch(0,1)&(K49>0|K50>1))])) ])
2019-10-14 18:49:43,889 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(G0,0)])&!(exists(G0:Int)[G0>=0&Ch(1,G0)&! Ch(0,1)])
 f2:forall(K47:Int,K48:Int)[ Ch(K47,K48)&turn(p2)&K47>=0&K47<xlen()&K48>=0&K48<ylen()=>((( !(Ch(0,0)&(K47>0|K48>0)) ) => ( !(Ch(0,0)&(K47>0|K48>0))&(!turn(p1)) ))&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K47>0|K48>G0))&(!turn(p2))])) ]
2019-10-14 18:50:09,537 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&turn(p2)])&!(turn(p2))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(1,0)&! Ch(0,1)])
 f2:!(!Ch(0,0))=>(exists(K53:Int,K54:Int)[ (Ch(K53,K54)&turn(p1)&K53>=0&K53<xlen()&K54>=0&K54<ylen())&((( !(Ch(0,0)&(K53>0|K54>0)) ) => ( !(Ch(0,0)&(K53>0|K54>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K53>0|K54>G0))&! (Ch(G0,0)&(K53>G0|K54>0))])&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K53>1|K54>G0))&! (Ch(0,1)&(K53>0|K54>1))])) ])
2019-10-14 18:50:10,295 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&turn(p2)])&!(turn(p2))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(1,0)&! Ch(0,1)])
 f2:!(!Ch(0,0))=>(exists(K53:Int,K54:Int)[ (Ch(K53,K54)&turn(p1)&K53>=0&K53<xlen()&K54>=0&K54<ylen())&((( !(Ch(0,0)&(K53>0|K54>0)) ) => ( !(Ch(0,0)&(K53>0|K54>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K53>0|K54>G0))&! (Ch(G0,0)&(K53>G0|K54>0))])&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K53>1|K54>G0))&! (Ch(0,1)&(K53>0|K54>1))])) ])
2019-10-14 18:50:10,341 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(G0,0)])&!(exists(G0:Int)[G0>=0&Ch(1,G0)&! Ch(0,1)])
 f2:forall(K51:Int,K52:Int)[ Ch(K51,K52)&turn(p2)&K51>=0&K51<xlen()&K52>=0&K52<ylen()=>((( !(Ch(0,0)&(K51>0|K52>0)) ) => ( !(Ch(0,0)&(K51>0|K52>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K51>0|K52>G0))&(!turn(p2))])&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K51>0|K52>G0))&! (Ch(1,0)&(K51>1|K52>0))&! (Ch(0,1)&(K51>0|K52>1))])) ]
2019-10-14 18:50:10,383 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(G0,0)])&!(exists(G0:Int)[G0>=0&Ch(1,G0)&! Ch(0,1)])
 f2:forall(K51:Int,K52:Int)[ Ch(K51,K52)&turn(p2)&K51>=0&K51<xlen()&K52>=0&K52<ylen()=>((( !(Ch(0,0)&(K51>0|K52>0)) ) => ( !(Ch(0,0)&(K51>0|K52>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K51>0|K52>G0))&(!turn(p2))])&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K51>0|K52>G0))&! (Ch(1,0)&(K51>1|K52>0))&! (Ch(0,1)&(K51>0|K52>1))])) ]
2019-10-14 18:50:10,417 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(G0,0)])&!(exists(G0:Int)[G0>=0&Ch(1,G0)&! Ch(0,1)])
 f2:forall(K51:Int,K52:Int)[ Ch(K51,K52)&turn(p2)&K51>=0&K51<xlen()&K52>=0&K52<ylen()=>((( !(Ch(0,0)&(K51>0|K52>0)) ) => ( !(Ch(0,0)&(K51>0|K52>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K51>0|K52>G0))&(!turn(p2))])&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K51>0|K52>G0))&! (Ch(1,0)&(K51>1|K52>0))&! (Ch(0,1)&(K51>0|K52>1))])) ]
2019-10-14 18:50:47,325 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&turn(p2)])&!(turn(p2))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(1,0)&! Ch(0,1)])&!(exists(G0:Int)[G0>=0&Ch(1,0)&Ch(G0,1)&! Ch(1,1)])
 f2:!(!Ch(0,0))=>(exists(K57:Int,K58:Int)[ (Ch(K57,K58)&turn(p1)&K57>=0&K57<xlen()&K58>=0&K58<ylen())&((( !(Ch(0,0)&(K57>0|K58>0)) ) => ( !(Ch(0,0)&(K57>0|K58>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K57>0|K58>G0))&! (Ch(G0,0)&(K57>G0|K58>0))])&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K57>1|K58>G0))&! (Ch(0,1)&(K57>0|K58>1))])&!(exists(G0:Int)[G0>=0&G0 > 1&(Ch(0,G0)&(K57>0|K58>G0))])) ])
2019-10-14 18:50:47,989 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&turn(p2)])&!(turn(p2))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(1,0)&! Ch(0,1)])&!(exists(G0:Int)[G0>=0&Ch(1,0)&Ch(G0,1)&! Ch(1,1)])
 f2:!(!Ch(0,0))=>(exists(K57:Int,K58:Int)[ (Ch(K57,K58)&turn(p1)&K57>=0&K57<xlen()&K58>=0&K58<ylen())&((( !(Ch(0,0)&(K57>0|K58>0)) ) => ( !(Ch(0,0)&(K57>0|K58>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K57>0|K58>G0))&! (Ch(G0,0)&(K57>G0|K58>0))])&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K57>1|K58>G0))&! (Ch(0,1)&(K57>0|K58>1))])&!(exists(G0:Int)[G0>=0&G0 > 1&(Ch(0,G0)&(K57>0|K58>G0))])) ])
2019-10-14 18:50:48,030 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&turn(p2)])&!(turn(p2))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(1,0)&! Ch(0,1)])&!(exists(G0:Int)[G0>=0&Ch(1,0)&Ch(G0,1)&! Ch(1,1)])
 f2:!(!Ch(0,0))=>(exists(K57:Int,K58:Int)[ (Ch(K57,K58)&turn(p1)&K57>=0&K57<xlen()&K58>=0&K58<ylen())&((( !(Ch(0,0)&(K57>0|K58>0)) ) => ( !(Ch(0,0)&(K57>0|K58>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K57>0|K58>G0))&! (Ch(G0,0)&(K57>G0|K58>0))])&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K57>1|K58>G0))&! (Ch(0,1)&(K57>0|K58>1))])&!(exists(G0:Int)[G0>=0&G0 > 1&(Ch(0,G0)&(K57>0|K58>G0))])) ])
2019-10-14 18:50:48,098 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(G0,0)])&!(exists(G0:Int)[G0>=0&Ch(1,G0)&! Ch(0,1)])&!(exists(G0:Int)[G0>=0&G0 > 1&Ch(0,G0)])
 f2:forall(K55:Int,K56:Int)[ Ch(K55,K56)&turn(p2)&K55>=0&K55<xlen()&K56>=0&K56<ylen()=>((( !(Ch(0,0)&(K55>0|K56>0)) ) => ( !(Ch(0,0)&(K55>0|K56>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K55>0|K56>G0))&(!turn(p2))])&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K55>0|K56>G0))&! (Ch(1,0)&(K55>1|K56>0))&! (Ch(0,1)&(K55>0|K56>1))])&!(exists(G0:Int)[G0>=0&(Ch(1,0)&(K55>1|K56>0))&(Ch(G0,1)&(K55>G0|K56>1))&! (Ch(1,1)&(K55>1|K56>1))])) ]
2019-10-14 18:50:56,571 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&turn(p2)])&!(turn(p2))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(1,0)&! Ch(0,1)])&!(exists(G0:Int)[G0>=0&Ch(1,0)&Ch(G0,1)&! Ch(1,1)])
 f2:!(!Ch(0,0))=>(exists(K61:Int,K62:Int)[ (Ch(K61,K62)&turn(p1)&K61>=0&K61<xlen()&K62>=0&K62<ylen())&((( !(Ch(0,0)&(K61>0|K62>0)) ) => ( !(Ch(0,0)&(K61>0|K62>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(G0,1)&(K61>G0|K62>1))&! (Ch(1,G0)&(K61>1|K62>G0))])&!(exists(G0:Int)[G0>=0&G0 > 1&(Ch(G0,G0)&(K61>G0|K62>G0))])) ])
2019-10-14 18:50:56,622 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(1,G0)])&!(exists(G0:Int)[G0>=0&G0 > 1&Ch(G0,G0)])
 f2:forall(K59:Int,K60:Int)[ Ch(K59,K60)&turn(p2)&K59>=0&K59<xlen()&K60>=0&K60<ylen()=>((( !(Ch(0,0)&(K59>0|K60>0)) ) => ( !(Ch(0,0)&(K59>0|K60>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K59>0|K60>G0))&(!turn(p2))])&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K59>0|K60>G0))&! (Ch(1,0)&(K59>1|K60>0))&! (Ch(0,1)&(K59>0|K60>1))])&!(exists(G0:Int)[G0>=0&(Ch(1,0)&(K59>1|K60>0))&(Ch(G0,1)&(K59>G0|K60>1))&! (Ch(1,1)&(K59>1|K60>1))])) ]
2019-10-14 18:50:57,327 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&turn(p2)])&!(turn(p2))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(1,0)&! Ch(0,1)])&!(exists(G0:Int)[G0>=0&Ch(1,0)&Ch(G0,1)&! Ch(1,1)])
 f2:!(!Ch(0,0))=>(exists(K65:Int,K66:Int)[ (Ch(K65,K66)&turn(p1)&K65>=0&K65<xlen()&K66>=0&K66<ylen())&((( !(Ch(0,0)&(K65>0|K66>0)) ) => ( !(Ch(0,0)&(K65>0|K66>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(G0,1)&(K65>G0|K66>1))&! (Ch(1,G0)&(K65>1|K66>G0))])&!(exists(G0:Int)[G0>=0&G0 > 1&(Ch(G0,G0)&(K65>G0|K66>G0))])&!((Ch(1,1)&(K65>1|K66>1)))) ])
2019-10-14 18:50:57,369 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(1,G0)])&!(exists(G0:Int)[G0>=0&G0 > 1&Ch(G0,G0)])&!(Ch(1,1))
 f2:forall(K63:Int,K64:Int)[ Ch(K63,K64)&turn(p2)&K63>=0&K63<xlen()&K64>=0&K64<ylen()=>((( !(Ch(0,0)&(K63>0|K64>0)) ) => ( !(Ch(0,0)&(K63>0|K64>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K63>0|K64>G0))&(!turn(p2))])&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K63>0|K64>G0))&! (Ch(1,0)&(K63>1|K64>0))&! (Ch(0,1)&(K63>0|K64>1))])&!(exists(G0:Int)[G0>=0&(Ch(1,0)&(K63>1|K64>0))&(Ch(G0,1)&(K63>G0|K64>1))&! (Ch(1,1)&(K63>1|K64>1))])) ]
2019-10-14 18:50:57,419 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(1,G0)])&!(exists(G0:Int)[G0>=0&G0 > 1&Ch(G0,G0)])&!(Ch(1,1))
 f2:forall(K63:Int,K64:Int)[ Ch(K63,K64)&turn(p2)&K63>=0&K63<xlen()&K64>=0&K64<ylen()=>((( !(Ch(0,0)&(K63>0|K64>0)) ) => ( !(Ch(0,0)&(K63>0|K64>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K63>0|K64>G0))&(!turn(p2))])&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K63>0|K64>G0))&! (Ch(1,0)&(K63>1|K64>0))&! (Ch(0,1)&(K63>0|K64>1))])&!(exists(G0:Int)[G0>=0&(Ch(1,0)&(K63>1|K64>0))&(Ch(G0,1)&(K63>G0|K64>1))&! (Ch(1,1)&(K63>1|K64>1))])) ]
2019-10-14 18:51:24,352 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:!(!Ch(0,0))=>(exists(K69:Int,K70:Int)[ (Ch(K69,K70)&turn(p1)&K69>=0&K69<xlen()&K70>=0&K70<ylen())&(( !(Ch(0,0)&(K69>0|K70>0)) ) => ( !(Ch(0,0)&(K69>0|K70>0))&(!turn(p1)) )) ])
2019-10-14 18:51:24,394 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:forall(K67:Int,K68:Int)[ Ch(K67,K68)&turn(p2)&K67>=0&K67<xlen()&K68>=0&K68<ylen()=>(( !(Ch(0,0)&(K67>0|K68>0)) ) => ( !(Ch(0,0)&(K67>0|K68>0))&(!turn(p1)) )) ]
2019-10-14 18:51:24,567 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(X1,0)])
 f2:!(!Ch(0,0))=>(exists(K73:Int,K74:Int)[ (Ch(K73,K74)&turn(p1)&K73>=0&K73<xlen()&K74>=0&K74<ylen())&(( !(Ch(0,0)&(K73>0|K74>0)) ) => ( !(Ch(0,0)&(K73>0|K74>0))&(!turn(p1)) )) ])
2019-10-14 18:51:24,600 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:forall(K71:Int,K72:Int)[ Ch(K71,K72)&turn(p2)&K71>=0&K71<xlen()&K72>=0&K72<ylen()=>((( !(Ch(0,0)&(K71>0|K72>0)) ) => ( !(Ch(0,0)&(K71>0|K72>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(Ch(X1,0)&(K71>X1|K72>0))])) ]
2019-10-14 18:51:24,964 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(X1,0)])
 f2:!(!Ch(0,0))=>(exists(K77:Int,K78:Int)[ (Ch(K77,K78)&turn(p1)&K77>=0&K77<xlen()&K78>=0&K78<ylen())&((( !(Ch(0,0)&(K77>0|K78>0)) ) => ( !(Ch(0,0)&(K77>0|K78>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(Ch(X1,0)&(K77>X1|K78>0))])) ])
2019-10-14 18:51:24,999 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(X1,0)])
 f2:forall(K75:Int,K76:Int)[ Ch(K75,K76)&turn(p2)&K75>=0&K75<xlen()&K76>=0&K76<ylen()=>((( !(Ch(0,0)&(K75>0|K76>0)) ) => ( !(Ch(0,0)&(K75>0|K76>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(Ch(X1,0)&(K75>X1|K76>0))])) ]
2019-10-14 18:51:25,030 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:forall(K16:Int,K17:Int)[K16>=0&K16<xlen()&K17>=0&K17<ylen()=>Ch(K16,K17)]&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)
 f2:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(X1,0)])
2019-10-14 18:51:25,908 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 1&! Ch(0,G0)])
 f2:!(!Ch(0,0))=>(exists(K81:Int,K82:Int)[ (Ch(K81,K82)&turn(p1)&K81>=0&K81<xlen()&K82>=0&K82<ylen())&((( !(Ch(0,0)&(K81>0|K82>0)) ) => ( !(Ch(0,0)&(K81>0|K82>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 1&! (Ch(0,G0)&(K81>0|K82>G0))])) ])
2019-10-14 18:51:25,959 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 1&! Ch(0,G0)])
 f2:!(!Ch(0,0))=>(exists(K81:Int,K82:Int)[ (Ch(K81,K82)&turn(p1)&K81>=0&K81<xlen()&K82>=0&K82<ylen())&((( !(Ch(0,0)&(K81>0|K82>0)) ) => ( !(Ch(0,0)&(K81>0|K82>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 1&! (Ch(0,G0)&(K81>0|K82>G0))])) ])
2019-10-14 18:51:26,006 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 1&! Ch(0,G0)])
 f2:forall(K79:Int,K80:Int)[ Ch(K79,K80)&turn(p2)&K79>=0&K79<xlen()&K80>=0&K80<ylen()=>((( !(Ch(0,0)&(K79>0|K80>0)) ) => ( !(Ch(0,0)&(K79>0|K80>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 1&! (Ch(0,G0)&(K79>0|K80>G0))])) ]
2019-10-14 18:51:26,610 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 1&! Ch(0,G0)])
 f2:!(!Ch(0,0))=>(exists(K85:Int,K86:Int)[ (Ch(K85,K86)&turn(p1)&K85>=0&K85<xlen()&K86>=0&K86<ylen())&((( !(Ch(0,0)&(K85>0|K86>0)) ) => ( !(Ch(0,0)&(K85>0|K86>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 1&(Ch(1,G0)&(K85>1|K86>G0))])) ])
2019-10-14 18:51:26,659 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 1&! Ch(0,G0)])
 f2:!(!Ch(0,0))=>(exists(K85:Int,K86:Int)[ (Ch(K85,K86)&turn(p1)&K85>=0&K85<xlen()&K86>=0&K86<ylen())&((( !(Ch(0,0)&(K85>0|K86>0)) ) => ( !(Ch(0,0)&(K85>0|K86>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 1&(Ch(1,G0)&(K85>1|K86>G0))])) ])
2019-10-14 18:51:26,697 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 1&Ch(1,G0)])
 f2:forall(K83:Int,K84:Int)[ Ch(K83,K84)&turn(p2)&K83>=0&K83<xlen()&K84>=0&K84<ylen()=>((( !(Ch(0,0)&(K83>0|K84>0)) ) => ( !(Ch(0,0)&(K83>0|K84>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 1&! (Ch(0,G0)&(K83>0|K84>G0))])) ]
2019-10-14 18:51:26,734 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 1&Ch(1,G0)])
 f2:forall(K83:Int,K84:Int)[ Ch(K83,K84)&turn(p2)&K83>=0&K83<xlen()&K84>=0&K84<ylen()=>((( !(Ch(0,0)&(K83>0|K84>0)) ) => ( !(Ch(0,0)&(K83>0|K84>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 1&! (Ch(0,G0)&(K83>0|K84>G0))])) ]
2019-10-14 18:51:28,053 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 1&! Ch(0,G0)])&!(! turn(p1))
 f2:!(!Ch(0,0))=>(exists(K89:Int,K90:Int)[ (Ch(K89,K90)&turn(p1)&K89>=0&K89<xlen()&K90>=0&K90<ylen())&((( !(Ch(0,0)&(K89>0|K90>0)) ) => ( !(Ch(0,0)&(K89>0|K90>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 1&(Ch(1,G0)&(K89>1|K90>G0))])&!((Ch(0,1)&(K89>0|K90>1))&! (Ch(1,0)&(K89>1|K90>0)))) ])
2019-10-14 18:51:28,099 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 1&Ch(1,G0)])&!(Ch(0,1)&! Ch(1,0))
 f2:forall(K87:Int,K88:Int)[ Ch(K87,K88)&turn(p2)&K87>=0&K87<xlen()&K88>=0&K88<ylen()=>((( !(Ch(0,0)&(K87>0|K88>0)) ) => ( !(Ch(0,0)&(K87>0|K88>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 1&! (Ch(0,G0)&(K87>0|K88>G0))])&!(! (!turn(p1)))) ]
2019-10-14 18:51:28,627 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(! turn(p1))&!(exists(G0:Int)[G0>=0&Ch(G0,0)&! turn(p1)])
 f2:!(!Ch(0,0))=>(exists(K93:Int,K94:Int)[ (Ch(K93,K94)&turn(p1)&K93>=0&K93<xlen()&K94>=0&K94<ylen())&((( !(Ch(0,0)&(K93>0|K94>0)) ) => ( !(Ch(0,0)&(K93>0|K94>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 1&(Ch(1,G0)&(K93>1|K94>G0))])&!((Ch(0,1)&(K93>0|K94>1))&! (Ch(1,0)&(K93>1|K94>0)))) ])
2019-10-14 18:51:28,670 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 1&Ch(1,G0)])&!(Ch(0,1)&! Ch(1,0))
 f2:forall(K91:Int,K92:Int)[ Ch(K91,K92)&turn(p2)&K91>=0&K91<xlen()&K92>=0&K92<ylen()=>((( !(Ch(0,0)&(K91>0|K92>0)) ) => ( !(Ch(0,0)&(K91>0|K92>0))&(!turn(p1)) ))&!(! (!turn(p1)))&!(exists(G0:Int)[G0>=0&(Ch(G0,0)&(K91>G0|K92>0))&! (!turn(p1))])) ]
2019-10-14 18:51:54,322 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(G0,0)&! turn(p1)])&!(! turn(p1))&!(exists(G0:Int)[G0>=0&Ch(G0,0)&! Ch(1,0)&! Ch(G0,1)])
 f2:!(!Ch(0,0))=>(exists(K97:Int,K98:Int)[ (Ch(K97,K98)&turn(p1)&K97>=0&K97<xlen()&K98>=0&K98<ylen())&((( !(Ch(0,0)&(K97>0|K98>0)) ) => ( !(Ch(0,0)&(K97>0|K98>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 1&(Ch(1,G0)&(K97>1|K98>G0))])&!((Ch(0,1)&(K97>0|K98>1))&! (Ch(1,0)&(K97>1|K98>0)))) ])
2019-10-14 18:51:54,369 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 1&Ch(1,G0)])&!(Ch(0,1)&! Ch(1,0))
 f2:forall(K95:Int,K96:Int)[ Ch(K95,K96)&turn(p2)&K95>=0&K95<xlen()&K96>=0&K96<ylen()=>((( !(Ch(0,0)&(K95>0|K96>0)) ) => ( !(Ch(0,0)&(K95>0|K96>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(G0,0)&(K95>G0|K96>0))&! (!turn(p1))])&!(! (!turn(p1)))&!(exists(G0:Int)[G0>=0&(Ch(G0,0)&(K95>G0|K96>0))&! (Ch(1,0)&(K95>1|K96>0))&! (Ch(G0,1)&(K95>G0|K96>1))])) ]
2019-10-14 18:51:54,417 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 1&Ch(1,G0)])&!(Ch(0,1)&! Ch(1,0))
 f2:forall(K95:Int,K96:Int)[ Ch(K95,K96)&turn(p2)&K95>=0&K95<xlen()&K96>=0&K96<ylen()=>((( !(Ch(0,0)&(K95>0|K96>0)) ) => ( !(Ch(0,0)&(K95>0|K96>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(G0,0)&(K95>G0|K96>0))&! (!turn(p1))])&!(! (!turn(p1)))&!(exists(G0:Int)[G0>=0&(Ch(G0,0)&(K95>G0|K96>0))&! (Ch(1,0)&(K95>1|K96>0))&! (Ch(G0,1)&(K95>G0|K96>1))])) ]
2019-10-14 18:51:56,230 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(G0,0)&! turn(p1)])&!(! turn(p1))&!(exists(G0:Int)[G0>=0&Ch(G0,0)&! Ch(1,0)&! Ch(G0,1)])
 f2:!(!Ch(0,0))=>(exists(K101:Int,K102:Int)[ (Ch(K101,K102)&turn(p1)&K101>=0&K101<xlen()&K102>=0&K102<ylen())&((( !(Ch(0,0)&(K101>0|K102>0)) ) => ( !(Ch(0,0)&(K101>0|K102>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 1&(Ch(1,G0)&(K101>1|K102>G0))])&!((Ch(0,1)&(K101>0|K102>1))&! (Ch(1,0)&(K101>1|K102>0)))&!(exists(G0:Int)[G0>=0&(Ch(G0,0)&(K101>G0|K102>0))&! (Ch(0,G0)&(K101>0|K102>G0))])) ])
2019-10-14 18:51:56,295 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(G0,0)&! turn(p1)])&!(! turn(p1))&!(exists(G0:Int)[G0>=0&Ch(G0,0)&! Ch(1,0)&! Ch(G0,1)])
 f2:!(!Ch(0,0))=>(exists(K101:Int,K102:Int)[ (Ch(K101,K102)&turn(p1)&K101>=0&K101<xlen()&K102>=0&K102<ylen())&((( !(Ch(0,0)&(K101>0|K102>0)) ) => ( !(Ch(0,0)&(K101>0|K102>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 1&(Ch(1,G0)&(K101>1|K102>G0))])&!((Ch(0,1)&(K101>0|K102>1))&! (Ch(1,0)&(K101>1|K102>0)))&!(exists(G0:Int)[G0>=0&(Ch(G0,0)&(K101>G0|K102>0))&! (Ch(0,G0)&(K101>0|K102>G0))])) ])
2019-10-14 18:51:56,342 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 1&Ch(1,G0)])&!(Ch(0,1)&! Ch(1,0))&!(exists(G0:Int)[G0>=0&Ch(G0,0)&! Ch(0,G0)])
 f2:forall(K99:Int,K100:Int)[ Ch(K99,K100)&turn(p2)&K99>=0&K99<xlen()&K100>=0&K100<ylen()=>((( !(Ch(0,0)&(K99>0|K100>0)) ) => ( !(Ch(0,0)&(K99>0|K100>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(G0,0)&(K99>G0|K100>0))&! (!turn(p1))])&!(! (!turn(p1)))&!(exists(G0:Int)[G0>=0&(Ch(G0,0)&(K99>G0|K100>0))&! (Ch(1,0)&(K99>1|K100>0))&! (Ch(G0,1)&(K99>G0|K100>1))])) ]
2019-10-14 18:51:56,390 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 1&Ch(1,G0)])&!(Ch(0,1)&! Ch(1,0))&!(exists(G0:Int)[G0>=0&Ch(G0,0)&! Ch(0,G0)])
 f2:forall(K99:Int,K100:Int)[ Ch(K99,K100)&turn(p2)&K99>=0&K99<xlen()&K100>=0&K100<ylen()=>((( !(Ch(0,0)&(K99>0|K100>0)) ) => ( !(Ch(0,0)&(K99>0|K100>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(G0,0)&(K99>G0|K100>0))&! (!turn(p1))])&!(! (!turn(p1)))&!(exists(G0:Int)[G0>=0&(Ch(G0,0)&(K99>G0|K100>0))&! (Ch(1,0)&(K99>1|K100>0))&! (Ch(G0,1)&(K99>G0|K100>1))])) ]
2019-10-14 18:51:56,425 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 1&Ch(1,G0)])&!(Ch(0,1)&! Ch(1,0))&!(exists(G0:Int)[G0>=0&Ch(G0,0)&! Ch(0,G0)])
 f2:forall(K99:Int,K100:Int)[ Ch(K99,K100)&turn(p2)&K99>=0&K99<xlen()&K100>=0&K100<ylen()=>((( !(Ch(0,0)&(K99>0|K100>0)) ) => ( !(Ch(0,0)&(K99>0|K100>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(G0,0)&(K99>G0|K100>0))&! (!turn(p1))])&!(! (!turn(p1)))&!(exists(G0:Int)[G0>=0&(Ch(G0,0)&(K99>G0|K100>0))&! (Ch(1,0)&(K99>1|K100>0))&! (Ch(G0,1)&(K99>G0|K100>1))])) ]
2019-10-14 18:52:07,647 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(G0,0)&! turn(p1)])&!(! turn(p1))&!(exists(G0:Int,G1:Int,G2:Int)[G0>=0&G1>=0&G2>=0&! Ch(G0,1)&Ch(G0,0)&Ch(G1,G2)&! Ch(1,G2)])
 f2:!(!Ch(0,0))=>(exists(K105:Int,K106:Int)[ (Ch(K105,K106)&turn(p1)&K105>=0&K105<xlen()&K106>=0&K106<ylen())&((( !(Ch(0,0)&(K105>0|K106>0)) ) => ( !(Ch(0,0)&(K105>0|K106>0))&(!turn(p1)) ))&!((Ch(0,1)&(K105>0|K106>1))&! (Ch(1,0)&(K105>1|K106>0)))&!(exists(G0:Int)[G0>=0&(Ch(G0,0)&(K105>G0|K106>0))&! (Ch(0,G0)&(K105>0|K106>G0))])&!(exists(G0:Int)[G0>=0&G0 >= 1&(Ch(G0,1)&(K105>G0|K106>1))])) ])
2019-10-14 18:52:07,722 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(G0,0)&! turn(p1)])&!(! turn(p1))&!(exists(G0:Int,G1:Int,G2:Int)[G0>=0&G1>=0&G2>=0&! Ch(G0,1)&Ch(G0,0)&Ch(G1,G2)&! Ch(1,G2)])
 f2:!(!Ch(0,0))=>(exists(K105:Int,K106:Int)[ (Ch(K105,K106)&turn(p1)&K105>=0&K105<xlen()&K106>=0&K106<ylen())&((( !(Ch(0,0)&(K105>0|K106>0)) ) => ( !(Ch(0,0)&(K105>0|K106>0))&(!turn(p1)) ))&!((Ch(0,1)&(K105>0|K106>1))&! (Ch(1,0)&(K105>1|K106>0)))&!(exists(G0:Int)[G0>=0&(Ch(G0,0)&(K105>G0|K106>0))&! (Ch(0,G0)&(K105>0|K106>G0))])&!(exists(G0:Int)[G0>=0&G0 >= 1&(Ch(G0,1)&(K105>G0|K106>1))])) ])
2019-10-14 18:52:07,760 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(G0,0)&! turn(p1)])&!(! turn(p1))&!(exists(G0:Int,G1:Int,G2:Int)[G0>=0&G1>=0&G2>=0&! Ch(G0,1)&Ch(G0,0)&Ch(G1,G2)&! Ch(1,G2)])
 f2:!(!Ch(0,0))=>(exists(K105:Int,K106:Int)[ (Ch(K105,K106)&turn(p1)&K105>=0&K105<xlen()&K106>=0&K106<ylen())&((( !(Ch(0,0)&(K105>0|K106>0)) ) => ( !(Ch(0,0)&(K105>0|K106>0))&(!turn(p1)) ))&!((Ch(0,1)&(K105>0|K106>1))&! (Ch(1,0)&(K105>1|K106>0)))&!(exists(G0:Int)[G0>=0&(Ch(G0,0)&(K105>G0|K106>0))&! (Ch(0,G0)&(K105>0|K106>G0))])&!(exists(G0:Int)[G0>=0&G0 >= 1&(Ch(G0,1)&(K105>G0|K106>1))])) ])
2019-10-14 18:52:07,818 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(Ch(0,1)&! Ch(1,0))&!(exists(G0:Int)[G0>=0&Ch(G0,0)&! Ch(0,G0)])&!(exists(G0:Int)[G0>=0&G0 >= 1&Ch(G0,1)])
 f2:forall(K103:Int,K104:Int)[ Ch(K103,K104)&turn(p2)&K103>=0&K103<xlen()&K104>=0&K104<ylen()=>((( !(Ch(0,0)&(K103>0|K104>0)) ) => ( !(Ch(0,0)&(K103>0|K104>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(G0,0)&(K103>G0|K104>0))&! (!turn(p1))])&!(! (!turn(p1)))&!(exists(G0:Int,G1:Int,G2:Int)[G0>=0&G1>=0&G2>=0&! (Ch(G0,1)&(K103>G0|K104>1))&(Ch(G0,0)&(K103>G0|K104>0))&(Ch(G1,G2)&(K103>G1|K104>G2))&! (Ch(1,G2)&(K103>1|K104>G2))])) ]
2019-10-14 18:52:07,859 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(Ch(0,1)&! Ch(1,0))&!(exists(G0:Int)[G0>=0&Ch(G0,0)&! Ch(0,G0)])&!(exists(G0:Int)[G0>=0&G0 >= 1&Ch(G0,1)])
 f2:forall(K103:Int,K104:Int)[ Ch(K103,K104)&turn(p2)&K103>=0&K103<xlen()&K104>=0&K104<ylen()=>((( !(Ch(0,0)&(K103>0|K104>0)) ) => ( !(Ch(0,0)&(K103>0|K104>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(G0,0)&(K103>G0|K104>0))&! (!turn(p1))])&!(! (!turn(p1)))&!(exists(G0:Int,G1:Int,G2:Int)[G0>=0&G1>=0&G2>=0&! (Ch(G0,1)&(K103>G0|K104>1))&(Ch(G0,0)&(K103>G0|K104>0))&(Ch(G1,G2)&(K103>G1|K104>G2))&! (Ch(1,G2)&(K103>1|K104>G2))])) ]
2019-10-14 18:52:07,895 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(Ch(0,1)&! Ch(1,0))&!(exists(G0:Int)[G0>=0&Ch(G0,0)&! Ch(0,G0)])&!(exists(G0:Int)[G0>=0&G0 >= 1&Ch(G0,1)])
 f2:forall(K103:Int,K104:Int)[ Ch(K103,K104)&turn(p2)&K103>=0&K103<xlen()&K104>=0&K104<ylen()=>((( !(Ch(0,0)&(K103>0|K104>0)) ) => ( !(Ch(0,0)&(K103>0|K104>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(G0,0)&(K103>G0|K104>0))&! (!turn(p1))])&!(! (!turn(p1)))&!(exists(G0:Int,G1:Int,G2:Int)[G0>=0&G1>=0&G2>=0&! (Ch(G0,1)&(K103>G0|K104>1))&(Ch(G0,0)&(K103>G0|K104>0))&(Ch(G1,G2)&(K103>G1|K104>G2))&! (Ch(1,G2)&(K103>1|K104>G2))])) ]
2019-10-14 18:52:57,016 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(G0,0)&! turn(p1)])&!(! turn(p1))
 f2:!(!Ch(0,0))=>(exists(K109:Int,K110:Int)[ (Ch(K109,K110)&turn(p1)&K109>=0&K109<xlen()&K110>=0&K110<ylen())&((( !(Ch(0,0)&(K109>0|K110>0)) ) => ( !(Ch(0,0)&(K109>0|K110>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! (Ch(0,G0)&(K109>0|K110>G0))&G0 = 1&(Ch(G0,0)&(K109>G0|K110>0))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K109>G0|K110>G1))&! (Ch(0,G1)&(K109>0|K110>G1))])) ])
2019-10-14 18:52:57,061 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! Ch(0,G0)&G0 = 1&Ch(G0,0)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(0,G1)])
 f2:forall(K107:Int,K108:Int)[ Ch(K107,K108)&turn(p2)&K107>=0&K107<xlen()&K108>=0&K108<ylen()=>((( !(Ch(0,0)&(K107>0|K108>0)) ) => ( !(Ch(0,0)&(K107>0|K108>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(G0,0)&(K107>G0|K108>0))&! (!turn(p1))])&!(! (!turn(p1)))) ]
2019-10-14 18:58:39,550 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:!(!Ch(0,0))=>(exists(K113:Int,K114:Int)[ (Ch(K113,K114)&turn(p1)&K113>=0&K113<xlen()&K114>=0&K114<ylen())&(( !(Ch(0,0)&(K113>0|K114>0)) ) => ( !(Ch(0,0)&(K113>0|K114>0))&(!turn(p1)) )) ])
2019-10-14 18:58:39,590 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:forall(K111:Int,K112:Int)[ Ch(K111,K112)&turn(p2)&K111>=0&K111<xlen()&K112>=0&K112<ylen()=>(( !(Ch(0,0)&(K111>0|K112>0)) ) => ( !(Ch(0,0)&(K111>0|K112>0))&(!turn(p1)) )) ]
2019-10-14 18:58:39,760 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X0:_S1)[turn(X0)])
 f2:!(!Ch(0,0))=>(exists(K117:Int,K118:Int)[ (Ch(K117,K118)&turn(p1)&K117>=0&K117<xlen()&K118>=0&K118<ylen())&(( !(Ch(0,0)&(K117>0|K118>0)) ) => ( !(Ch(0,0)&(K117>0|K118>0))&(!turn(p1)) )) ])
2019-10-14 18:58:39,793 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:forall(K115:Int,K116:Int)[ Ch(K115,K116)&turn(p2)&K115>=0&K115<xlen()&K116>=0&K116<ylen()=>((( !(Ch(0,0)&(K115>0|K116>0)) ) => ( !(Ch(0,0)&(K115>0|K116>0))&(!turn(p1)) ))&!(exists(X0:_S1)[(!turn(X0))])) ]
2019-10-14 18:58:40,168 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X0:_S1)[turn(X0)])
 f2:!(!Ch(0,0))=>(exists(K121:Int,K122:Int)[ (Ch(K121,K122)&turn(p1)&K121>=0&K121<xlen()&K122>=0&K122<ylen())&((( !(Ch(0,0)&(K121>0|K122>0)) ) => ( !(Ch(0,0)&(K121>0|K122>0))&(!turn(p1)) ))&!(exists(X0:_S1)[(!turn(X0))])) ])
2019-10-14 18:58:40,200 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X0:_S1)[turn(X0)])
 f2:forall(K119:Int,K120:Int)[ Ch(K119,K120)&turn(p2)&K119>=0&K119<xlen()&K120>=0&K120<ylen()=>((( !(Ch(0,0)&(K119>0|K120>0)) ) => ( !(Ch(0,0)&(K119>0|K120>0))&(!turn(p1)) ))&!(exists(X0:_S1)[(!turn(X0))])) ]
2019-10-14 18:58:40,231 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:forall(K16:Int,K17:Int)[K16>=0&K16<xlen()&K17>=0&K17<ylen()=>Ch(K16,K17)]&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)
 f2:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X0:_S1)[turn(X0)])
2019-10-14 18:58:41,148 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 > 1&! Ch(G0,0)])
 f2:!(!Ch(0,0))=>(exists(K125:Int,K126:Int)[ (Ch(K125,K126)&turn(p1)&K125>=0&K125<xlen()&K126>=0&K126<ylen())&((( !(Ch(0,0)&(K125>0|K126>0)) ) => ( !(Ch(0,0)&(K125>0|K126>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! G0 > 0&! (Ch(G0,1)&(K125>G0|K126>1))])) ])
2019-10-14 18:58:41,205 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 > 1&! Ch(G0,0)])
 f2:!(!Ch(0,0))=>(exists(K125:Int,K126:Int)[ (Ch(K125,K126)&turn(p1)&K125>=0&K125<xlen()&K126>=0&K126<ylen())&((( !(Ch(0,0)&(K125>0|K126>0)) ) => ( !(Ch(0,0)&(K125>0|K126>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! G0 > 0&! (Ch(G0,1)&(K125>G0|K126>1))])) ])
2019-10-14 18:58:41,243 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 > 0&! Ch(G0,1)])
 f2:forall(K123:Int,K124:Int)[ Ch(K123,K124)&turn(p2)&K123>=0&K123<xlen()&K124>=0&K124<ylen()=>((( !(Ch(0,0)&(K123>0|K124>0)) ) => ( !(Ch(0,0)&(K123>0|K124>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! G0 > 1&! (Ch(G0,0)&(K123>G0|K124>0))])) ]
2019-10-14 18:58:41,926 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 > 1&! Ch(G0,0)])
 f2:!(!Ch(0,0))=>(exists(K129:Int,K130:Int)[ (Ch(K129,K130)&turn(p1)&K129>=0&K129<xlen()&K130>=0&K130<ylen())&((( !(Ch(0,0)&(K129>0|K130>0)) ) => ( !(Ch(0,0)&(K129>0|K130>0))&(!turn(p1)) ))&!(exists(G0:_S1)[(!turn(G0))&(Ch(1,1)&(K129>1|K130>1))])) ])
2019-10-14 18:58:41,973 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 > 1&! Ch(G0,0)])
 f2:!(!Ch(0,0))=>(exists(K129:Int,K130:Int)[ (Ch(K129,K130)&turn(p1)&K129>=0&K129<xlen()&K130>=0&K130<ylen())&((( !(Ch(0,0)&(K129>0|K130>0)) ) => ( !(Ch(0,0)&(K129>0|K130>0))&(!turn(p1)) ))&!(exists(G0:_S1)[(!turn(G0))&(Ch(1,1)&(K129>1|K130>1))])) ])
2019-10-14 18:58:42,009 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:_S1)[turn(G0)&Ch(1,1)])
 f2:forall(K127:Int,K128:Int)[ Ch(K127,K128)&turn(p2)&K127>=0&K127<xlen()&K128>=0&K128<ylen()=>((( !(Ch(0,0)&(K127>0|K128>0)) ) => ( !(Ch(0,0)&(K127>0|K128>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! G0 > 1&! (Ch(G0,0)&(K127>G0|K128>0))])) ]
2019-10-14 18:58:43,650 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 > 1&! Ch(G0,G0)])
 f2:!(!Ch(0,0))=>(exists(K133:Int,K134:Int)[ (Ch(K133,K134)&turn(p1)&K133>=0&K133<xlen()&K134>=0&K134<ylen())&((( !(Ch(0,0)&(K133>0|K134>0)) ) => ( !(Ch(0,0)&(K133>0|K134>0))&(!turn(p1)) ))&!(exists(G0:_S1)[(!turn(G0))&(Ch(1,1)&(K133>1|K134>1))])&!((Ch(1,0)&(K133>1|K134>0))&! (Ch(0,1)&(K133>0|K134>1)))) ])
2019-10-14 18:58:43,694 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 > 1&! Ch(G0,G0)])
 f2:!(!Ch(0,0))=>(exists(K133:Int,K134:Int)[ (Ch(K133,K134)&turn(p1)&K133>=0&K133<xlen()&K134>=0&K134<ylen())&((( !(Ch(0,0)&(K133>0|K134>0)) ) => ( !(Ch(0,0)&(K133>0|K134>0))&(!turn(p1)) ))&!(exists(G0:_S1)[(!turn(G0))&(Ch(1,1)&(K133>1|K134>1))])&!((Ch(1,0)&(K133>1|K134>0))&! (Ch(0,1)&(K133>0|K134>1)))) ])
2019-10-14 18:58:43,730 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:_S1)[turn(G0)&Ch(1,1)])&!(Ch(1,0)&! Ch(0,1))
 f2:forall(K131:Int,K132:Int)[ Ch(K131,K132)&turn(p2)&K131>=0&K131<xlen()&K132>=0&K132<ylen()=>((( !(Ch(0,0)&(K131>0|K132>0)) ) => ( !(Ch(0,0)&(K131>0|K132>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! G0 > 1&! (Ch(G0,G0)&(K131>G0|K132>G0))])) ]
2019-10-14 18:58:48,402 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 > 1&! Ch(G0,G0)])&!(turn(p2))
 f2:!(!Ch(0,0))=>(exists(K137:Int,K138:Int)[ (Ch(K137,K138)&turn(p1)&K137>=0&K137<xlen()&K138>=0&K138<ylen())&((( !(Ch(0,0)&(K137>0|K138>0)) ) => ( !(Ch(0,0)&(K137>0|K138>0))&(!turn(p1)) ))&!(exists(G0:_S1)[(!turn(G0))&(Ch(1,1)&(K137>1|K138>1))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K137>G0|K138>G1))&! (Ch(G1,G0)&(K137>G1|K138>G0))])) ])
2019-10-14 18:58:48,447 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 > 1&! Ch(G0,G0)])&!(turn(p2))
 f2:!(!Ch(0,0))=>(exists(K137:Int,K138:Int)[ (Ch(K137,K138)&turn(p1)&K137>=0&K137<xlen()&K138>=0&K138<ylen())&((( !(Ch(0,0)&(K137>0|K138>0)) ) => ( !(Ch(0,0)&(K137>0|K138>0))&(!turn(p1)) ))&!(exists(G0:_S1)[(!turn(G0))&(Ch(1,1)&(K137>1|K138>1))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K137>G0|K138>G1))&! (Ch(G1,G0)&(K137>G1|K138>G0))])) ])
2019-10-14 18:58:48,482 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 > 1&! Ch(G0,G0)])&!(turn(p2))
 f2:!(!Ch(0,0))=>(exists(K137:Int,K138:Int)[ (Ch(K137,K138)&turn(p1)&K137>=0&K137<xlen()&K138>=0&K138<ylen())&((( !(Ch(0,0)&(K137>0|K138>0)) ) => ( !(Ch(0,0)&(K137>0|K138>0))&(!turn(p1)) ))&!(exists(G0:_S1)[(!turn(G0))&(Ch(1,1)&(K137>1|K138>1))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K137>G0|K138>G1))&! (Ch(G1,G0)&(K137>G1|K138>G0))])) ])
2019-10-14 18:58:48,519 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:_S1)[turn(G0)&Ch(1,1)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,G0)])
 f2:forall(K135:Int,K136:Int)[ Ch(K135,K136)&turn(p2)&K135>=0&K135<xlen()&K136>=0&K136<ylen()=>((( !(Ch(0,0)&(K135>0|K136>0)) ) => ( !(Ch(0,0)&(K135>0|K136>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! G0 > 1&! (Ch(G0,G0)&(K135>G0|K136>G0))])&!((!turn(p2)))) ]
2019-10-14 18:58:49,607 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(turn(p2))&!(exists(G0:_S1)[turn(G0)&turn(p2)])
 f2:!(!Ch(0,0))=>(exists(K141:Int,K142:Int)[ (Ch(K141,K142)&turn(p1)&K141>=0&K141<xlen()&K142>=0&K142<ylen())&((( !(Ch(0,0)&(K141>0|K142>0)) ) => ( !(Ch(0,0)&(K141>0|K142>0))&(!turn(p1)) ))&!(exists(G0:_S1)[(!turn(G0))&(Ch(1,1)&(K141>1|K142>1))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K141>G0|K142>G1))&! (Ch(G1,G0)&(K141>G1|K142>G0))])) ])
2019-10-14 18:58:49,653 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:_S1)[turn(G0)&Ch(1,1)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,G0)])
 f2:forall(K139:Int,K140:Int)[ Ch(K139,K140)&turn(p2)&K139>=0&K139<xlen()&K140>=0&K140<ylen()=>((( !(Ch(0,0)&(K139>0|K140>0)) ) => ( !(Ch(0,0)&(K139>0|K140>0))&(!turn(p1)) ))&!((!turn(p2)))&!(exists(G0:_S1)[(!turn(G0))&(!turn(p2))])) ]
2019-10-14 18:59:18,528 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:_S1)[turn(G0)&turn(p2)])&!(turn(p2))&!(Ch(0,0)&! Ch(1,0)&! Ch(0,1))
 f2:!(!Ch(0,0))=>(exists(K145:Int,K146:Int)[ (Ch(K145,K146)&turn(p1)&K145>=0&K145<xlen()&K146>=0&K146<ylen())&((( !(Ch(0,0)&(K145>0|K146>0)) ) => ( !(Ch(0,0)&(K145>0|K146>0))&(!turn(p1)) ))&!(exists(G0:_S1)[(!turn(G0))&(Ch(1,1)&(K145>1|K146>1))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K145>G0|K146>G1))&! (Ch(G1,G0)&(K145>G1|K146>G0))])) ])
2019-10-14 18:59:18,697 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:_S1)[turn(G0)&turn(p2)])&!(turn(p2))&!(Ch(0,0)&! Ch(1,0)&! Ch(0,1))
 f2:!(!Ch(0,0))=>(exists(K145:Int,K146:Int)[ (Ch(K145,K146)&turn(p1)&K145>=0&K145<xlen()&K146>=0&K146<ylen())&((( !(Ch(0,0)&(K145>0|K146>0)) ) => ( !(Ch(0,0)&(K145>0|K146>0))&(!turn(p1)) ))&!(exists(G0:_S1)[(!turn(G0))&(Ch(1,1)&(K145>1|K146>1))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K145>G0|K146>G1))&! (Ch(G1,G0)&(K145>G1|K146>G0))])) ])
2019-10-14 18:59:18,744 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:_S1)[turn(G0)&Ch(1,1)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,G0)])
 f2:forall(K143:Int,K144:Int)[ Ch(K143,K144)&turn(p2)&K143>=0&K143<xlen()&K144>=0&K144<ylen()=>((( !(Ch(0,0)&(K143>0|K144>0)) ) => ( !(Ch(0,0)&(K143>0|K144>0))&(!turn(p1)) ))&!(exists(G0:_S1)[(!turn(G0))&(!turn(p2))])&!((!turn(p2)))&!((Ch(0,0)&(K143>0|K144>0))&! (Ch(1,0)&(K143>1|K144>0))&! (Ch(0,1)&(K143>0|K144>1)))) ]
2019-10-14 18:59:18,778 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:_S1)[turn(G0)&Ch(1,1)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,G0)])
 f2:forall(K143:Int,K144:Int)[ Ch(K143,K144)&turn(p2)&K143>=0&K143<xlen()&K144>=0&K144<ylen()=>((( !(Ch(0,0)&(K143>0|K144>0)) ) => ( !(Ch(0,0)&(K143>0|K144>0))&(!turn(p1)) ))&!(exists(G0:_S1)[(!turn(G0))&(!turn(p2))])&!((!turn(p2)))&!((Ch(0,0)&(K143>0|K144>0))&! (Ch(1,0)&(K143>1|K144>0))&! (Ch(0,1)&(K143>0|K144>1)))) ]
2019-10-14 18:59:18,808 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:_S1)[turn(G0)&Ch(1,1)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,G0)])
 f2:forall(K143:Int,K144:Int)[ Ch(K143,K144)&turn(p2)&K143>=0&K143<xlen()&K144>=0&K144<ylen()=>((( !(Ch(0,0)&(K143>0|K144>0)) ) => ( !(Ch(0,0)&(K143>0|K144>0))&(!turn(p1)) ))&!(exists(G0:_S1)[(!turn(G0))&(!turn(p2))])&!((!turn(p2)))&!((Ch(0,0)&(K143>0|K144>0))&! (Ch(1,0)&(K143>1|K144>0))&! (Ch(0,1)&(K143>0|K144>1)))) ]
2019-10-14 19:00:02,180 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:_S1)[turn(G0)&turn(p2)])&!(turn(p2))&!(Ch(0,0)&! Ch(1,0)&! Ch(0,1))&!(exists(G0:Int)[G0>=0&Ch(1,G0)&Ch(0,1)&! Ch(1,1)])
 f2:!(!Ch(0,0))=>(exists(K149:Int,K150:Int)[ (Ch(K149,K150)&turn(p1)&K149>=0&K149<xlen()&K150>=0&K150<ylen())&((( !(Ch(0,0)&(K149>0|K150>0)) ) => ( !(Ch(0,0)&(K149>0|K150>0))&(!turn(p1)) ))&!(exists(G0:_S1)[(!turn(G0))&(Ch(1,1)&(K149>1|K150>1))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K149>G0|K150>G1))&! (Ch(G1,G0)&(K149>G1|K150>G0))])&!(exists(G0:Int)[ exists(K151:Int)[ (xlen()=K151)&(G0>=0&G0 > 1& K151 > G0)] ])) ])
2019-10-14 19:00:02,239 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:_S1)[turn(G0)&turn(p2)])&!(turn(p2))&!(Ch(0,0)&! Ch(1,0)&! Ch(0,1))&!(exists(G0:Int)[G0>=0&Ch(1,G0)&Ch(0,1)&! Ch(1,1)])
 f2:!(!Ch(0,0))=>(exists(K149:Int,K150:Int)[ (Ch(K149,K150)&turn(p1)&K149>=0&K149<xlen()&K150>=0&K150<ylen())&((( !(Ch(0,0)&(K149>0|K150>0)) ) => ( !(Ch(0,0)&(K149>0|K150>0))&(!turn(p1)) ))&!(exists(G0:_S1)[(!turn(G0))&(Ch(1,1)&(K149>1|K150>1))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K149>G0|K150>G1))&! (Ch(G1,G0)&(K149>G1|K150>G0))])&!(exists(G0:Int)[ exists(K151:Int)[ (xlen()=K151)&(G0>=0&G0 > 1& K151 > G0)] ])) ])
2019-10-14 19:00:02,294 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:_S1)[turn(G0)&turn(p2)])&!(turn(p2))&!(Ch(0,0)&! Ch(1,0)&! Ch(0,1))&!(exists(G0:Int)[G0>=0&Ch(1,G0)&Ch(0,1)&! Ch(1,1)])
 f2:!(!Ch(0,0))=>(exists(K149:Int,K150:Int)[ (Ch(K149,K150)&turn(p1)&K149>=0&K149<xlen()&K150>=0&K150<ylen())&((( !(Ch(0,0)&(K149>0|K150>0)) ) => ( !(Ch(0,0)&(K149>0|K150>0))&(!turn(p1)) ))&!(exists(G0:_S1)[(!turn(G0))&(Ch(1,1)&(K149>1|K150>1))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K149>G0|K150>G1))&! (Ch(G1,G0)&(K149>G1|K150>G0))])&!(exists(G0:Int)[ exists(K151:Int)[ (xlen()=K151)&(G0>=0&G0 > 1& K151 > G0)] ])) ])
2019-10-14 19:00:02,349 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:_S1)[turn(G0)&Ch(1,1)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,G0)])&!(exists(G0:Int)[G0>=0&G0 > 1&xlen() > G0])
 f2:forall(K147:Int,K148:Int)[ Ch(K147,K148)&turn(p2)&K147>=0&K147<xlen()&K148>=0&K148<ylen()=>((( !(Ch(0,0)&(K147>0|K148>0)) ) => ( !(Ch(0,0)&(K147>0|K148>0))&(!turn(p1)) ))&!(exists(G0:_S1)[(!turn(G0))&(!turn(p2))])&!((!turn(p2)))&!((Ch(0,0)&(K147>0|K148>0))&! (Ch(1,0)&(K147>1|K148>0))&! (Ch(0,1)&(K147>0|K148>1)))&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K147>1|K148>G0))&(Ch(0,1)&(K147>0|K148>1))&! (Ch(1,1)&(K147>1|K148>1))])) ]
2019-10-14 19:00:05,658 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:_S1)[turn(G0)&turn(p2)])&!(turn(p2))&!(Ch(0,0)&! Ch(1,0)&! Ch(0,1))&!(exists(G0:Int)[G0>=0&Ch(1,G0)&Ch(0,1)&! Ch(1,1)])
 f2:!(!Ch(0,0))=>(exists(K154:Int,K155:Int)[ (Ch(K154,K155)&turn(p1)&K154>=0&K154<xlen()&K155>=0&K155<ylen())&((( !(Ch(0,0)&(K154>0|K155>0)) ) => ( !(Ch(0,0)&(K154>0|K155>0))&(!turn(p1)) ))&!(exists(G0:_S1)[(!turn(G0))&(Ch(1,1)&(K154>1|K155>1))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K154>G0|K155>G1))&! (Ch(G1,G0)&(K154>G1|K155>G0))])&!(exists(G0:Int)[G0>=0&! G0 = 0&(Ch(G0,G0)&(K154>G0|K155>G0))])) ])
2019-10-14 19:00:07,284 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:_S1)[turn(G0)&turn(p2)])&!(turn(p2))&!(Ch(0,0)&! Ch(1,0)&! Ch(0,1))&!(exists(G0:Int)[G0>=0&Ch(1,G0)&Ch(0,1)&! Ch(1,1)])
 f2:!(!Ch(0,0))=>(exists(K154:Int,K155:Int)[ (Ch(K154,K155)&turn(p1)&K154>=0&K154<xlen()&K155>=0&K155<ylen())&((( !(Ch(0,0)&(K154>0|K155>0)) ) => ( !(Ch(0,0)&(K154>0|K155>0))&(!turn(p1)) ))&!(exists(G0:_S1)[(!turn(G0))&(Ch(1,1)&(K154>1|K155>1))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K154>G0|K155>G1))&! (Ch(G1,G0)&(K154>G1|K155>G0))])&!(exists(G0:Int)[G0>=0&! G0 = 0&(Ch(G0,G0)&(K154>G0|K155>G0))])) ])
2019-10-14 19:00:07,331 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:_S1)[turn(G0)&turn(p2)])&!(turn(p2))&!(Ch(0,0)&! Ch(1,0)&! Ch(0,1))&!(exists(G0:Int)[G0>=0&Ch(1,G0)&Ch(0,1)&! Ch(1,1)])
 f2:!(!Ch(0,0))=>(exists(K154:Int,K155:Int)[ (Ch(K154,K155)&turn(p1)&K154>=0&K154<xlen()&K155>=0&K155<ylen())&((( !(Ch(0,0)&(K154>0|K155>0)) ) => ( !(Ch(0,0)&(K154>0|K155>0))&(!turn(p1)) ))&!(exists(G0:_S1)[(!turn(G0))&(Ch(1,1)&(K154>1|K155>1))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K154>G0|K155>G1))&! (Ch(G1,G0)&(K154>G1|K155>G0))])&!(exists(G0:Int)[G0>=0&! G0 = 0&(Ch(G0,G0)&(K154>G0|K155>G0))])) ])
2019-10-14 19:00:07,451 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:_S1)[turn(G0)&Ch(1,1)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,G0)])&!(exists(G0:Int)[G0>=0&! G0 = 0&Ch(G0,G0)])
 f2:forall(K152:Int,K153:Int)[ Ch(K152,K153)&turn(p2)&K152>=0&K152<xlen()&K153>=0&K153<ylen()=>((( !(Ch(0,0)&(K152>0|K153>0)) ) => ( !(Ch(0,0)&(K152>0|K153>0))&(!turn(p1)) ))&!(exists(G0:_S1)[(!turn(G0))&(!turn(p2))])&!((!turn(p2)))&!((Ch(0,0)&(K152>0|K153>0))&! (Ch(1,0)&(K152>1|K153>0))&! (Ch(0,1)&(K152>0|K153>1)))&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K152>1|K153>G0))&(Ch(0,1)&(K152>0|K153>1))&! (Ch(1,1)&(K152>1|K153>1))])) ]
2019-10-14 19:00:07,503 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:_S1)[turn(G0)&Ch(1,1)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,G0)])&!(exists(G0:Int)[G0>=0&! G0 = 0&Ch(G0,G0)])
 f2:forall(K152:Int,K153:Int)[ Ch(K152,K153)&turn(p2)&K152>=0&K152<xlen()&K153>=0&K153<ylen()=>((( !(Ch(0,0)&(K152>0|K153>0)) ) => ( !(Ch(0,0)&(K152>0|K153>0))&(!turn(p1)) ))&!(exists(G0:_S1)[(!turn(G0))&(!turn(p2))])&!((!turn(p2)))&!((Ch(0,0)&(K152>0|K153>0))&! (Ch(1,0)&(K152>1|K153>0))&! (Ch(0,1)&(K152>0|K153>1)))&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K152>1|K153>G0))&(Ch(0,1)&(K152>0|K153>1))&! (Ch(1,1)&(K152>1|K153>1))])) ]
2019-10-14 19:00:07,543 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:_S1)[turn(G0)&Ch(1,1)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,G0)])&!(exists(G0:Int)[G0>=0&! G0 = 0&Ch(G0,G0)])
 f2:forall(K152:Int,K153:Int)[ Ch(K152,K153)&turn(p2)&K152>=0&K152<xlen()&K153>=0&K153<ylen()=>((( !(Ch(0,0)&(K152>0|K153>0)) ) => ( !(Ch(0,0)&(K152>0|K153>0))&(!turn(p1)) ))&!(exists(G0:_S1)[(!turn(G0))&(!turn(p2))])&!((!turn(p2)))&!((Ch(0,0)&(K152>0|K153>0))&! (Ch(1,0)&(K152>1|K153>0))&! (Ch(0,1)&(K152>0|K153>1)))&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K152>1|K153>G0))&(Ch(0,1)&(K152>0|K153>1))&! (Ch(1,1)&(K152>1|K153>1))])) ]
2019-10-14 19:00:21,411 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:_S1)[turn(G0)&turn(p2)])&!(turn(p2))&!(Ch(0,0)&! Ch(1,0)&! Ch(0,1))
 f2:!(!Ch(0,0))=>(exists(K158:Int,K159:Int)[ (Ch(K158,K159)&turn(p1)&K158>=0&K158<xlen()&K159>=0&K159<ylen())&((( !(Ch(0,0)&(K158>0|K159>0)) ) => ( !(Ch(0,0)&(K158>0|K159>0))&(!turn(p1)) ))&!(exists(G0:_S1)[(!turn(G0))&(Ch(1,1)&(K158>1|K159>1))])&!(exists(G0:Int)[G0>=0&! G0 = 0&(Ch(G0,G0)&(K158>G0|K159>G0))])) ])
2019-10-14 19:00:21,446 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:_S1)[turn(G0)&Ch(1,1)])&!(exists(G0:Int)[G0>=0&! G0 = 0&Ch(G0,G0)])
 f2:forall(K156:Int,K157:Int)[ Ch(K156,K157)&turn(p2)&K156>=0&K156<xlen()&K157>=0&K157<ylen()=>((( !(Ch(0,0)&(K156>0|K157>0)) ) => ( !(Ch(0,0)&(K156>0|K157>0))&(!turn(p1)) ))&!(exists(G0:_S1)[(!turn(G0))&(!turn(p2))])&!((!turn(p2)))&!((Ch(0,0)&(K156>0|K157>0))&! (Ch(1,0)&(K156>1|K157>0))&! (Ch(0,1)&(K156>0|K157>1)))) ]
2019-10-14 19:00:50,780 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:!(!Ch(0,0))=>(exists(K162:Int,K163:Int)[ (Ch(K162,K163)&turn(p1)&K162>=0&K162<xlen()&K163>=0&K163<ylen())&(( !(Ch(0,0)&(K162>0|K163>0)) ) => ( !(Ch(0,0)&(K162>0|K163>0))&(!turn(p1)) )) ])
2019-10-14 19:00:50,814 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:forall(K160:Int,K161:Int)[ Ch(K160,K161)&turn(p2)&K160>=0&K160<xlen()&K161>=0&K161<ylen()=>(( !(Ch(0,0)&(K160>0|K161>0)) ) => ( !(Ch(0,0)&(K160>0|K161>0))&(!turn(p1)) )) ]
2019-10-14 19:00:50,965 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&xlen() = X1])
 f2:!(!Ch(0,0))=>(exists(K166:Int,K167:Int)[ (Ch(K166,K167)&turn(p1)&K166>=0&K166<xlen()&K167>=0&K167<ylen())&(( !(Ch(0,0)&(K166>0|K167>0)) ) => ( !(Ch(0,0)&(K166>0|K167>0))&(!turn(p1)) )) ])
2019-10-14 19:00:50,996 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:forall(K164:Int,K165:Int)[ Ch(K164,K165)&turn(p2)&K164>=0&K164<xlen()&K165>=0&K165<ylen()=>((( !(Ch(0,0)&(K164>0|K165>0)) ) => ( !(Ch(0,0)&(K164>0|K165>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(xlen()=X1)])) ]
2019-10-14 19:00:51,360 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&xlen() = X1])
 f2:!(!Ch(0,0))=>(exists(K170:Int,K171:Int)[ (Ch(K170,K171)&turn(p1)&K170>=0&K170<xlen()&K171>=0&K171<ylen())&((( !(Ch(0,0)&(K170>0|K171>0)) ) => ( !(Ch(0,0)&(K170>0|K171>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(xlen()=X1)])) ])
2019-10-14 19:00:51,397 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&xlen() = X1])
 f2:forall(K168:Int,K169:Int)[ Ch(K168,K169)&turn(p2)&K168>=0&K168<xlen()&K169>=0&K169<ylen()=>((( !(Ch(0,0)&(K168>0|K169>0)) ) => ( !(Ch(0,0)&(K168>0|K169>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(xlen()=X1)])) ]
2019-10-14 19:00:51,427 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:forall(K16:Int,K17:Int)[K16>=0&K16<xlen()&K17>=0&K17<ylen()=>Ch(K16,K17)]&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)
 f2:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&xlen() = X1])
2019-10-14 19:00:52,297 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 > 0&! Ch(G0,1)])
 f2:!(!Ch(0,0))=>(exists(K174:Int,K175:Int)[ (Ch(K174,K175)&turn(p1)&K174>=0&K174<xlen()&K175>=0&K175<ylen())&((( !(Ch(0,0)&(K174>0|K175>0)) ) => ( !(Ch(0,0)&(K174>0|K175>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! G0 > 1&! (Ch(0,G0)&(K174>0|K175>G0))])) ])
2019-10-14 19:00:52,344 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 > 1&! Ch(0,G0)])
 f2:forall(K172:Int,K173:Int)[ Ch(K172,K173)&turn(p2)&K172>=0&K172<xlen()&K173>=0&K173<ylen()=>((( !(Ch(0,0)&(K172>0|K173>0)) ) => ( !(Ch(0,0)&(K172>0|K173>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! G0 > 0&! (Ch(G0,1)&(K172>G0|K173>1))])) ]
2019-10-14 19:00:53,009 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 > 0&! Ch(G0,1)])
 f2:!(!Ch(0,0))=>(exists(K178:Int,K179:Int)[ (Ch(K178,K179)&turn(p1)&K178>=0&K178<xlen()&K179>=0&K179<ylen())&((( !(Ch(0,0)&(K178>0|K179>0)) ) => ( !(Ch(0,0)&(K178>0|K179>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(xlen()=G0)&(Ch(1,1)&(K178>1|K179>1))])) ])
2019-10-14 19:00:53,048 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() = G0&Ch(1,1)])
 f2:forall(K176:Int,K177:Int)[ Ch(K176,K177)&turn(p2)&K176>=0&K176<xlen()&K177>=0&K177<ylen()=>((( !(Ch(0,0)&(K176>0|K177>0)) ) => ( !(Ch(0,0)&(K176>0|K177>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! G0 > 0&! (Ch(G0,1)&(K176>G0|K177>1))])) ]
2019-10-14 19:00:53,089 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() = G0&Ch(1,1)])
 f2:forall(K176:Int,K177:Int)[ Ch(K176,K177)&turn(p2)&K176>=0&K176<xlen()&K177>=0&K177<ylen()=>((( !(Ch(0,0)&(K176>0|K177>0)) ) => ( !(Ch(0,0)&(K176>0|K177>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! G0 > 0&! (Ch(G0,1)&(K176>G0|K177>1))])) ]
2019-10-14 19:00:54,700 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 > 0&! Ch(G0,1)])&!(! turn(p1))
 f2:!(!Ch(0,0))=>(exists(K182:Int,K183:Int)[ (Ch(K182,K183)&turn(p1)&K182>=0&K182<xlen()&K183>=0&K183<ylen())&((( !(Ch(0,0)&(K182>0|K183>0)) ) => ( !(Ch(0,0)&(K182>0|K183>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(xlen()=G0)&(Ch(1,1)&(K182>1|K183>1))])&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K182>0|K183>G0))&! (Ch(G0,0)&(K182>G0|K183>0))])) ])
2019-10-14 19:00:54,752 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() = G0&Ch(1,1)])&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(G0,0)])
 f2:forall(K180:Int,K181:Int)[ Ch(K180,K181)&turn(p2)&K180>=0&K180<xlen()&K181>=0&K181<ylen()=>((( !(Ch(0,0)&(K180>0|K181>0)) ) => ( !(Ch(0,0)&(K180>0|K181>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! G0 > 0&! (Ch(G0,1)&(K180>G0|K181>1))])&!(! (!turn(p1)))) ]
2019-10-14 19:00:55,282 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(! turn(p1))&!(exists(G0:Int)[G0>=0&xlen() = G0&! turn(p1)])
 f2:!(!Ch(0,0))=>(exists(K186:Int,K187:Int)[ (Ch(K186,K187)&turn(p1)&K186>=0&K186<xlen()&K187>=0&K187<ylen())&((( !(Ch(0,0)&(K186>0|K187>0)) ) => ( !(Ch(0,0)&(K186>0|K187>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(xlen()=G0)&(Ch(1,1)&(K186>1|K187>1))])&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K186>0|K187>G0))&! (Ch(G0,0)&(K186>G0|K187>0))])) ])
2019-10-14 19:00:55,322 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() = G0&Ch(1,1)])&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(G0,0)])
 f2:forall(K184:Int,K185:Int)[ Ch(K184,K185)&turn(p2)&K184>=0&K184<xlen()&K185>=0&K185<ylen()=>((( !(Ch(0,0)&(K184>0|K185>0)) ) => ( !(Ch(0,0)&(K184>0|K185>0))&(!turn(p1)) ))&!(! (!turn(p1)))&!(exists(G0:Int)[G0>=0&(xlen()=G0)&! (!turn(p1))])) ]
2019-10-14 19:01:21,955 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() = G0&! turn(p1)])&!(! turn(p1))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(1,G1)&! Ch(G0,1)])
 f2:!(!Ch(0,0))=>(exists(K190:Int,K191:Int)[ (Ch(K190,K191)&turn(p1)&K190>=0&K190<xlen()&K191>=0&K191<ylen())&((( !(Ch(0,0)&(K190>0|K191>0)) ) => ( !(Ch(0,0)&(K190>0|K191>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(xlen()=G0)&(Ch(1,1)&(K190>1|K191>1))])&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K190>0|K191>G0))&! (Ch(G0,0)&(K190>G0|K191>0))])) ])
2019-10-14 19:01:22,347 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() = G0&! turn(p1)])&!(! turn(p1))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(1,G1)&! Ch(G0,1)])
 f2:!(!Ch(0,0))=>(exists(K190:Int,K191:Int)[ (Ch(K190,K191)&turn(p1)&K190>=0&K190<xlen()&K191>=0&K191<ylen())&((( !(Ch(0,0)&(K190>0|K191>0)) ) => ( !(Ch(0,0)&(K190>0|K191>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(xlen()=G0)&(Ch(1,1)&(K190>1|K191>1))])&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K190>0|K191>G0))&! (Ch(G0,0)&(K190>G0|K191>0))])) ])
2019-10-14 19:01:22,383 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() = G0&! turn(p1)])&!(! turn(p1))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(1,G1)&! Ch(G0,1)])
 f2:!(!Ch(0,0))=>(exists(K190:Int,K191:Int)[ (Ch(K190,K191)&turn(p1)&K190>=0&K190<xlen()&K191>=0&K191<ylen())&((( !(Ch(0,0)&(K190>0|K191>0)) ) => ( !(Ch(0,0)&(K190>0|K191>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(xlen()=G0)&(Ch(1,1)&(K190>1|K191>1))])&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K190>0|K191>G0))&! (Ch(G0,0)&(K190>G0|K191>0))])) ])
2019-10-14 19:01:22,451 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() = G0&Ch(1,1)])&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(G0,0)])
 f2:forall(K188:Int,K189:Int)[ Ch(K188,K189)&turn(p2)&K188>=0&K188<xlen()&K189>=0&K189<ylen()=>((( !(Ch(0,0)&(K188>0|K189>0)) ) => ( !(Ch(0,0)&(K188>0|K189>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(xlen()=G0)&! (!turn(p1))])&!(! (!turn(p1)))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K188>G0|K189>G1))&! (Ch(1,G1)&(K188>1|K189>G1))&! (Ch(G0,1)&(K188>G0|K189>1))])) ]
2019-10-14 19:01:22,491 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() = G0&Ch(1,1)])&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(G0,0)])
 f2:forall(K188:Int,K189:Int)[ Ch(K188,K189)&turn(p2)&K188>=0&K188<xlen()&K189>=0&K189<ylen()=>((( !(Ch(0,0)&(K188>0|K189>0)) ) => ( !(Ch(0,0)&(K188>0|K189>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(xlen()=G0)&! (!turn(p1))])&!(! (!turn(p1)))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K188>G0|K189>G1))&! (Ch(1,G1)&(K188>1|K189>G1))&! (Ch(G0,1)&(K188>G0|K189>1))])) ]
2019-10-14 19:01:31,002 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() = G0&! turn(p1)])&!(! turn(p1))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(1,G1)&! Ch(G0,1)])
 f2:!(!Ch(0,0))=>(exists(K194:Int,K195:Int)[ (Ch(K194,K195)&turn(p1)&K194>=0&K194<xlen()&K195>=0&K195<ylen())&((( !(Ch(0,0)&(K194>0|K195>0)) ) => ( !(Ch(0,0)&(K194>0|K195>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K194>1|K195>G0))&! (Ch(G0,0)&(K194>G0|K195>0))])&!((Ch(0,1)&(K194>0|K195>1))&! (Ch(1,0)&(K194>1|K195>0)))) ])
2019-10-14 19:01:31,052 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(1,G0)&! Ch(G0,0)])&!(Ch(0,1)&! Ch(1,0))
 f2:forall(K192:Int,K193:Int)[ Ch(K192,K193)&turn(p2)&K192>=0&K192<xlen()&K193>=0&K193<ylen()=>((( !(Ch(0,0)&(K192>0|K193>0)) ) => ( !(Ch(0,0)&(K192>0|K193>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(xlen()=G0)&! (!turn(p1))])&!(! (!turn(p1)))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K192>G0|K193>G1))&! (Ch(1,G1)&(K192>1|K193>G1))&! (Ch(G0,1)&(K192>G0|K193>1))])) ]
2019-10-14 19:01:31,093 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(1,G0)&! Ch(G0,0)])&!(Ch(0,1)&! Ch(1,0))
 f2:forall(K192:Int,K193:Int)[ Ch(K192,K193)&turn(p2)&K192>=0&K192<xlen()&K193>=0&K193<ylen()=>((( !(Ch(0,0)&(K192>0|K193>0)) ) => ( !(Ch(0,0)&(K192>0|K193>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(xlen()=G0)&! (!turn(p1))])&!(! (!turn(p1)))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K192>G0|K193>G1))&! (Ch(1,G1)&(K192>1|K193>G1))&! (Ch(G0,1)&(K192>G0|K193>1))])) ]
2019-10-14 19:01:58,735 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() = G0&! turn(p1)])&!(! turn(p1))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(1,G1)&! Ch(G0,1)])
 f2:!(!Ch(0,0))=>(exists(K198:Int,K199:Int)[ (Ch(K198,K199)&turn(p1)&K198>=0&K198<xlen()&K199>=0&K199<ylen())&((( !(Ch(0,0)&(K198>0|K199>0)) ) => ( !(Ch(0,0)&(K198>0|K199>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K198>1|K199>G0))&! (Ch(G0,0)&(K198>G0|K199>0))])&!((Ch(0,1)&(K198>0|K199>1))&! (Ch(1,0)&(K198>1|K199>0)))&!(exists(G0:Int)[G0>=0&(Ch(G0,0)&(K198>G0|K199>0))&! (Ch(0,G0)&(K198>0|K199>G0))&! (Ch(1,1)&(K198>1|K199>1))])) ])
2019-10-14 19:01:58,798 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() = G0&! turn(p1)])&!(! turn(p1))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(1,G1)&! Ch(G0,1)])
 f2:!(!Ch(0,0))=>(exists(K198:Int,K199:Int)[ (Ch(K198,K199)&turn(p1)&K198>=0&K198<xlen()&K199>=0&K199<ylen())&((( !(Ch(0,0)&(K198>0|K199>0)) ) => ( !(Ch(0,0)&(K198>0|K199>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K198>1|K199>G0))&! (Ch(G0,0)&(K198>G0|K199>0))])&!((Ch(0,1)&(K198>0|K199>1))&! (Ch(1,0)&(K198>1|K199>0)))&!(exists(G0:Int)[G0>=0&(Ch(G0,0)&(K198>G0|K199>0))&! (Ch(0,G0)&(K198>0|K199>G0))&! (Ch(1,1)&(K198>1|K199>1))])) ])
2019-10-14 19:01:58,846 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(1,G0)&! Ch(G0,0)])&!(Ch(0,1)&! Ch(1,0))&!(exists(G0:Int)[G0>=0&Ch(G0,0)&! Ch(0,G0)&! Ch(1,1)])
 f2:forall(K196:Int,K197:Int)[ Ch(K196,K197)&turn(p2)&K196>=0&K196<xlen()&K197>=0&K197<ylen()=>((( !(Ch(0,0)&(K196>0|K197>0)) ) => ( !(Ch(0,0)&(K196>0|K197>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(xlen()=G0)&! (!turn(p1))])&!(! (!turn(p1)))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K196>G0|K197>G1))&! (Ch(1,G1)&(K196>1|K197>G1))&! (Ch(G0,1)&(K196>G0|K197>1))])) ]
2019-10-14 19:01:58,886 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(1,G0)&! Ch(G0,0)])&!(Ch(0,1)&! Ch(1,0))&!(exists(G0:Int)[G0>=0&Ch(G0,0)&! Ch(0,G0)&! Ch(1,1)])
 f2:forall(K196:Int,K197:Int)[ Ch(K196,K197)&turn(p2)&K196>=0&K196<xlen()&K197>=0&K197<ylen()=>((( !(Ch(0,0)&(K196>0|K197>0)) ) => ( !(Ch(0,0)&(K196>0|K197>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(xlen()=G0)&! (!turn(p1))])&!(! (!turn(p1)))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K196>G0|K197>G1))&! (Ch(1,G1)&(K196>1|K197>G1))&! (Ch(G0,1)&(K196>G0|K197>1))])) ]
2019-10-14 19:02:50,950 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:!(!Ch(0,0))=>(exists(K202:Int,K203:Int)[ (Ch(K202,K203)&turn(p1)&K202>=0&K202<xlen()&K203>=0&K203<ylen())&(( !(Ch(0,0)&(K202>0|K203>0)) ) => ( !(Ch(0,0)&(K202>0|K203>0))&(!turn(p1)) )) ])
2019-10-14 19:02:50,991 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:forall(K200:Int,K201:Int)[ Ch(K200,K201)&turn(p2)&K200>=0&K200<xlen()&K201>=0&K201<ylen()=>(( !(Ch(0,0)&(K200>0|K201>0)) ) => ( !(Ch(0,0)&(K200>0|K201>0))&(!turn(p1)) )) ]
2019-10-14 19:02:51,166 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&ylen() = X1])
 f2:!(!Ch(0,0))=>(exists(K206:Int,K207:Int)[ (Ch(K206,K207)&turn(p1)&K206>=0&K206<xlen()&K207>=0&K207<ylen())&(( !(Ch(0,0)&(K206>0|K207>0)) ) => ( !(Ch(0,0)&(K206>0|K207>0))&(!turn(p1)) )) ])
2019-10-14 19:02:51,204 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:forall(K204:Int,K205:Int)[ Ch(K204,K205)&turn(p2)&K204>=0&K204<xlen()&K205>=0&K205<ylen()=>((( !(Ch(0,0)&(K204>0|K205>0)) ) => ( !(Ch(0,0)&(K204>0|K205>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(ylen()=X1)])) ]
2019-10-14 19:02:51,574 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&ylen() = X1])
 f2:!(!Ch(0,0))=>(exists(K210:Int,K211:Int)[ (Ch(K210,K211)&turn(p1)&K210>=0&K210<xlen()&K211>=0&K211<ylen())&((( !(Ch(0,0)&(K210>0|K211>0)) ) => ( !(Ch(0,0)&(K210>0|K211>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(ylen()=X1)])) ])
2019-10-14 19:02:51,608 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&ylen() = X1])
 f2:forall(K208:Int,K209:Int)[ Ch(K208,K209)&turn(p2)&K208>=0&K208<xlen()&K209>=0&K209<ylen()=>((( !(Ch(0,0)&(K208>0|K209>0)) ) => ( !(Ch(0,0)&(K208>0|K209>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(ylen()=X1)])) ]
2019-10-14 19:02:51,636 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:forall(K16:Int,K17:Int)[K16>=0&K16<xlen()&K17>=0&K17<ylen()=>Ch(K16,K17)]&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)
 f2:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&ylen() = X1])
2019-10-14 19:02:52,515 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() > G0&! Ch(0,G0)])
 f2:!(!Ch(0,0))=>(exists(K215:Int,K216:Int)[ (Ch(K215,K216)&turn(p1)&K215>=0&K215<xlen()&K216>=0&K216<ylen())&((( !(Ch(0,0)&(K215>0|K216>0)) ) => ( !(Ch(0,0)&(K215>0|K216>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! G0 >= 1&! (Ch(1,G0)&(K215>1|K216>G0))])) ])
2019-10-14 19:02:52,575 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() > G0&! Ch(0,G0)])
 f2:!(!Ch(0,0))=>(exists(K215:Int,K216:Int)[ (Ch(K215,K216)&turn(p1)&K215>=0&K215<xlen()&K216>=0&K216<ylen())&((( !(Ch(0,0)&(K215>0|K216>0)) ) => ( !(Ch(0,0)&(K215>0|K216>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! G0 >= 1&! (Ch(1,G0)&(K215>1|K216>G0))])) ])
2019-10-14 19:02:52,612 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 >= 1&! Ch(1,G0)])
 f2:forall(K212:Int,K213:Int)[ Ch(K212,K213)&turn(p2)&K212>=0&K212<xlen()&K213>=0&K213<ylen()=>((( !(Ch(0,0)&(K212>0|K213>0)) ) => ( !(Ch(0,0)&(K212>0|K213>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K214:Int)[ (xlen()=K214)&(G0>=0& K214 > G0&! (Ch(0,G0)&(K212>0|K213>G0)))] ])) ]
2019-10-14 19:02:52,647 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 >= 1&! Ch(1,G0)])
 f2:forall(K212:Int,K213:Int)[ Ch(K212,K213)&turn(p2)&K212>=0&K212<xlen()&K213>=0&K213<ylen()=>((( !(Ch(0,0)&(K212>0|K213>0)) ) => ( !(Ch(0,0)&(K212>0|K213>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K214:Int)[ (xlen()=K214)&(G0>=0& K214 > G0&! (Ch(0,G0)&(K212>0|K213>G0)))] ])) ]
2019-10-14 19:02:53,263 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() > G0&! Ch(0,G0)])
 f2:!(!Ch(0,0))=>(exists(K220:Int,K221:Int)[ (Ch(K220,K221)&turn(p1)&K220>=0&K220<xlen()&K221>=0&K221<ylen())&((( !(Ch(0,0)&(K220>0|K221>0)) ) => ( !(Ch(0,0)&(K220>0|K221>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 0&(Ch(G0,1)&(K220>G0|K221>1))])) ])
2019-10-14 19:02:53,324 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() > G0&! Ch(0,G0)])
 f2:!(!Ch(0,0))=>(exists(K220:Int,K221:Int)[ (Ch(K220,K221)&turn(p1)&K220>=0&K220<xlen()&K221>=0&K221<ylen())&((( !(Ch(0,0)&(K220>0|K221>0)) ) => ( !(Ch(0,0)&(K220>0|K221>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 0&(Ch(G0,1)&(K220>G0|K221>1))])) ])
2019-10-14 19:02:53,360 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 > 0&Ch(G0,1)])
 f2:forall(K217:Int,K218:Int)[ Ch(K217,K218)&turn(p2)&K217>=0&K217<xlen()&K218>=0&K218<ylen()=>((( !(Ch(0,0)&(K217>0|K218>0)) ) => ( !(Ch(0,0)&(K217>0|K218>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K219:Int)[ (xlen()=K219)&(G0>=0& K219 > G0&! (Ch(0,G0)&(K217>0|K218>G0)))] ])) ]
2019-10-14 19:02:53,397 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 > 0&Ch(G0,1)])
 f2:forall(K217:Int,K218:Int)[ Ch(K217,K218)&turn(p2)&K217>=0&K217<xlen()&K218>=0&K218<ylen()=>((( !(Ch(0,0)&(K217>0|K218>0)) ) => ( !(Ch(0,0)&(K217>0|K218>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K219:Int)[ (xlen()=K219)&(G0>=0& K219 > G0&! (Ch(0,G0)&(K217>0|K218>G0)))] ])) ]
2019-10-14 19:02:55,175 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() > G0&! Ch(G0,0)])
 f2:!(!Ch(0,0))=>(exists(K225:Int,K226:Int)[ (Ch(K225,K226)&turn(p1)&K225>=0&K225<xlen()&K226>=0&K226<ylen())&((( !(Ch(0,0)&(K225>0|K226>0)) ) => ( !(Ch(0,0)&(K225>0|K226>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 0&(Ch(G0,1)&(K225>G0|K226>1))])&!(exists(G0:Int)[G0>=0&(Ch(G0,1)&(K225>G0|K226>1))&! (Ch(1,G0)&(K225>1|K226>G0))])) ])
2019-10-14 19:02:55,248 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() > G0&! Ch(G0,0)])
 f2:!(!Ch(0,0))=>(exists(K225:Int,K226:Int)[ (Ch(K225,K226)&turn(p1)&K225>=0&K225<xlen()&K226>=0&K226<ylen())&((( !(Ch(0,0)&(K225>0|K226>0)) ) => ( !(Ch(0,0)&(K225>0|K226>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 0&(Ch(G0,1)&(K225>G0|K226>1))])&!(exists(G0:Int)[G0>=0&(Ch(G0,1)&(K225>G0|K226>1))&! (Ch(1,G0)&(K225>1|K226>G0))])) ])
2019-10-14 19:02:55,288 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 > 0&Ch(G0,1)])&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(1,G0)])
 f2:forall(K222:Int,K223:Int)[ Ch(K222,K223)&turn(p2)&K222>=0&K222<xlen()&K223>=0&K223<ylen()=>((( !(Ch(0,0)&(K222>0|K223>0)) ) => ( !(Ch(0,0)&(K222>0|K223>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K224:Int)[ (xlen()=K224)&(G0>=0& K224 > G0&! (Ch(G0,0)&(K222>G0|K223>0)))] ])) ]
2019-10-14 19:02:55,321 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 > 0&Ch(G0,1)])&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(1,G0)])
 f2:forall(K222:Int,K223:Int)[ Ch(K222,K223)&turn(p2)&K222>=0&K222<xlen()&K223>=0&K223<ylen()=>((( !(Ch(0,0)&(K222>0|K223>0)) ) => ( !(Ch(0,0)&(K222>0|K223>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K224:Int)[ (xlen()=K224)&(G0>=0& K224 > G0&! (Ch(G0,0)&(K222>G0|K223>0)))] ])) ]
2019-10-14 19:03:01,550 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() > G0&! Ch(G0,G0)])
 f2:!(!Ch(0,0))=>(exists(K230:Int,K231:Int)[ (Ch(K230,K231)&turn(p1)&K230>=0&K230<xlen()&K231>=0&K231<ylen())&((( !(Ch(0,0)&(K230>0|K231>0)) ) => ( !(Ch(0,0)&(K230>0|K231>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 0&(Ch(G0,1)&(K230>G0|K231>1))])&!(exists(G0:Int)[G0>=0&(Ch(G0,1)&(K230>G0|K231>1))&! (Ch(1,G0)&(K230>1|K231>G0))])&!((Ch(1,0)&(K230>1|K231>0))&! (Ch(0,1)&(K230>0|K231>1)))) ])
2019-10-14 19:03:01,598 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() > G0&! Ch(G0,G0)])
 f2:!(!Ch(0,0))=>(exists(K230:Int,K231:Int)[ (Ch(K230,K231)&turn(p1)&K230>=0&K230<xlen()&K231>=0&K231<ylen())&((( !(Ch(0,0)&(K230>0|K231>0)) ) => ( !(Ch(0,0)&(K230>0|K231>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 0&(Ch(G0,1)&(K230>G0|K231>1))])&!(exists(G0:Int)[G0>=0&(Ch(G0,1)&(K230>G0|K231>1))&! (Ch(1,G0)&(K230>1|K231>G0))])&!((Ch(1,0)&(K230>1|K231>0))&! (Ch(0,1)&(K230>0|K231>1)))) ])
2019-10-14 19:03:01,635 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 > 0&Ch(G0,1)])&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(1,G0)])&!(Ch(1,0)&! Ch(0,1))
 f2:forall(K227:Int,K228:Int)[ Ch(K227,K228)&turn(p2)&K227>=0&K227<xlen()&K228>=0&K228<ylen()=>((( !(Ch(0,0)&(K227>0|K228>0)) ) => ( !(Ch(0,0)&(K227>0|K228>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K229:Int)[ (xlen()=K229)&(G0>=0& K229 > G0&! (Ch(G0,G0)&(K227>G0|K228>G0)))] ])) ]
2019-10-14 19:03:01,676 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 > 0&Ch(G0,1)])&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(1,G0)])&!(Ch(1,0)&! Ch(0,1))
 f2:forall(K227:Int,K228:Int)[ Ch(K227,K228)&turn(p2)&K227>=0&K227<xlen()&K228>=0&K228<ylen()=>((( !(Ch(0,0)&(K227>0|K228>0)) ) => ( !(Ch(0,0)&(K227>0|K228>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K229:Int)[ (xlen()=K229)&(G0>=0& K229 > G0&! (Ch(G0,G0)&(K227>G0|K228>G0)))] ])) ]
2019-10-14 19:03:05,343 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&ylen() = G0&turn(p2)])
 f2:!(!Ch(0,0))=>(exists(K234:Int,K235:Int)[ (Ch(K234,K235)&turn(p1)&K234>=0&K234<xlen()&K235>=0&K235<ylen())&((( !(Ch(0,0)&(K234>0|K235>0)) ) => ( !(Ch(0,0)&(K234>0|K235>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 0&(Ch(G0,1)&(K234>G0|K235>1))])&!(exists(G0:Int)[G0>=0&(Ch(G0,1)&(K234>G0|K235>1))&! (Ch(1,G0)&(K234>1|K235>G0))])&!((Ch(1,0)&(K234>1|K235>0))&! (Ch(0,1)&(K234>0|K235>1)))) ])
2019-10-14 19:03:05,388 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 > 0&Ch(G0,1)])&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(1,G0)])&!(Ch(1,0)&! Ch(0,1))
 f2:forall(K232:Int,K233:Int)[ Ch(K232,K233)&turn(p2)&K232>=0&K232<xlen()&K233>=0&K233<ylen()=>((( !(Ch(0,0)&(K232>0|K233>0)) ) => ( !(Ch(0,0)&(K232>0|K233>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(ylen()=G0)&(!turn(p2))])) ]
2019-10-14 19:03:06,484 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! Ch(G0,G0)&Ch(0,0)&xlen() > G0])
 f2:!(!Ch(0,0))=>(exists(K239:Int,K240:Int)[ (Ch(K239,K240)&turn(p1)&K239>=0&K239<xlen()&K240>=0&K240<ylen())&((( !(Ch(0,0)&(K239>0|K240>0)) ) => ( !(Ch(0,0)&(K239>0|K240>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 0&(Ch(G0,1)&(K239>G0|K240>1))])&!(exists(G0:Int)[G0>=0&(Ch(G0,1)&(K239>G0|K240>1))&! (Ch(1,G0)&(K239>1|K240>G0))])&!((Ch(1,0)&(K239>1|K240>0))&! (Ch(0,1)&(K239>0|K240>1)))) ])
2019-10-14 19:03:06,536 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! Ch(G0,G0)&Ch(0,0)&xlen() > G0])
 f2:!(!Ch(0,0))=>(exists(K239:Int,K240:Int)[ (Ch(K239,K240)&turn(p1)&K239>=0&K239<xlen()&K240>=0&K240<ylen())&((( !(Ch(0,0)&(K239>0|K240>0)) ) => ( !(Ch(0,0)&(K239>0|K240>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 0&(Ch(G0,1)&(K239>G0|K240>1))])&!(exists(G0:Int)[G0>=0&(Ch(G0,1)&(K239>G0|K240>1))&! (Ch(1,G0)&(K239>1|K240>G0))])&!((Ch(1,0)&(K239>1|K240>0))&! (Ch(0,1)&(K239>0|K240>1)))) ])
2019-10-14 19:03:06,579 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 > 0&Ch(G0,1)])&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(1,G0)])&!(Ch(1,0)&! Ch(0,1))
 f2:forall(K236:Int,K237:Int)[ Ch(K236,K237)&turn(p2)&K236>=0&K236<xlen()&K237>=0&K237<ylen()=>((( !(Ch(0,0)&(K236>0|K237>0)) ) => ( !(Ch(0,0)&(K236>0|K237>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K238:Int)[ (xlen()=K238)&(G0>=0&! (Ch(G0,G0)&(K236>G0|K237>G0))&(Ch(0,0)&(K236>0|K237>0))& K238 > G0)] ])) ]
2019-10-14 19:03:06,615 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 > 0&Ch(G0,1)])&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(1,G0)])&!(Ch(1,0)&! Ch(0,1))
 f2:forall(K236:Int,K237:Int)[ Ch(K236,K237)&turn(p2)&K236>=0&K236<xlen()&K237>=0&K237<ylen()=>((( !(Ch(0,0)&(K236>0|K237>0)) ) => ( !(Ch(0,0)&(K236>0|K237>0))&(!turn(p1)) ))&!(exists(G0:Int)[ exists(K238:Int)[ (xlen()=K238)&(G0>=0&! (Ch(G0,G0)&(K236>G0|K237>G0))&(Ch(0,0)&(K236>0|K237>0))& K238 > G0)] ])) ]
2019-10-14 19:03:17,163 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:!(!Ch(0,0))=>(exists(K243:Int,K244:Int)[ (Ch(K243,K244)&turn(p1)&K243>=0&K243<xlen()&K244>=0&K244<ylen())&((( !(Ch(0,0)&(K243>0|K244>0)) ) => ( !(Ch(0,0)&(K243>0|K244>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 0&(Ch(G0,1)&(K243>G0|K244>1))])&!(exists(G0:Int)[G0>=0&(Ch(G0,1)&(K243>G0|K244>1))&! (Ch(1,G0)&(K243>1|K244>G0))])&!((Ch(1,0)&(K243>1|K244>0))&! (Ch(0,1)&(K243>0|K244>1)))) ])
2019-10-14 19:03:17,211 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 > 0&Ch(G0,1)])&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(1,G0)])&!(Ch(1,0)&! Ch(0,1))
 f2:forall(K241:Int,K242:Int)[ Ch(K241,K242)&turn(p2)&K241>=0&K241<xlen()&K242>=0&K242<ylen()=>(( !(Ch(0,0)&(K241>0|K242>0)) ) => ( !(Ch(0,0)&(K241>0|K242>0))&(!turn(p1)) )) ]
2019-10-14 19:03:17,497 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(turn(p2))
 f2:!(!Ch(0,0))=>(exists(K247:Int,K248:Int)[ (Ch(K247,K248)&turn(p1)&K247>=0&K247<xlen()&K248>=0&K248<ylen())&((( !(Ch(0,0)&(K247>0|K248>0)) ) => ( !(Ch(0,0)&(K247>0|K248>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 0&(Ch(G0,1)&(K247>G0|K248>1))])&!(exists(G0:Int)[G0>=0&(Ch(G0,1)&(K247>G0|K248>1))&! (Ch(1,G0)&(K247>1|K248>G0))])&!((Ch(1,0)&(K247>1|K248>0))&! (Ch(0,1)&(K247>0|K248>1)))) ])
2019-10-14 19:03:17,544 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 > 0&Ch(G0,1)])&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(1,G0)])&!(Ch(1,0)&! Ch(0,1))
 f2:forall(K245:Int,K246:Int)[ Ch(K245,K246)&turn(p2)&K245>=0&K245<xlen()&K246>=0&K246<ylen()=>((( !(Ch(0,0)&(K245>0|K246>0)) ) => ( !(Ch(0,0)&(K245>0|K246>0))&(!turn(p1)) ))&!((!turn(p2)))) ]
2019-10-14 19:03:43,838 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(turn(p2))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(1,0)&! Ch(0,1)])
 f2:!(!Ch(0,0))=>(exists(K251:Int,K252:Int)[ (Ch(K251,K252)&turn(p1)&K251>=0&K251<xlen()&K252>=0&K252<ylen())&((( !(Ch(0,0)&(K251>0|K252>0)) ) => ( !(Ch(0,0)&(K251>0|K252>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 0&(Ch(G0,1)&(K251>G0|K252>1))])&!(exists(G0:Int)[G0>=0&(Ch(G0,1)&(K251>G0|K252>1))&! (Ch(1,G0)&(K251>1|K252>G0))])&!((Ch(1,0)&(K251>1|K252>0))&! (Ch(0,1)&(K251>0|K252>1)))) ])
2019-10-14 19:03:43,897 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 > 0&Ch(G0,1)])&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(1,G0)])&!(Ch(1,0)&! Ch(0,1))
 f2:forall(K249:Int,K250:Int)[ Ch(K249,K250)&turn(p2)&K249>=0&K249<xlen()&K250>=0&K250<ylen()=>((( !(Ch(0,0)&(K249>0|K250>0)) ) => ( !(Ch(0,0)&(K249>0|K250>0))&(!turn(p1)) ))&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K249>0|K250>G0))&! (Ch(1,0)&(K249>1|K250>0))&! (Ch(0,1)&(K249>0|K250>1))])) ]
2019-10-14 19:03:43,943 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 > 0&Ch(G0,1)])&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(1,G0)])&!(Ch(1,0)&! Ch(0,1))
 f2:forall(K249:Int,K250:Int)[ Ch(K249,K250)&turn(p2)&K249>=0&K249<xlen()&K250>=0&K250<ylen()=>((( !(Ch(0,0)&(K249>0|K250>0)) ) => ( !(Ch(0,0)&(K249>0|K250>0))&(!turn(p1)) ))&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K249>0|K250>G0))&! (Ch(1,0)&(K249>1|K250>0))&! (Ch(0,1)&(K249>0|K250>1))])) ]
2019-10-14 19:03:43,982 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 > 0&Ch(G0,1)])&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(1,G0)])&!(Ch(1,0)&! Ch(0,1))
 f2:forall(K249:Int,K250:Int)[ Ch(K249,K250)&turn(p2)&K249>=0&K249<xlen()&K250>=0&K250<ylen()=>((( !(Ch(0,0)&(K249>0|K250>0)) ) => ( !(Ch(0,0)&(K249>0|K250>0))&(!turn(p1)) ))&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K249>0|K250>G0))&! (Ch(1,0)&(K249>1|K250>0))&! (Ch(0,1)&(K249>0|K250>1))])) ]
2019-10-14 19:04:20,422 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(turn(p2))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(1,0)&! Ch(0,1)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(1,G0)&Ch(0,G1)&! Ch(G1,G1)])
 f2:!(!Ch(0,0))=>(exists(K255:Int,K256:Int)[ (Ch(K255,K256)&turn(p1)&K255>=0&K255<xlen()&K256>=0&K256<ylen())&((( !(Ch(0,0)&(K255>0|K256>0)) ) => ( !(Ch(0,0)&(K255>0|K256>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 0&(Ch(G0,1)&(K255>G0|K256>1))])&!(exists(G0:Int)[G0>=0&(Ch(G0,1)&(K255>G0|K256>1))&! (Ch(1,G0)&(K255>1|K256>G0))])&!((Ch(1,0)&(K255>1|K256>0))&! (Ch(0,1)&(K255>0|K256>1)))&!(exists(G0:Int)[ exists(K257:Int)[ (ylen()=K257)&(G0>=0&G0 > 1& K257 > G0)] ])) ])
2019-10-14 19:04:20,469 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(turn(p2))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(1,0)&! Ch(0,1)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(1,G0)&Ch(0,G1)&! Ch(G1,G1)])
 f2:!(!Ch(0,0))=>(exists(K255:Int,K256:Int)[ (Ch(K255,K256)&turn(p1)&K255>=0&K255<xlen()&K256>=0&K256<ylen())&((( !(Ch(0,0)&(K255>0|K256>0)) ) => ( !(Ch(0,0)&(K255>0|K256>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 0&(Ch(G0,1)&(K255>G0|K256>1))])&!(exists(G0:Int)[G0>=0&(Ch(G0,1)&(K255>G0|K256>1))&! (Ch(1,G0)&(K255>1|K256>G0))])&!((Ch(1,0)&(K255>1|K256>0))&! (Ch(0,1)&(K255>0|K256>1)))&!(exists(G0:Int)[ exists(K257:Int)[ (ylen()=K257)&(G0>=0&G0 > 1& K257 > G0)] ])) ])
2019-10-14 19:04:20,508 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(turn(p2))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(1,0)&! Ch(0,1)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(1,G0)&Ch(0,G1)&! Ch(G1,G1)])
 f2:!(!Ch(0,0))=>(exists(K255:Int,K256:Int)[ (Ch(K255,K256)&turn(p1)&K255>=0&K255<xlen()&K256>=0&K256<ylen())&((( !(Ch(0,0)&(K255>0|K256>0)) ) => ( !(Ch(0,0)&(K255>0|K256>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 0&(Ch(G0,1)&(K255>G0|K256>1))])&!(exists(G0:Int)[G0>=0&(Ch(G0,1)&(K255>G0|K256>1))&! (Ch(1,G0)&(K255>1|K256>G0))])&!((Ch(1,0)&(K255>1|K256>0))&! (Ch(0,1)&(K255>0|K256>1)))&!(exists(G0:Int)[ exists(K257:Int)[ (ylen()=K257)&(G0>=0&G0 > 1& K257 > G0)] ])) ])
2019-10-14 19:04:20,550 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 > 0&Ch(G0,1)])&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(1,G0)])&!(Ch(1,0)&! Ch(0,1))&!(exists(G0:Int)[G0>=0&G0 > 1&ylen() > G0])
 f2:forall(K253:Int,K254:Int)[ Ch(K253,K254)&turn(p2)&K253>=0&K253<xlen()&K254>=0&K254<ylen()=>((( !(Ch(0,0)&(K253>0|K254>0)) ) => ( !(Ch(0,0)&(K253>0|K254>0))&(!turn(p1)) ))&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K253>0|K254>G0))&! (Ch(1,0)&(K253>1|K254>0))&! (Ch(0,1)&(K253>0|K254>1))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(1,G0)&(K253>1|K254>G0))&(Ch(0,G1)&(K253>0|K254>G1))&! (Ch(G1,G1)&(K253>G1|K254>G1))])) ]
2019-10-14 20:39:44,967 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:!(!Ch(0,0))=>(exists(K21:Int,K22:Int)[ (Ch(K21,K22)&turn(p1)&K21>=0&K21<xlen()&K22>=0&K22<ylen())&(( !(Ch(0,0)&(K21>0|K22>0)) ) => ( !(Ch(0,0)&(K21>0|K22>0))&(!turn(p1)) )) ])
2019-10-14 20:39:45,021 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:forall(K19:Int,K20:Int)[ Ch(K19,K20)&turn(p2)&K19>=0&K19<xlen()&K20>=0&K20<ylen()=>(( !(Ch(0,0)&(K19>0|K20>0)) ) => ( !(Ch(0,0)&(K19>0|K20>0))&(!turn(p1)) )) ]
2019-10-14 20:39:45,232 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(0,X1)])
 f2:!(!Ch(0,0))=>(exists(K25:Int,K26:Int)[ (Ch(K25,K26)&turn(p1)&K25>=0&K25<xlen()&K26>=0&K26<ylen())&(( !(Ch(0,0)&(K25>0|K26>0)) ) => ( !(Ch(0,0)&(K25>0|K26>0))&(!turn(p1)) )) ])
2019-10-14 20:39:45,266 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:forall(K23:Int,K24:Int)[ Ch(K23,K24)&turn(p2)&K23>=0&K23<xlen()&K24>=0&K24<ylen()=>((( !(Ch(0,0)&(K23>0|K24>0)) ) => ( !(Ch(0,0)&(K23>0|K24>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(Ch(0,X1)&(K23>0|K24>X1))])) ]
2019-10-14 20:40:11,083 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:!(!Ch(0,0))=>(exists(K21:Int,K22:Int)[ (Ch(K21,K22)&turn(p1)&K21>=0&K21<xlen()&K22>=0&K22<ylen())&(( !(Ch(0,0)&(K21>0|K22>0)) ) => ( !(Ch(0,0)&(K21>0|K22>0))&(!turn(p1)) )) ])
2019-10-14 20:40:11,143 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:forall(K19:Int,K20:Int)[ Ch(K19,K20)&turn(p2)&K19>=0&K19<xlen()&K20>=0&K20<ylen()=>(( !(Ch(0,0)&(K19>0|K20>0)) ) => ( !(Ch(0,0)&(K19>0|K20>0))&(!turn(p1)) )) ]
2019-10-14 20:40:11,313 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(0,X1)])
 f2:!(!Ch(0,0))=>(exists(K25:Int,K26:Int)[ (Ch(K25,K26)&turn(p1)&K25>=0&K25<xlen()&K26>=0&K26<ylen())&(( !(Ch(0,0)&(K25>0|K26>0)) ) => ( !(Ch(0,0)&(K25>0|K26>0))&(!turn(p1)) )) ])
2019-10-14 20:40:11,349 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:forall(K23:Int,K24:Int)[ Ch(K23,K24)&turn(p2)&K23>=0&K23<xlen()&K24>=0&K24<ylen()=>((( !(Ch(0,0)&(K23>0|K24>0)) ) => ( !(Ch(0,0)&(K23>0|K24>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(Ch(0,X1)&(K23>0|K24>X1))])) ]
2019-10-14 20:40:11,775 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(0,X1)])
 f2:!(!Ch(0,0))=>(exists(K29:Int,K30:Int)[ (Ch(K29,K30)&turn(p1)&K29>=0&K29<xlen()&K30>=0&K30<ylen())&((( !(Ch(0,0)&(K29>0|K30>0)) ) => ( !(Ch(0,0)&(K29>0|K30>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(Ch(1,X1)&(K29>1|K30>X1))])) ])
2019-10-14 20:40:11,811 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(1,X1)])
 f2:forall(K27:Int,K28:Int)[ Ch(K27,K28)&turn(p2)&K27>=0&K27<xlen()&K28>=0&K28<ylen()=>((( !(Ch(0,0)&(K27>0|K28>0)) ) => ( !(Ch(0,0)&(K27>0|K28>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(Ch(0,X1)&(K27>0|K28>X1))])) ]
2019-10-14 20:40:11,856 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(1,X1)])
 f2:forall(K27:Int,K28:Int)[ Ch(K27,K28)&turn(p2)&K27>=0&K27<xlen()&K28>=0&K28<ylen()=>((( !(Ch(0,0)&(K27>0|K28>0)) ) => ( !(Ch(0,0)&(K27>0|K28>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(Ch(0,X1)&(K27>0|K28>X1))])) ]
2019-10-14 20:40:12,491 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(0,X1)])
 f2:!(!Ch(0,0))=>(exists(K33:Int,K34:Int)[ (Ch(K33,K34)&turn(p1)&K33>=0&K33<xlen()&K34>=0&K34<ylen())&((( !(Ch(0,0)&(K33>0|K34>0)) ) => ( !(Ch(0,0)&(K33>0|K34>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(Ch(1,X1)&(K33>1|K34>X1))])&!(exists(X1:Int)[X1>=0&(Ch(0,X1)&(K33>0|K34>X1))])) ])
2019-10-14 20:40:12,528 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(1,X1)])&!(exists(X1:Int)[X1>=0&Ch(0,X1)])
 f2:forall(K31:Int,K32:Int)[ Ch(K31,K32)&turn(p2)&K31>=0&K31<xlen()&K32>=0&K32<ylen()=>((( !(Ch(0,0)&(K31>0|K32>0)) ) => ( !(Ch(0,0)&(K31>0|K32>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(Ch(0,X1)&(K31>0|K32>X1))])) ]
2019-10-14 20:40:12,564 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:forall(K16:Int,K17:Int)[K16>=0&K16<xlen()&K17>=0&K17<ylen()=>Ch(K16,K17)]&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)
 f2:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(0,X1)])
2019-10-14 20:40:53,554 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:!(!Ch(0,0))=>(exists(K21:Int,K22:Int)[ (Ch(K21,K22)&turn(p1)&K21>=0&K21<xlen()&K22>=0&K22<ylen())&(( !(Ch(0,0)&(K21>0|K22>0)) ) => ( !(Ch(0,0)&(K21>0|K22>0))&(!turn(p1)) )) ])
2019-10-14 20:40:53,601 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:forall(K19:Int,K20:Int)[ Ch(K19,K20)&turn(p2)&K19>=0&K19<xlen()&K20>=0&K20<ylen()=>(( !(Ch(0,0)&(K19>0|K20>0)) ) => ( !(Ch(0,0)&(K19>0|K20>0))&(!turn(p1)) )) ]
2019-10-14 20:40:53,796 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(0,X1)])
 f2:!(!Ch(0,0))=>(exists(K25:Int,K26:Int)[ (Ch(K25,K26)&turn(p1)&K25>=0&K25<xlen()&K26>=0&K26<ylen())&(( !(Ch(0,0)&(K25>0|K26>0)) ) => ( !(Ch(0,0)&(K25>0|K26>0))&(!turn(p1)) )) ])
2019-10-14 20:40:53,830 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:forall(K23:Int,K24:Int)[ Ch(K23,K24)&turn(p2)&K23>=0&K23<xlen()&K24>=0&K24<ylen()=>((( !(Ch(0,0)&(K23>0|K24>0)) ) => ( !(Ch(0,0)&(K23>0|K24>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(Ch(0,X1)&(K23>0|K24>X1))])) ]
2019-10-14 20:40:54,228 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(0,X1)])
 f2:!(!Ch(0,0))=>(exists(K29:Int,K30:Int)[ (Ch(K29,K30)&turn(p1)&K29>=0&K29<xlen()&K30>=0&K30<ylen())&((( !(Ch(0,0)&(K29>0|K30>0)) ) => ( !(Ch(0,0)&(K29>0|K30>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(Ch(1,X1)&(K29>1|K30>X1))])) ])
2019-10-14 20:40:54,264 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(1,X1)])
 f2:forall(K27:Int,K28:Int)[ Ch(K27,K28)&turn(p2)&K27>=0&K27<xlen()&K28>=0&K28<ylen()=>((( !(Ch(0,0)&(K27>0|K28>0)) ) => ( !(Ch(0,0)&(K27>0|K28>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(Ch(0,X1)&(K27>0|K28>X1))])) ]
2019-10-14 20:40:54,306 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(1,X1)])
 f2:forall(K27:Int,K28:Int)[ Ch(K27,K28)&turn(p2)&K27>=0&K27<xlen()&K28>=0&K28<ylen()=>((( !(Ch(0,0)&(K27>0|K28>0)) ) => ( !(Ch(0,0)&(K27>0|K28>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(Ch(0,X1)&(K27>0|K28>X1))])) ]
2019-10-14 20:40:54,934 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(0,X1)])
 f2:!(!Ch(0,0))=>(exists(K33:Int,K34:Int)[ (Ch(K33,K34)&turn(p1)&K33>=0&K33<xlen()&K34>=0&K34<ylen())&((( !(Ch(0,0)&(K33>0|K34>0)) ) => ( !(Ch(0,0)&(K33>0|K34>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(Ch(1,X1)&(K33>1|K34>X1))])&!(exists(X1:Int)[X1>=0&(Ch(0,X1)&(K33>0|K34>X1))])) ])
2019-10-14 20:40:54,977 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(1,X1)])&!(exists(X1:Int)[X1>=0&Ch(0,X1)])
 f2:forall(K31:Int,K32:Int)[ Ch(K31,K32)&turn(p2)&K31>=0&K31<xlen()&K32>=0&K32<ylen()=>((( !(Ch(0,0)&(K31>0|K32>0)) ) => ( !(Ch(0,0)&(K31>0|K32>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(Ch(0,X1)&(K31>0|K32>X1))])) ]
2019-10-14 20:40:55,006 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:forall(K16:Int,K17:Int)[K16>=0&K16<xlen()&K17>=0&K17<ylen()=>Ch(K16,K17)]&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)
 f2:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(0,X1)])
2019-10-14 20:40:55,990 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 0&! Ch(1,G0)])
 f2:!(!Ch(0,0))=>(exists(K37:Int,K38:Int)[ (Ch(K37,K38)&turn(p1)&K37>=0&K37<xlen()&K38>=0&K38<ylen())&((( !(Ch(0,0)&(K37>0|K38>0)) ) => ( !(Ch(0,0)&(K37>0|K38>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 0&(Ch(1,G0)&(K37>1|K38>G0))])&!(exists(G0:Int)[G0>=0&G0 = 0&! (Ch(1,G0)&(K37>1|K38>G0))])) ])
2019-10-14 20:40:56,032 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 > 0&Ch(1,G0)])&!(exists(G0:Int)[G0>=0&G0 = 0&! Ch(1,G0)])
 f2:forall(K35:Int,K36:Int)[ Ch(K35,K36)&turn(p2)&K35>=0&K35<xlen()&K36>=0&K36<ylen()=>((( !(Ch(0,0)&(K35>0|K36>0)) ) => ( !(Ch(0,0)&(K35>0|K36>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 0&! (Ch(1,G0)&(K35>1|K36>G0))])) ]
2019-10-14 20:40:56,645 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 0&! Ch(1,G0)])
 f2:!(!Ch(0,0))=>(exists(K41:Int,K42:Int)[ (Ch(K41,K42)&turn(p1)&K41>=0&K41<xlen()&K42>=0&K42<ylen())&((( !(Ch(0,0)&(K41>0|K42>0)) ) => ( !(Ch(0,0)&(K41>0|K42>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 0&(Ch(1,G0)&(K41>1|K42>G0))])&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K41>0|K42>G0))&! (Ch(G0,0)&(K41>G0|K42>0))])) ])
2019-10-14 20:40:56,712 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 0&! Ch(1,G0)])
 f2:!(!Ch(0,0))=>(exists(K41:Int,K42:Int)[ (Ch(K41,K42)&turn(p1)&K41>=0&K41<xlen()&K42>=0&K42<ylen())&((( !(Ch(0,0)&(K41>0|K42>0)) ) => ( !(Ch(0,0)&(K41>0|K42>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 0&(Ch(1,G0)&(K41>1|K42>G0))])&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K41>0|K42>G0))&! (Ch(G0,0)&(K41>G0|K42>0))])) ])
2019-10-14 20:40:56,749 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 > 0&Ch(1,G0)])&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(G0,0)])
 f2:forall(K39:Int,K40:Int)[ Ch(K39,K40)&turn(p2)&K39>=0&K39<xlen()&K40>=0&K40<ylen()=>((( !(Ch(0,0)&(K39>0|K40>0)) ) => ( !(Ch(0,0)&(K39>0|K40>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 0&! (Ch(1,G0)&(K39>1|K40>G0))])) ]
2019-10-14 20:40:57,781 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 0&! Ch(1,G0)])&!(turn(p2))
 f2:!(!Ch(0,0))=>(exists(K45:Int,K46:Int)[ (Ch(K45,K46)&turn(p1)&K45>=0&K45<xlen()&K46>=0&K46<ylen())&((( !(Ch(0,0)&(K45>0|K46>0)) ) => ( !(Ch(0,0)&(K45>0|K46>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K45>0|K46>G0))&! (Ch(G0,0)&(K45>G0|K46>0))])&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K45>1|K46>G0))&! (Ch(0,1)&(K45>0|K46>1))])) ])
2019-10-14 20:40:58,087 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 0&! Ch(1,G0)])&!(turn(p2))
 f2:!(!Ch(0,0))=>(exists(K45:Int,K46:Int)[ (Ch(K45,K46)&turn(p1)&K45>=0&K45<xlen()&K46>=0&K46<ylen())&((( !(Ch(0,0)&(K45>0|K46>0)) ) => ( !(Ch(0,0)&(K45>0|K46>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K45>0|K46>G0))&! (Ch(G0,0)&(K45>G0|K46>0))])&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K45>1|K46>G0))&! (Ch(0,1)&(K45>0|K46>1))])) ])
2019-10-14 20:40:58,136 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(G0,0)])&!(exists(G0:Int)[G0>=0&Ch(1,G0)&! Ch(0,1)])
 f2:forall(K43:Int,K44:Int)[ Ch(K43,K44)&turn(p2)&K43>=0&K43<xlen()&K44>=0&K44<ylen()=>((( !(Ch(0,0)&(K43>0|K44>0)) ) => ( !(Ch(0,0)&(K43>0|K44>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 0&! (Ch(1,G0)&(K43>1|K44>G0))])&!((!turn(p2)))) ]
2019-10-14 20:40:58,861 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(turn(p2))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&turn(p2)])
 f2:!(!Ch(0,0))=>(exists(K49:Int,K50:Int)[ (Ch(K49,K50)&turn(p1)&K49>=0&K49<xlen()&K50>=0&K50<ylen())&((( !(Ch(0,0)&(K49>0|K50>0)) ) => ( !(Ch(0,0)&(K49>0|K50>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K49>0|K50>G0))&! (Ch(G0,0)&(K49>G0|K50>0))])&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K49>1|K50>G0))&! (Ch(0,1)&(K49>0|K50>1))])) ])
2019-10-14 20:40:58,917 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(G0,0)])&!(exists(G0:Int)[G0>=0&Ch(1,G0)&! Ch(0,1)])
 f2:forall(K47:Int,K48:Int)[ Ch(K47,K48)&turn(p2)&K47>=0&K47<xlen()&K48>=0&K48<ylen()=>((( !(Ch(0,0)&(K47>0|K48>0)) ) => ( !(Ch(0,0)&(K47>0|K48>0))&(!turn(p1)) ))&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K47>0|K48>G0))&(!turn(p2))])) ]
2019-10-14 21:54:58,689 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)
 f2:false
2019-10-14 21:56:22,159 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)
 f2:false
2019-10-14 21:56:57,935 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)
 f2:false
2019-10-14 21:57:08,661 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(3>=0&3<xlen()&0>=0&0<ylen()=>Ch(3,0))&(4>=0&4<xlen()&0>=0&0<ylen()=>Ch(4,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(3>=0&3<xlen()&1>=0&1<ylen()=>Ch(3,1))&(4>=0&4<xlen()&1>=0&1<ylen()=>Ch(4,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2))&(3>=0&3<xlen()&2>=0&2<ylen()=>Ch(3,2))&(4>=0&4<xlen()&2>=0&2<ylen()=>Ch(4,2))&(0>=0&0<xlen()&3>=0&3<ylen()=>Ch(0,3))&(1>=0&1<xlen()&3>=0&3<ylen()=>Ch(1,3))&(2>=0&2<xlen()&3>=0&3<ylen()=>Ch(2,3))&(3>=0&3<xlen()&3>=0&3<ylen()=>Ch(3,3))&(4>=0&4<xlen()&3>=0&3<ylen()=>Ch(4,3))&(0>=0&0<xlen()&4>=0&4<ylen()=>Ch(0,4))&(1>=0&1<xlen()&4>=0&4<ylen()=>Ch(1,4))&(2>=0&2<xlen()&4>=0&4<ylen()=>Ch(2,4))&(3>=0&3<xlen()&4>=0&4<ylen()=>Ch(3,4))&(4>=0&4<xlen()&4>=0&4<ylen()=>Ch(4,4)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)
 f2:false
2019-10-14 22:43:22,893 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:!(!Ch(0,0))=>(exists(K21:Int,K22:Int)[ (Ch(K21,K22)&turn(p1)&K21>=0&K21<xlen()&K22>=0&K22<ylen())&(( !(Ch(0,0)&(K21>0|K22>0)) ) => ( !(Ch(0,0)&(K21>0|K22>0))&(!turn(p1)) )) ])
2019-10-14 22:43:22,952 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:forall(K19:Int,K20:Int)[ Ch(K19,K20)&turn(p2)&K19>=0&K19<xlen()&K20>=0&K20<ylen()=>(( !(Ch(0,0)&(K19>0|K20>0)) ) => ( !(Ch(0,0)&(K19>0|K20>0))&(!turn(p1)) )) ]
2019-10-14 22:43:23,126 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(0,X1)])
 f2:!(!Ch(0,0))=>(exists(K25:Int,K26:Int)[ (Ch(K25,K26)&turn(p1)&K25>=0&K25<xlen()&K26>=0&K26<ylen())&(( !(Ch(0,0)&(K25>0|K26>0)) ) => ( !(Ch(0,0)&(K25>0|K26>0))&(!turn(p1)) )) ])
2019-10-14 22:43:23,160 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:forall(K23:Int,K24:Int)[ Ch(K23,K24)&turn(p2)&K23>=0&K23<xlen()&K24>=0&K24<ylen()=>((( !(Ch(0,0)&(K23>0|K24>0)) ) => ( !(Ch(0,0)&(K23>0|K24>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(Ch(0,X1)&(K23>0|K24>X1))])) ]
2019-10-14 22:43:23,464 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(0,X1)])
 f2:!(!Ch(0,0))=>(exists(K29:Int,K30:Int)[ (Ch(K29,K30)&turn(p1)&K29>=0&K29<xlen()&K30>=0&K30<ylen())&((( !(Ch(0,0)&(K29>0|K30>0)) ) => ( !(Ch(0,0)&(K29>0|K30>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(Ch(1,X1)&(K29>1|K30>X1))])) ])
2019-10-14 22:43:23,497 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(1,X1)])
 f2:forall(K27:Int,K28:Int)[ Ch(K27,K28)&turn(p2)&K27>=0&K27<xlen()&K28>=0&K28<ylen()=>((( !(Ch(0,0)&(K27>0|K28>0)) ) => ( !(Ch(0,0)&(K27>0|K28>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(Ch(0,X1)&(K27>0|K28>X1))])) ]
2019-10-14 22:43:23,542 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(1,X1)])
 f2:forall(K27:Int,K28:Int)[ Ch(K27,K28)&turn(p2)&K27>=0&K27<xlen()&K28>=0&K28<ylen()=>((( !(Ch(0,0)&(K27>0|K28>0)) ) => ( !(Ch(0,0)&(K27>0|K28>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(Ch(0,X1)&(K27>0|K28>X1))])) ]
2019-10-14 22:43:24,089 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(0,X1)])
 f2:!(!Ch(0,0))=>(exists(K33:Int,K34:Int)[ (Ch(K33,K34)&turn(p1)&K33>=0&K33<xlen()&K34>=0&K34<ylen())&((( !(Ch(0,0)&(K33>0|K34>0)) ) => ( !(Ch(0,0)&(K33>0|K34>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(Ch(1,X1)&(K33>1|K34>X1))])&!(exists(X1:Int)[X1>=0&(Ch(0,X1)&(K33>0|K34>X1))])) ])
2019-10-14 22:43:24,128 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(1,X1)])&!(exists(X1:Int)[X1>=0&Ch(0,X1)])
 f2:forall(K31:Int,K32:Int)[ Ch(K31,K32)&turn(p2)&K31>=0&K31<xlen()&K32>=0&K32<ylen()=>((( !(Ch(0,0)&(K31>0|K32>0)) ) => ( !(Ch(0,0)&(K31>0|K32>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(Ch(0,X1)&(K31>0|K32>X1))])) ]
2019-10-14 22:43:24,166 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:forall(K16:Int,K17:Int)[K16>=0&K16<xlen()&K17>=0&K17<ylen()=>Ch(K16,K17)]&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)
 f2:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(0,X1)])
2019-10-14 22:43:25,119 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 0&! Ch(1,G0)])
 f2:!(!Ch(0,0))=>(exists(K37:Int,K38:Int)[ (Ch(K37,K38)&turn(p1)&K37>=0&K37<xlen()&K38>=0&K38<ylen())&((( !(Ch(0,0)&(K37>0|K38>0)) ) => ( !(Ch(0,0)&(K37>0|K38>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 0&(Ch(1,G0)&(K37>1|K38>G0))])&!(exists(G0:Int)[G0>=0&G0 = 0&! (Ch(1,G0)&(K37>1|K38>G0))])) ])
2019-10-14 22:43:25,165 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 > 0&Ch(1,G0)])&!(exists(G0:Int)[G0>=0&G0 = 0&! Ch(1,G0)])
 f2:forall(K35:Int,K36:Int)[ Ch(K35,K36)&turn(p2)&K35>=0&K35<xlen()&K36>=0&K36<ylen()=>((( !(Ch(0,0)&(K35>0|K36>0)) ) => ( !(Ch(0,0)&(K35>0|K36>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 0&! (Ch(1,G0)&(K35>1|K36>G0))])) ]
2019-10-14 22:43:25,302 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)
 f2:false
2019-10-14 22:43:25,880 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 0&! Ch(1,G0)])
 f2:!(!Ch(0,0))=>(exists(K41:Int,K42:Int)[ (Ch(K41,K42)&turn(p1)&K41>=0&K41<xlen()&K42>=0&K42<ylen())&((( !(Ch(0,0)&(K41>0|K42>0)) ) => ( !(Ch(0,0)&(K41>0|K42>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 0&(Ch(1,G0)&(K41>1|K42>G0))])&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K41>0|K42>G0))&! (Ch(G0,0)&(K41>G0|K42>0))])) ])
2019-10-14 22:43:25,946 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 0&! Ch(1,G0)])
 f2:!(!Ch(0,0))=>(exists(K41:Int,K42:Int)[ (Ch(K41,K42)&turn(p1)&K41>=0&K41<xlen()&K42>=0&K42<ylen())&((( !(Ch(0,0)&(K41>0|K42>0)) ) => ( !(Ch(0,0)&(K41>0|K42>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 0&(Ch(1,G0)&(K41>1|K42>G0))])&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K41>0|K42>G0))&! (Ch(G0,0)&(K41>G0|K42>0))])) ])
2019-10-14 22:43:25,983 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 > 0&Ch(1,G0)])&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(G0,0)])
 f2:forall(K39:Int,K40:Int)[ Ch(K39,K40)&turn(p2)&K39>=0&K39<xlen()&K40>=0&K40<ylen()=>((( !(Ch(0,0)&(K39>0|K40>0)) ) => ( !(Ch(0,0)&(K39>0|K40>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 0&! (Ch(1,G0)&(K39>1|K40>G0))])) ]
2019-10-14 22:43:26,932 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 0&! Ch(1,G0)])&!(turn(p2))
 f2:!(!Ch(0,0))=>(exists(K45:Int,K46:Int)[ (Ch(K45,K46)&turn(p1)&K45>=0&K45<xlen()&K46>=0&K46<ylen())&((( !(Ch(0,0)&(K45>0|K46>0)) ) => ( !(Ch(0,0)&(K45>0|K46>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K45>0|K46>G0))&! (Ch(G0,0)&(K45>G0|K46>0))])&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K45>1|K46>G0))&! (Ch(0,1)&(K45>0|K46>1))])) ])
2019-10-14 22:43:27,237 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 0&! Ch(1,G0)])&!(turn(p2))
 f2:!(!Ch(0,0))=>(exists(K45:Int,K46:Int)[ (Ch(K45,K46)&turn(p1)&K45>=0&K45<xlen()&K46>=0&K46<ylen())&((( !(Ch(0,0)&(K45>0|K46>0)) ) => ( !(Ch(0,0)&(K45>0|K46>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K45>0|K46>G0))&! (Ch(G0,0)&(K45>G0|K46>0))])&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K45>1|K46>G0))&! (Ch(0,1)&(K45>0|K46>1))])) ])
2019-10-14 22:43:27,291 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(G0,0)])&!(exists(G0:Int)[G0>=0&Ch(1,G0)&! Ch(0,1)])
 f2:forall(K43:Int,K44:Int)[ Ch(K43,K44)&turn(p2)&K43>=0&K43<xlen()&K44>=0&K44<ylen()=>((( !(Ch(0,0)&(K43>0|K44>0)) ) => ( !(Ch(0,0)&(K43>0|K44>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 0&! (Ch(1,G0)&(K43>1|K44>G0))])&!((!turn(p2)))) ]
2019-10-14 22:43:27,518 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)
 f2:false
2019-10-14 22:43:28,076 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(turn(p2))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&turn(p2)])
 f2:!(!Ch(0,0))=>(exists(K49:Int,K50:Int)[ (Ch(K49,K50)&turn(p1)&K49>=0&K49<xlen()&K50>=0&K50<ylen())&((( !(Ch(0,0)&(K49>0|K50>0)) ) => ( !(Ch(0,0)&(K49>0|K50>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K49>0|K50>G0))&! (Ch(G0,0)&(K49>G0|K50>0))])&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K49>1|K50>G0))&! (Ch(0,1)&(K49>0|K50>1))])) ])
2019-10-14 22:43:28,117 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(G0,0)])&!(exists(G0:Int)[G0>=0&Ch(1,G0)&! Ch(0,1)])
 f2:forall(K47:Int,K48:Int)[ Ch(K47,K48)&turn(p2)&K47>=0&K47<xlen()&K48>=0&K48<ylen()=>((( !(Ch(0,0)&(K47>0|K48>0)) ) => ( !(Ch(0,0)&(K47>0|K48>0))&(!turn(p1)) ))&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K47>0|K48>G0))&(!turn(p2))])) ]
2019-10-14 22:43:54,603 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&turn(p2)])&!(turn(p2))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(1,0)&! Ch(0,1)])
 f2:!(!Ch(0,0))=>(exists(K53:Int,K54:Int)[ (Ch(K53,K54)&turn(p1)&K53>=0&K53<xlen()&K54>=0&K54<ylen())&((( !(Ch(0,0)&(K53>0|K54>0)) ) => ( !(Ch(0,0)&(K53>0|K54>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K53>0|K54>G0))&! (Ch(G0,0)&(K53>G0|K54>0))])&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K53>1|K54>G0))&! (Ch(0,1)&(K53>0|K54>1))])) ])
2019-10-14 22:43:55,412 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&turn(p2)])&!(turn(p2))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(1,0)&! Ch(0,1)])
 f2:!(!Ch(0,0))=>(exists(K53:Int,K54:Int)[ (Ch(K53,K54)&turn(p1)&K53>=0&K53<xlen()&K54>=0&K54<ylen())&((( !(Ch(0,0)&(K53>0|K54>0)) ) => ( !(Ch(0,0)&(K53>0|K54>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K53>0|K54>G0))&! (Ch(G0,0)&(K53>G0|K54>0))])&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K53>1|K54>G0))&! (Ch(0,1)&(K53>0|K54>1))])) ])
2019-10-14 22:43:55,467 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(G0,0)])&!(exists(G0:Int)[G0>=0&Ch(1,G0)&! Ch(0,1)])
 f2:forall(K51:Int,K52:Int)[ Ch(K51,K52)&turn(p2)&K51>=0&K51<xlen()&K52>=0&K52<ylen()=>((( !(Ch(0,0)&(K51>0|K52>0)) ) => ( !(Ch(0,0)&(K51>0|K52>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K51>0|K52>G0))&(!turn(p2))])&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K51>0|K52>G0))&! (Ch(1,0)&(K51>1|K52>0))&! (Ch(0,1)&(K51>0|K52>1))])) ]
2019-10-14 22:43:55,516 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(G0,0)])&!(exists(G0:Int)[G0>=0&Ch(1,G0)&! Ch(0,1)])
 f2:forall(K51:Int,K52:Int)[ Ch(K51,K52)&turn(p2)&K51>=0&K51<xlen()&K52>=0&K52<ylen()=>((( !(Ch(0,0)&(K51>0|K52>0)) ) => ( !(Ch(0,0)&(K51>0|K52>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K51>0|K52>G0))&(!turn(p2))])&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K51>0|K52>G0))&! (Ch(1,0)&(K51>1|K52>0))&! (Ch(0,1)&(K51>0|K52>1))])) ]
2019-10-14 22:43:55,557 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(G0,0)])&!(exists(G0:Int)[G0>=0&Ch(1,G0)&! Ch(0,1)])
 f2:forall(K51:Int,K52:Int)[ Ch(K51,K52)&turn(p2)&K51>=0&K51<xlen()&K52>=0&K52<ylen()=>((( !(Ch(0,0)&(K51>0|K52>0)) ) => ( !(Ch(0,0)&(K51>0|K52>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K51>0|K52>G0))&(!turn(p2))])&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K51>0|K52>G0))&! (Ch(1,0)&(K51>1|K52>0))&! (Ch(0,1)&(K51>0|K52>1))])) ]
2019-10-14 22:44:31,783 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&turn(p2)])&!(turn(p2))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(1,0)&! Ch(0,1)])&!(exists(G0:Int)[G0>=0&Ch(1,0)&Ch(G0,1)&! Ch(1,1)])
 f2:!(!Ch(0,0))=>(exists(K57:Int,K58:Int)[ (Ch(K57,K58)&turn(p1)&K57>=0&K57<xlen()&K58>=0&K58<ylen())&((( !(Ch(0,0)&(K57>0|K58>0)) ) => ( !(Ch(0,0)&(K57>0|K58>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K57>0|K58>G0))&! (Ch(G0,0)&(K57>G0|K58>0))])&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K57>1|K58>G0))&! (Ch(0,1)&(K57>0|K58>1))])&!(exists(G0:Int)[G0>=0&G0 > 1&(Ch(0,G0)&(K57>0|K58>G0))])) ])
2019-10-14 22:44:32,443 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&turn(p2)])&!(turn(p2))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(1,0)&! Ch(0,1)])&!(exists(G0:Int)[G0>=0&Ch(1,0)&Ch(G0,1)&! Ch(1,1)])
 f2:!(!Ch(0,0))=>(exists(K57:Int,K58:Int)[ (Ch(K57,K58)&turn(p1)&K57>=0&K57<xlen()&K58>=0&K58<ylen())&((( !(Ch(0,0)&(K57>0|K58>0)) ) => ( !(Ch(0,0)&(K57>0|K58>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K57>0|K58>G0))&! (Ch(G0,0)&(K57>G0|K58>0))])&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K57>1|K58>G0))&! (Ch(0,1)&(K57>0|K58>1))])&!(exists(G0:Int)[G0>=0&G0 > 1&(Ch(0,G0)&(K57>0|K58>G0))])) ])
2019-10-14 22:44:32,483 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&turn(p2)])&!(turn(p2))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(1,0)&! Ch(0,1)])&!(exists(G0:Int)[G0>=0&Ch(1,0)&Ch(G0,1)&! Ch(1,1)])
 f2:!(!Ch(0,0))=>(exists(K57:Int,K58:Int)[ (Ch(K57,K58)&turn(p1)&K57>=0&K57<xlen()&K58>=0&K58<ylen())&((( !(Ch(0,0)&(K57>0|K58>0)) ) => ( !(Ch(0,0)&(K57>0|K58>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K57>0|K58>G0))&! (Ch(G0,0)&(K57>G0|K58>0))])&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K57>1|K58>G0))&! (Ch(0,1)&(K57>0|K58>1))])&!(exists(G0:Int)[G0>=0&G0 > 1&(Ch(0,G0)&(K57>0|K58>G0))])) ])
2019-10-14 22:44:32,548 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(G0,0)])&!(exists(G0:Int)[G0>=0&Ch(1,G0)&! Ch(0,1)])&!(exists(G0:Int)[G0>=0&G0 > 1&Ch(0,G0)])
 f2:forall(K55:Int,K56:Int)[ Ch(K55,K56)&turn(p2)&K55>=0&K55<xlen()&K56>=0&K56<ylen()=>((( !(Ch(0,0)&(K55>0|K56>0)) ) => ( !(Ch(0,0)&(K55>0|K56>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K55>0|K56>G0))&(!turn(p2))])&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K55>0|K56>G0))&! (Ch(1,0)&(K55>1|K56>0))&! (Ch(0,1)&(K55>0|K56>1))])&!(exists(G0:Int)[G0>=0&(Ch(1,0)&(K55>1|K56>0))&(Ch(G0,1)&(K55>G0|K56>1))&! (Ch(1,1)&(K55>1|K56>1))])) ]
2019-10-14 22:44:33,323 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(3>=0&3<xlen()&0>=0&0<ylen()=>Ch(3,0))&(4>=0&4<xlen()&0>=0&0<ylen()=>Ch(4,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(3>=0&3<xlen()&1>=0&1<ylen()=>Ch(3,1))&(4>=0&4<xlen()&1>=0&1<ylen()=>Ch(4,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2))&(3>=0&3<xlen()&2>=0&2<ylen()=>Ch(3,2))&(4>=0&4<xlen()&2>=0&2<ylen()=>Ch(4,2))&(0>=0&0<xlen()&3>=0&3<ylen()=>Ch(0,3))&(1>=0&1<xlen()&3>=0&3<ylen()=>Ch(1,3))&(2>=0&2<xlen()&3>=0&3<ylen()=>Ch(2,3))&(3>=0&3<xlen()&3>=0&3<ylen()=>Ch(3,3))&(4>=0&4<xlen()&3>=0&3<ylen()=>Ch(4,3))&(0>=0&0<xlen()&4>=0&4<ylen()=>Ch(0,4))&(1>=0&1<xlen()&4>=0&4<ylen()=>Ch(1,4))&(2>=0&2<xlen()&4>=0&4<ylen()=>Ch(2,4))&(3>=0&3<xlen()&4>=0&4<ylen()=>Ch(3,4))&(4>=0&4<xlen()&4>=0&4<ylen()=>Ch(4,4)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)
 f2:false
2019-10-14 22:44:42,210 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&turn(p2)])&!(turn(p2))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(1,0)&! Ch(0,1)])&!(exists(G0:Int)[G0>=0&Ch(1,0)&Ch(G0,1)&! Ch(1,1)])&!(exists(G0:Int)[G0>=0&G0 > 1&Ch(0,G0)])
 f2:!(!Ch(0,0))=>(exists(K61:Int,K62:Int)[ (Ch(K61,K62)&turn(p1)&K61>=0&K61<xlen()&K62>=0&K62<ylen())&((( !(Ch(0,0)&(K61>0|K62>0)) ) => ( !(Ch(0,0)&(K61>0|K62>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K61>0|K62>G0))&! (Ch(G0,0)&(K61>G0|K62>0))])&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K61>1|K62>G0))&! (Ch(0,1)&(K61>0|K62>1))])&!(exists(G0:Int)[G0>=0&G0 > 1&(Ch(0,G0)&(K61>0|K62>G0))])&!((Ch(1,1)&(K61>1|K62>1)))) ])
2019-10-14 22:44:42,262 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(G0,0)])&!(exists(G0:Int)[G0>=0&Ch(1,G0)&! Ch(0,1)])&!(exists(G0:Int)[G0>=0&G0 > 1&Ch(0,G0)])&!(Ch(1,1))
 f2:forall(K59:Int,K60:Int)[ Ch(K59,K60)&turn(p2)&K59>=0&K59<xlen()&K60>=0&K60<ylen()=>((( !(Ch(0,0)&(K59>0|K60>0)) ) => ( !(Ch(0,0)&(K59>0|K60>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K59>0|K60>G0))&(!turn(p2))])&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K59>0|K60>G0))&! (Ch(1,0)&(K59>1|K60>0))&! (Ch(0,1)&(K59>0|K60>1))])&!(exists(G0:Int)[G0>=0&(Ch(1,0)&(K59>1|K60>0))&(Ch(G0,1)&(K59>G0|K60>1))&! (Ch(1,1)&(K59>1|K60>1))])&!(exists(G0:Int)[G0>=0&G0 > 1&(Ch(0,G0)&(K59>0|K60>G0))])) ]
2019-10-14 22:44:42,314 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(G0,0)])&!(exists(G0:Int)[G0>=0&Ch(1,G0)&! Ch(0,1)])&!(exists(G0:Int)[G0>=0&G0 > 1&Ch(0,G0)])&!(Ch(1,1))
 f2:forall(K59:Int,K60:Int)[ Ch(K59,K60)&turn(p2)&K59>=0&K59<xlen()&K60>=0&K60<ylen()=>((( !(Ch(0,0)&(K59>0|K60>0)) ) => ( !(Ch(0,0)&(K59>0|K60>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K59>0|K60>G0))&(!turn(p2))])&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K59>0|K60>G0))&! (Ch(1,0)&(K59>1|K60>0))&! (Ch(0,1)&(K59>0|K60>1))])&!(exists(G0:Int)[G0>=0&(Ch(1,0)&(K59>1|K60>0))&(Ch(G0,1)&(K59>G0|K60>1))&! (Ch(1,1)&(K59>1|K60>1))])&!(exists(G0:Int)[G0>=0&G0 > 1&(Ch(0,G0)&(K59>0|K60>G0))])) ]
2019-10-14 22:44:42,351 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(G0,0)])&!(exists(G0:Int)[G0>=0&Ch(1,G0)&! Ch(0,1)])&!(exists(G0:Int)[G0>=0&G0 > 1&Ch(0,G0)])&!(Ch(1,1))
 f2:forall(K59:Int,K60:Int)[ Ch(K59,K60)&turn(p2)&K59>=0&K59<xlen()&K60>=0&K60<ylen()=>((( !(Ch(0,0)&(K59>0|K60>0)) ) => ( !(Ch(0,0)&(K59>0|K60>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K59>0|K60>G0))&(!turn(p2))])&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K59>0|K60>G0))&! (Ch(1,0)&(K59>1|K60>0))&! (Ch(0,1)&(K59>0|K60>1))])&!(exists(G0:Int)[G0>=0&(Ch(1,0)&(K59>1|K60>0))&(Ch(G0,1)&(K59>G0|K60>1))&! (Ch(1,1)&(K59>1|K60>1))])&!(exists(G0:Int)[G0>=0&G0 > 1&(Ch(0,G0)&(K59>0|K60>G0))])) ]
2019-10-14 22:44:43,826 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&turn(p2)])&!(turn(p2))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(1,0)&! Ch(0,1)])&!(exists(G0:Int)[G0>=0&Ch(1,0)&Ch(G0,1)&! Ch(1,1)])&!(exists(G0:Int)[G0>=0&G0 > 1&Ch(0,G0)])
 f2:!(!Ch(0,0))=>(exists(K65:Int,K66:Int)[ (Ch(K65,K66)&turn(p1)&K65>=0&K65<xlen()&K66>=0&K66<ylen())&((( !(Ch(0,0)&(K65>0|K66>0)) ) => ( !(Ch(0,0)&(K65>0|K66>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K65>1|K66>G0))&! (Ch(0,1)&(K65>0|K66>1))])&!(exists(G0:Int)[G0>=0&G0 > 1&(Ch(0,G0)&(K65>0|K66>G0))])&!((Ch(1,1)&(K65>1|K66>1)))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K65>G0|K66>G1))&! (Ch(G1,0)&(K65>G1|K66>0))])) ])
2019-10-14 22:44:43,879 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(1,G0)&! Ch(0,1)])&!(exists(G0:Int)[G0>=0&G0 > 1&Ch(0,G0)])&!(Ch(1,1))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,0)])
 f2:forall(K63:Int,K64:Int)[ Ch(K63,K64)&turn(p2)&K63>=0&K63<xlen()&K64>=0&K64<ylen()=>((( !(Ch(0,0)&(K63>0|K64>0)) ) => ( !(Ch(0,0)&(K63>0|K64>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K63>0|K64>G0))&(!turn(p2))])&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K63>0|K64>G0))&! (Ch(1,0)&(K63>1|K64>0))&! (Ch(0,1)&(K63>0|K64>1))])&!(exists(G0:Int)[G0>=0&(Ch(1,0)&(K63>1|K64>0))&(Ch(G0,1)&(K63>G0|K64>1))&! (Ch(1,1)&(K63>1|K64>1))])&!(exists(G0:Int)[G0>=0&G0 > 1&(Ch(0,G0)&(K63>0|K64>G0))])) ]
2019-10-14 22:44:43,944 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(1,G0)&! Ch(0,1)])&!(exists(G0:Int)[G0>=0&G0 > 1&Ch(0,G0)])&!(Ch(1,1))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,0)])
 f2:forall(K63:Int,K64:Int)[ Ch(K63,K64)&turn(p2)&K63>=0&K63<xlen()&K64>=0&K64<ylen()=>((( !(Ch(0,0)&(K63>0|K64>0)) ) => ( !(Ch(0,0)&(K63>0|K64>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K63>0|K64>G0))&(!turn(p2))])&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K63>0|K64>G0))&! (Ch(1,0)&(K63>1|K64>0))&! (Ch(0,1)&(K63>0|K64>1))])&!(exists(G0:Int)[G0>=0&(Ch(1,0)&(K63>1|K64>0))&(Ch(G0,1)&(K63>G0|K64>1))&! (Ch(1,1)&(K63>1|K64>1))])&!(exists(G0:Int)[G0>=0&G0 > 1&(Ch(0,G0)&(K63>0|K64>G0))])) ]
2019-10-14 22:44:43,991 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(1,G0)&! Ch(0,1)])&!(exists(G0:Int)[G0>=0&G0 > 1&Ch(0,G0)])&!(Ch(1,1))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,0)])
 f2:forall(K63:Int,K64:Int)[ Ch(K63,K64)&turn(p2)&K63>=0&K63<xlen()&K64>=0&K64<ylen()=>((( !(Ch(0,0)&(K63>0|K64>0)) ) => ( !(Ch(0,0)&(K63>0|K64>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K63>0|K64>G0))&(!turn(p2))])&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K63>0|K64>G0))&! (Ch(1,0)&(K63>1|K64>0))&! (Ch(0,1)&(K63>0|K64>1))])&!(exists(G0:Int)[G0>=0&(Ch(1,0)&(K63>1|K64>0))&(Ch(G0,1)&(K63>G0|K64>1))&! (Ch(1,1)&(K63>1|K64>1))])&!(exists(G0:Int)[G0>=0&G0 > 1&(Ch(0,G0)&(K63>0|K64>G0))])) ]
2019-10-14 22:44:51,406 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&turn(p2)])&!(turn(p2))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(1,0)&! Ch(0,1)])&!(exists(G0:Int)[G0>=0&Ch(1,0)&Ch(G0,1)&! Ch(1,1)])&!(exists(G0:Int)[G0>=0&G0 > 1&Ch(0,G0)])
 f2:!(!Ch(0,0))=>(exists(K69:Int,K70:Int)[ (Ch(K69,K70)&turn(p1)&K69>=0&K69<xlen()&K70>=0&K70<ylen())&((( !(Ch(0,0)&(K69>0|K70>0)) ) => ( !(Ch(0,0)&(K69>0|K70>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 1&(Ch(0,G0)&(K69>0|K70>G0))])&!((Ch(1,1)&(K69>1|K70>1)))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K69>G0|K70>G1))&! (Ch(G1,0)&(K69>G1|K70>0))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K69>G0|K70>G1))&! (Ch(0,G0)&(K69>0|K70>G0))])) ])
2019-10-14 22:44:51,521 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&turn(p2)])&!(turn(p2))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(1,0)&! Ch(0,1)])&!(exists(G0:Int)[G0>=0&Ch(1,0)&Ch(G0,1)&! Ch(1,1)])&!(exists(G0:Int)[G0>=0&G0 > 1&Ch(0,G0)])
 f2:!(!Ch(0,0))=>(exists(K69:Int,K70:Int)[ (Ch(K69,K70)&turn(p1)&K69>=0&K69<xlen()&K70>=0&K70<ylen())&((( !(Ch(0,0)&(K69>0|K70>0)) ) => ( !(Ch(0,0)&(K69>0|K70>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 1&(Ch(0,G0)&(K69>0|K70>G0))])&!((Ch(1,1)&(K69>1|K70>1)))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K69>G0|K70>G1))&! (Ch(G1,0)&(K69>G1|K70>0))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K69>G0|K70>G1))&! (Ch(0,G0)&(K69>0|K70>G0))])) ])
2019-10-14 22:44:51,584 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&turn(p2)])&!(turn(p2))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(1,0)&! Ch(0,1)])&!(exists(G0:Int)[G0>=0&Ch(1,0)&Ch(G0,1)&! Ch(1,1)])&!(exists(G0:Int)[G0>=0&G0 > 1&Ch(0,G0)])
 f2:!(!Ch(0,0))=>(exists(K69:Int,K70:Int)[ (Ch(K69,K70)&turn(p1)&K69>=0&K69<xlen()&K70>=0&K70<ylen())&((( !(Ch(0,0)&(K69>0|K70>0)) ) => ( !(Ch(0,0)&(K69>0|K70>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 1&(Ch(0,G0)&(K69>0|K70>G0))])&!((Ch(1,1)&(K69>1|K70>1)))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K69>G0|K70>G1))&! (Ch(G1,0)&(K69>G1|K70>0))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K69>G0|K70>G1))&! (Ch(0,G0)&(K69>0|K70>G0))])) ])
2019-10-14 22:44:51,686 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 > 1&Ch(0,G0)])&!(Ch(1,1))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,0)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(0,G0)])
 f2:forall(K67:Int,K68:Int)[ Ch(K67,K68)&turn(p2)&K67>=0&K67<xlen()&K68>=0&K68<ylen()=>((( !(Ch(0,0)&(K67>0|K68>0)) ) => ( !(Ch(0,0)&(K67>0|K68>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K67>0|K68>G0))&(!turn(p2))])&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K67>0|K68>G0))&! (Ch(1,0)&(K67>1|K68>0))&! (Ch(0,1)&(K67>0|K68>1))])&!(exists(G0:Int)[G0>=0&(Ch(1,0)&(K67>1|K68>0))&(Ch(G0,1)&(K67>G0|K68>1))&! (Ch(1,1)&(K67>1|K68>1))])&!(exists(G0:Int)[G0>=0&G0 > 1&(Ch(0,G0)&(K67>0|K68>G0))])) ]
2019-10-14 22:44:58,155 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&turn(p2)])&!(turn(p2))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(1,0)&! Ch(0,1)])&!(exists(G0:Int)[G0>=0&Ch(1,0)&Ch(G0,1)&! Ch(1,1)])&!(exists(G0:Int)[G0>=0&G0 > 1&Ch(G0,0)])
 f2:!(!Ch(0,0))=>(exists(K73:Int,K74:Int)[ (Ch(K73,K74)&turn(p1)&K73>=0&K73<xlen()&K74>=0&K74<ylen())&((( !(Ch(0,0)&(K73>0|K74>0)) ) => ( !(Ch(0,0)&(K73>0|K74>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 1&(Ch(0,G0)&(K73>0|K74>G0))])&!((Ch(1,1)&(K73>1|K74>1)))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K73>G0|K74>G1))&! (Ch(G1,0)&(K73>G1|K74>0))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K73>G0|K74>G1))&! (Ch(0,G0)&(K73>0|K74>G0))])) ])
2019-10-14 22:44:58,222 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&turn(p2)])&!(turn(p2))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(1,0)&! Ch(0,1)])&!(exists(G0:Int)[G0>=0&Ch(1,0)&Ch(G0,1)&! Ch(1,1)])&!(exists(G0:Int)[G0>=0&G0 > 1&Ch(G0,0)])
 f2:!(!Ch(0,0))=>(exists(K73:Int,K74:Int)[ (Ch(K73,K74)&turn(p1)&K73>=0&K73<xlen()&K74>=0&K74<ylen())&((( !(Ch(0,0)&(K73>0|K74>0)) ) => ( !(Ch(0,0)&(K73>0|K74>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 1&(Ch(0,G0)&(K73>0|K74>G0))])&!((Ch(1,1)&(K73>1|K74>1)))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K73>G0|K74>G1))&! (Ch(G1,0)&(K73>G1|K74>0))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K73>G0|K74>G1))&! (Ch(0,G0)&(K73>0|K74>G0))])) ])
2019-10-14 22:44:58,272 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&turn(p2)])&!(turn(p2))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(1,0)&! Ch(0,1)])&!(exists(G0:Int)[G0>=0&Ch(1,0)&Ch(G0,1)&! Ch(1,1)])&!(exists(G0:Int)[G0>=0&G0 > 1&Ch(G0,0)])
 f2:!(!Ch(0,0))=>(exists(K73:Int,K74:Int)[ (Ch(K73,K74)&turn(p1)&K73>=0&K73<xlen()&K74>=0&K74<ylen())&((( !(Ch(0,0)&(K73>0|K74>0)) ) => ( !(Ch(0,0)&(K73>0|K74>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 1&(Ch(0,G0)&(K73>0|K74>G0))])&!((Ch(1,1)&(K73>1|K74>1)))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K73>G0|K74>G1))&! (Ch(G1,0)&(K73>G1|K74>0))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K73>G0|K74>G1))&! (Ch(0,G0)&(K73>0|K74>G0))])) ])
2019-10-14 22:44:58,333 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 > 1&Ch(0,G0)])&!(Ch(1,1))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,0)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(0,G0)])
 f2:forall(K71:Int,K72:Int)[ Ch(K71,K72)&turn(p2)&K71>=0&K71<xlen()&K72>=0&K72<ylen()=>((( !(Ch(0,0)&(K71>0|K72>0)) ) => ( !(Ch(0,0)&(K71>0|K72>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K71>0|K72>G0))&(!turn(p2))])&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K71>0|K72>G0))&! (Ch(1,0)&(K71>1|K72>0))&! (Ch(0,1)&(K71>0|K72>1))])&!(exists(G0:Int)[G0>=0&(Ch(1,0)&(K71>1|K72>0))&(Ch(G0,1)&(K71>G0|K72>1))&! (Ch(1,1)&(K71>1|K72>1))])&!(exists(G0:Int)[G0>=0&G0 > 1&(Ch(G0,0)&(K71>G0|K72>0))])) ]
2019-10-14 22:45:05,604 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&turn(p2)])&!(turn(p2))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(1,0)&! Ch(0,1)])&!(exists(G0:Int)[G0>=0&Ch(1,0)&Ch(G0,1)&! Ch(1,1)])&!(exists(G0:Int)[G0>=0&G0 > 1&xlen() > G0])
 f2:!(!Ch(0,0))=>(exists(K78:Int,K79:Int)[ (Ch(K78,K79)&turn(p1)&K78>=0&K78<xlen()&K79>=0&K79<ylen())&((( !(Ch(0,0)&(K78>0|K79>0)) ) => ( !(Ch(0,0)&(K78>0|K79>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 1&(Ch(0,G0)&(K78>0|K79>G0))])&!((Ch(1,1)&(K78>1|K79>1)))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K78>G0|K79>G1))&! (Ch(G1,0)&(K78>G1|K79>0))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K78>G0|K79>G1))&! (Ch(0,G0)&(K78>0|K79>G0))])) ])
2019-10-14 22:45:05,663 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 > 1&Ch(0,G0)])&!(Ch(1,1))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,0)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(0,G0)])
 f2:forall(K75:Int,K76:Int)[ Ch(K75,K76)&turn(p2)&K75>=0&K75<xlen()&K76>=0&K76<ylen()=>((( !(Ch(0,0)&(K75>0|K76>0)) ) => ( !(Ch(0,0)&(K75>0|K76>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K75>0|K76>G0))&(!turn(p2))])&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K75>0|K76>G0))&! (Ch(1,0)&(K75>1|K76>0))&! (Ch(0,1)&(K75>0|K76>1))])&!(exists(G0:Int)[G0>=0&(Ch(1,0)&(K75>1|K76>0))&(Ch(G0,1)&(K75>G0|K76>1))&! (Ch(1,1)&(K75>1|K76>1))])&!(exists(G0:Int)[ exists(K77:Int)[ (xlen()=K77)&(G0>=0&G0 > 1& K77 > G0)] ])) ]
2019-10-14 22:45:05,706 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 > 1&Ch(0,G0)])&!(Ch(1,1))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,0)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(0,G0)])
 f2:forall(K75:Int,K76:Int)[ Ch(K75,K76)&turn(p2)&K75>=0&K75<xlen()&K76>=0&K76<ylen()=>((( !(Ch(0,0)&(K75>0|K76>0)) ) => ( !(Ch(0,0)&(K75>0|K76>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K75>0|K76>G0))&(!turn(p2))])&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K75>0|K76>G0))&! (Ch(1,0)&(K75>1|K76>0))&! (Ch(0,1)&(K75>0|K76>1))])&!(exists(G0:Int)[G0>=0&(Ch(1,0)&(K75>1|K76>0))&(Ch(G0,1)&(K75>G0|K76>1))&! (Ch(1,1)&(K75>1|K76>1))])&!(exists(G0:Int)[ exists(K77:Int)[ (xlen()=K77)&(G0>=0&G0 > 1& K77 > G0)] ])) ]
2019-10-14 22:45:05,743 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 > 1&Ch(0,G0)])&!(Ch(1,1))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,0)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(0,G0)])
 f2:forall(K75:Int,K76:Int)[ Ch(K75,K76)&turn(p2)&K75>=0&K75<xlen()&K76>=0&K76<ylen()=>((( !(Ch(0,0)&(K75>0|K76>0)) ) => ( !(Ch(0,0)&(K75>0|K76>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K75>0|K76>G0))&(!turn(p2))])&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K75>0|K76>G0))&! (Ch(1,0)&(K75>1|K76>0))&! (Ch(0,1)&(K75>0|K76>1))])&!(exists(G0:Int)[G0>=0&(Ch(1,0)&(K75>1|K76>0))&(Ch(G0,1)&(K75>G0|K76>1))&! (Ch(1,1)&(K75>1|K76>1))])&!(exists(G0:Int)[ exists(K77:Int)[ (xlen()=K77)&(G0>=0&G0 > 1& K77 > G0)] ])) ]
2019-10-14 22:45:06,026 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(3>=0&3<xlen()&0>=0&0<ylen()=>Ch(3,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(3>=0&3<xlen()&1>=0&1<ylen()=>Ch(3,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2))&(3>=0&3<xlen()&2>=0&2<ylen()=>Ch(3,2))&(0>=0&0<xlen()&3>=0&3<ylen()=>Ch(0,3))&(1>=0&1<xlen()&3>=0&3<ylen()=>Ch(1,3))&(2>=0&2<xlen()&3>=0&3<ylen()=>Ch(2,3))&(3>=0&3<xlen()&3>=0&3<ylen()=>Ch(3,3)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)
 f2:false
2019-10-14 22:45:14,186 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&turn(p2)])&!(turn(p2))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(1,0)&! Ch(0,1)])&!(exists(G0:Int)[G0>=0&Ch(1,0)&Ch(G0,1)&! Ch(1,1)])&!(exists(G0:Int)[G0>=0&G0 > 1&xlen() > G0])
 f2:!(!Ch(0,0))=>(exists(K83:Int,K84:Int)[ (Ch(K83,K84)&turn(p1)&K83>=0&K83<xlen()&K84>=0&K84<ylen())&((( !(Ch(0,0)&(K83>0|K84>0)) ) => ( !(Ch(0,0)&(K83>0|K84>0))&(!turn(p1)) ))&!((Ch(1,1)&(K83>1|K84>1)))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K83>G0|K84>G1))&! (Ch(G1,0)&(K83>G1|K84>0))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K83>G0|K84>G1))&! (Ch(0,G0)&(K83>0|K84>G0))])&!(exists(G0:Int)[ exists(K85:Int)[ (xlen()=K85)&(G0>=0&G0 > 1& K85 > G0)] ])) ])
2019-10-14 22:45:14,237 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(Ch(1,1))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,0)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(0,G0)])&!(exists(G0:Int)[G0>=0&G0 > 1&xlen() > G0])
 f2:forall(K80:Int,K81:Int)[ Ch(K80,K81)&turn(p2)&K80>=0&K80<xlen()&K81>=0&K81<ylen()=>((( !(Ch(0,0)&(K80>0|K81>0)) ) => ( !(Ch(0,0)&(K80>0|K81>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K80>0|K81>G0))&(!turn(p2))])&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K80>0|K81>G0))&! (Ch(1,0)&(K80>1|K81>0))&! (Ch(0,1)&(K80>0|K81>1))])&!(exists(G0:Int)[G0>=0&(Ch(1,0)&(K80>1|K81>0))&(Ch(G0,1)&(K80>G0|K81>1))&! (Ch(1,1)&(K80>1|K81>1))])&!(exists(G0:Int)[ exists(K82:Int)[ (xlen()=K82)&(G0>=0&G0 > 1& K82 > G0)] ])) ]
2019-10-14 22:45:14,280 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:forall(K16:Int,K17:Int)[K16>=0&K16<xlen()&K17>=0&K17<ylen()=>Ch(K16,K17)]&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)
 f2:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&turn(p2)])&!(turn(p2))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(1,0)&! Ch(0,1)])&!(exists(G0:Int)[G0>=0&Ch(1,0)&Ch(G0,1)&! Ch(1,1)])&!(exists(G0:Int)[G0>=0&G0 > 1&xlen() > G0])
2019-10-14 22:45:14,370 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:forall(K16:Int,K17:Int)[K16>=0&K16<xlen()&K17>=0&K17<ylen()=>Ch(K16,K17)]&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)
 f2:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&turn(p2)])&!(turn(p2))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(1,0)&! Ch(0,1)])&!(exists(G0:Int)[G0>=0&Ch(1,0)&Ch(G0,1)&! Ch(1,1)])&!(exists(G0:Int)[G0>=0&G0 > 1&xlen() > G0])
2019-10-14 22:45:14,399 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:forall(K16:Int,K17:Int)[K16>=0&K16<xlen()&K17>=0&K17<ylen()=>Ch(K16,K17)]&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)
 f2:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&turn(p2)])&!(turn(p2))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(1,0)&! Ch(0,1)])&!(exists(G0:Int)[G0>=0&Ch(1,0)&Ch(G0,1)&! Ch(1,1)])&!(exists(G0:Int)[G0>=0&G0 > 1&xlen() > G0])
2019-10-14 22:45:25,437 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&turn(p2)])&!(turn(p2))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(1,0)&! Ch(0,1)])&!(exists(G0:Int)[G0>=0&Ch(1,0)&Ch(G0,1)&! Ch(1,1)])&!(exists(G0:Int)[G0>=0&xlen() > G0&G0 > 1&! Ch(1,G0)])
 f2:!(!Ch(0,0))=>(exists(K89:Int,K90:Int)[ (Ch(K89,K90)&turn(p1)&K89>=0&K89<xlen()&K90>=0&K90<ylen())&((( !(Ch(0,0)&(K89>0|K90>0)) ) => ( !(Ch(0,0)&(K89>0|K90>0))&(!turn(p1)) ))&!((Ch(1,1)&(K89>1|K90>1)))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K89>G0|K90>G1))&! (Ch(G1,0)&(K89>G1|K90>0))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K89>G0|K90>G1))&! (Ch(0,G0)&(K89>0|K90>G0))])) ])
2019-10-14 22:45:35,568 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(Ch(1,1))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,0)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(0,G0)])
 f2:forall(K86:Int,K87:Int)[ Ch(K86,K87)&turn(p2)&K86>=0&K86<xlen()&K87>=0&K87<ylen()=>((( !(Ch(0,0)&(K86>0|K87>0)) ) => ( !(Ch(0,0)&(K86>0|K87>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K86>0|K87>G0))&(!turn(p2))])&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K86>0|K87>G0))&! (Ch(1,0)&(K86>1|K87>0))&! (Ch(0,1)&(K86>0|K87>1))])&!(exists(G0:Int)[G0>=0&(Ch(1,0)&(K86>1|K87>0))&(Ch(G0,1)&(K86>G0|K87>1))&! (Ch(1,1)&(K86>1|K87>1))])&!(exists(G0:Int)[ exists(K88:Int)[ (xlen()=K88)&(G0>=0& K88 > G0&G0 > 1&! (Ch(1,G0)&(K86>1|K87>G0)))] ])) ]
2019-10-14 22:45:35,625 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(Ch(1,1))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,0)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(0,G0)])
 f2:forall(K86:Int,K87:Int)[ Ch(K86,K87)&turn(p2)&K86>=0&K86<xlen()&K87>=0&K87<ylen()=>((( !(Ch(0,0)&(K86>0|K87>0)) ) => ( !(Ch(0,0)&(K86>0|K87>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K86>0|K87>G0))&(!turn(p2))])&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K86>0|K87>G0))&! (Ch(1,0)&(K86>1|K87>0))&! (Ch(0,1)&(K86>0|K87>1))])&!(exists(G0:Int)[G0>=0&(Ch(1,0)&(K86>1|K87>0))&(Ch(G0,1)&(K86>G0|K87>1))&! (Ch(1,1)&(K86>1|K87>1))])&!(exists(G0:Int)[ exists(K88:Int)[ (xlen()=K88)&(G0>=0& K88 > G0&G0 > 1&! (Ch(1,G0)&(K86>1|K87>G0)))] ])) ]
2019-10-14 22:45:35,671 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(Ch(1,1))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,0)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(0,G0)])
 f2:forall(K86:Int,K87:Int)[ Ch(K86,K87)&turn(p2)&K86>=0&K86<xlen()&K87>=0&K87<ylen()=>((( !(Ch(0,0)&(K86>0|K87>0)) ) => ( !(Ch(0,0)&(K86>0|K87>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K86>0|K87>G0))&(!turn(p2))])&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K86>0|K87>G0))&! (Ch(1,0)&(K86>1|K87>0))&! (Ch(0,1)&(K86>0|K87>1))])&!(exists(G0:Int)[G0>=0&(Ch(1,0)&(K86>1|K87>0))&(Ch(G0,1)&(K86>G0|K87>1))&! (Ch(1,1)&(K86>1|K87>1))])&!(exists(G0:Int)[ exists(K88:Int)[ (xlen()=K88)&(G0>=0& K88 > G0&G0 > 1&! (Ch(1,G0)&(K86>1|K87>G0)))] ])) ]
2019-10-14 22:45:35,805 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&turn(p2)])&!(turn(p2))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(1,0)&! Ch(0,1)])&!(exists(G0:Int)[G0>=0&Ch(1,0)&Ch(G0,1)&! Ch(1,1)])&!(exists(G0:Int)[G0>=0&xlen() > G0&G0 > 1&! Ch(G0,1)])
 f2:!(!Ch(0,0))=>(exists(K94:Int,K95:Int)[ (Ch(K94,K95)&turn(p1)&K94>=0&K94<xlen()&K95>=0&K95<ylen())&((( !(Ch(0,0)&(K94>0|K95>0)) ) => ( !(Ch(0,0)&(K94>0|K95>0))&(!turn(p1)) ))&!((Ch(1,1)&(K94>1|K95>1)))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K94>G0|K95>G1))&! (Ch(G1,0)&(K94>G1|K95>0))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K94>G0|K95>G1))&! (Ch(0,G0)&(K94>0|K95>G0))])) ])
2019-10-14 22:45:36,197 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&turn(p2)])&!(turn(p2))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(1,0)&! Ch(0,1)])&!(exists(G0:Int)[G0>=0&Ch(1,0)&Ch(G0,1)&! Ch(1,1)])&!(exists(G0:Int)[G0>=0&xlen() > G0&G0 > 1&! Ch(G0,1)])
 f2:!(!Ch(0,0))=>(exists(K94:Int,K95:Int)[ (Ch(K94,K95)&turn(p1)&K94>=0&K94<xlen()&K95>=0&K95<ylen())&((( !(Ch(0,0)&(K94>0|K95>0)) ) => ( !(Ch(0,0)&(K94>0|K95>0))&(!turn(p1)) ))&!((Ch(1,1)&(K94>1|K95>1)))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K94>G0|K95>G1))&! (Ch(G1,0)&(K94>G1|K95>0))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K94>G0|K95>G1))&! (Ch(0,G0)&(K94>0|K95>G0))])) ])
2019-10-14 22:45:36,256 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&turn(p2)])&!(turn(p2))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(1,0)&! Ch(0,1)])&!(exists(G0:Int)[G0>=0&Ch(1,0)&Ch(G0,1)&! Ch(1,1)])&!(exists(G0:Int)[G0>=0&xlen() > G0&G0 > 1&! Ch(G0,1)])
 f2:!(!Ch(0,0))=>(exists(K94:Int,K95:Int)[ (Ch(K94,K95)&turn(p1)&K94>=0&K94<xlen()&K95>=0&K95<ylen())&((( !(Ch(0,0)&(K94>0|K95>0)) ) => ( !(Ch(0,0)&(K94>0|K95>0))&(!turn(p1)) ))&!((Ch(1,1)&(K94>1|K95>1)))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K94>G0|K95>G1))&! (Ch(G1,0)&(K94>G1|K95>0))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K94>G0|K95>G1))&! (Ch(0,G0)&(K94>0|K95>G0))])) ])
2019-10-14 22:45:36,496 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(Ch(1,1))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,0)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(0,G0)])
 f2:forall(K91:Int,K92:Int)[ Ch(K91,K92)&turn(p2)&K91>=0&K91<xlen()&K92>=0&K92<ylen()=>((( !(Ch(0,0)&(K91>0|K92>0)) ) => ( !(Ch(0,0)&(K91>0|K92>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K91>0|K92>G0))&(!turn(p2))])&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K91>0|K92>G0))&! (Ch(1,0)&(K91>1|K92>0))&! (Ch(0,1)&(K91>0|K92>1))])&!(exists(G0:Int)[G0>=0&(Ch(1,0)&(K91>1|K92>0))&(Ch(G0,1)&(K91>G0|K92>1))&! (Ch(1,1)&(K91>1|K92>1))])&!(exists(G0:Int)[ exists(K93:Int)[ (xlen()=K93)&(G0>=0& K93 > G0&G0 > 1&! (Ch(G0,1)&(K91>G0|K92>1)))] ])) ]
2019-10-14 22:45:36,545 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(Ch(1,1))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,0)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(0,G0)])
 f2:forall(K91:Int,K92:Int)[ Ch(K91,K92)&turn(p2)&K91>=0&K91<xlen()&K92>=0&K92<ylen()=>((( !(Ch(0,0)&(K91>0|K92>0)) ) => ( !(Ch(0,0)&(K91>0|K92>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K91>0|K92>G0))&(!turn(p2))])&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K91>0|K92>G0))&! (Ch(1,0)&(K91>1|K92>0))&! (Ch(0,1)&(K91>0|K92>1))])&!(exists(G0:Int)[G0>=0&(Ch(1,0)&(K91>1|K92>0))&(Ch(G0,1)&(K91>G0|K92>1))&! (Ch(1,1)&(K91>1|K92>1))])&!(exists(G0:Int)[ exists(K93:Int)[ (xlen()=K93)&(G0>=0& K93 > G0&G0 > 1&! (Ch(G0,1)&(K91>G0|K92>1)))] ])) ]
2019-10-14 22:45:36,584 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(Ch(1,1))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,0)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(0,G0)])
 f2:forall(K91:Int,K92:Int)[ Ch(K91,K92)&turn(p2)&K91>=0&K91<xlen()&K92>=0&K92<ylen()=>((( !(Ch(0,0)&(K91>0|K92>0)) ) => ( !(Ch(0,0)&(K91>0|K92>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K91>0|K92>G0))&(!turn(p2))])&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K91>0|K92>G0))&! (Ch(1,0)&(K91>1|K92>0))&! (Ch(0,1)&(K91>0|K92>1))])&!(exists(G0:Int)[G0>=0&(Ch(1,0)&(K91>1|K92>0))&(Ch(G0,1)&(K91>G0|K92>1))&! (Ch(1,1)&(K91>1|K92>1))])&!(exists(G0:Int)[ exists(K93:Int)[ (xlen()=K93)&(G0>=0& K93 > G0&G0 > 1&! (Ch(G0,1)&(K91>G0|K92>1)))] ])) ]
2019-10-14 22:45:37,325 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(3>=0&3<xlen()&0>=0&0<ylen()=>Ch(3,0))&(4>=0&4<xlen()&0>=0&0<ylen()=>Ch(4,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(3>=0&3<xlen()&1>=0&1<ylen()=>Ch(3,1))&(4>=0&4<xlen()&1>=0&1<ylen()=>Ch(4,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2))&(3>=0&3<xlen()&2>=0&2<ylen()=>Ch(3,2))&(4>=0&4<xlen()&2>=0&2<ylen()=>Ch(4,2))&(0>=0&0<xlen()&3>=0&3<ylen()=>Ch(0,3))&(1>=0&1<xlen()&3>=0&3<ylen()=>Ch(1,3))&(2>=0&2<xlen()&3>=0&3<ylen()=>Ch(2,3))&(3>=0&3<xlen()&3>=0&3<ylen()=>Ch(3,3))&(4>=0&4<xlen()&3>=0&3<ylen()=>Ch(4,3))&(0>=0&0<xlen()&4>=0&4<ylen()=>Ch(0,4))&(1>=0&1<xlen()&4>=0&4<ylen()=>Ch(1,4))&(2>=0&2<xlen()&4>=0&4<ylen()=>Ch(2,4))&(3>=0&3<xlen()&4>=0&4<ylen()=>Ch(3,4))&(4>=0&4<xlen()&4>=0&4<ylen()=>Ch(4,4)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)
 f2:false
2019-10-14 22:46:05,530 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&turn(p2)])&!(turn(p2))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(1,0)&! Ch(0,1)])&!(exists(G0:Int)[G0>=0&Ch(1,0)&Ch(G0,1)&! Ch(1,1)])&!(exists(G0:Int)[G0>=0&xlen() > G0&G0 > 1&! Ch(G0,1)])&!(exists(G0:Int)[G0>=0&Ch(1,G0)&! Ch(0,G0)])
 f2:!(!Ch(0,0))=>(exists(K99:Int,K100:Int)[ (Ch(K99,K100)&turn(p1)&K99>=0&K99<xlen()&K100>=0&K100<ylen())&((( !(Ch(0,0)&(K99>0|K100>0)) ) => ( !(Ch(0,0)&(K99>0|K100>0))&(!turn(p1)) ))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K99>G0|K100>G1))&! (Ch(G1,0)&(K99>G1|K100>0))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K99>G0|K100>G1))&! (Ch(0,G0)&(K99>0|K100>G0))])&!(exists(G0:Int)[G0>=0&G0 > 0&(Ch(G0,G0)&(K99>G0|K100>G0))])) ])
2019-10-14 22:46:15,598 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,0)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(0,G0)])&!(exists(G0:Int)[G0>=0&G0 > 0&Ch(G0,G0)])
 f2:forall(K96:Int,K97:Int)[ Ch(K96,K97)&turn(p2)&K96>=0&K96<xlen()&K97>=0&K97<ylen()=>((( !(Ch(0,0)&(K96>0|K97>0)) ) => ( !(Ch(0,0)&(K96>0|K97>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K96>0|K97>G0))&(!turn(p2))])&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K96>0|K97>G0))&! (Ch(1,0)&(K96>1|K97>0))&! (Ch(0,1)&(K96>0|K97>1))])&!(exists(G0:Int)[G0>=0&(Ch(1,0)&(K96>1|K97>0))&(Ch(G0,1)&(K96>G0|K97>1))&! (Ch(1,1)&(K96>1|K97>1))])&!(exists(G0:Int)[ exists(K98:Int)[ (xlen()=K98)&(G0>=0& K98 > G0&G0 > 1&! (Ch(G0,1)&(K96>G0|K97>1)))] ])&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K96>1|K97>G0))&! (Ch(0,G0)&(K96>0|K97>G0))])) ]
2019-10-14 22:46:15,646 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,0)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(0,G0)])&!(exists(G0:Int)[G0>=0&G0 > 0&Ch(G0,G0)])
 f2:forall(K96:Int,K97:Int)[ Ch(K96,K97)&turn(p2)&K96>=0&K96<xlen()&K97>=0&K97<ylen()=>((( !(Ch(0,0)&(K96>0|K97>0)) ) => ( !(Ch(0,0)&(K96>0|K97>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K96>0|K97>G0))&(!turn(p2))])&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K96>0|K97>G0))&! (Ch(1,0)&(K96>1|K97>0))&! (Ch(0,1)&(K96>0|K97>1))])&!(exists(G0:Int)[G0>=0&(Ch(1,0)&(K96>1|K97>0))&(Ch(G0,1)&(K96>G0|K97>1))&! (Ch(1,1)&(K96>1|K97>1))])&!(exists(G0:Int)[ exists(K98:Int)[ (xlen()=K98)&(G0>=0& K98 > G0&G0 > 1&! (Ch(G0,1)&(K96>G0|K97>1)))] ])&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K96>1|K97>G0))&! (Ch(0,G0)&(K96>0|K97>G0))])) ]
2019-10-14 22:46:15,685 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,0)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(0,G0)])&!(exists(G0:Int)[G0>=0&G0 > 0&Ch(G0,G0)])
 f2:forall(K96:Int,K97:Int)[ Ch(K96,K97)&turn(p2)&K96>=0&K96<xlen()&K97>=0&K97<ylen()=>((( !(Ch(0,0)&(K96>0|K97>0)) ) => ( !(Ch(0,0)&(K96>0|K97>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K96>0|K97>G0))&(!turn(p2))])&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K96>0|K97>G0))&! (Ch(1,0)&(K96>1|K97>0))&! (Ch(0,1)&(K96>0|K97>1))])&!(exists(G0:Int)[G0>=0&(Ch(1,0)&(K96>1|K97>0))&(Ch(G0,1)&(K96>G0|K97>1))&! (Ch(1,1)&(K96>1|K97>1))])&!(exists(G0:Int)[ exists(K98:Int)[ (xlen()=K98)&(G0>=0& K98 > G0&G0 > 1&! (Ch(G0,1)&(K96>G0|K97>1)))] ])&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K96>1|K97>G0))&! (Ch(0,G0)&(K96>0|K97>G0))])) ]
2019-10-14 22:46:15,821 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&turn(p2)])&!(turn(p2))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(1,0)&! Ch(0,1)])&!(exists(G0:Int)[G0>=0&Ch(1,0)&Ch(G0,1)&! Ch(1,1)])&!(exists(G0:Int)[G0>=0&xlen() > G0&G0 > 1&! Ch(G0,1)])&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(0,G0)])
 f2:!(!Ch(0,0))=>(exists(K104:Int,K105:Int)[ (Ch(K104,K105)&turn(p1)&K104>=0&K104<xlen()&K105>=0&K105<ylen())&((( !(Ch(0,0)&(K104>0|K105>0)) ) => ( !(Ch(0,0)&(K104>0|K105>0))&(!turn(p1)) ))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K104>G0|K105>G1))&! (Ch(G1,0)&(K104>G1|K105>0))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K104>G0|K105>G1))&! (Ch(0,G0)&(K104>0|K105>G0))])&!(exists(G0:Int)[G0>=0&G0 >= 1&(Ch(G0,G0)&(K104>G0|K105>G0))])) ])
2019-10-14 22:46:25,992 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,0)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(0,G0)])&!(exists(G0:Int)[G0>=0&G0 >= 1&Ch(G0,G0)])
 f2:forall(K101:Int,K102:Int)[ Ch(K101,K102)&turn(p2)&K101>=0&K101<xlen()&K102>=0&K102<ylen()=>((( !(Ch(0,0)&(K101>0|K102>0)) ) => ( !(Ch(0,0)&(K101>0|K102>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K101>0|K102>G0))&(!turn(p2))])&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K101>0|K102>G0))&! (Ch(1,0)&(K101>1|K102>0))&! (Ch(0,1)&(K101>0|K102>1))])&!(exists(G0:Int)[G0>=0&(Ch(1,0)&(K101>1|K102>0))&(Ch(G0,1)&(K101>G0|K102>1))&! (Ch(1,1)&(K101>1|K102>1))])&!(exists(G0:Int)[ exists(K103:Int)[ (xlen()=K103)&(G0>=0& K103 > G0&G0 > 1&! (Ch(G0,1)&(K101>G0|K102>1)))] ])&!(exists(G0:Int)[G0>=0&(Ch(G0,1)&(K101>G0|K102>1))&! (Ch(0,G0)&(K101>0|K102>G0))])) ]
2019-10-14 22:46:26,052 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,0)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(0,G0)])&!(exists(G0:Int)[G0>=0&G0 >= 1&Ch(G0,G0)])
 f2:forall(K101:Int,K102:Int)[ Ch(K101,K102)&turn(p2)&K101>=0&K101<xlen()&K102>=0&K102<ylen()=>((( !(Ch(0,0)&(K101>0|K102>0)) ) => ( !(Ch(0,0)&(K101>0|K102>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K101>0|K102>G0))&(!turn(p2))])&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K101>0|K102>G0))&! (Ch(1,0)&(K101>1|K102>0))&! (Ch(0,1)&(K101>0|K102>1))])&!(exists(G0:Int)[G0>=0&(Ch(1,0)&(K101>1|K102>0))&(Ch(G0,1)&(K101>G0|K102>1))&! (Ch(1,1)&(K101>1|K102>1))])&!(exists(G0:Int)[ exists(K103:Int)[ (xlen()=K103)&(G0>=0& K103 > G0&G0 > 1&! (Ch(G0,1)&(K101>G0|K102>1)))] ])&!(exists(G0:Int)[G0>=0&(Ch(G0,1)&(K101>G0|K102>1))&! (Ch(0,G0)&(K101>0|K102>G0))])) ]
2019-10-14 22:46:26,102 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,0)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(0,G0)])&!(exists(G0:Int)[G0>=0&G0 >= 1&Ch(G0,G0)])
 f2:forall(K101:Int,K102:Int)[ Ch(K101,K102)&turn(p2)&K101>=0&K101<xlen()&K102>=0&K102<ylen()=>((( !(Ch(0,0)&(K101>0|K102>0)) ) => ( !(Ch(0,0)&(K101>0|K102>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K101>0|K102>G0))&(!turn(p2))])&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K101>0|K102>G0))&! (Ch(1,0)&(K101>1|K102>0))&! (Ch(0,1)&(K101>0|K102>1))])&!(exists(G0:Int)[G0>=0&(Ch(1,0)&(K101>1|K102>0))&(Ch(G0,1)&(K101>G0|K102>1))&! (Ch(1,1)&(K101>1|K102>1))])&!(exists(G0:Int)[ exists(K103:Int)[ (xlen()=K103)&(G0>=0& K103 > G0&G0 > 1&! (Ch(G0,1)&(K101>G0|K102>1)))] ])&!(exists(G0:Int)[G0>=0&(Ch(G0,1)&(K101>G0|K102>1))&! (Ch(0,G0)&(K101>0|K102>G0))])) ]
2019-10-14 22:46:26,259 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&turn(p2)])&!(turn(p2))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(1,0)&! Ch(0,1)])&!(exists(G0:Int)[G0>=0&Ch(1,0)&Ch(G0,1)&! Ch(1,1)])&!(exists(G0:Int)[G0>=0&xlen() > G0&G0 > 1&! Ch(G0,1)])&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(G0,0)])
 f2:!(!Ch(0,0))=>(exists(K109:Int,K110:Int)[ (Ch(K109,K110)&turn(p1)&K109>=0&K109<xlen()&K110>=0&K110<ylen())&((( !(Ch(0,0)&(K109>0|K110>0)) ) => ( !(Ch(0,0)&(K109>0|K110>0))&(!turn(p1)) ))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K109>G0|K110>G1))&! (Ch(G1,0)&(K109>G1|K110>0))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K109>G0|K110>G1))&! (Ch(0,G0)&(K109>0|K110>G0))])&!(exists(G0:Int)[G0>=0&! G0 = 0&(Ch(G0,G0)&(K109>G0|K110>G0))])) ])
2019-10-14 22:46:36,401 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,0)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(0,G0)])&!(exists(G0:Int)[G0>=0&! G0 = 0&Ch(G0,G0)])
 f2:forall(K106:Int,K107:Int)[ Ch(K106,K107)&turn(p2)&K106>=0&K106<xlen()&K107>=0&K107<ylen()=>((( !(Ch(0,0)&(K106>0|K107>0)) ) => ( !(Ch(0,0)&(K106>0|K107>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K106>0|K107>G0))&(!turn(p2))])&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K106>0|K107>G0))&! (Ch(1,0)&(K106>1|K107>0))&! (Ch(0,1)&(K106>0|K107>1))])&!(exists(G0:Int)[G0>=0&(Ch(1,0)&(K106>1|K107>0))&(Ch(G0,1)&(K106>G0|K107>1))&! (Ch(1,1)&(K106>1|K107>1))])&!(exists(G0:Int)[ exists(K108:Int)[ (xlen()=K108)&(G0>=0& K108 > G0&G0 > 1&! (Ch(G0,1)&(K106>G0|K107>1)))] ])&!(exists(G0:Int)[G0>=0&(Ch(G0,1)&(K106>G0|K107>1))&! (Ch(G0,0)&(K106>G0|K107>0))])) ]
2019-10-14 22:46:36,451 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,0)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(0,G0)])&!(exists(G0:Int)[G0>=0&! G0 = 0&Ch(G0,G0)])
 f2:forall(K106:Int,K107:Int)[ Ch(K106,K107)&turn(p2)&K106>=0&K106<xlen()&K107>=0&K107<ylen()=>((( !(Ch(0,0)&(K106>0|K107>0)) ) => ( !(Ch(0,0)&(K106>0|K107>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K106>0|K107>G0))&(!turn(p2))])&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K106>0|K107>G0))&! (Ch(1,0)&(K106>1|K107>0))&! (Ch(0,1)&(K106>0|K107>1))])&!(exists(G0:Int)[G0>=0&(Ch(1,0)&(K106>1|K107>0))&(Ch(G0,1)&(K106>G0|K107>1))&! (Ch(1,1)&(K106>1|K107>1))])&!(exists(G0:Int)[ exists(K108:Int)[ (xlen()=K108)&(G0>=0& K108 > G0&G0 > 1&! (Ch(G0,1)&(K106>G0|K107>1)))] ])&!(exists(G0:Int)[G0>=0&(Ch(G0,1)&(K106>G0|K107>1))&! (Ch(G0,0)&(K106>G0|K107>0))])) ]
2019-10-14 22:46:36,489 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,0)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(0,G0)])&!(exists(G0:Int)[G0>=0&! G0 = 0&Ch(G0,G0)])
 f2:forall(K106:Int,K107:Int)[ Ch(K106,K107)&turn(p2)&K106>=0&K106<xlen()&K107>=0&K107<ylen()=>((( !(Ch(0,0)&(K106>0|K107>0)) ) => ( !(Ch(0,0)&(K106>0|K107>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K106>0|K107>G0))&(!turn(p2))])&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K106>0|K107>G0))&! (Ch(1,0)&(K106>1|K107>0))&! (Ch(0,1)&(K106>0|K107>1))])&!(exists(G0:Int)[G0>=0&(Ch(1,0)&(K106>1|K107>0))&(Ch(G0,1)&(K106>G0|K107>1))&! (Ch(1,1)&(K106>1|K107>1))])&!(exists(G0:Int)[ exists(K108:Int)[ (xlen()=K108)&(G0>=0& K108 > G0&G0 > 1&! (Ch(G0,1)&(K106>G0|K107>1)))] ])&!(exists(G0:Int)[G0>=0&(Ch(G0,1)&(K106>G0|K107>1))&! (Ch(G0,0)&(K106>G0|K107>0))])) ]
2019-10-14 22:46:36,615 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&turn(p2)])&!(turn(p2))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(1,0)&! Ch(0,1)])&!(exists(G0:Int)[G0>=0&Ch(1,0)&Ch(G0,1)&! Ch(1,1)])&!(exists(G0:Int)[G0>=0&xlen() > G0&G0 > 1&! Ch(G0,1)])&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(G0,G0)])
 f2:!(!Ch(0,0))=>(exists(K114:Int,K115:Int)[ (Ch(K114,K115)&turn(p1)&K114>=0&K114<xlen()&K115>=0&K115<ylen())&((( !(Ch(0,0)&(K114>0|K115>0)) ) => ( !(Ch(0,0)&(K114>0|K115>0))&(!turn(p1)) ))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K114>G0|K115>G1))&! (Ch(G1,0)&(K114>G1|K115>0))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K114>G0|K115>G1))&! (Ch(0,G0)&(K114>0|K115>G0))])&!(exists(G0:Int)[G0>=0&(Ch(G0,G0)&(K114>G0|K115>G0))&G0 > 0])) ])
2019-10-14 22:46:46,683 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,0)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(0,G0)])&!(exists(G0:Int)[G0>=0&Ch(G0,G0)&G0 > 0])
 f2:forall(K111:Int,K112:Int)[ Ch(K111,K112)&turn(p2)&K111>=0&K111<xlen()&K112>=0&K112<ylen()=>((( !(Ch(0,0)&(K111>0|K112>0)) ) => ( !(Ch(0,0)&(K111>0|K112>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K111>0|K112>G0))&(!turn(p2))])&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K111>0|K112>G0))&! (Ch(1,0)&(K111>1|K112>0))&! (Ch(0,1)&(K111>0|K112>1))])&!(exists(G0:Int)[G0>=0&(Ch(1,0)&(K111>1|K112>0))&(Ch(G0,1)&(K111>G0|K112>1))&! (Ch(1,1)&(K111>1|K112>1))])&!(exists(G0:Int)[ exists(K113:Int)[ (xlen()=K113)&(G0>=0& K113 > G0&G0 > 1&! (Ch(G0,1)&(K111>G0|K112>1)))] ])&!(exists(G0:Int)[G0>=0&(Ch(G0,1)&(K111>G0|K112>1))&! (Ch(G0,G0)&(K111>G0|K112>G0))])) ]
2019-10-14 22:46:46,733 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,0)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(0,G0)])&!(exists(G0:Int)[G0>=0&Ch(G0,G0)&G0 > 0])
 f2:forall(K111:Int,K112:Int)[ Ch(K111,K112)&turn(p2)&K111>=0&K111<xlen()&K112>=0&K112<ylen()=>((( !(Ch(0,0)&(K111>0|K112>0)) ) => ( !(Ch(0,0)&(K111>0|K112>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K111>0|K112>G0))&(!turn(p2))])&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K111>0|K112>G0))&! (Ch(1,0)&(K111>1|K112>0))&! (Ch(0,1)&(K111>0|K112>1))])&!(exists(G0:Int)[G0>=0&(Ch(1,0)&(K111>1|K112>0))&(Ch(G0,1)&(K111>G0|K112>1))&! (Ch(1,1)&(K111>1|K112>1))])&!(exists(G0:Int)[ exists(K113:Int)[ (xlen()=K113)&(G0>=0& K113 > G0&G0 > 1&! (Ch(G0,1)&(K111>G0|K112>1)))] ])&!(exists(G0:Int)[G0>=0&(Ch(G0,1)&(K111>G0|K112>1))&! (Ch(G0,G0)&(K111>G0|K112>G0))])) ]
2019-10-14 22:46:46,772 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,0)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(0,G0)])&!(exists(G0:Int)[G0>=0&Ch(G0,G0)&G0 > 0])
 f2:forall(K111:Int,K112:Int)[ Ch(K111,K112)&turn(p2)&K111>=0&K111<xlen()&K112>=0&K112<ylen()=>((( !(Ch(0,0)&(K111>0|K112>0)) ) => ( !(Ch(0,0)&(K111>0|K112>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K111>0|K112>G0))&(!turn(p2))])&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K111>0|K112>G0))&! (Ch(1,0)&(K111>1|K112>0))&! (Ch(0,1)&(K111>0|K112>1))])&!(exists(G0:Int)[G0>=0&(Ch(1,0)&(K111>1|K112>0))&(Ch(G0,1)&(K111>G0|K112>1))&! (Ch(1,1)&(K111>1|K112>1))])&!(exists(G0:Int)[ exists(K113:Int)[ (xlen()=K113)&(G0>=0& K113 > G0&G0 > 1&! (Ch(G0,1)&(K111>G0|K112>1)))] ])&!(exists(G0:Int)[G0>=0&(Ch(G0,1)&(K111>G0|K112>1))&! (Ch(G0,G0)&(K111>G0|K112>G0))])) ]
2019-10-14 22:46:46,916 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&turn(p2)])&!(turn(p2))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(1,0)&! Ch(0,1)])&!(exists(G0:Int)[G0>=0&Ch(1,0)&Ch(G0,1)&! Ch(1,1)])&!(exists(G0:Int)[G0>=0&xlen() > G0&G0 > 1&! Ch(G0,1)])&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(0,1)])
 f2:!(!Ch(0,0))=>(exists(K119:Int,K120:Int)[ (Ch(K119,K120)&turn(p1)&K119>=0&K119<xlen()&K120>=0&K120<ylen())&((( !(Ch(0,0)&(K119>0|K120>0)) ) => ( !(Ch(0,0)&(K119>0|K120>0))&(!turn(p1)) ))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K119>G0|K120>G1))&! (Ch(G1,0)&(K119>G1|K120>0))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K119>G0|K120>G1))&! (Ch(0,G0)&(K119>0|K120>G0))])&!(exists(G0:Int)[G0>=0&(Ch(G0,G0)&(K119>G0|K120>G0))&G0 >= 1])) ])
2019-10-14 22:46:57,011 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,0)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(0,G0)])&!(exists(G0:Int)[G0>=0&Ch(G0,G0)&G0 >= 1])
 f2:forall(K116:Int,K117:Int)[ Ch(K116,K117)&turn(p2)&K116>=0&K116<xlen()&K117>=0&K117<ylen()=>((( !(Ch(0,0)&(K116>0|K117>0)) ) => ( !(Ch(0,0)&(K116>0|K117>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K116>0|K117>G0))&(!turn(p2))])&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K116>0|K117>G0))&! (Ch(1,0)&(K116>1|K117>0))&! (Ch(0,1)&(K116>0|K117>1))])&!(exists(G0:Int)[G0>=0&(Ch(1,0)&(K116>1|K117>0))&(Ch(G0,1)&(K116>G0|K117>1))&! (Ch(1,1)&(K116>1|K117>1))])&!(exists(G0:Int)[ exists(K118:Int)[ (xlen()=K118)&(G0>=0& K118 > G0&G0 > 1&! (Ch(G0,1)&(K116>G0|K117>1)))] ])&!(exists(G0:Int)[G0>=0&(Ch(G0,1)&(K116>G0|K117>1))&! (Ch(0,1)&(K116>0|K117>1))])) ]
2019-10-14 22:46:57,064 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,0)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(0,G0)])&!(exists(G0:Int)[G0>=0&Ch(G0,G0)&G0 >= 1])
 f2:forall(K116:Int,K117:Int)[ Ch(K116,K117)&turn(p2)&K116>=0&K116<xlen()&K117>=0&K117<ylen()=>((( !(Ch(0,0)&(K116>0|K117>0)) ) => ( !(Ch(0,0)&(K116>0|K117>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K116>0|K117>G0))&(!turn(p2))])&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K116>0|K117>G0))&! (Ch(1,0)&(K116>1|K117>0))&! (Ch(0,1)&(K116>0|K117>1))])&!(exists(G0:Int)[G0>=0&(Ch(1,0)&(K116>1|K117>0))&(Ch(G0,1)&(K116>G0|K117>1))&! (Ch(1,1)&(K116>1|K117>1))])&!(exists(G0:Int)[ exists(K118:Int)[ (xlen()=K118)&(G0>=0& K118 > G0&G0 > 1&! (Ch(G0,1)&(K116>G0|K117>1)))] ])&!(exists(G0:Int)[G0>=0&(Ch(G0,1)&(K116>G0|K117>1))&! (Ch(0,1)&(K116>0|K117>1))])) ]
2019-10-14 22:46:57,104 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,0)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(0,G0)])&!(exists(G0:Int)[G0>=0&Ch(G0,G0)&G0 >= 1])
 f2:forall(K116:Int,K117:Int)[ Ch(K116,K117)&turn(p2)&K116>=0&K116<xlen()&K117>=0&K117<ylen()=>((( !(Ch(0,0)&(K116>0|K117>0)) ) => ( !(Ch(0,0)&(K116>0|K117>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K116>0|K117>G0))&(!turn(p2))])&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K116>0|K117>G0))&! (Ch(1,0)&(K116>1|K117>0))&! (Ch(0,1)&(K116>0|K117>1))])&!(exists(G0:Int)[G0>=0&(Ch(1,0)&(K116>1|K117>0))&(Ch(G0,1)&(K116>G0|K117>1))&! (Ch(1,1)&(K116>1|K117>1))])&!(exists(G0:Int)[ exists(K118:Int)[ (xlen()=K118)&(G0>=0& K118 > G0&G0 > 1&! (Ch(G0,1)&(K116>G0|K117>1)))] ])&!(exists(G0:Int)[G0>=0&(Ch(G0,1)&(K116>G0|K117>1))&! (Ch(0,1)&(K116>0|K117>1))])) ]
2019-10-14 22:46:57,241 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&turn(p2)])&!(turn(p2))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(1,0)&! Ch(0,1)])&!(exists(G0:Int)[G0>=0&Ch(1,0)&Ch(G0,1)&! Ch(1,1)])&!(exists(G0:Int)[G0>=0&xlen() > G0&G0 > 1&! Ch(G0,1)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(0,G1)])
 f2:!(!Ch(0,0))=>(exists(K124:Int,K125:Int)[ (Ch(K124,K125)&turn(p1)&K124>=0&K124<xlen()&K125>=0&K125<ylen())&((( !(Ch(0,0)&(K124>0|K125>0)) ) => ( !(Ch(0,0)&(K124>0|K125>0))&(!turn(p1)) ))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K124>G0|K125>G1))&! (Ch(G1,0)&(K124>G1|K125>0))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K124>G0|K125>G1))&! (Ch(0,G0)&(K124>0|K125>G0))])&!(exists(G0:Int)[G0>=0&(Ch(G0,G0)&(K124>G0|K125>G0))&! G0 = 0])) ])
2019-10-14 22:47:07,367 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,0)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(0,G0)])&!(exists(G0:Int)[G0>=0&Ch(G0,G0)&! G0 = 0])
 f2:forall(K121:Int,K122:Int)[ Ch(K121,K122)&turn(p2)&K121>=0&K121<xlen()&K122>=0&K122<ylen()=>((( !(Ch(0,0)&(K121>0|K122>0)) ) => ( !(Ch(0,0)&(K121>0|K122>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K121>0|K122>G0))&(!turn(p2))])&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K121>0|K122>G0))&! (Ch(1,0)&(K121>1|K122>0))&! (Ch(0,1)&(K121>0|K122>1))])&!(exists(G0:Int)[G0>=0&(Ch(1,0)&(K121>1|K122>0))&(Ch(G0,1)&(K121>G0|K122>1))&! (Ch(1,1)&(K121>1|K122>1))])&!(exists(G0:Int)[ exists(K123:Int)[ (xlen()=K123)&(G0>=0& K123 > G0&G0 > 1&! (Ch(G0,1)&(K121>G0|K122>1)))] ])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K121>G0|K122>G1))&! (Ch(0,G1)&(K121>0|K122>G1))])) ]
2019-10-14 22:47:07,419 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,0)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(0,G0)])&!(exists(G0:Int)[G0>=0&Ch(G0,G0)&! G0 = 0])
 f2:forall(K121:Int,K122:Int)[ Ch(K121,K122)&turn(p2)&K121>=0&K121<xlen()&K122>=0&K122<ylen()=>((( !(Ch(0,0)&(K121>0|K122>0)) ) => ( !(Ch(0,0)&(K121>0|K122>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K121>0|K122>G0))&(!turn(p2))])&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K121>0|K122>G0))&! (Ch(1,0)&(K121>1|K122>0))&! (Ch(0,1)&(K121>0|K122>1))])&!(exists(G0:Int)[G0>=0&(Ch(1,0)&(K121>1|K122>0))&(Ch(G0,1)&(K121>G0|K122>1))&! (Ch(1,1)&(K121>1|K122>1))])&!(exists(G0:Int)[ exists(K123:Int)[ (xlen()=K123)&(G0>=0& K123 > G0&G0 > 1&! (Ch(G0,1)&(K121>G0|K122>1)))] ])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K121>G0|K122>G1))&! (Ch(0,G1)&(K121>0|K122>G1))])) ]
2019-10-14 22:47:07,457 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,0)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(0,G0)])&!(exists(G0:Int)[G0>=0&Ch(G0,G0)&! G0 = 0])
 f2:forall(K121:Int,K122:Int)[ Ch(K121,K122)&turn(p2)&K121>=0&K121<xlen()&K122>=0&K122<ylen()=>((( !(Ch(0,0)&(K121>0|K122>0)) ) => ( !(Ch(0,0)&(K121>0|K122>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K121>0|K122>G0))&(!turn(p2))])&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K121>0|K122>G0))&! (Ch(1,0)&(K121>1|K122>0))&! (Ch(0,1)&(K121>0|K122>1))])&!(exists(G0:Int)[G0>=0&(Ch(1,0)&(K121>1|K122>0))&(Ch(G0,1)&(K121>G0|K122>1))&! (Ch(1,1)&(K121>1|K122>1))])&!(exists(G0:Int)[ exists(K123:Int)[ (xlen()=K123)&(G0>=0& K123 > G0&G0 > 1&! (Ch(G0,1)&(K121>G0|K122>1)))] ])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K121>G0|K122>G1))&! (Ch(0,G1)&(K121>0|K122>G1))])) ]
2019-10-14 22:47:07,584 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&turn(p2)])&!(turn(p2))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(1,0)&! Ch(0,1)])&!(exists(G0:Int)[G0>=0&Ch(1,0)&Ch(G0,1)&! Ch(1,1)])&!(exists(G0:Int)[G0>=0&xlen() > G0&G0 > 1&! Ch(G0,1)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G0,0)])
 f2:!(!Ch(0,0))=>(exists(K129:Int,K130:Int)[ (Ch(K129,K130)&turn(p1)&K129>=0&K129<xlen()&K130>=0&K130<ylen())&((( !(Ch(0,0)&(K129>0|K130>0)) ) => ( !(Ch(0,0)&(K129>0|K130>0))&(!turn(p1)) ))&!((Ch(1,1)&(K129>1|K130>1)))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K129>G0|K130>G1))&! (Ch(G1,0)&(K129>G1|K130>0))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K129>G0|K130>G1))&! (Ch(0,G0)&(K129>0|K130>G0))])&!(exists(G0:Int)[G0>=0&G0 > 1&(Ch(G0,G0)&(K129>G0|K130>G0))])) ])
2019-10-14 22:47:17,721 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(Ch(1,1))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,0)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(0,G0)])&!(exists(G0:Int)[G0>=0&G0 > 1&Ch(G0,G0)])
 f2:forall(K126:Int,K127:Int)[ Ch(K126,K127)&turn(p2)&K126>=0&K126<xlen()&K127>=0&K127<ylen()=>((( !(Ch(0,0)&(K126>0|K127>0)) ) => ( !(Ch(0,0)&(K126>0|K127>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K126>0|K127>G0))&(!turn(p2))])&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K126>0|K127>G0))&! (Ch(1,0)&(K126>1|K127>0))&! (Ch(0,1)&(K126>0|K127>1))])&!(exists(G0:Int)[G0>=0&(Ch(1,0)&(K126>1|K127>0))&(Ch(G0,1)&(K126>G0|K127>1))&! (Ch(1,1)&(K126>1|K127>1))])&!(exists(G0:Int)[ exists(K128:Int)[ (xlen()=K128)&(G0>=0& K128 > G0&G0 > 1&! (Ch(G0,1)&(K126>G0|K127>1)))] ])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K126>G0|K127>G1))&! (Ch(G0,0)&(K126>G0|K127>0))])) ]
2019-10-14 22:47:17,780 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(Ch(1,1))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,0)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(0,G0)])&!(exists(G0:Int)[G0>=0&G0 > 1&Ch(G0,G0)])
 f2:forall(K126:Int,K127:Int)[ Ch(K126,K127)&turn(p2)&K126>=0&K126<xlen()&K127>=0&K127<ylen()=>((( !(Ch(0,0)&(K126>0|K127>0)) ) => ( !(Ch(0,0)&(K126>0|K127>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K126>0|K127>G0))&(!turn(p2))])&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K126>0|K127>G0))&! (Ch(1,0)&(K126>1|K127>0))&! (Ch(0,1)&(K126>0|K127>1))])&!(exists(G0:Int)[G0>=0&(Ch(1,0)&(K126>1|K127>0))&(Ch(G0,1)&(K126>G0|K127>1))&! (Ch(1,1)&(K126>1|K127>1))])&!(exists(G0:Int)[ exists(K128:Int)[ (xlen()=K128)&(G0>=0& K128 > G0&G0 > 1&! (Ch(G0,1)&(K126>G0|K127>1)))] ])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K126>G0|K127>G1))&! (Ch(G0,0)&(K126>G0|K127>0))])) ]
2019-10-14 22:47:17,827 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(Ch(1,1))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,0)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(0,G0)])&!(exists(G0:Int)[G0>=0&G0 > 1&Ch(G0,G0)])
 f2:forall(K126:Int,K127:Int)[ Ch(K126,K127)&turn(p2)&K126>=0&K126<xlen()&K127>=0&K127<ylen()=>((( !(Ch(0,0)&(K126>0|K127>0)) ) => ( !(Ch(0,0)&(K126>0|K127>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K126>0|K127>G0))&(!turn(p2))])&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K126>0|K127>G0))&! (Ch(1,0)&(K126>1|K127>0))&! (Ch(0,1)&(K126>0|K127>1))])&!(exists(G0:Int)[G0>=0&(Ch(1,0)&(K126>1|K127>0))&(Ch(G0,1)&(K126>G0|K127>1))&! (Ch(1,1)&(K126>1|K127>1))])&!(exists(G0:Int)[ exists(K128:Int)[ (xlen()=K128)&(G0>=0& K128 > G0&G0 > 1&! (Ch(G0,1)&(K126>G0|K127>1)))] ])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K126>G0|K127>G1))&! (Ch(G0,0)&(K126>G0|K127>0))])) ]
2019-10-14 22:47:17,961 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&turn(p2)])&!(turn(p2))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(1,0)&! Ch(0,1)])&!(exists(G0:Int)[G0>=0&Ch(1,0)&Ch(G0,1)&! Ch(1,1)])&!(exists(G0:Int)[G0>=0&xlen() > G0&G0 > 1&! Ch(G0,1)])&!(exists(G0:Int)[G0>=0&Ch(G0,G0)&! Ch(0,G0)])
 f2:!(!Ch(0,0))=>(exists(K134:Int,K135:Int)[ (Ch(K134,K135)&turn(p1)&K134>=0&K134<xlen()&K135>=0&K135<ylen())&((( !(Ch(0,0)&(K134>0|K135>0)) ) => ( !(Ch(0,0)&(K134>0|K135>0))&(!turn(p1)) ))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K134>G0|K135>G1))&! (Ch(G1,0)&(K134>G1|K135>0))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K134>G0|K135>G1))&! (Ch(0,G0)&(K134>0|K135>G0))])&!(exists(G0:Int)[G0>=0&G0 > 0&(Ch(G0,G0)&(K134>G0|K135>G0))])) ])
2019-10-14 22:47:28,084 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,0)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(0,G0)])&!(exists(G0:Int)[G0>=0&G0 > 0&Ch(G0,G0)])
 f2:forall(K131:Int,K132:Int)[ Ch(K131,K132)&turn(p2)&K131>=0&K131<xlen()&K132>=0&K132<ylen()=>((( !(Ch(0,0)&(K131>0|K132>0)) ) => ( !(Ch(0,0)&(K131>0|K132>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K131>0|K132>G0))&(!turn(p2))])&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K131>0|K132>G0))&! (Ch(1,0)&(K131>1|K132>0))&! (Ch(0,1)&(K131>0|K132>1))])&!(exists(G0:Int)[G0>=0&(Ch(1,0)&(K131>1|K132>0))&(Ch(G0,1)&(K131>G0|K132>1))&! (Ch(1,1)&(K131>1|K132>1))])&!(exists(G0:Int)[ exists(K133:Int)[ (xlen()=K133)&(G0>=0& K133 > G0&G0 > 1&! (Ch(G0,1)&(K131>G0|K132>1)))] ])&!(exists(G0:Int)[G0>=0&(Ch(G0,G0)&(K131>G0|K132>G0))&! (Ch(0,G0)&(K131>0|K132>G0))])) ]
2019-10-14 22:47:28,138 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,0)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(0,G0)])&!(exists(G0:Int)[G0>=0&G0 > 0&Ch(G0,G0)])
 f2:forall(K131:Int,K132:Int)[ Ch(K131,K132)&turn(p2)&K131>=0&K131<xlen()&K132>=0&K132<ylen()=>((( !(Ch(0,0)&(K131>0|K132>0)) ) => ( !(Ch(0,0)&(K131>0|K132>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K131>0|K132>G0))&(!turn(p2))])&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K131>0|K132>G0))&! (Ch(1,0)&(K131>1|K132>0))&! (Ch(0,1)&(K131>0|K132>1))])&!(exists(G0:Int)[G0>=0&(Ch(1,0)&(K131>1|K132>0))&(Ch(G0,1)&(K131>G0|K132>1))&! (Ch(1,1)&(K131>1|K132>1))])&!(exists(G0:Int)[ exists(K133:Int)[ (xlen()=K133)&(G0>=0& K133 > G0&G0 > 1&! (Ch(G0,1)&(K131>G0|K132>1)))] ])&!(exists(G0:Int)[G0>=0&(Ch(G0,G0)&(K131>G0|K132>G0))&! (Ch(0,G0)&(K131>0|K132>G0))])) ]
2019-10-14 22:47:28,175 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,0)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(0,G0)])&!(exists(G0:Int)[G0>=0&G0 > 0&Ch(G0,G0)])
 f2:forall(K131:Int,K132:Int)[ Ch(K131,K132)&turn(p2)&K131>=0&K131<xlen()&K132>=0&K132<ylen()=>((( !(Ch(0,0)&(K131>0|K132>0)) ) => ( !(Ch(0,0)&(K131>0|K132>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K131>0|K132>G0))&(!turn(p2))])&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K131>0|K132>G0))&! (Ch(1,0)&(K131>1|K132>0))&! (Ch(0,1)&(K131>0|K132>1))])&!(exists(G0:Int)[G0>=0&(Ch(1,0)&(K131>1|K132>0))&(Ch(G0,1)&(K131>G0|K132>1))&! (Ch(1,1)&(K131>1|K132>1))])&!(exists(G0:Int)[ exists(K133:Int)[ (xlen()=K133)&(G0>=0& K133 > G0&G0 > 1&! (Ch(G0,1)&(K131>G0|K132>1)))] ])&!(exists(G0:Int)[G0>=0&(Ch(G0,G0)&(K131>G0|K132>G0))&! (Ch(0,G0)&(K131>0|K132>G0))])) ]
2019-10-14 22:47:28,319 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&turn(p2)])&!(turn(p2))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(1,0)&! Ch(0,1)])&!(exists(G0:Int)[G0>=0&Ch(1,0)&Ch(G0,1)&! Ch(1,1)])&!(exists(G0:Int)[G0>=0&xlen() > G0&G0 > 1&! Ch(G0,1)])&!(exists(G0:Int)[G0>=0&! Ch(0,G0)&Ch(1,G0)])
 f2:!(!Ch(0,0))=>(exists(K139:Int,K140:Int)[ (Ch(K139,K140)&turn(p1)&K139>=0&K139<xlen()&K140>=0&K140<ylen())&((( !(Ch(0,0)&(K139>0|K140>0)) ) => ( !(Ch(0,0)&(K139>0|K140>0))&(!turn(p1)) ))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K139>G0|K140>G1))&! (Ch(G1,0)&(K139>G1|K140>0))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K139>G0|K140>G1))&! (Ch(0,G0)&(K139>0|K140>G0))])&!(exists(G0:Int)[G0>=0&G0 >= 1&(Ch(G0,G0)&(K139>G0|K140>G0))])) ])
2019-10-14 22:47:38,407 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,0)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(0,G0)])&!(exists(G0:Int)[G0>=0&G0 >= 1&Ch(G0,G0)])
 f2:forall(K136:Int,K137:Int)[ Ch(K136,K137)&turn(p2)&K136>=0&K136<xlen()&K137>=0&K137<ylen()=>((( !(Ch(0,0)&(K136>0|K137>0)) ) => ( !(Ch(0,0)&(K136>0|K137>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K136>0|K137>G0))&(!turn(p2))])&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K136>0|K137>G0))&! (Ch(1,0)&(K136>1|K137>0))&! (Ch(0,1)&(K136>0|K137>1))])&!(exists(G0:Int)[G0>=0&(Ch(1,0)&(K136>1|K137>0))&(Ch(G0,1)&(K136>G0|K137>1))&! (Ch(1,1)&(K136>1|K137>1))])&!(exists(G0:Int)[ exists(K138:Int)[ (xlen()=K138)&(G0>=0& K138 > G0&G0 > 1&! (Ch(G0,1)&(K136>G0|K137>1)))] ])&!(exists(G0:Int)[G0>=0&! (Ch(0,G0)&(K136>0|K137>G0))&(Ch(1,G0)&(K136>1|K137>G0))])) ]
2019-10-14 22:47:38,469 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,0)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(0,G0)])&!(exists(G0:Int)[G0>=0&G0 >= 1&Ch(G0,G0)])
 f2:forall(K136:Int,K137:Int)[ Ch(K136,K137)&turn(p2)&K136>=0&K136<xlen()&K137>=0&K137<ylen()=>((( !(Ch(0,0)&(K136>0|K137>0)) ) => ( !(Ch(0,0)&(K136>0|K137>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K136>0|K137>G0))&(!turn(p2))])&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K136>0|K137>G0))&! (Ch(1,0)&(K136>1|K137>0))&! (Ch(0,1)&(K136>0|K137>1))])&!(exists(G0:Int)[G0>=0&(Ch(1,0)&(K136>1|K137>0))&(Ch(G0,1)&(K136>G0|K137>1))&! (Ch(1,1)&(K136>1|K137>1))])&!(exists(G0:Int)[ exists(K138:Int)[ (xlen()=K138)&(G0>=0& K138 > G0&G0 > 1&! (Ch(G0,1)&(K136>G0|K137>1)))] ])&!(exists(G0:Int)[G0>=0&! (Ch(0,G0)&(K136>0|K137>G0))&(Ch(1,G0)&(K136>1|K137>G0))])) ]
2019-10-14 22:47:38,511 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,0)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(0,G0)])&!(exists(G0:Int)[G0>=0&G0 >= 1&Ch(G0,G0)])
 f2:forall(K136:Int,K137:Int)[ Ch(K136,K137)&turn(p2)&K136>=0&K136<xlen()&K137>=0&K137<ylen()=>((( !(Ch(0,0)&(K136>0|K137>0)) ) => ( !(Ch(0,0)&(K136>0|K137>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K136>0|K137>G0))&(!turn(p2))])&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K136>0|K137>G0))&! (Ch(1,0)&(K136>1|K137>0))&! (Ch(0,1)&(K136>0|K137>1))])&!(exists(G0:Int)[G0>=0&(Ch(1,0)&(K136>1|K137>0))&(Ch(G0,1)&(K136>G0|K137>1))&! (Ch(1,1)&(K136>1|K137>1))])&!(exists(G0:Int)[ exists(K138:Int)[ (xlen()=K138)&(G0>=0& K138 > G0&G0 > 1&! (Ch(G0,1)&(K136>G0|K137>1)))] ])&!(exists(G0:Int)[G0>=0&! (Ch(0,G0)&(K136>0|K137>G0))&(Ch(1,G0)&(K136>1|K137>G0))])) ]
2019-10-14 22:47:38,631 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&turn(p2)])&!(turn(p2))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(1,0)&! Ch(0,1)])&!(exists(G0:Int)[G0>=0&Ch(1,0)&Ch(G0,1)&! Ch(1,1)])&!(exists(G0:Int)[G0>=0&xlen() > G0&G0 > 1&! Ch(G0,1)])&!(exists(G0:Int)[G0>=0&! Ch(0,G0)&Ch(G0,1)])
 f2:!(!Ch(0,0))=>(exists(K144:Int,K145:Int)[ (Ch(K144,K145)&turn(p1)&K144>=0&K144<xlen()&K145>=0&K145<ylen())&((( !(Ch(0,0)&(K144>0|K145>0)) ) => ( !(Ch(0,0)&(K144>0|K145>0))&(!turn(p1)) ))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K144>G0|K145>G1))&! (Ch(G1,0)&(K144>G1|K145>0))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K144>G0|K145>G1))&! (Ch(0,G0)&(K144>0|K145>G0))])&!(exists(G0:Int)[G0>=0&! G0 = 0&(Ch(G0,G0)&(K144>G0|K145>G0))])) ])
2019-10-14 22:47:48,812 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,0)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(0,G0)])&!(exists(G0:Int)[G0>=0&! G0 = 0&Ch(G0,G0)])
 f2:forall(K141:Int,K142:Int)[ Ch(K141,K142)&turn(p2)&K141>=0&K141<xlen()&K142>=0&K142<ylen()=>((( !(Ch(0,0)&(K141>0|K142>0)) ) => ( !(Ch(0,0)&(K141>0|K142>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K141>0|K142>G0))&(!turn(p2))])&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K141>0|K142>G0))&! (Ch(1,0)&(K141>1|K142>0))&! (Ch(0,1)&(K141>0|K142>1))])&!(exists(G0:Int)[G0>=0&(Ch(1,0)&(K141>1|K142>0))&(Ch(G0,1)&(K141>G0|K142>1))&! (Ch(1,1)&(K141>1|K142>1))])&!(exists(G0:Int)[ exists(K143:Int)[ (xlen()=K143)&(G0>=0& K143 > G0&G0 > 1&! (Ch(G0,1)&(K141>G0|K142>1)))] ])&!(exists(G0:Int)[G0>=0&! (Ch(0,G0)&(K141>0|K142>G0))&(Ch(G0,1)&(K141>G0|K142>1))])) ]
2019-10-14 22:47:48,861 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,0)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(0,G0)])&!(exists(G0:Int)[G0>=0&! G0 = 0&Ch(G0,G0)])
 f2:forall(K141:Int,K142:Int)[ Ch(K141,K142)&turn(p2)&K141>=0&K141<xlen()&K142>=0&K142<ylen()=>((( !(Ch(0,0)&(K141>0|K142>0)) ) => ( !(Ch(0,0)&(K141>0|K142>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K141>0|K142>G0))&(!turn(p2))])&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K141>0|K142>G0))&! (Ch(1,0)&(K141>1|K142>0))&! (Ch(0,1)&(K141>0|K142>1))])&!(exists(G0:Int)[G0>=0&(Ch(1,0)&(K141>1|K142>0))&(Ch(G0,1)&(K141>G0|K142>1))&! (Ch(1,1)&(K141>1|K142>1))])&!(exists(G0:Int)[ exists(K143:Int)[ (xlen()=K143)&(G0>=0& K143 > G0&G0 > 1&! (Ch(G0,1)&(K141>G0|K142>1)))] ])&!(exists(G0:Int)[G0>=0&! (Ch(0,G0)&(K141>0|K142>G0))&(Ch(G0,1)&(K141>G0|K142>1))])) ]
2019-10-14 22:47:48,899 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,0)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(0,G0)])&!(exists(G0:Int)[G0>=0&! G0 = 0&Ch(G0,G0)])
 f2:forall(K141:Int,K142:Int)[ Ch(K141,K142)&turn(p2)&K141>=0&K141<xlen()&K142>=0&K142<ylen()=>((( !(Ch(0,0)&(K141>0|K142>0)) ) => ( !(Ch(0,0)&(K141>0|K142>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K141>0|K142>G0))&(!turn(p2))])&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K141>0|K142>G0))&! (Ch(1,0)&(K141>1|K142>0))&! (Ch(0,1)&(K141>0|K142>1))])&!(exists(G0:Int)[G0>=0&(Ch(1,0)&(K141>1|K142>0))&(Ch(G0,1)&(K141>G0|K142>1))&! (Ch(1,1)&(K141>1|K142>1))])&!(exists(G0:Int)[ exists(K143:Int)[ (xlen()=K143)&(G0>=0& K143 > G0&G0 > 1&! (Ch(G0,1)&(K141>G0|K142>1)))] ])&!(exists(G0:Int)[G0>=0&! (Ch(0,G0)&(K141>0|K142>G0))&(Ch(G0,1)&(K141>G0|K142>1))])) ]
2019-10-14 22:47:49,028 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&turn(p2)])&!(turn(p2))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(1,0)&! Ch(0,1)])&!(exists(G0:Int)[G0>=0&Ch(1,0)&Ch(G0,1)&! Ch(1,1)])&!(exists(G0:Int)[G0>=0&xlen() > G0&G0 > 1&! Ch(G0,1)])&!(exists(G0:Int,Y10:Int)[G0>=0&Y10>=0&! Ch(0,G0)&Ch(Y10,G0)])
 f2:!(!Ch(0,0))=>(exists(K149:Int,K150:Int)[ (Ch(K149,K150)&turn(p1)&K149>=0&K149<xlen()&K150>=0&K150<ylen())&((( !(Ch(0,0)&(K149>0|K150>0)) ) => ( !(Ch(0,0)&(K149>0|K150>0))&(!turn(p1)) ))&!((Ch(1,1)&(K149>1|K150>1)))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K149>G0|K150>G1))&! (Ch(G1,0)&(K149>G1|K150>0))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K149>G0|K150>G1))&! (Ch(0,G0)&(K149>0|K150>G0))])&!(exists(G0:Int)[G0>=0&(Ch(G0,G0)&(K149>G0|K150>G0))&G0 > 1])) ])
2019-10-14 22:47:59,306 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(Ch(1,1))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,0)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(0,G0)])&!(exists(G0:Int)[G0>=0&Ch(G0,G0)&G0 > 1])
 f2:forall(K146:Int,K147:Int)[ Ch(K146,K147)&turn(p2)&K146>=0&K146<xlen()&K147>=0&K147<ylen()=>((( !(Ch(0,0)&(K146>0|K147>0)) ) => ( !(Ch(0,0)&(K146>0|K147>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K146>0|K147>G0))&(!turn(p2))])&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K146>0|K147>G0))&! (Ch(1,0)&(K146>1|K147>0))&! (Ch(0,1)&(K146>0|K147>1))])&!(exists(G0:Int)[G0>=0&(Ch(1,0)&(K146>1|K147>0))&(Ch(G0,1)&(K146>G0|K147>1))&! (Ch(1,1)&(K146>1|K147>1))])&!(exists(G0:Int)[ exists(K148:Int)[ (xlen()=K148)&(G0>=0& K148 > G0&G0 > 1&! (Ch(G0,1)&(K146>G0|K147>1)))] ])&!(exists(G0:Int,Y10:Int)[G0>=0&Y10>=0&! (Ch(0,G0)&(K146>0|K147>G0))&(Ch(Y10,G0)&(K146>Y10|K147>G0))])) ]
2019-10-14 22:47:59,357 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(Ch(1,1))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,0)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(0,G0)])&!(exists(G0:Int)[G0>=0&Ch(G0,G0)&G0 > 1])
 f2:forall(K146:Int,K147:Int)[ Ch(K146,K147)&turn(p2)&K146>=0&K146<xlen()&K147>=0&K147<ylen()=>((( !(Ch(0,0)&(K146>0|K147>0)) ) => ( !(Ch(0,0)&(K146>0|K147>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K146>0|K147>G0))&(!turn(p2))])&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K146>0|K147>G0))&! (Ch(1,0)&(K146>1|K147>0))&! (Ch(0,1)&(K146>0|K147>1))])&!(exists(G0:Int)[G0>=0&(Ch(1,0)&(K146>1|K147>0))&(Ch(G0,1)&(K146>G0|K147>1))&! (Ch(1,1)&(K146>1|K147>1))])&!(exists(G0:Int)[ exists(K148:Int)[ (xlen()=K148)&(G0>=0& K148 > G0&G0 > 1&! (Ch(G0,1)&(K146>G0|K147>1)))] ])&!(exists(G0:Int,Y10:Int)[G0>=0&Y10>=0&! (Ch(0,G0)&(K146>0|K147>G0))&(Ch(Y10,G0)&(K146>Y10|K147>G0))])) ]
2019-10-14 22:47:59,394 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(Ch(1,1))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,0)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(0,G0)])&!(exists(G0:Int)[G0>=0&Ch(G0,G0)&G0 > 1])
 f2:forall(K146:Int,K147:Int)[ Ch(K146,K147)&turn(p2)&K146>=0&K146<xlen()&K147>=0&K147<ylen()=>((( !(Ch(0,0)&(K146>0|K147>0)) ) => ( !(Ch(0,0)&(K146>0|K147>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K146>0|K147>G0))&(!turn(p2))])&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K146>0|K147>G0))&! (Ch(1,0)&(K146>1|K147>0))&! (Ch(0,1)&(K146>0|K147>1))])&!(exists(G0:Int)[G0>=0&(Ch(1,0)&(K146>1|K147>0))&(Ch(G0,1)&(K146>G0|K147>1))&! (Ch(1,1)&(K146>1|K147>1))])&!(exists(G0:Int)[ exists(K148:Int)[ (xlen()=K148)&(G0>=0& K148 > G0&G0 > 1&! (Ch(G0,1)&(K146>G0|K147>1)))] ])&!(exists(G0:Int,Y10:Int)[G0>=0&Y10>=0&! (Ch(0,G0)&(K146>0|K147>G0))&(Ch(Y10,G0)&(K146>Y10|K147>G0))])) ]
2019-10-14 22:47:59,518 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&turn(p2)])&!(turn(p2))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(1,0)&! Ch(0,1)])&!(exists(G0:Int)[G0>=0&Ch(1,0)&Ch(G0,1)&! Ch(1,1)])&!(exists(G0:Int)[G0>=0&xlen() > G0&G0 > 1&! Ch(G0,1)])&!(exists(G0:Int)[G0>=0&! Ch(0,G0)&Ch(G0,G0)])
 f2:!(!Ch(0,0))=>(exists(K154:Int,K155:Int)[ (Ch(K154,K155)&turn(p1)&K154>=0&K154<xlen()&K155>=0&K155<ylen())&((( !(Ch(0,0)&(K154>0|K155>0)) ) => ( !(Ch(0,0)&(K154>0|K155>0))&(!turn(p1)) ))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K154>G0|K155>G1))&! (Ch(G1,0)&(K154>G1|K155>0))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K154>G0|K155>G1))&! (Ch(0,G0)&(K154>0|K155>G0))])&!(exists(G0:Int)[G0>=0&(Ch(G0,G0)&(K154>G0|K155>G0))&G0 > 0])) ])
2019-10-14 22:48:09,648 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,0)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(0,G0)])&!(exists(G0:Int)[G0>=0&Ch(G0,G0)&G0 > 0])
 f2:forall(K151:Int,K152:Int)[ Ch(K151,K152)&turn(p2)&K151>=0&K151<xlen()&K152>=0&K152<ylen()=>((( !(Ch(0,0)&(K151>0|K152>0)) ) => ( !(Ch(0,0)&(K151>0|K152>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K151>0|K152>G0))&(!turn(p2))])&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K151>0|K152>G0))&! (Ch(1,0)&(K151>1|K152>0))&! (Ch(0,1)&(K151>0|K152>1))])&!(exists(G0:Int)[G0>=0&(Ch(1,0)&(K151>1|K152>0))&(Ch(G0,1)&(K151>G0|K152>1))&! (Ch(1,1)&(K151>1|K152>1))])&!(exists(G0:Int)[ exists(K153:Int)[ (xlen()=K153)&(G0>=0& K153 > G0&G0 > 1&! (Ch(G0,1)&(K151>G0|K152>1)))] ])&!(exists(G0:Int)[G0>=0&! (Ch(0,G0)&(K151>0|K152>G0))&(Ch(G0,G0)&(K151>G0|K152>G0))])) ]
2019-10-14 22:48:09,699 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,0)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(0,G0)])&!(exists(G0:Int)[G0>=0&Ch(G0,G0)&G0 > 0])
 f2:forall(K151:Int,K152:Int)[ Ch(K151,K152)&turn(p2)&K151>=0&K151<xlen()&K152>=0&K152<ylen()=>((( !(Ch(0,0)&(K151>0|K152>0)) ) => ( !(Ch(0,0)&(K151>0|K152>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K151>0|K152>G0))&(!turn(p2))])&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K151>0|K152>G0))&! (Ch(1,0)&(K151>1|K152>0))&! (Ch(0,1)&(K151>0|K152>1))])&!(exists(G0:Int)[G0>=0&(Ch(1,0)&(K151>1|K152>0))&(Ch(G0,1)&(K151>G0|K152>1))&! (Ch(1,1)&(K151>1|K152>1))])&!(exists(G0:Int)[ exists(K153:Int)[ (xlen()=K153)&(G0>=0& K153 > G0&G0 > 1&! (Ch(G0,1)&(K151>G0|K152>1)))] ])&!(exists(G0:Int)[G0>=0&! (Ch(0,G0)&(K151>0|K152>G0))&(Ch(G0,G0)&(K151>G0|K152>G0))])) ]
2019-10-14 22:48:09,736 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,0)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(0,G0)])&!(exists(G0:Int)[G0>=0&Ch(G0,G0)&G0 > 0])
 f2:forall(K151:Int,K152:Int)[ Ch(K151,K152)&turn(p2)&K151>=0&K151<xlen()&K152>=0&K152<ylen()=>((( !(Ch(0,0)&(K151>0|K152>0)) ) => ( !(Ch(0,0)&(K151>0|K152>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K151>0|K152>G0))&(!turn(p2))])&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K151>0|K152>G0))&! (Ch(1,0)&(K151>1|K152>0))&! (Ch(0,1)&(K151>0|K152>1))])&!(exists(G0:Int)[G0>=0&(Ch(1,0)&(K151>1|K152>0))&(Ch(G0,1)&(K151>G0|K152>1))&! (Ch(1,1)&(K151>1|K152>1))])&!(exists(G0:Int)[ exists(K153:Int)[ (xlen()=K153)&(G0>=0& K153 > G0&G0 > 1&! (Ch(G0,1)&(K151>G0|K152>1)))] ])&!(exists(G0:Int)[G0>=0&! (Ch(0,G0)&(K151>0|K152>G0))&(Ch(G0,G0)&(K151>G0|K152>G0))])) ]
2019-10-14 22:48:09,862 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&turn(p2)])&!(turn(p2))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(1,0)&! Ch(0,1)])&!(exists(G0:Int)[G0>=0&Ch(1,0)&Ch(G0,1)&! Ch(1,1)])&!(exists(G0:Int)[G0>=0&xlen() > G0&G0 > 1&! Ch(G0,1)])&!(exists(G0:Int)[G0>=0&! Ch(G0,0)&Ch(G0,1)])
 f2:!(!Ch(0,0))=>(exists(K159:Int,K160:Int)[ (Ch(K159,K160)&turn(p1)&K159>=0&K159<xlen()&K160>=0&K160<ylen())&((( !(Ch(0,0)&(K159>0|K160>0)) ) => ( !(Ch(0,0)&(K159>0|K160>0))&(!turn(p1)) ))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K159>G0|K160>G1))&! (Ch(G1,0)&(K159>G1|K160>0))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K159>G0|K160>G1))&! (Ch(0,G0)&(K159>0|K160>G0))])&!(exists(G0:Int)[G0>=0&(Ch(G0,G0)&(K159>G0|K160>G0))&G0 >= 1])) ])
2019-10-14 22:48:20,013 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,0)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(0,G0)])&!(exists(G0:Int)[G0>=0&Ch(G0,G0)&G0 >= 1])
 f2:forall(K156:Int,K157:Int)[ Ch(K156,K157)&turn(p2)&K156>=0&K156<xlen()&K157>=0&K157<ylen()=>((( !(Ch(0,0)&(K156>0|K157>0)) ) => ( !(Ch(0,0)&(K156>0|K157>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K156>0|K157>G0))&(!turn(p2))])&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K156>0|K157>G0))&! (Ch(1,0)&(K156>1|K157>0))&! (Ch(0,1)&(K156>0|K157>1))])&!(exists(G0:Int)[G0>=0&(Ch(1,0)&(K156>1|K157>0))&(Ch(G0,1)&(K156>G0|K157>1))&! (Ch(1,1)&(K156>1|K157>1))])&!(exists(G0:Int)[ exists(K158:Int)[ (xlen()=K158)&(G0>=0& K158 > G0&G0 > 1&! (Ch(G0,1)&(K156>G0|K157>1)))] ])&!(exists(G0:Int)[G0>=0&! (Ch(G0,0)&(K156>G0|K157>0))&(Ch(G0,1)&(K156>G0|K157>1))])) ]
2019-10-14 22:48:20,082 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,0)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(0,G0)])&!(exists(G0:Int)[G0>=0&Ch(G0,G0)&G0 >= 1])
 f2:forall(K156:Int,K157:Int)[ Ch(K156,K157)&turn(p2)&K156>=0&K156<xlen()&K157>=0&K157<ylen()=>((( !(Ch(0,0)&(K156>0|K157>0)) ) => ( !(Ch(0,0)&(K156>0|K157>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K156>0|K157>G0))&(!turn(p2))])&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K156>0|K157>G0))&! (Ch(1,0)&(K156>1|K157>0))&! (Ch(0,1)&(K156>0|K157>1))])&!(exists(G0:Int)[G0>=0&(Ch(1,0)&(K156>1|K157>0))&(Ch(G0,1)&(K156>G0|K157>1))&! (Ch(1,1)&(K156>1|K157>1))])&!(exists(G0:Int)[ exists(K158:Int)[ (xlen()=K158)&(G0>=0& K158 > G0&G0 > 1&! (Ch(G0,1)&(K156>G0|K157>1)))] ])&!(exists(G0:Int)[G0>=0&! (Ch(G0,0)&(K156>G0|K157>0))&(Ch(G0,1)&(K156>G0|K157>1))])) ]
2019-10-14 22:48:20,121 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,0)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(0,G0)])&!(exists(G0:Int)[G0>=0&Ch(G0,G0)&G0 >= 1])
 f2:forall(K156:Int,K157:Int)[ Ch(K156,K157)&turn(p2)&K156>=0&K156<xlen()&K157>=0&K157<ylen()=>((( !(Ch(0,0)&(K156>0|K157>0)) ) => ( !(Ch(0,0)&(K156>0|K157>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K156>0|K157>G0))&(!turn(p2))])&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K156>0|K157>G0))&! (Ch(1,0)&(K156>1|K157>0))&! (Ch(0,1)&(K156>0|K157>1))])&!(exists(G0:Int)[G0>=0&(Ch(1,0)&(K156>1|K157>0))&(Ch(G0,1)&(K156>G0|K157>1))&! (Ch(1,1)&(K156>1|K157>1))])&!(exists(G0:Int)[ exists(K158:Int)[ (xlen()=K158)&(G0>=0& K158 > G0&G0 > 1&! (Ch(G0,1)&(K156>G0|K157>1)))] ])&!(exists(G0:Int)[G0>=0&! (Ch(G0,0)&(K156>G0|K157>0))&(Ch(G0,1)&(K156>G0|K157>1))])) ]
2019-10-14 22:48:20,266 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&turn(p2)])&!(turn(p2))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(1,0)&! Ch(0,1)])&!(exists(G0:Int)[G0>=0&Ch(1,0)&Ch(G0,1)&! Ch(1,1)])&!(exists(G0:Int)[G0>=0&xlen() > G0&G0 > 1&! Ch(G0,1)])&!(exists(G0:Int,Y11:Int)[G0>=0&Y11>=0&! Ch(G0,0)&Ch(G0,Y11)])
 f2:!(!Ch(0,0))=>(exists(K164:Int,K165:Int)[ (Ch(K164,K165)&turn(p1)&K164>=0&K164<xlen()&K165>=0&K165<ylen())&((( !(Ch(0,0)&(K164>0|K165>0)) ) => ( !(Ch(0,0)&(K164>0|K165>0))&(!turn(p1)) ))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K164>G0|K165>G1))&! (Ch(G1,0)&(K164>G1|K165>0))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K164>G0|K165>G1))&! (Ch(0,G0)&(K164>0|K165>G0))])&!(exists(G0:Int)[G0>=0&(Ch(G0,G0)&(K164>G0|K165>G0))&! G0 = 0])) ])
2019-10-14 22:48:30,381 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,0)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(0,G0)])&!(exists(G0:Int)[G0>=0&Ch(G0,G0)&! G0 = 0])
 f2:forall(K161:Int,K162:Int)[ Ch(K161,K162)&turn(p2)&K161>=0&K161<xlen()&K162>=0&K162<ylen()=>((( !(Ch(0,0)&(K161>0|K162>0)) ) => ( !(Ch(0,0)&(K161>0|K162>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K161>0|K162>G0))&(!turn(p2))])&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K161>0|K162>G0))&! (Ch(1,0)&(K161>1|K162>0))&! (Ch(0,1)&(K161>0|K162>1))])&!(exists(G0:Int)[G0>=0&(Ch(1,0)&(K161>1|K162>0))&(Ch(G0,1)&(K161>G0|K162>1))&! (Ch(1,1)&(K161>1|K162>1))])&!(exists(G0:Int)[ exists(K163:Int)[ (xlen()=K163)&(G0>=0& K163 > G0&G0 > 1&! (Ch(G0,1)&(K161>G0|K162>1)))] ])&!(exists(G0:Int,Y11:Int)[G0>=0&Y11>=0&! (Ch(G0,0)&(K161>G0|K162>0))&(Ch(G0,Y11)&(K161>G0|K162>Y11))])) ]
2019-10-14 22:48:30,431 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,0)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(0,G0)])&!(exists(G0:Int)[G0>=0&Ch(G0,G0)&! G0 = 0])
 f2:forall(K161:Int,K162:Int)[ Ch(K161,K162)&turn(p2)&K161>=0&K161<xlen()&K162>=0&K162<ylen()=>((( !(Ch(0,0)&(K161>0|K162>0)) ) => ( !(Ch(0,0)&(K161>0|K162>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K161>0|K162>G0))&(!turn(p2))])&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K161>0|K162>G0))&! (Ch(1,0)&(K161>1|K162>0))&! (Ch(0,1)&(K161>0|K162>1))])&!(exists(G0:Int)[G0>=0&(Ch(1,0)&(K161>1|K162>0))&(Ch(G0,1)&(K161>G0|K162>1))&! (Ch(1,1)&(K161>1|K162>1))])&!(exists(G0:Int)[ exists(K163:Int)[ (xlen()=K163)&(G0>=0& K163 > G0&G0 > 1&! (Ch(G0,1)&(K161>G0|K162>1)))] ])&!(exists(G0:Int,Y11:Int)[G0>=0&Y11>=0&! (Ch(G0,0)&(K161>G0|K162>0))&(Ch(G0,Y11)&(K161>G0|K162>Y11))])) ]
2019-10-14 22:48:30,468 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,0)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(0,G0)])&!(exists(G0:Int)[G0>=0&Ch(G0,G0)&! G0 = 0])
 f2:forall(K161:Int,K162:Int)[ Ch(K161,K162)&turn(p2)&K161>=0&K161<xlen()&K162>=0&K162<ylen()=>((( !(Ch(0,0)&(K161>0|K162>0)) ) => ( !(Ch(0,0)&(K161>0|K162>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K161>0|K162>G0))&(!turn(p2))])&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K161>0|K162>G0))&! (Ch(1,0)&(K161>1|K162>0))&! (Ch(0,1)&(K161>0|K162>1))])&!(exists(G0:Int)[G0>=0&(Ch(1,0)&(K161>1|K162>0))&(Ch(G0,1)&(K161>G0|K162>1))&! (Ch(1,1)&(K161>1|K162>1))])&!(exists(G0:Int)[ exists(K163:Int)[ (xlen()=K163)&(G0>=0& K163 > G0&G0 > 1&! (Ch(G0,1)&(K161>G0|K162>1)))] ])&!(exists(G0:Int,Y11:Int)[G0>=0&Y11>=0&! (Ch(G0,0)&(K161>G0|K162>0))&(Ch(G0,Y11)&(K161>G0|K162>Y11))])) ]
2019-10-14 22:48:30,628 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&turn(p2)])&!(turn(p2))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(1,0)&! Ch(0,1)])&!(exists(G0:Int)[G0>=0&Ch(1,0)&Ch(G0,1)&! Ch(1,1)])&!(exists(G0:Int)[G0>=0&xlen() > G0&G0 > 1&! Ch(G0,1)])&!(exists(G0:Int)[G0>=0&! Ch(G0,G0)&Ch(G0,1)])
 f2:!(!Ch(0,0))=>(exists(K169:Int,K170:Int)[ (Ch(K169,K170)&turn(p1)&K169>=0&K169<xlen()&K170>=0&K170<ylen())&((( !(Ch(0,0)&(K169>0|K170>0)) ) => ( !(Ch(0,0)&(K169>0|K170>0))&(!turn(p1)) ))&!((Ch(1,1)&(K169>1|K170>1)))&!(exists(G0:Int,G1:Int,G2:Int)[G0>=0&G1>=0&G2>=0&(Ch(G0,G1)&(K169>G0|K170>G1))&G0 >= G2&! (Ch(G1,G2)&(K169>G1|K170>G2))])) ])
2019-10-14 22:48:33,219 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&turn(p2)])&!(turn(p2))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(1,0)&! Ch(0,1)])&!(exists(G0:Int)[G0>=0&Ch(1,0)&Ch(G0,1)&! Ch(1,1)])&!(exists(G0:Int)[G0>=0&xlen() > G0&G0 > 1&! Ch(G0,1)])&!(exists(G0:Int)[G0>=0&! Ch(G0,G0)&Ch(G0,1)])
 f2:!(!Ch(0,0))=>(exists(K169:Int,K170:Int)[ (Ch(K169,K170)&turn(p1)&K169>=0&K169<xlen()&K170>=0&K170<ylen())&((( !(Ch(0,0)&(K169>0|K170>0)) ) => ( !(Ch(0,0)&(K169>0|K170>0))&(!turn(p1)) ))&!((Ch(1,1)&(K169>1|K170>1)))&!(exists(G0:Int,G1:Int,G2:Int)[G0>=0&G1>=0&G2>=0&(Ch(G0,G1)&(K169>G0|K170>G1))&G0 >= G2&! (Ch(G1,G2)&(K169>G1|K170>G2))])) ])
2019-10-14 22:48:33,268 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&turn(p2)])&!(turn(p2))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(1,0)&! Ch(0,1)])&!(exists(G0:Int)[G0>=0&Ch(1,0)&Ch(G0,1)&! Ch(1,1)])&!(exists(G0:Int)[G0>=0&xlen() > G0&G0 > 1&! Ch(G0,1)])&!(exists(G0:Int)[G0>=0&! Ch(G0,G0)&Ch(G0,1)])
 f2:!(!Ch(0,0))=>(exists(K169:Int,K170:Int)[ (Ch(K169,K170)&turn(p1)&K169>=0&K169<xlen()&K170>=0&K170<ylen())&((( !(Ch(0,0)&(K169>0|K170>0)) ) => ( !(Ch(0,0)&(K169>0|K170>0))&(!turn(p1)) ))&!((Ch(1,1)&(K169>1|K170>1)))&!(exists(G0:Int,G1:Int,G2:Int)[G0>=0&G1>=0&G2>=0&(Ch(G0,G1)&(K169>G0|K170>G1))&G0 >= G2&! (Ch(G1,G2)&(K169>G1|K170>G2))])) ])
2019-10-14 22:48:33,328 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(Ch(1,1))&!(exists(G0:Int,G1:Int,G2:Int)[G0>=0&G1>=0&G2>=0&Ch(G0,G1)&G0 >= G2&! Ch(G1,G2)])
 f2:forall(K166:Int,K167:Int)[ Ch(K166,K167)&turn(p2)&K166>=0&K166<xlen()&K167>=0&K167<ylen()=>((( !(Ch(0,0)&(K166>0|K167>0)) ) => ( !(Ch(0,0)&(K166>0|K167>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K166>0|K167>G0))&(!turn(p2))])&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K166>0|K167>G0))&! (Ch(1,0)&(K166>1|K167>0))&! (Ch(0,1)&(K166>0|K167>1))])&!(exists(G0:Int)[G0>=0&(Ch(1,0)&(K166>1|K167>0))&(Ch(G0,1)&(K166>G0|K167>1))&! (Ch(1,1)&(K166>1|K167>1))])&!(exists(G0:Int)[ exists(K168:Int)[ (xlen()=K168)&(G0>=0& K168 > G0&G0 > 1&! (Ch(G0,1)&(K166>G0|K167>1)))] ])&!(exists(G0:Int)[G0>=0&! (Ch(G0,G0)&(K166>G0|K167>G0))&(Ch(G0,1)&(K166>G0|K167>1))])) ]
2019-10-14 22:48:33,380 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(Ch(1,1))&!(exists(G0:Int,G1:Int,G2:Int)[G0>=0&G1>=0&G2>=0&Ch(G0,G1)&G0 >= G2&! Ch(G1,G2)])
 f2:forall(K166:Int,K167:Int)[ Ch(K166,K167)&turn(p2)&K166>=0&K166<xlen()&K167>=0&K167<ylen()=>((( !(Ch(0,0)&(K166>0|K167>0)) ) => ( !(Ch(0,0)&(K166>0|K167>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K166>0|K167>G0))&(!turn(p2))])&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K166>0|K167>G0))&! (Ch(1,0)&(K166>1|K167>0))&! (Ch(0,1)&(K166>0|K167>1))])&!(exists(G0:Int)[G0>=0&(Ch(1,0)&(K166>1|K167>0))&(Ch(G0,1)&(K166>G0|K167>1))&! (Ch(1,1)&(K166>1|K167>1))])&!(exists(G0:Int)[ exists(K168:Int)[ (xlen()=K168)&(G0>=0& K168 > G0&G0 > 1&! (Ch(G0,1)&(K166>G0|K167>1)))] ])&!(exists(G0:Int)[G0>=0&! (Ch(G0,G0)&(K166>G0|K167>G0))&(Ch(G0,1)&(K166>G0|K167>1))])) ]
2019-10-14 22:48:33,417 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(Ch(1,1))&!(exists(G0:Int,G1:Int,G2:Int)[G0>=0&G1>=0&G2>=0&Ch(G0,G1)&G0 >= G2&! Ch(G1,G2)])
 f2:forall(K166:Int,K167:Int)[ Ch(K166,K167)&turn(p2)&K166>=0&K166<xlen()&K167>=0&K167<ylen()=>((( !(Ch(0,0)&(K166>0|K167>0)) ) => ( !(Ch(0,0)&(K166>0|K167>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K166>0|K167>G0))&(!turn(p2))])&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K166>0|K167>G0))&! (Ch(1,0)&(K166>1|K167>0))&! (Ch(0,1)&(K166>0|K167>1))])&!(exists(G0:Int)[G0>=0&(Ch(1,0)&(K166>1|K167>0))&(Ch(G0,1)&(K166>G0|K167>1))&! (Ch(1,1)&(K166>1|K167>1))])&!(exists(G0:Int)[ exists(K168:Int)[ (xlen()=K168)&(G0>=0& K168 > G0&G0 > 1&! (Ch(G0,1)&(K166>G0|K167>1)))] ])&!(exists(G0:Int)[G0>=0&! (Ch(G0,G0)&(K166>G0|K167>G0))&(Ch(G0,1)&(K166>G0|K167>1))])) ]
2019-10-14 22:48:33,725 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(3>=0&3<xlen()&0>=0&0<ylen()=>Ch(3,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(3>=0&3<xlen()&1>=0&1<ylen()=>Ch(3,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2))&(3>=0&3<xlen()&2>=0&2<ylen()=>Ch(3,2))&(0>=0&0<xlen()&3>=0&3<ylen()=>Ch(0,3))&(1>=0&1<xlen()&3>=0&3<ylen()=>Ch(1,3))&(2>=0&2<xlen()&3>=0&3<ylen()=>Ch(2,3))&(3>=0&3<xlen()&3>=0&3<ylen()=>Ch(3,3)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)
 f2:false
2019-10-14 22:48:34,735 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(3>=0&3<xlen()&0>=0&0<ylen()=>Ch(3,0))&(4>=0&4<xlen()&0>=0&0<ylen()=>Ch(4,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(3>=0&3<xlen()&1>=0&1<ylen()=>Ch(3,1))&(4>=0&4<xlen()&1>=0&1<ylen()=>Ch(4,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2))&(3>=0&3<xlen()&2>=0&2<ylen()=>Ch(3,2))&(4>=0&4<xlen()&2>=0&2<ylen()=>Ch(4,2))&(0>=0&0<xlen()&3>=0&3<ylen()=>Ch(0,3))&(1>=0&1<xlen()&3>=0&3<ylen()=>Ch(1,3))&(2>=0&2<xlen()&3>=0&3<ylen()=>Ch(2,3))&(3>=0&3<xlen()&3>=0&3<ylen()=>Ch(3,3))&(4>=0&4<xlen()&3>=0&3<ylen()=>Ch(4,3))&(0>=0&0<xlen()&4>=0&4<ylen()=>Ch(0,4))&(1>=0&1<xlen()&4>=0&4<ylen()=>Ch(1,4))&(2>=0&2<xlen()&4>=0&4<ylen()=>Ch(2,4))&(3>=0&3<xlen()&4>=0&4<ylen()=>Ch(3,4))&(4>=0&4<xlen()&4>=0&4<ylen()=>Ch(4,4)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)
 f2:false
2019-10-14 22:50:08,670 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&turn(p2)])&!(turn(p2))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(1,0)&! Ch(0,1)])&!(exists(G0:Int)[G0>=0&Ch(1,0)&Ch(G0,1)&! Ch(1,1)])&!(exists(G0:Int)[G0>=0&xlen() > G0&G0 > 1&! Ch(G0,1)])&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(0,G0)])
 f2:!(!Ch(0,0))=>(exists(K174:Int,K175:Int)[ (Ch(K174,K175)&turn(p1)&K174>=0&K174<xlen()&K175>=0&K175<ylen())&((( !(Ch(0,0)&(K174>0|K175>0)) ) => ( !(Ch(0,0)&(K174>0|K175>0))&(!turn(p1)) ))&!((Ch(1,1)&(K174>1|K175>1)))&!(exists(G0:Int,G1:Int,G2:Int)[G0>=0&G1>=0&G2>=0&(Ch(G0,G1)&(K174>G0|K175>G1))&G0 >= G2&! (Ch(G1,G2)&(K174>G1|K175>G2))])&!(exists(G0:Int,G1:Int)[ exists(K176:Int)[ (xlen()=K176)&(G0>=0&G1>=0&! G0 >= G1&! (Ch(0,G0)&(K174>0|K175>G0))& K176 > G1)] ])) ])
2019-10-14 22:50:08,750 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&turn(p2)])&!(turn(p2))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(1,0)&! Ch(0,1)])&!(exists(G0:Int)[G0>=0&Ch(1,0)&Ch(G0,1)&! Ch(1,1)])&!(exists(G0:Int)[G0>=0&xlen() > G0&G0 > 1&! Ch(G0,1)])&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(0,G0)])
 f2:!(!Ch(0,0))=>(exists(K174:Int,K175:Int)[ (Ch(K174,K175)&turn(p1)&K174>=0&K174<xlen()&K175>=0&K175<ylen())&((( !(Ch(0,0)&(K174>0|K175>0)) ) => ( !(Ch(0,0)&(K174>0|K175>0))&(!turn(p1)) ))&!((Ch(1,1)&(K174>1|K175>1)))&!(exists(G0:Int,G1:Int,G2:Int)[G0>=0&G1>=0&G2>=0&(Ch(G0,G1)&(K174>G0|K175>G1))&G0 >= G2&! (Ch(G1,G2)&(K174>G1|K175>G2))])&!(exists(G0:Int,G1:Int)[ exists(K176:Int)[ (xlen()=K176)&(G0>=0&G1>=0&! G0 >= G1&! (Ch(0,G0)&(K174>0|K175>G0))& K176 > G1)] ])) ])
2019-10-14 22:50:08,791 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&turn(p2)])&!(turn(p2))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(1,0)&! Ch(0,1)])&!(exists(G0:Int)[G0>=0&Ch(1,0)&Ch(G0,1)&! Ch(1,1)])&!(exists(G0:Int)[G0>=0&xlen() > G0&G0 > 1&! Ch(G0,1)])&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(0,G0)])
 f2:!(!Ch(0,0))=>(exists(K174:Int,K175:Int)[ (Ch(K174,K175)&turn(p1)&K174>=0&K174<xlen()&K175>=0&K175<ylen())&((( !(Ch(0,0)&(K174>0|K175>0)) ) => ( !(Ch(0,0)&(K174>0|K175>0))&(!turn(p1)) ))&!((Ch(1,1)&(K174>1|K175>1)))&!(exists(G0:Int,G1:Int,G2:Int)[G0>=0&G1>=0&G2>=0&(Ch(G0,G1)&(K174>G0|K175>G1))&G0 >= G2&! (Ch(G1,G2)&(K174>G1|K175>G2))])&!(exists(G0:Int,G1:Int)[ exists(K176:Int)[ (xlen()=K176)&(G0>=0&G1>=0&! G0 >= G1&! (Ch(0,G0)&(K174>0|K175>G0))& K176 > G1)] ])) ])
2019-10-14 22:50:08,894 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(Ch(1,1))&!(exists(G0:Int,G1:Int,G2:Int)[G0>=0&G1>=0&G2>=0&Ch(G0,G1)&G0 >= G2&! Ch(G1,G2)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! G0 >= G1&! Ch(0,G0)&xlen() > G1])
 f2:forall(K171:Int,K172:Int)[ Ch(K171,K172)&turn(p2)&K171>=0&K171<xlen()&K172>=0&K172<ylen()=>((( !(Ch(0,0)&(K171>0|K172>0)) ) => ( !(Ch(0,0)&(K171>0|K172>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K171>0|K172>G0))&(!turn(p2))])&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K171>0|K172>G0))&! (Ch(1,0)&(K171>1|K172>0))&! (Ch(0,1)&(K171>0|K172>1))])&!(exists(G0:Int)[G0>=0&(Ch(1,0)&(K171>1|K172>0))&(Ch(G0,1)&(K171>G0|K172>1))&! (Ch(1,1)&(K171>1|K172>1))])&!(exists(G0:Int)[ exists(K173:Int)[ (xlen()=K173)&(G0>=0& K173 > G0&G0 > 1&! (Ch(G0,1)&(K171>G0|K172>1)))] ])&!(exists(G0:Int)[G0>=0&(Ch(G0,1)&(K171>G0|K172>1))&! (Ch(0,G0)&(K171>0|K172>G0))])) ]
2019-10-14 22:50:08,946 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(Ch(1,1))&!(exists(G0:Int,G1:Int,G2:Int)[G0>=0&G1>=0&G2>=0&Ch(G0,G1)&G0 >= G2&! Ch(G1,G2)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! G0 >= G1&! Ch(0,G0)&xlen() > G1])
 f2:forall(K171:Int,K172:Int)[ Ch(K171,K172)&turn(p2)&K171>=0&K171<xlen()&K172>=0&K172<ylen()=>((( !(Ch(0,0)&(K171>0|K172>0)) ) => ( !(Ch(0,0)&(K171>0|K172>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K171>0|K172>G0))&(!turn(p2))])&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K171>0|K172>G0))&! (Ch(1,0)&(K171>1|K172>0))&! (Ch(0,1)&(K171>0|K172>1))])&!(exists(G0:Int)[G0>=0&(Ch(1,0)&(K171>1|K172>0))&(Ch(G0,1)&(K171>G0|K172>1))&! (Ch(1,1)&(K171>1|K172>1))])&!(exists(G0:Int)[ exists(K173:Int)[ (xlen()=K173)&(G0>=0& K173 > G0&G0 > 1&! (Ch(G0,1)&(K171>G0|K172>1)))] ])&!(exists(G0:Int)[G0>=0&(Ch(G0,1)&(K171>G0|K172>1))&! (Ch(0,G0)&(K171>0|K172>G0))])) ]
2019-10-14 22:50:08,984 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(Ch(1,1))&!(exists(G0:Int,G1:Int,G2:Int)[G0>=0&G1>=0&G2>=0&Ch(G0,G1)&G0 >= G2&! Ch(G1,G2)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! G0 >= G1&! Ch(0,G0)&xlen() > G1])
 f2:forall(K171:Int,K172:Int)[ Ch(K171,K172)&turn(p2)&K171>=0&K171<xlen()&K172>=0&K172<ylen()=>((( !(Ch(0,0)&(K171>0|K172>0)) ) => ( !(Ch(0,0)&(K171>0|K172>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K171>0|K172>G0))&(!turn(p2))])&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K171>0|K172>G0))&! (Ch(1,0)&(K171>1|K172>0))&! (Ch(0,1)&(K171>0|K172>1))])&!(exists(G0:Int)[G0>=0&(Ch(1,0)&(K171>1|K172>0))&(Ch(G0,1)&(K171>G0|K172>1))&! (Ch(1,1)&(K171>1|K172>1))])&!(exists(G0:Int)[ exists(K173:Int)[ (xlen()=K173)&(G0>=0& K173 > G0&G0 > 1&! (Ch(G0,1)&(K171>G0|K172>1)))] ])&!(exists(G0:Int)[G0>=0&(Ch(G0,1)&(K171>G0|K172>1))&! (Ch(0,G0)&(K171>0|K172>G0))])) ]
2019-10-14 22:50:09,732 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(3>=0&3<xlen()&0>=0&0<ylen()=>Ch(3,0))&(4>=0&4<xlen()&0>=0&0<ylen()=>Ch(4,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(3>=0&3<xlen()&1>=0&1<ylen()=>Ch(3,1))&(4>=0&4<xlen()&1>=0&1<ylen()=>Ch(4,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2))&(3>=0&3<xlen()&2>=0&2<ylen()=>Ch(3,2))&(4>=0&4<xlen()&2>=0&2<ylen()=>Ch(4,2))&(0>=0&0<xlen()&3>=0&3<ylen()=>Ch(0,3))&(1>=0&1<xlen()&3>=0&3<ylen()=>Ch(1,3))&(2>=0&2<xlen()&3>=0&3<ylen()=>Ch(2,3))&(3>=0&3<xlen()&3>=0&3<ylen()=>Ch(3,3))&(4>=0&4<xlen()&3>=0&3<ylen()=>Ch(4,3))&(0>=0&0<xlen()&4>=0&4<ylen()=>Ch(0,4))&(1>=0&1<xlen()&4>=0&4<ylen()=>Ch(1,4))&(2>=0&2<xlen()&4>=0&4<ylen()=>Ch(2,4))&(3>=0&3<xlen()&4>=0&4<ylen()=>Ch(3,4))&(4>=0&4<xlen()&4>=0&4<ylen()=>Ch(4,4)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)
 f2:false
2019-10-14 22:50:11,163 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(3>=0&3<xlen()&0>=0&0<ylen()=>Ch(3,0))&(4>=0&4<xlen()&0>=0&0<ylen()=>Ch(4,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(3>=0&3<xlen()&1>=0&1<ylen()=>Ch(3,1))&(4>=0&4<xlen()&1>=0&1<ylen()=>Ch(4,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2))&(3>=0&3<xlen()&2>=0&2<ylen()=>Ch(3,2))&(4>=0&4<xlen()&2>=0&2<ylen()=>Ch(4,2))&(0>=0&0<xlen()&3>=0&3<ylen()=>Ch(0,3))&(1>=0&1<xlen()&3>=0&3<ylen()=>Ch(1,3))&(2>=0&2<xlen()&3>=0&3<ylen()=>Ch(2,3))&(3>=0&3<xlen()&3>=0&3<ylen()=>Ch(3,3))&(4>=0&4<xlen()&3>=0&3<ylen()=>Ch(4,3))&(0>=0&0<xlen()&4>=0&4<ylen()=>Ch(0,4))&(1>=0&1<xlen()&4>=0&4<ylen()=>Ch(1,4))&(2>=0&2<xlen()&4>=0&4<ylen()=>Ch(2,4))&(3>=0&3<xlen()&4>=0&4<ylen()=>Ch(3,4))&(4>=0&4<xlen()&4>=0&4<ylen()=>Ch(4,4)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)
 f2:false
2019-10-14 22:50:38,115 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&turn(p2)])&!(turn(p2))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(1,0)&! Ch(0,1)])&!(exists(G0:Int)[G0>=0&Ch(1,0)&Ch(G0,1)&! Ch(1,1)])&!(exists(G0:Int)[G0>=0&xlen() > G0&G0 > 1&! Ch(G0,1)])&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(G0,0)])
 f2:!(!Ch(0,0))=>(exists(K180:Int,K181:Int)[ (Ch(K180,K181)&turn(p1)&K180>=0&K180<xlen()&K181>=0&K181<ylen())&((( !(Ch(0,0)&(K180>0|K181>0)) ) => ( !(Ch(0,0)&(K180>0|K181>0))&(!turn(p1)) ))&!((Ch(1,1)&(K180>1|K181>1)))&!(exists(G0:Int,G1:Int,G2:Int)[G0>=0&G1>=0&G2>=0&(Ch(G0,G1)&(K180>G0|K181>G1))&G0 >= G2&! (Ch(G1,G2)&(K180>G1|K181>G2))])&!(exists(G0:Int,G1:Int)[ exists(K182:Int)[ (xlen()=K182)&(G0>=0&G1>=0&! G0 >= G1& K182 > G1&G0 > 1& K182 > G0)] ])) ])
2019-10-14 22:50:38,222 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&turn(p2)])&!(turn(p2))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(1,0)&! Ch(0,1)])&!(exists(G0:Int)[G0>=0&Ch(1,0)&Ch(G0,1)&! Ch(1,1)])&!(exists(G0:Int)[G0>=0&xlen() > G0&G0 > 1&! Ch(G0,1)])&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(G0,0)])
 f2:!(!Ch(0,0))=>(exists(K180:Int,K181:Int)[ (Ch(K180,K181)&turn(p1)&K180>=0&K180<xlen()&K181>=0&K181<ylen())&((( !(Ch(0,0)&(K180>0|K181>0)) ) => ( !(Ch(0,0)&(K180>0|K181>0))&(!turn(p1)) ))&!((Ch(1,1)&(K180>1|K181>1)))&!(exists(G0:Int,G1:Int,G2:Int)[G0>=0&G1>=0&G2>=0&(Ch(G0,G1)&(K180>G0|K181>G1))&G0 >= G2&! (Ch(G1,G2)&(K180>G1|K181>G2))])&!(exists(G0:Int,G1:Int)[ exists(K182:Int)[ (xlen()=K182)&(G0>=0&G1>=0&! G0 >= G1& K182 > G1&G0 > 1& K182 > G0)] ])) ])
2019-10-14 22:50:38,260 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&turn(p2)])&!(turn(p2))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(1,0)&! Ch(0,1)])&!(exists(G0:Int)[G0>=0&Ch(1,0)&Ch(G0,1)&! Ch(1,1)])&!(exists(G0:Int)[G0>=0&xlen() > G0&G0 > 1&! Ch(G0,1)])&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(G0,0)])
 f2:!(!Ch(0,0))=>(exists(K180:Int,K181:Int)[ (Ch(K180,K181)&turn(p1)&K180>=0&K180<xlen()&K181>=0&K181<ylen())&((( !(Ch(0,0)&(K180>0|K181>0)) ) => ( !(Ch(0,0)&(K180>0|K181>0))&(!turn(p1)) ))&!((Ch(1,1)&(K180>1|K181>1)))&!(exists(G0:Int,G1:Int,G2:Int)[G0>=0&G1>=0&G2>=0&(Ch(G0,G1)&(K180>G0|K181>G1))&G0 >= G2&! (Ch(G1,G2)&(K180>G1|K181>G2))])&!(exists(G0:Int,G1:Int)[ exists(K182:Int)[ (xlen()=K182)&(G0>=0&G1>=0&! G0 >= G1& K182 > G1&G0 > 1& K182 > G0)] ])) ])
2019-10-14 22:50:38,346 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(Ch(1,1))&!(exists(G0:Int,G1:Int,G2:Int)[G0>=0&G1>=0&G2>=0&Ch(G0,G1)&G0 >= G2&! Ch(G1,G2)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! G0 >= G1&xlen() > G1&G0 > 1&xlen() > G0])
 f2:forall(K177:Int,K178:Int)[ Ch(K177,K178)&turn(p2)&K177>=0&K177<xlen()&K178>=0&K178<ylen()=>((( !(Ch(0,0)&(K177>0|K178>0)) ) => ( !(Ch(0,0)&(K177>0|K178>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K177>0|K178>G0))&(!turn(p2))])&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K177>0|K178>G0))&! (Ch(1,0)&(K177>1|K178>0))&! (Ch(0,1)&(K177>0|K178>1))])&!(exists(G0:Int)[G0>=0&(Ch(1,0)&(K177>1|K178>0))&(Ch(G0,1)&(K177>G0|K178>1))&! (Ch(1,1)&(K177>1|K178>1))])&!(exists(G0:Int)[ exists(K179:Int)[ (xlen()=K179)&(G0>=0& K179 > G0&G0 > 1&! (Ch(G0,1)&(K177>G0|K178>1)))] ])&!(exists(G0:Int)[G0>=0&(Ch(G0,1)&(K177>G0|K178>1))&! (Ch(G0,0)&(K177>G0|K178>0))])) ]
2019-10-14 22:50:38,395 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(Ch(1,1))&!(exists(G0:Int,G1:Int,G2:Int)[G0>=0&G1>=0&G2>=0&Ch(G0,G1)&G0 >= G2&! Ch(G1,G2)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! G0 >= G1&xlen() > G1&G0 > 1&xlen() > G0])
 f2:forall(K177:Int,K178:Int)[ Ch(K177,K178)&turn(p2)&K177>=0&K177<xlen()&K178>=0&K178<ylen()=>((( !(Ch(0,0)&(K177>0|K178>0)) ) => ( !(Ch(0,0)&(K177>0|K178>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K177>0|K178>G0))&(!turn(p2))])&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K177>0|K178>G0))&! (Ch(1,0)&(K177>1|K178>0))&! (Ch(0,1)&(K177>0|K178>1))])&!(exists(G0:Int)[G0>=0&(Ch(1,0)&(K177>1|K178>0))&(Ch(G0,1)&(K177>G0|K178>1))&! (Ch(1,1)&(K177>1|K178>1))])&!(exists(G0:Int)[ exists(K179:Int)[ (xlen()=K179)&(G0>=0& K179 > G0&G0 > 1&! (Ch(G0,1)&(K177>G0|K178>1)))] ])&!(exists(G0:Int)[G0>=0&(Ch(G0,1)&(K177>G0|K178>1))&! (Ch(G0,0)&(K177>G0|K178>0))])) ]
2019-10-14 22:50:38,433 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(Ch(1,1))&!(exists(G0:Int,G1:Int,G2:Int)[G0>=0&G1>=0&G2>=0&Ch(G0,G1)&G0 >= G2&! Ch(G1,G2)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! G0 >= G1&xlen() > G1&G0 > 1&xlen() > G0])
 f2:forall(K177:Int,K178:Int)[ Ch(K177,K178)&turn(p2)&K177>=0&K177<xlen()&K178>=0&K178<ylen()=>((( !(Ch(0,0)&(K177>0|K178>0)) ) => ( !(Ch(0,0)&(K177>0|K178>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K177>0|K178>G0))&(!turn(p2))])&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K177>0|K178>G0))&! (Ch(1,0)&(K177>1|K178>0))&! (Ch(0,1)&(K177>0|K178>1))])&!(exists(G0:Int)[G0>=0&(Ch(1,0)&(K177>1|K178>0))&(Ch(G0,1)&(K177>G0|K178>1))&! (Ch(1,1)&(K177>1|K178>1))])&!(exists(G0:Int)[ exists(K179:Int)[ (xlen()=K179)&(G0>=0& K179 > G0&G0 > 1&! (Ch(G0,1)&(K177>G0|K178>1)))] ])&!(exists(G0:Int)[G0>=0&(Ch(G0,1)&(K177>G0|K178>1))&! (Ch(G0,0)&(K177>G0|K178>0))])) ]
2019-10-14 22:50:39,353 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(3>=0&3<xlen()&0>=0&0<ylen()=>Ch(3,0))&(4>=0&4<xlen()&0>=0&0<ylen()=>Ch(4,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(3>=0&3<xlen()&1>=0&1<ylen()=>Ch(3,1))&(4>=0&4<xlen()&1>=0&1<ylen()=>Ch(4,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2))&(3>=0&3<xlen()&2>=0&2<ylen()=>Ch(3,2))&(4>=0&4<xlen()&2>=0&2<ylen()=>Ch(4,2))&(0>=0&0<xlen()&3>=0&3<ylen()=>Ch(0,3))&(1>=0&1<xlen()&3>=0&3<ylen()=>Ch(1,3))&(2>=0&2<xlen()&3>=0&3<ylen()=>Ch(2,3))&(3>=0&3<xlen()&3>=0&3<ylen()=>Ch(3,3))&(4>=0&4<xlen()&3>=0&3<ylen()=>Ch(4,3))&(0>=0&0<xlen()&4>=0&4<ylen()=>Ch(0,4))&(1>=0&1<xlen()&4>=0&4<ylen()=>Ch(1,4))&(2>=0&2<xlen()&4>=0&4<ylen()=>Ch(2,4))&(3>=0&3<xlen()&4>=0&4<ylen()=>Ch(3,4))&(4>=0&4<xlen()&4>=0&4<ylen()=>Ch(4,4)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)
 f2:false
2019-10-14 22:50:40,353 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(3>=0&3<xlen()&0>=0&0<ylen()=>Ch(3,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(3>=0&3<xlen()&1>=0&1<ylen()=>Ch(3,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2))&(3>=0&3<xlen()&2>=0&2<ylen()=>Ch(3,2))&(0>=0&0<xlen()&3>=0&3<ylen()=>Ch(0,3))&(1>=0&1<xlen()&3>=0&3<ylen()=>Ch(1,3))&(2>=0&2<xlen()&3>=0&3<ylen()=>Ch(2,3))&(3>=0&3<xlen()&3>=0&3<ylen()=>Ch(3,3)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)
 f2:false
2019-10-14 22:52:24,510 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:!(!Ch(0,0))=>(exists(K185:Int,K186:Int)[ (Ch(K185,K186)&turn(p1)&K185>=0&K185<xlen()&K186>=0&K186<ylen())&(( !(Ch(0,0)&(K185>0|K186>0)) ) => ( !(Ch(0,0)&(K185>0|K186>0))&(!turn(p1)) )) ])
2019-10-14 22:52:24,558 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:forall(K183:Int,K184:Int)[ Ch(K183,K184)&turn(p2)&K183>=0&K183<xlen()&K184>=0&K184<ylen()=>(( !(Ch(0,0)&(K183>0|K184>0)) ) => ( !(Ch(0,0)&(K183>0|K184>0))&(!turn(p1)) )) ]
2019-10-14 22:52:24,756 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X0:_S1)[turn(X0)])
 f2:!(!Ch(0,0))=>(exists(K189:Int,K190:Int)[ (Ch(K189,K190)&turn(p1)&K189>=0&K189<xlen()&K190>=0&K190<ylen())&(( !(Ch(0,0)&(K189>0|K190>0)) ) => ( !(Ch(0,0)&(K189>0|K190>0))&(!turn(p1)) )) ])
2019-10-14 22:52:24,790 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:forall(K187:Int,K188:Int)[ Ch(K187,K188)&turn(p2)&K187>=0&K187<xlen()&K188>=0&K188<ylen()=>((( !(Ch(0,0)&(K187>0|K188>0)) ) => ( !(Ch(0,0)&(K187>0|K188>0))&(!turn(p1)) ))&!(exists(X0:_S1)[(!turn(X0))])) ]
2019-10-14 22:52:25,089 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X0:_S1)[turn(X0)])
 f2:!(!Ch(0,0))=>(exists(K193:Int,K194:Int)[ (Ch(K193,K194)&turn(p1)&K193>=0&K193<xlen()&K194>=0&K194<ylen())&((( !(Ch(0,0)&(K193>0|K194>0)) ) => ( !(Ch(0,0)&(K193>0|K194>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(Ch(X1,1)&(K193>X1|K194>1))])) ])
2019-10-14 22:52:25,133 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(X1,1)])
 f2:forall(K191:Int,K192:Int)[ Ch(K191,K192)&turn(p2)&K191>=0&K191<xlen()&K192>=0&K192<ylen()=>((( !(Ch(0,0)&(K191>0|K192>0)) ) => ( !(Ch(0,0)&(K191>0|K192>0))&(!turn(p1)) ))&!(exists(X0:_S1)[(!turn(X0))])) ]
2019-10-14 22:52:25,185 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(X1,1)])
 f2:forall(K191:Int,K192:Int)[ Ch(K191,K192)&turn(p2)&K191>=0&K191<xlen()&K192>=0&K192<ylen()=>((( !(Ch(0,0)&(K191>0|K192>0)) ) => ( !(Ch(0,0)&(K191>0|K192>0))&(!turn(p1)) ))&!(exists(X0:_S1)[(!turn(X0))])) ]
2019-10-14 22:52:25,788 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X0:_S1)[turn(X0)])
 f2:!(!Ch(0,0))=>(exists(K197:Int,K198:Int)[ (Ch(K197,K198)&turn(p1)&K197>=0&K197<xlen()&K198>=0&K198<ylen())&((( !(Ch(0,0)&(K197>0|K198>0)) ) => ( !(Ch(0,0)&(K197>0|K198>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(Ch(X1,1)&(K197>X1|K198>1))])&!(exists(X1:Int)[X1>=0&(Ch(X1,0)&(K197>X1|K198>0))])) ])
2019-10-14 22:52:25,826 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(X1,1)])&!(exists(X1:Int)[X1>=0&Ch(X1,0)])
 f2:forall(K195:Int,K196:Int)[ Ch(K195,K196)&turn(p2)&K195>=0&K195<xlen()&K196>=0&K196<ylen()=>((( !(Ch(0,0)&(K195>0|K196>0)) ) => ( !(Ch(0,0)&(K195>0|K196>0))&(!turn(p1)) ))&!(exists(X0:_S1)[(!turn(X0))])) ]
2019-10-14 22:52:25,859 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:forall(K16:Int,K17:Int)[K16>=0&K16<xlen()&K17>=0&K17<ylen()=>Ch(K16,K17)]&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)
 f2:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X0:_S1)[turn(X0)])
2019-10-14 22:52:26,855 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:_S1)[turn(G0)&! turn(p1)])
 f2:!(!Ch(0,0))=>(exists(K201:Int,K202:Int)[ (Ch(K201,K202)&turn(p1)&K201>=0&K201<xlen()&K202>=0&K202<ylen())&((( !(Ch(0,0)&(K201>0|K202>0)) ) => ( !(Ch(0,0)&(K201>0|K202>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 1&(Ch(G0,1)&(K201>G0|K202>1))])&!(exists(G0:Int)[G0>=0&! G0 > 0&! (Ch(G0,1)&(K201>G0|K202>1))])) ])
2019-10-14 22:52:26,909 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 1&Ch(G0,1)])&!(exists(G0:Int)[G0>=0&! G0 > 0&! Ch(G0,1)])
 f2:forall(K199:Int,K200:Int)[ Ch(K199,K200)&turn(p2)&K199>=0&K199<xlen()&K200>=0&K200<ylen()=>((( !(Ch(0,0)&(K199>0|K200>0)) ) => ( !(Ch(0,0)&(K199>0|K200>0))&(!turn(p1)) ))&!(exists(G0:_S1)[(!turn(G0))&! (!turn(p1))])) ]
2019-10-14 22:52:27,451 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:_S1)[turn(G0)&! turn(p1)])&!(! Ch(1,1))
 f2:!(!Ch(0,0))=>(exists(K205:Int,K206:Int)[ (Ch(K205,K206)&turn(p1)&K205>=0&K205<xlen()&K206>=0&K206<ylen())&((( !(Ch(0,0)&(K205>0|K206>0)) ) => ( !(Ch(0,0)&(K205>0|K206>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 1&(Ch(G0,1)&(K205>G0|K206>1))])&!(exists(G0:Int)[G0>=0&! G0 > 0&! (Ch(G0,1)&(K205>G0|K206>1))])) ])
2019-10-14 22:52:27,494 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 1&Ch(G0,1)])&!(exists(G0:Int)[G0>=0&! G0 > 0&! Ch(G0,1)])
 f2:forall(K203:Int,K204:Int)[ Ch(K203,K204)&turn(p2)&K203>=0&K203<xlen()&K204>=0&K204<ylen()=>((( !(Ch(0,0)&(K203>0|K204>0)) ) => ( !(Ch(0,0)&(K203>0|K204>0))&(!turn(p1)) ))&!(exists(G0:_S1)[(!turn(G0))&! (!turn(p1))])&!(! (Ch(1,1)&(K203>1|K204>1)))) ]
2019-10-14 22:52:27,540 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 1&Ch(G0,1)])&!(exists(G0:Int)[G0>=0&! G0 > 0&! Ch(G0,1)])
 f2:forall(K203:Int,K204:Int)[ Ch(K203,K204)&turn(p2)&K203>=0&K203<xlen()&K204>=0&K204<ylen()=>((( !(Ch(0,0)&(K203>0|K204>0)) ) => ( !(Ch(0,0)&(K203>0|K204>0))&(!turn(p1)) ))&!(exists(G0:_S1)[(!turn(G0))&! (!turn(p1))])&!(! (Ch(1,1)&(K203>1|K204>1)))) ]
2019-10-14 22:52:27,681 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)
 f2:false
2019-10-14 22:52:27,907 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)
 f2:false
2019-10-14 22:52:28,587 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:_S1)[turn(G0)&! turn(p1)])
 f2:!(!Ch(0,0))=>(exists(K209:Int,K210:Int)[ (Ch(K209,K210)&turn(p1)&K209>=0&K209<xlen()&K210>=0&K210<ylen())&((( !(Ch(0,0)&(K209>0|K210>0)) ) => ( !(Ch(0,0)&(K209>0|K210>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 1&(Ch(G0,1)&(K209>G0|K210>1))])&!(exists(G0:Int)[G0>=0&! G0 > 0&! (Ch(G0,1)&(K209>G0|K210>1))])) ])
2019-10-14 22:52:28,643 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 1&Ch(G0,1)])&!(exists(G0:Int)[G0>=0&! G0 > 0&! Ch(G0,1)])
 f2:forall(K207:Int,K208:Int)[ Ch(K207,K208)&turn(p2)&K207>=0&K207<xlen()&K208>=0&K208<ylen()=>((( !(Ch(0,0)&(K207>0|K208>0)) ) => ( !(Ch(0,0)&(K207>0|K208>0))&(!turn(p1)) ))&!(exists(G0:_S1)[(!turn(G0))&! (!turn(p1))])) ]
2019-10-14 23:10:07,905 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(3>=0&3<xlen()&0>=0&0<ylen()=>Ch(3,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(3>=0&3<xlen()&1>=0&1<ylen()=>Ch(3,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2))&(3>=0&3<xlen()&2>=0&2<ylen()=>Ch(3,2))&(0>=0&0<xlen()&3>=0&3<ylen()=>Ch(0,3))&(1>=0&1<xlen()&3>=0&3<ylen()=>Ch(1,3))&(2>=0&2<xlen()&3>=0&3<ylen()=>Ch(2,3))&(3>=0&3<xlen()&3>=0&3<ylen()=>Ch(3,3)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)
 f2:false
2019-10-14 23:11:20,254 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(3>=0&3<xlen()&0>=0&0<ylen()=>Ch(3,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(3>=0&3<xlen()&1>=0&1<ylen()=>Ch(3,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2))&(3>=0&3<xlen()&2>=0&2<ylen()=>Ch(3,2))&(0>=0&0<xlen()&3>=0&3<ylen()=>Ch(0,3))&(1>=0&1<xlen()&3>=0&3<ylen()=>Ch(1,3))&(2>=0&2<xlen()&3>=0&3<ylen()=>Ch(2,3))&(3>=0&3<xlen()&3>=0&3<ylen()=>Ch(3,3)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)
 f2:false
2019-10-14 23:12:09,974 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:!(!Ch(0,0))=>(exists(K21:Int,K22:Int)[ (Ch(K21,K22)&turn(p1)&K21>=0&K21<xlen()&K22>=0&K22<ylen())&(( !(Ch(0,0)&(K21>0|K22>0)) ) => ( !(Ch(0,0)&(K21>0|K22>0))&(!turn(p1)) )) ])
2019-10-14 23:12:10,025 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:forall(K19:Int,K20:Int)[ Ch(K19,K20)&turn(p2)&K19>=0&K19<xlen()&K20>=0&K20<ylen()=>(( !(Ch(0,0)&(K19>0|K20>0)) ) => ( !(Ch(0,0)&(K19>0|K20>0))&(!turn(p1)) )) ]
2019-10-14 23:12:10,214 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(0,X1)])
 f2:!(!Ch(0,0))=>(exists(K25:Int,K26:Int)[ (Ch(K25,K26)&turn(p1)&K25>=0&K25<xlen()&K26>=0&K26<ylen())&(( !(Ch(0,0)&(K25>0|K26>0)) ) => ( !(Ch(0,0)&(K25>0|K26>0))&(!turn(p1)) )) ])
2019-10-14 23:12:10,247 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:forall(K23:Int,K24:Int)[ Ch(K23,K24)&turn(p2)&K23>=0&K23<xlen()&K24>=0&K24<ylen()=>((( !(Ch(0,0)&(K23>0|K24>0)) ) => ( !(Ch(0,0)&(K23>0|K24>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(Ch(0,X1)&(K23>0|K24>X1))])) ]
2019-10-14 23:12:10,528 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(0,X1)])
 f2:!(!Ch(0,0))=>(exists(K29:Int,K30:Int)[ (Ch(K29,K30)&turn(p1)&K29>=0&K29<xlen()&K30>=0&K30<ylen())&((( !(Ch(0,0)&(K29>0|K30>0)) ) => ( !(Ch(0,0)&(K29>0|K30>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(Ch(1,X1)&(K29>1|K30>X1))])) ])
2019-10-14 23:12:10,568 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(1,X1)])
 f2:forall(K27:Int,K28:Int)[ Ch(K27,K28)&turn(p2)&K27>=0&K27<xlen()&K28>=0&K28<ylen()=>((( !(Ch(0,0)&(K27>0|K28>0)) ) => ( !(Ch(0,0)&(K27>0|K28>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(Ch(0,X1)&(K27>0|K28>X1))])) ]
2019-10-14 23:12:10,614 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(1,X1)])
 f2:forall(K27:Int,K28:Int)[ Ch(K27,K28)&turn(p2)&K27>=0&K27<xlen()&K28>=0&K28<ylen()=>((( !(Ch(0,0)&(K27>0|K28>0)) ) => ( !(Ch(0,0)&(K27>0|K28>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(Ch(0,X1)&(K27>0|K28>X1))])) ]
2019-10-14 23:12:11,135 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(0,X1)])
 f2:!(!Ch(0,0))=>(exists(K33:Int,K34:Int)[ (Ch(K33,K34)&turn(p1)&K33>=0&K33<xlen()&K34>=0&K34<ylen())&((( !(Ch(0,0)&(K33>0|K34>0)) ) => ( !(Ch(0,0)&(K33>0|K34>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(Ch(1,X1)&(K33>1|K34>X1))])&!(exists(X1:Int)[X1>=0&(Ch(0,X1)&(K33>0|K34>X1))])) ])
2019-10-14 23:12:11,175 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(1,X1)])&!(exists(X1:Int)[X1>=0&Ch(0,X1)])
 f2:forall(K31:Int,K32:Int)[ Ch(K31,K32)&turn(p2)&K31>=0&K31<xlen()&K32>=0&K32<ylen()=>((( !(Ch(0,0)&(K31>0|K32>0)) ) => ( !(Ch(0,0)&(K31>0|K32>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(Ch(0,X1)&(K31>0|K32>X1))])) ]
2019-10-14 23:12:11,211 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:forall(K16:Int,K17:Int)[K16>=0&K16<xlen()&K17>=0&K17<ylen()=>Ch(K16,K17)]&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)
 f2:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(0,X1)])
2019-10-14 23:12:12,173 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 0&! Ch(1,G0)])
 f2:!(!Ch(0,0))=>(exists(K37:Int,K38:Int)[ (Ch(K37,K38)&turn(p1)&K37>=0&K37<xlen()&K38>=0&K38<ylen())&((( !(Ch(0,0)&(K37>0|K38>0)) ) => ( !(Ch(0,0)&(K37>0|K38>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 0&(Ch(1,G0)&(K37>1|K38>G0))])&!(exists(G0:Int)[G0>=0&G0 = 0&! (Ch(1,G0)&(K37>1|K38>G0))])) ])
2019-10-14 23:12:12,218 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 > 0&Ch(1,G0)])&!(exists(G0:Int)[G0>=0&G0 = 0&! Ch(1,G0)])
 f2:forall(K35:Int,K36:Int)[ Ch(K35,K36)&turn(p2)&K35>=0&K35<xlen()&K36>=0&K36<ylen()=>((( !(Ch(0,0)&(K35>0|K36>0)) ) => ( !(Ch(0,0)&(K35>0|K36>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 0&! (Ch(1,G0)&(K35>1|K36>G0))])) ]
2019-10-14 23:14:12,440 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(3>=0&3<xlen()&0>=0&0<ylen()=>Ch(3,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(3>=0&3<xlen()&1>=0&1<ylen()=>Ch(3,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2))&(3>=0&3<xlen()&2>=0&2<ylen()=>Ch(3,2))&(0>=0&0<xlen()&3>=0&3<ylen()=>Ch(0,3))&(1>=0&1<xlen()&3>=0&3<ylen()=>Ch(1,3))&(2>=0&2<xlen()&3>=0&3<ylen()=>Ch(2,3))&(3>=0&3<xlen()&3>=0&3<ylen()=>Ch(3,3)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)
 f2:false
2019-10-14 23:16:37,522 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(3>=0&3<xlen()&0>=0&0<ylen()=>Ch(3,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(3>=0&3<xlen()&1>=0&1<ylen()=>Ch(3,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2))&(3>=0&3<xlen()&2>=0&2<ylen()=>Ch(3,2))&(0>=0&0<xlen()&3>=0&3<ylen()=>Ch(0,3))&(1>=0&1<xlen()&3>=0&3<ylen()=>Ch(1,3))&(2>=0&2<xlen()&3>=0&3<ylen()=>Ch(2,3))&(3>=0&3<xlen()&3>=0&3<ylen()=>Ch(3,3)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)
 f2:false
2019-10-14 23:20:26,966 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(3>=0&3<xlen()&0>=0&0<ylen()=>Ch(3,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(3>=0&3<xlen()&1>=0&1<ylen()=>Ch(3,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2))&(3>=0&3<xlen()&2>=0&2<ylen()=>Ch(3,2))&(0>=0&0<xlen()&3>=0&3<ylen()=>Ch(0,3))&(1>=0&1<xlen()&3>=0&3<ylen()=>Ch(1,3))&(2>=0&2<xlen()&3>=0&3<ylen()=>Ch(2,3))&(3>=0&3<xlen()&3>=0&3<ylen()=>Ch(3,3)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)
 f2:false
2019-10-14 23:21:14,556 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(3>=0&3<xlen()&0>=0&0<ylen()=>Ch(3,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(3>=0&3<xlen()&1>=0&1<ylen()=>Ch(3,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2))&(3>=0&3<xlen()&2>=0&2<ylen()=>Ch(3,2))&(0>=0&0<xlen()&3>=0&3<ylen()=>Ch(0,3))&(1>=0&1<xlen()&3>=0&3<ylen()=>Ch(1,3))&(2>=0&2<xlen()&3>=0&3<ylen()=>Ch(2,3))&(3>=0&3<xlen()&3>=0&3<ylen()=>Ch(3,3)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)
 f2:false
2019-10-14 23:22:13,796 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(3>=0&3<xlen()&0>=0&0<ylen()=>Ch(3,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(3>=0&3<xlen()&1>=0&1<ylen()=>Ch(3,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2))&(3>=0&3<xlen()&2>=0&2<ylen()=>Ch(3,2))&(0>=0&0<xlen()&3>=0&3<ylen()=>Ch(0,3))&(1>=0&1<xlen()&3>=0&3<ylen()=>Ch(1,3))&(2>=0&2<xlen()&3>=0&3<ylen()=>Ch(2,3))&(3>=0&3<xlen()&3>=0&3<ylen()=>Ch(3,3)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)
 f2:false
2019-10-15 00:02:57,342 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(3>=0&3<xlen()&0>=0&0<ylen()=>Ch(3,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(3>=0&3<xlen()&1>=0&1<ylen()=>Ch(3,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2))&(3>=0&3<xlen()&2>=0&2<ylen()=>Ch(3,2))&(0>=0&0<xlen()&3>=0&3<ylen()=>Ch(0,3))&(1>=0&1<xlen()&3>=0&3<ylen()=>Ch(1,3))&(2>=0&2<xlen()&3>=0&3<ylen()=>Ch(2,3))&(3>=0&3<xlen()&3>=0&3<ylen()=>Ch(3,3)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)
 f2:false
2019-10-15 00:03:10,432 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(3>=0&3<xlen()&0>=0&0<ylen()=>Ch(3,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(3>=0&3<xlen()&1>=0&1<ylen()=>Ch(3,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2))&(3>=0&3<xlen()&2>=0&2<ylen()=>Ch(3,2))&(0>=0&0<xlen()&3>=0&3<ylen()=>Ch(0,3))&(1>=0&1<xlen()&3>=0&3<ylen()=>Ch(1,3))&(2>=0&2<xlen()&3>=0&3<ylen()=>Ch(2,3))&(3>=0&3<xlen()&3>=0&3<ylen()=>Ch(3,3)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)
 f2:false
2019-10-15 00:03:10,482 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(3>=0&3<xlen()&0>=0&0<ylen()=>Ch(3,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(3>=0&3<xlen()&1>=0&1<ylen()=>Ch(3,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2))&(3>=0&3<xlen()&2>=0&2<ylen()=>Ch(3,2))&(0>=0&0<xlen()&3>=0&3<ylen()=>Ch(0,3))&(1>=0&1<xlen()&3>=0&3<ylen()=>Ch(1,3))&(2>=0&2<xlen()&3>=0&3<ylen()=>Ch(2,3))&(3>=0&3<xlen()&3>=0&3<ylen()=>Ch(3,3)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2))&!(Ch(1,1)&Ch(1,0)&!Ch(0,2)&!Ch(0,3)&!Ch(3,3)&!turn(p2)&Ch(0,0)&xlen()=2&turn(p1)&!Ch(3,1)&!Ch(2,3)&!Ch(2,0)&!Ch(3,0)&!Ch(2,1)&!Ch(2,2)&ylen()=2&!Ch(3,2)&!Ch(1,3)&!Ch(1,2)&Ch(0,1))
 f2:false
2019-10-15 00:05:30,878 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(3>=0&3<xlen()&0>=0&0<ylen()=>Ch(3,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(3>=0&3<xlen()&1>=0&1<ylen()=>Ch(3,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2))&(3>=0&3<xlen()&2>=0&2<ylen()=>Ch(3,2))&(0>=0&0<xlen()&3>=0&3<ylen()=>Ch(0,3))&(1>=0&1<xlen()&3>=0&3<ylen()=>Ch(1,3))&(2>=0&2<xlen()&3>=0&3<ylen()=>Ch(2,3))&(3>=0&3<xlen()&3>=0&3<ylen()=>Ch(3,3)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)
 f2:false
2019-10-15 00:05:30,927 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(3>=0&3<xlen()&0>=0&0<ylen()=>Ch(3,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(3>=0&3<xlen()&1>=0&1<ylen()=>Ch(3,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2))&(3>=0&3<xlen()&2>=0&2<ylen()=>Ch(3,2))&(0>=0&0<xlen()&3>=0&3<ylen()=>Ch(0,3))&(1>=0&1<xlen()&3>=0&3<ylen()=>Ch(1,3))&(2>=0&2<xlen()&3>=0&3<ylen()=>Ch(2,3))&(3>=0&3<xlen()&3>=0&3<ylen()=>Ch(3,3)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2))&!(Ch(1,1)&Ch(1,0)&!Ch(0,2)&!Ch(0,3)&!Ch(3,3)&!turn(p2)&Ch(0,0)&xlen()=2&turn(p1)&!Ch(3,1)&!Ch(2,3)&!Ch(2,0)&!Ch(3,0)&!Ch(2,1)&!Ch(2,2)&ylen()=2&!Ch(3,2)&!Ch(1,3)&!Ch(1,2)&Ch(0,1))
 f2:false
2019-10-15 00:05:31,013 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(3>=0&3<xlen()&0>=0&0<ylen()=>Ch(3,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(3>=0&3<xlen()&1>=0&1<ylen()=>Ch(3,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2))&(3>=0&3<xlen()&2>=0&2<ylen()=>Ch(3,2))&(0>=0&0<xlen()&3>=0&3<ylen()=>Ch(0,3))&(1>=0&1<xlen()&3>=0&3<ylen()=>Ch(1,3))&(2>=0&2<xlen()&3>=0&3<ylen()=>Ch(2,3))&(3>=0&3<xlen()&3>=0&3<ylen()=>Ch(3,3)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2))&!(Ch(1,1)&Ch(1,0)&!Ch(0,2)&!Ch(0,3)&!Ch(3,3)&!turn(p2)&Ch(0,0)&xlen()=2&turn(p1)&!Ch(3,1)&!Ch(2,3)&!Ch(2,0)&!Ch(3,0)&!Ch(2,1)&!Ch(2,2)&ylen()=2&!Ch(3,2)&!Ch(1,3)&!Ch(1,2)&Ch(0,1))&!(Ch(1,1)&Ch(1,0)&Ch(0,2)&!Ch(0,3)&!Ch(3,3)&!turn(p2)&Ch(0,0)&xlen()=3&turn(p1)&!Ch(3,1)&!Ch(2,3)&Ch(2,0)&!Ch(3,0)&Ch(2,1)&Ch(2,2)&ylen()=3&!Ch(3,2)&!Ch(1,3)&Ch(1,2)&Ch(0,1))
 f2:false
2019-10-15 00:06:38,887 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(3>=0&3<xlen()&0>=0&0<ylen()=>Ch(3,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(3>=0&3<xlen()&1>=0&1<ylen()=>Ch(3,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2))&(3>=0&3<xlen()&2>=0&2<ylen()=>Ch(3,2))&(0>=0&0<xlen()&3>=0&3<ylen()=>Ch(0,3))&(1>=0&1<xlen()&3>=0&3<ylen()=>Ch(1,3))&(2>=0&2<xlen()&3>=0&3<ylen()=>Ch(2,3))&(3>=0&3<xlen()&3>=0&3<ylen()=>Ch(3,3)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)
 f2:false
2019-10-15 00:06:38,937 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(3>=0&3<xlen()&0>=0&0<ylen()=>Ch(3,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(3>=0&3<xlen()&1>=0&1<ylen()=>Ch(3,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2))&(3>=0&3<xlen()&2>=0&2<ylen()=>Ch(3,2))&(0>=0&0<xlen()&3>=0&3<ylen()=>Ch(0,3))&(1>=0&1<xlen()&3>=0&3<ylen()=>Ch(1,3))&(2>=0&2<xlen()&3>=0&3<ylen()=>Ch(2,3))&(3>=0&3<xlen()&3>=0&3<ylen()=>Ch(3,3)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2))&!(Ch(1,1)&Ch(1,0)&!Ch(0,2)&!Ch(0,3)&!Ch(3,3)&!turn(p2)&Ch(0,0)&xlen()=2&turn(p1)&!Ch(3,1)&!Ch(2,3)&!Ch(2,0)&!Ch(3,0)&!Ch(2,1)&!Ch(2,2)&ylen()=2&!Ch(3,2)&!Ch(1,3)&!Ch(1,2)&Ch(0,1))
 f2:false
2019-10-15 00:06:39,024 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(3>=0&3<xlen()&0>=0&0<ylen()=>Ch(3,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(3>=0&3<xlen()&1>=0&1<ylen()=>Ch(3,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2))&(3>=0&3<xlen()&2>=0&2<ylen()=>Ch(3,2))&(0>=0&0<xlen()&3>=0&3<ylen()=>Ch(0,3))&(1>=0&1<xlen()&3>=0&3<ylen()=>Ch(1,3))&(2>=0&2<xlen()&3>=0&3<ylen()=>Ch(2,3))&(3>=0&3<xlen()&3>=0&3<ylen()=>Ch(3,3)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2))&!(Ch(1,1)&Ch(1,0)&!Ch(0,2)&!Ch(0,3)&!Ch(3,3)&!turn(p2)&Ch(0,0)&xlen()=2&turn(p1)&!Ch(3,1)&!Ch(2,3)&!Ch(2,0)&!Ch(3,0)&!Ch(2,1)&!Ch(2,2)&ylen()=2&!Ch(3,2)&!Ch(1,3)&!Ch(1,2)&Ch(0,1))&!(Ch(1,1)&Ch(1,0)&Ch(0,2)&!Ch(0,3)&!Ch(3,3)&!turn(p2)&Ch(0,0)&xlen()=3&turn(p1)&!Ch(3,1)&!Ch(2,3)&Ch(2,0)&!Ch(3,0)&Ch(2,1)&Ch(2,2)&ylen()=3&!Ch(3,2)&!Ch(1,3)&Ch(1,2)&Ch(0,1))
 f2:false
2019-10-15 16:27:58,768 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(3>=0&3<xlen()&0>=0&0<ylen()=>Ch(3,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(3>=0&3<xlen()&1>=0&1<ylen()=>Ch(3,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2))&(3>=0&3<xlen()&2>=0&2<ylen()=>Ch(3,2))&(0>=0&0<xlen()&3>=0&3<ylen()=>Ch(0,3))&(1>=0&1<xlen()&3>=0&3<ylen()=>Ch(1,3))&(2>=0&2<xlen()&3>=0&3<ylen()=>Ch(2,3))&(3>=0&3<xlen()&3>=0&3<ylen()=>Ch(3,3)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)&xlen()=3&ylen()=3&forall(X:_S1)[X=p2 or X=p1]
 f2:false
2019-10-15 16:28:19,569 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(3>=0&3<xlen()&0>=0&0<ylen()=>Ch(3,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(3>=0&3<xlen()&1>=0&1<ylen()=>Ch(3,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2))&(3>=0&3<xlen()&2>=0&2<ylen()=>Ch(3,2))&(0>=0&0<xlen()&3>=0&3<ylen()=>Ch(0,3))&(1>=0&1<xlen()&3>=0&3<ylen()=>Ch(1,3))&(2>=0&2<xlen()&3>=0&3<ylen()=>Ch(2,3))&(3>=0&3<xlen()&3>=0&3<ylen()=>Ch(3,3)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)&xlen()=3&ylen()=3&forall(X:_S1)[X=p2 or X=p1]
 f2:false
2019-10-15 16:29:05,556 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(3>=0&3<xlen()&0>=0&0<ylen()=>Ch(3,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(3>=0&3<xlen()&1>=0&1<ylen()=>Ch(3,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2))&(3>=0&3<xlen()&2>=0&2<ylen()=>Ch(3,2))&(0>=0&0<xlen()&3>=0&3<ylen()=>Ch(0,3))&(1>=0&1<xlen()&3>=0&3<ylen()=>Ch(1,3))&(2>=0&2<xlen()&3>=0&3<ylen()=>Ch(2,3))&(3>=0&3<xlen()&3>=0&3<ylen()=>Ch(3,3)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)&xlen()=3&ylen()=3&forall(X:_S1)[X=p2 or X=p1]
 f2:false
2019-10-15 16:29:05,654 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(3>=0&3<xlen()&0>=0&0<ylen()=>Ch(3,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(3>=0&3<xlen()&1>=0&1<ylen()=>Ch(3,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2))&(3>=0&3<xlen()&2>=0&2<ylen()=>Ch(3,2))&(0>=0&0<xlen()&3>=0&3<ylen()=>Ch(0,3))&(1>=0&1<xlen()&3>=0&3<ylen()=>Ch(1,3))&(2>=0&2<xlen()&3>=0&3<ylen()=>Ch(2,3))&(3>=0&3<xlen()&3>=0&3<ylen()=>Ch(3,3)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)&xlen()=3&ylen()=3&forall(X:_S1)[X=p2 or X=p1]&!(Ch(1,1)&Ch(1,0)&Ch(0,2)&!Ch(0,3)&!Ch(3,3)&!turn(p2)&Ch(0,0)&xlen()=3&turn(p1)&!Ch(3,1)&!Ch(2,3)&Ch(2,0)&!Ch(3,0)&Ch(2,1)&Ch(2,2)&ylen()=3&!Ch(3,2)&!Ch(1,3)&Ch(1,2)&Ch(0,1))
 f2:false
2019-10-15 17:03:52,721 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(3>=0&3<xlen()&0>=0&0<ylen()=>Ch(3,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(3>=0&3<xlen()&1>=0&1<ylen()=>Ch(3,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2))&(3>=0&3<xlen()&2>=0&2<ylen()=>Ch(3,2))&(0>=0&0<xlen()&3>=0&3<ylen()=>Ch(0,3))&(1>=0&1<xlen()&3>=0&3<ylen()=>Ch(1,3))&(2>=0&2<xlen()&3>=0&3<ylen()=>Ch(2,3))&(3>=0&3<xlen()&3>=0&3<ylen()=>Ch(3,3)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)&xlen()=3&ylen()=3&forall(X:_S1)[X=p2 or X=p1]
 f2:false
2019-10-15 17:04:21,367 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(3>=0&3<xlen()&0>=0&0<ylen()=>Ch(3,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(3>=0&3<xlen()&1>=0&1<ylen()=>Ch(3,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2))&(3>=0&3<xlen()&2>=0&2<ylen()=>Ch(3,2))&(0>=0&0<xlen()&3>=0&3<ylen()=>Ch(0,3))&(1>=0&1<xlen()&3>=0&3<ylen()=>Ch(1,3))&(2>=0&2<xlen()&3>=0&3<ylen()=>Ch(2,3))&(3>=0&3<xlen()&3>=0&3<ylen()=>Ch(3,3)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)&xlen()=3&ylen()=3&forall(X:_S1)[X=p2 or X=p1]
 f2:false
2019-10-15 17:04:39,469 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(3>=0&3<xlen()&0>=0&0<ylen()=>Ch(3,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(3>=0&3<xlen()&1>=0&1<ylen()=>Ch(3,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2))&(3>=0&3<xlen()&2>=0&2<ylen()=>Ch(3,2))&(0>=0&0<xlen()&3>=0&3<ylen()=>Ch(0,3))&(1>=0&1<xlen()&3>=0&3<ylen()=>Ch(1,3))&(2>=0&2<xlen()&3>=0&3<ylen()=>Ch(2,3))&(3>=0&3<xlen()&3>=0&3<ylen()=>Ch(3,3)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)&xlen()=3&ylen()=3&forall(X:_S1)[X=p2 or X=p1]
 f2:false
2019-10-15 17:04:48,281 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(3>=0&3<xlen()&0>=0&0<ylen()=>Ch(3,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(3>=0&3<xlen()&1>=0&1<ylen()=>Ch(3,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2))&(3>=0&3<xlen()&2>=0&2<ylen()=>Ch(3,2))&(0>=0&0<xlen()&3>=0&3<ylen()=>Ch(0,3))&(1>=0&1<xlen()&3>=0&3<ylen()=>Ch(1,3))&(2>=0&2<xlen()&3>=0&3<ylen()=>Ch(2,3))&(3>=0&3<xlen()&3>=0&3<ylen()=>Ch(3,3)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)&xlen()=3&ylen()=3&forall(X:_S1)[X=p2 or X=p1]
 f2:false
2019-10-15 17:04:58,161 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(3>=0&3<xlen()&0>=0&0<ylen()=>Ch(3,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(3>=0&3<xlen()&1>=0&1<ylen()=>Ch(3,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2))&(3>=0&3<xlen()&2>=0&2<ylen()=>Ch(3,2))&(0>=0&0<xlen()&3>=0&3<ylen()=>Ch(0,3))&(1>=0&1<xlen()&3>=0&3<ylen()=>Ch(1,3))&(2>=0&2<xlen()&3>=0&3<ylen()=>Ch(2,3))&(3>=0&3<xlen()&3>=0&3<ylen()=>Ch(3,3)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)&xlen()=3&ylen()=3&forall(X:_S1)[X=p2 or X=p1]
 f2:false
2019-10-15 17:05:10,329 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(3>=0&3<xlen()&0>=0&0<ylen()=>Ch(3,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(3>=0&3<xlen()&1>=0&1<ylen()=>Ch(3,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2))&(3>=0&3<xlen()&2>=0&2<ylen()=>Ch(3,2))&(0>=0&0<xlen()&3>=0&3<ylen()=>Ch(0,3))&(1>=0&1<xlen()&3>=0&3<ylen()=>Ch(1,3))&(2>=0&2<xlen()&3>=0&3<ylen()=>Ch(2,3))&(3>=0&3<xlen()&3>=0&3<ylen()=>Ch(3,3)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)&xlen()=3&ylen()=3&forall(X:_S1)[X=p2 or X=p1]
 f2:false
2019-10-15 17:05:16,011 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(3>=0&3<xlen()&0>=0&0<ylen()=>Ch(3,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(3>=0&3<xlen()&1>=0&1<ylen()=>Ch(3,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2))&(3>=0&3<xlen()&2>=0&2<ylen()=>Ch(3,2))&(0>=0&0<xlen()&3>=0&3<ylen()=>Ch(0,3))&(1>=0&1<xlen()&3>=0&3<ylen()=>Ch(1,3))&(2>=0&2<xlen()&3>=0&3<ylen()=>Ch(2,3))&(3>=0&3<xlen()&3>=0&3<ylen()=>Ch(3,3)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)&xlen()=3&ylen()=3&forall(X:_S1)[X=p2 or X=p1]
 f2:false
2019-10-15 17:07:11,534 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(3>=0&3<xlen()&0>=0&0<ylen()=>Ch(3,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(3>=0&3<xlen()&1>=0&1<ylen()=>Ch(3,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2))&(3>=0&3<xlen()&2>=0&2<ylen()=>Ch(3,2))&(0>=0&0<xlen()&3>=0&3<ylen()=>Ch(0,3))&(1>=0&1<xlen()&3>=0&3<ylen()=>Ch(1,3))&(2>=0&2<xlen()&3>=0&3<ylen()=>Ch(2,3))&(3>=0&3<xlen()&3>=0&3<ylen()=>Ch(3,3)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)&xlen()=3&ylen()=3&forall(X:_S1)[X=p2 or X=p1]
 f2:false
2019-10-15 17:07:43,236 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(3>=0&3<xlen()&0>=0&0<ylen()=>Ch(3,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(3>=0&3<xlen()&1>=0&1<ylen()=>Ch(3,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2))&(3>=0&3<xlen()&2>=0&2<ylen()=>Ch(3,2))&(0>=0&0<xlen()&3>=0&3<ylen()=>Ch(0,3))&(1>=0&1<xlen()&3>=0&3<ylen()=>Ch(1,3))&(2>=0&2<xlen()&3>=0&3<ylen()=>Ch(2,3))&(3>=0&3<xlen()&3>=0&3<ylen()=>Ch(3,3)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)&xlen()=3&ylen()=3&forall(X:_S1)[X=p2 or X=p1]
 f2:false
2019-10-15 17:07:47,364 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(3>=0&3<xlen()&0>=0&0<ylen()=>Ch(3,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(3>=0&3<xlen()&1>=0&1<ylen()=>Ch(3,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2))&(3>=0&3<xlen()&2>=0&2<ylen()=>Ch(3,2))&(0>=0&0<xlen()&3>=0&3<ylen()=>Ch(0,3))&(1>=0&1<xlen()&3>=0&3<ylen()=>Ch(1,3))&(2>=0&2<xlen()&3>=0&3<ylen()=>Ch(2,3))&(3>=0&3<xlen()&3>=0&3<ylen()=>Ch(3,3)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)&xlen()=3&ylen()=3&forall(X:_S1)[X=p2 or X=p1]
 f2:false
2019-10-15 17:13:57,765 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(3>=0&3<xlen()&0>=0&0<ylen()=>Ch(3,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(3>=0&3<xlen()&1>=0&1<ylen()=>Ch(3,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2))&(3>=0&3<xlen()&2>=0&2<ylen()=>Ch(3,2))&(0>=0&0<xlen()&3>=0&3<ylen()=>Ch(0,3))&(1>=0&1<xlen()&3>=0&3<ylen()=>Ch(1,3))&(2>=0&2<xlen()&3>=0&3<ylen()=>Ch(2,3))&(3>=0&3<xlen()&3>=0&3<ylen()=>Ch(3,3)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)&xlen()=3&ylen()=3&forall(X:_S1)[X=p2 or X=p1]
 f2:false
2019-10-15 17:14:10,416 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(3>=0&3<xlen()&0>=0&0<ylen()=>Ch(3,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(3>=0&3<xlen()&1>=0&1<ylen()=>Ch(3,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2))&(3>=0&3<xlen()&2>=0&2<ylen()=>Ch(3,2))&(0>=0&0<xlen()&3>=0&3<ylen()=>Ch(0,3))&(1>=0&1<xlen()&3>=0&3<ylen()=>Ch(1,3))&(2>=0&2<xlen()&3>=0&3<ylen()=>Ch(2,3))&(3>=0&3<xlen()&3>=0&3<ylen()=>Ch(3,3)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)&xlen()=3&ylen()=3&forall(X:_S1)[X=p2 or X=p1]
 f2:false
2019-10-15 17:14:31,693 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(3>=0&3<xlen()&0>=0&0<ylen()=>Ch(3,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(3>=0&3<xlen()&1>=0&1<ylen()=>Ch(3,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2))&(3>=0&3<xlen()&2>=0&2<ylen()=>Ch(3,2))&(0>=0&0<xlen()&3>=0&3<ylen()=>Ch(0,3))&(1>=0&1<xlen()&3>=0&3<ylen()=>Ch(1,3))&(2>=0&2<xlen()&3>=0&3<ylen()=>Ch(2,3))&(3>=0&3<xlen()&3>=0&3<ylen()=>Ch(3,3)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)&xlen()=3&ylen()=3&forall(X:_S1)[X=p2 or X=p1]
 f2:false
2019-10-15 17:17:40,165 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(3>=0&3<xlen()&0>=0&0<ylen()=>Ch(3,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(3>=0&3<xlen()&1>=0&1<ylen()=>Ch(3,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2))&(3>=0&3<xlen()&2>=0&2<ylen()=>Ch(3,2))&(0>=0&0<xlen()&3>=0&3<ylen()=>Ch(0,3))&(1>=0&1<xlen()&3>=0&3<ylen()=>Ch(1,3))&(2>=0&2<xlen()&3>=0&3<ylen()=>Ch(2,3))&(3>=0&3<xlen()&3>=0&3<ylen()=>Ch(3,3)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)&xlen()=3&ylen()=3&forall(X:_S1)[X=p2 or X=p1]
 f2:false
2019-10-15 17:17:41,964 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(3>=0&3<xlen()&0>=0&0<ylen()=>Ch(3,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(3>=0&3<xlen()&1>=0&1<ylen()=>Ch(3,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2))&(3>=0&3<xlen()&2>=0&2<ylen()=>Ch(3,2))&(0>=0&0<xlen()&3>=0&3<ylen()=>Ch(0,3))&(1>=0&1<xlen()&3>=0&3<ylen()=>Ch(1,3))&(2>=0&2<xlen()&3>=0&3<ylen()=>Ch(2,3))&(3>=0&3<xlen()&3>=0&3<ylen()=>Ch(3,3)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)&xlen()=3&ylen()=3&forall(X:_S1)[X=p2 or X=p1]
 f2:false
2019-10-15 19:05:52,671 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(3>=0&3<xlen()&0>=0&0<ylen()=>Ch(3,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(3>=0&3<xlen()&1>=0&1<ylen()=>Ch(3,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2))&(3>=0&3<xlen()&2>=0&2<ylen()=>Ch(3,2))&(0>=0&0<xlen()&3>=0&3<ylen()=>Ch(0,3))&(1>=0&1<xlen()&3>=0&3<ylen()=>Ch(1,3))&(2>=0&2<xlen()&3>=0&3<ylen()=>Ch(2,3))&(3>=0&3<xlen()&3>=0&3<ylen()=>Ch(3,3)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)&xlen()=3&ylen()=3&forall(X:_S1)[X=p2 or X=p1]
 f2:false
2019-10-15 19:05:52,758 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(3>=0&3<xlen()&0>=0&0<ylen()=>Ch(3,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(3>=0&3<xlen()&1>=0&1<ylen()=>Ch(3,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2))&(3>=0&3<xlen()&2>=0&2<ylen()=>Ch(3,2))&(0>=0&0<xlen()&3>=0&3<ylen()=>Ch(0,3))&(1>=0&1<xlen()&3>=0&3<ylen()=>Ch(1,3))&(2>=0&2<xlen()&3>=0&3<ylen()=>Ch(2,3))&(3>=0&3<xlen()&3>=0&3<ylen()=>Ch(3,3)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)&xlen()=3&ylen()=3&forall(X:_S1)[X=p2 or X=p1]&!(Ch(1,1)&Ch(1,0)&Ch(0,2)&!Ch(0,3)&!Ch(3,3)&!turn(p2)&Ch(0,0)&xlen()=3&turn(p1)&!Ch(3,1)&!Ch(2,3)&Ch(2,0)&!Ch(3,0)&Ch(2,1)&Ch(2,2)&ylen()=3&!Ch(3,2)&!Ch(1,3)&Ch(1,2)&Ch(0,1))
 f2:false
2019-10-15 19:06:45,048 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(3>=0&3<xlen()&0>=0&0<ylen()=>Ch(3,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(3>=0&3<xlen()&1>=0&1<ylen()=>Ch(3,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2))&(3>=0&3<xlen()&2>=0&2<ylen()=>Ch(3,2))&(0>=0&0<xlen()&3>=0&3<ylen()=>Ch(0,3))&(1>=0&1<xlen()&3>=0&3<ylen()=>Ch(1,3))&(2>=0&2<xlen()&3>=0&3<ylen()=>Ch(2,3))&(3>=0&3<xlen()&3>=0&3<ylen()=>Ch(3,3)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)&xlen()=3&ylen()=3&forall(X:_S1)[X=p2 or X=p1]
 f2:false
2019-10-15 19:06:45,135 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(3>=0&3<xlen()&0>=0&0<ylen()=>Ch(3,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(3>=0&3<xlen()&1>=0&1<ylen()=>Ch(3,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2))&(3>=0&3<xlen()&2>=0&2<ylen()=>Ch(3,2))&(0>=0&0<xlen()&3>=0&3<ylen()=>Ch(0,3))&(1>=0&1<xlen()&3>=0&3<ylen()=>Ch(1,3))&(2>=0&2<xlen()&3>=0&3<ylen()=>Ch(2,3))&(3>=0&3<xlen()&3>=0&3<ylen()=>Ch(3,3)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)&xlen()=3&ylen()=3&forall(X:_S1)[X=p2 or X=p1]&!(Ch(1,1)&Ch(1,0)&Ch(0,2)&!Ch(0,3)&!Ch(3,3)&!turn(p2)&Ch(0,0)&xlen()=3&turn(p1)&!Ch(3,1)&!Ch(2,3)&Ch(2,0)&!Ch(3,0)&Ch(2,1)&Ch(2,2)&ylen()=3&!Ch(3,2)&!Ch(1,3)&Ch(1,2)&Ch(0,1))
 f2:false
2019-10-15 19:10:29,409 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(3>=0&3<xlen()&0>=0&0<ylen()=>Ch(3,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(3>=0&3<xlen()&1>=0&1<ylen()=>Ch(3,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2))&(3>=0&3<xlen()&2>=0&2<ylen()=>Ch(3,2))&(0>=0&0<xlen()&3>=0&3<ylen()=>Ch(0,3))&(1>=0&1<xlen()&3>=0&3<ylen()=>Ch(1,3))&(2>=0&2<xlen()&3>=0&3<ylen()=>Ch(2,3))&(3>=0&3<xlen()&3>=0&3<ylen()=>Ch(3,3)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)&xlen()=3&ylen()=3&forall(X:_S1)[X=p2 or X=p1]
 f2:false
2019-10-15 19:10:29,489 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(3>=0&3<xlen()&0>=0&0<ylen()=>Ch(3,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(3>=0&3<xlen()&1>=0&1<ylen()=>Ch(3,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2))&(3>=0&3<xlen()&2>=0&2<ylen()=>Ch(3,2))&(0>=0&0<xlen()&3>=0&3<ylen()=>Ch(0,3))&(1>=0&1<xlen()&3>=0&3<ylen()=>Ch(1,3))&(2>=0&2<xlen()&3>=0&3<ylen()=>Ch(2,3))&(3>=0&3<xlen()&3>=0&3<ylen()=>Ch(3,3)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)&xlen()=3&ylen()=3&forall(X:_S1)[X=p2 or X=p1]&!(Ch(1,1)&Ch(1,0)&Ch(0,2)&!Ch(0,3)&!Ch(3,3)&!turn(p2)&Ch(0,0)&xlen()=3&turn(p1)&!Ch(3,1)&!Ch(2,3)&Ch(2,0)&!Ch(3,0)&Ch(2,1)&Ch(2,2)&ylen()=3&!Ch(3,2)&!Ch(1,3)&Ch(1,2)&Ch(0,1))
 f2:false
2019-10-15 19:10:48,413 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)&ylen()=2&xlen()=2&forall(X:_S1)[X=p2 or X=p1]
 f2:false
2019-10-15 19:10:48,457 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)&ylen()=2&xlen()=2&forall(X:_S1)[X=p2 or X=p1]&!(Ch(1,1)&Ch(1,0)&!Ch(0,2)&!Ch(2,1)&!turn(p2)&Ch(0,0)&xlen()=2&turn(p1)&!Ch(2,0)&!Ch(2,2)&ylen()=2&!Ch(1,2)&Ch(0,1))
 f2:false
2019-10-15 19:11:40,711 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)&ylen()=2&xlen()=2&forall(X:_S1)[X=p2 or X=p1]
 f2:false
2019-10-15 19:11:40,762 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)&ylen()=2&xlen()=2&forall(X:_S1)[X=p2 or X=p1]&!(Ch(1,1)&Ch(1,0)&!Ch(0,2)&!Ch(2,1)&!turn(p2)&Ch(0,0)&xlen()=2&turn(p1)&!Ch(2,0)&!Ch(2,2)&ylen()=2&!Ch(1,2)&Ch(0,1))
 f2:false
2019-10-15 19:11:50,441 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)&ylen()=2&xlen()=2&forall(X:_S1)[X=p2 or X=p1]
 f2:false
2019-10-15 19:11:50,494 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)&ylen()=2&xlen()=2&forall(X:_S1)[X=p2 or X=p1]&!(Ch(1,1)&Ch(1,0)&!Ch(0,2)&!Ch(2,1)&!turn(p2)&Ch(0,0)&xlen()=2&turn(p1)&!Ch(2,0)&!Ch(2,2)&ylen()=2&!Ch(1,2)&Ch(0,1))
 f2:false
2019-10-15 19:13:01,200 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(3>=0&3<xlen()&0>=0&0<ylen()=>Ch(3,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(3>=0&3<xlen()&1>=0&1<ylen()=>Ch(3,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2))&(3>=0&3<xlen()&2>=0&2<ylen()=>Ch(3,2))&(0>=0&0<xlen()&3>=0&3<ylen()=>Ch(0,3))&(1>=0&1<xlen()&3>=0&3<ylen()=>Ch(1,3))&(2>=0&2<xlen()&3>=0&3<ylen()=>Ch(2,3))&(3>=0&3<xlen()&3>=0&3<ylen()=>Ch(3,3)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)&xlen()=3&ylen()=3&forall(X:_S1)[X=p2 or X=p1]
 f2:false
2019-10-15 19:13:01,289 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(3>=0&3<xlen()&0>=0&0<ylen()=>Ch(3,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(3>=0&3<xlen()&1>=0&1<ylen()=>Ch(3,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2))&(3>=0&3<xlen()&2>=0&2<ylen()=>Ch(3,2))&(0>=0&0<xlen()&3>=0&3<ylen()=>Ch(0,3))&(1>=0&1<xlen()&3>=0&3<ylen()=>Ch(1,3))&(2>=0&2<xlen()&3>=0&3<ylen()=>Ch(2,3))&(3>=0&3<xlen()&3>=0&3<ylen()=>Ch(3,3)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)&xlen()=3&ylen()=3&forall(X:_S1)[X=p2 or X=p1]&!(Ch(1,1)&Ch(1,0)&Ch(0,2)&!Ch(0,3)&!Ch(3,3)&!turn(p2)&Ch(0,0)&xlen()=3&turn(p1)&!Ch(3,1)&!Ch(2,3)&Ch(2,0)&!Ch(3,0)&Ch(2,1)&Ch(2,2)&ylen()=3&!Ch(3,2)&!Ch(1,3)&Ch(1,2)&Ch(0,1))
 f2:false
2019-10-15 19:13:18,868 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(3>=0&3<xlen()&0>=0&0<ylen()=>Ch(3,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(3>=0&3<xlen()&1>=0&1<ylen()=>Ch(3,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2))&(3>=0&3<xlen()&2>=0&2<ylen()=>Ch(3,2))&(0>=0&0<xlen()&3>=0&3<ylen()=>Ch(0,3))&(1>=0&1<xlen()&3>=0&3<ylen()=>Ch(1,3))&(2>=0&2<xlen()&3>=0&3<ylen()=>Ch(2,3))&(3>=0&3<xlen()&3>=0&3<ylen()=>Ch(3,3)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)&xlen()=3&ylen()=3&forall(X:_S1)[X=p2 or X=p1]
 f2:false
2019-10-15 19:13:18,956 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(3>=0&3<xlen()&0>=0&0<ylen()=>Ch(3,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(3>=0&3<xlen()&1>=0&1<ylen()=>Ch(3,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2))&(3>=0&3<xlen()&2>=0&2<ylen()=>Ch(3,2))&(0>=0&0<xlen()&3>=0&3<ylen()=>Ch(0,3))&(1>=0&1<xlen()&3>=0&3<ylen()=>Ch(1,3))&(2>=0&2<xlen()&3>=0&3<ylen()=>Ch(2,3))&(3>=0&3<xlen()&3>=0&3<ylen()=>Ch(3,3)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)&xlen()=3&ylen()=3&forall(X:_S1)[X=p2 or X=p1]&!(Ch(1,1)&Ch(1,0)&Ch(0,2)&!Ch(0,3)&!Ch(3,3)&!turn(p2)&Ch(0,0)&xlen()=3&turn(p1)&!Ch(3,1)&!Ch(2,3)&Ch(2,0)&!Ch(3,0)&Ch(2,1)&Ch(2,2)&ylen()=3&!Ch(3,2)&!Ch(1,3)&Ch(1,2)&Ch(0,1))
 f2:false
2019-10-15 19:14:27,478 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(3>=0&3<xlen()&0>=0&0<ylen()=>Ch(3,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(3>=0&3<xlen()&1>=0&1<ylen()=>Ch(3,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2))&(3>=0&3<xlen()&2>=0&2<ylen()=>Ch(3,2))&(0>=0&0<xlen()&3>=0&3<ylen()=>Ch(0,3))&(1>=0&1<xlen()&3>=0&3<ylen()=>Ch(1,3))&(2>=0&2<xlen()&3>=0&3<ylen()=>Ch(2,3))&(3>=0&3<xlen()&3>=0&3<ylen()=>Ch(3,3)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)&xlen()=3&ylen()=3&forall(X:_S1)[X=p2 or X=p1]
 f2:false
2019-10-15 19:14:27,562 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(3>=0&3<xlen()&0>=0&0<ylen()=>Ch(3,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(3>=0&3<xlen()&1>=0&1<ylen()=>Ch(3,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2))&(3>=0&3<xlen()&2>=0&2<ylen()=>Ch(3,2))&(0>=0&0<xlen()&3>=0&3<ylen()=>Ch(0,3))&(1>=0&1<xlen()&3>=0&3<ylen()=>Ch(1,3))&(2>=0&2<xlen()&3>=0&3<ylen()=>Ch(2,3))&(3>=0&3<xlen()&3>=0&3<ylen()=>Ch(3,3)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)&xlen()=3&ylen()=3&forall(X:_S1)[X=p2 or X=p1]&!(Ch(1,1)&Ch(1,0)&Ch(0,2)&!Ch(0,3)&!Ch(3,3)&!turn(p2)&Ch(0,0)&xlen()=3&turn(p1)&!Ch(3,1)&!Ch(2,3)&Ch(2,0)&!Ch(3,0)&Ch(2,1)&Ch(2,2)&ylen()=3&!Ch(3,2)&!Ch(1,3)&Ch(1,2)&Ch(0,1))
 f2:false
2019-10-15 19:15:15,617 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(3>=0&3<xlen()&0>=0&0<ylen()=>Ch(3,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(3>=0&3<xlen()&1>=0&1<ylen()=>Ch(3,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2))&(3>=0&3<xlen()&2>=0&2<ylen()=>Ch(3,2))&(0>=0&0<xlen()&3>=0&3<ylen()=>Ch(0,3))&(1>=0&1<xlen()&3>=0&3<ylen()=>Ch(1,3))&(2>=0&2<xlen()&3>=0&3<ylen()=>Ch(2,3))&(3>=0&3<xlen()&3>=0&3<ylen()=>Ch(3,3)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)&xlen()=3&ylen()=3&forall(X:_S1)[X=p2 or X=p1]
 f2:false
2019-10-15 19:15:15,715 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(3>=0&3<xlen()&0>=0&0<ylen()=>Ch(3,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(3>=0&3<xlen()&1>=0&1<ylen()=>Ch(3,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2))&(3>=0&3<xlen()&2>=0&2<ylen()=>Ch(3,2))&(0>=0&0<xlen()&3>=0&3<ylen()=>Ch(0,3))&(1>=0&1<xlen()&3>=0&3<ylen()=>Ch(1,3))&(2>=0&2<xlen()&3>=0&3<ylen()=>Ch(2,3))&(3>=0&3<xlen()&3>=0&3<ylen()=>Ch(3,3)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)&xlen()=3&ylen()=3&forall(X:_S1)[X=p2 or X=p1]&!(Ch(1,1)&Ch(1,0)&Ch(0,2)&!Ch(0,3)&!Ch(3,3)&!turn(p2)&Ch(0,0)&xlen()=3&turn(p1)&!Ch(3,1)&!Ch(2,3)&Ch(2,0)&!Ch(3,0)&Ch(2,1)&Ch(2,2)&ylen()=3&!Ch(3,2)&!Ch(1,3)&Ch(1,2)&Ch(0,1))
 f2:false
2019-10-15 19:16:02,373 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(3>=0&3<xlen()&0>=0&0<ylen()=>Ch(3,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(3>=0&3<xlen()&1>=0&1<ylen()=>Ch(3,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2))&(3>=0&3<xlen()&2>=0&2<ylen()=>Ch(3,2))&(0>=0&0<xlen()&3>=0&3<ylen()=>Ch(0,3))&(1>=0&1<xlen()&3>=0&3<ylen()=>Ch(1,3))&(2>=0&2<xlen()&3>=0&3<ylen()=>Ch(2,3))&(3>=0&3<xlen()&3>=0&3<ylen()=>Ch(3,3)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)&xlen()=3&ylen()=3&forall(X:_S1)[X=p2 or X=p1]
 f2:false
2019-10-15 19:16:02,456 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(3>=0&3<xlen()&0>=0&0<ylen()=>Ch(3,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(3>=0&3<xlen()&1>=0&1<ylen()=>Ch(3,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2))&(3>=0&3<xlen()&2>=0&2<ylen()=>Ch(3,2))&(0>=0&0<xlen()&3>=0&3<ylen()=>Ch(0,3))&(1>=0&1<xlen()&3>=0&3<ylen()=>Ch(1,3))&(2>=0&2<xlen()&3>=0&3<ylen()=>Ch(2,3))&(3>=0&3<xlen()&3>=0&3<ylen()=>Ch(3,3)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)&xlen()=3&ylen()=3&forall(X:_S1)[X=p2 or X=p1]&!(Ch(1,1)&Ch(1,0)&Ch(0,2)&!Ch(0,3)&!Ch(3,3)&!turn(p2)&Ch(0,0)&xlen()=3&turn(p1)&!Ch(3,1)&!Ch(2,3)&Ch(2,0)&!Ch(3,0)&Ch(2,1)&Ch(2,2)&ylen()=3&!Ch(3,2)&!Ch(1,3)&Ch(1,2)&Ch(0,1))
 f2:false
2019-10-15 19:16:10,285 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(3>=0&3<xlen()&0>=0&0<ylen()=>Ch(3,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(3>=0&3<xlen()&1>=0&1<ylen()=>Ch(3,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2))&(3>=0&3<xlen()&2>=0&2<ylen()=>Ch(3,2))&(0>=0&0<xlen()&3>=0&3<ylen()=>Ch(0,3))&(1>=0&1<xlen()&3>=0&3<ylen()=>Ch(1,3))&(2>=0&2<xlen()&3>=0&3<ylen()=>Ch(2,3))&(3>=0&3<xlen()&3>=0&3<ylen()=>Ch(3,3)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)&xlen()=3&ylen()=3&forall(X:_S1)[X=p2 or X=p1]
 f2:false
2019-10-15 19:16:10,389 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(3>=0&3<xlen()&0>=0&0<ylen()=>Ch(3,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(3>=0&3<xlen()&1>=0&1<ylen()=>Ch(3,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2))&(3>=0&3<xlen()&2>=0&2<ylen()=>Ch(3,2))&(0>=0&0<xlen()&3>=0&3<ylen()=>Ch(0,3))&(1>=0&1<xlen()&3>=0&3<ylen()=>Ch(1,3))&(2>=0&2<xlen()&3>=0&3<ylen()=>Ch(2,3))&(3>=0&3<xlen()&3>=0&3<ylen()=>Ch(3,3)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)&xlen()=3&ylen()=3&forall(X:_S1)[X=p2 or X=p1]&!(Ch(1,1)&Ch(1,0)&Ch(0,2)&!Ch(0,3)&!Ch(3,3)&!turn(p2)&Ch(0,0)&xlen()=3&turn(p1)&!Ch(3,1)&!Ch(2,3)&Ch(2,0)&!Ch(3,0)&Ch(2,1)&Ch(2,2)&ylen()=3&!Ch(3,2)&!Ch(1,3)&Ch(1,2)&Ch(0,1))
 f2:false
2019-10-15 19:16:21,778 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(3>=0&3<xlen()&0>=0&0<ylen()=>Ch(3,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(3>=0&3<xlen()&1>=0&1<ylen()=>Ch(3,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2))&(3>=0&3<xlen()&2>=0&2<ylen()=>Ch(3,2))&(0>=0&0<xlen()&3>=0&3<ylen()=>Ch(0,3))&(1>=0&1<xlen()&3>=0&3<ylen()=>Ch(1,3))&(2>=0&2<xlen()&3>=0&3<ylen()=>Ch(2,3))&(3>=0&3<xlen()&3>=0&3<ylen()=>Ch(3,3)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)&xlen()=3&ylen()=3&forall(X:_S1)[X=p2 or X=p1]
 f2:false
2019-10-15 19:16:21,859 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(3>=0&3<xlen()&0>=0&0<ylen()=>Ch(3,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(3>=0&3<xlen()&1>=0&1<ylen()=>Ch(3,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2))&(3>=0&3<xlen()&2>=0&2<ylen()=>Ch(3,2))&(0>=0&0<xlen()&3>=0&3<ylen()=>Ch(0,3))&(1>=0&1<xlen()&3>=0&3<ylen()=>Ch(1,3))&(2>=0&2<xlen()&3>=0&3<ylen()=>Ch(2,3))&(3>=0&3<xlen()&3>=0&3<ylen()=>Ch(3,3)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)&xlen()=3&ylen()=3&forall(X:_S1)[X=p2 or X=p1]&!(Ch(1,1)&Ch(1,0)&Ch(0,2)&!Ch(0,3)&!Ch(3,3)&!turn(p2)&Ch(0,0)&xlen()=3&turn(p1)&!Ch(3,1)&!Ch(2,3)&Ch(2,0)&!Ch(3,0)&Ch(2,1)&Ch(2,2)&ylen()=3&!Ch(3,2)&!Ch(1,3)&Ch(1,2)&Ch(0,1))
 f2:false
2019-10-15 19:17:40,239 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(3>=0&3<xlen()&0>=0&0<ylen()=>Ch(3,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(3>=0&3<xlen()&1>=0&1<ylen()=>Ch(3,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2))&(3>=0&3<xlen()&2>=0&2<ylen()=>Ch(3,2))&(0>=0&0<xlen()&3>=0&3<ylen()=>Ch(0,3))&(1>=0&1<xlen()&3>=0&3<ylen()=>Ch(1,3))&(2>=0&2<xlen()&3>=0&3<ylen()=>Ch(2,3))&(3>=0&3<xlen()&3>=0&3<ylen()=>Ch(3,3)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)&xlen()=3&ylen()=3&forall(X:_S1)[X=p2 or X=p1]
 f2:false
2019-10-15 19:17:40,325 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(3>=0&3<xlen()&0>=0&0<ylen()=>Ch(3,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(3>=0&3<xlen()&1>=0&1<ylen()=>Ch(3,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2))&(3>=0&3<xlen()&2>=0&2<ylen()=>Ch(3,2))&(0>=0&0<xlen()&3>=0&3<ylen()=>Ch(0,3))&(1>=0&1<xlen()&3>=0&3<ylen()=>Ch(1,3))&(2>=0&2<xlen()&3>=0&3<ylen()=>Ch(2,3))&(3>=0&3<xlen()&3>=0&3<ylen()=>Ch(3,3)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)&xlen()=3&ylen()=3&forall(X:_S1)[X=p2 or X=p1]&!(Ch(1,1)&Ch(1,0)&Ch(0,2)&!Ch(0,3)&!Ch(3,3)&!turn(p2)&Ch(0,0)&xlen()=3&turn(p1)&!Ch(3,1)&!Ch(2,3)&Ch(2,0)&!Ch(3,0)&Ch(2,1)&Ch(2,2)&ylen()=3&!Ch(3,2)&!Ch(1,3)&Ch(1,2)&Ch(0,1))
 f2:false
2019-10-15 19:17:55,791 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(3>=0&3<xlen()&0>=0&0<ylen()=>Ch(3,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(3>=0&3<xlen()&1>=0&1<ylen()=>Ch(3,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2))&(3>=0&3<xlen()&2>=0&2<ylen()=>Ch(3,2))&(0>=0&0<xlen()&3>=0&3<ylen()=>Ch(0,3))&(1>=0&1<xlen()&3>=0&3<ylen()=>Ch(1,3))&(2>=0&2<xlen()&3>=0&3<ylen()=>Ch(2,3))&(3>=0&3<xlen()&3>=0&3<ylen()=>Ch(3,3)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)&xlen()=3&ylen()=3&forall(X:_S1)[X=p2 or X=p1]
 f2:false
2019-10-15 19:17:55,900 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(3>=0&3<xlen()&0>=0&0<ylen()=>Ch(3,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(3>=0&3<xlen()&1>=0&1<ylen()=>Ch(3,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2))&(3>=0&3<xlen()&2>=0&2<ylen()=>Ch(3,2))&(0>=0&0<xlen()&3>=0&3<ylen()=>Ch(0,3))&(1>=0&1<xlen()&3>=0&3<ylen()=>Ch(1,3))&(2>=0&2<xlen()&3>=0&3<ylen()=>Ch(2,3))&(3>=0&3<xlen()&3>=0&3<ylen()=>Ch(3,3)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)&xlen()=3&ylen()=3&forall(X:_S1)[X=p2 or X=p1]&!(Ch(1,1)&Ch(1,0)&Ch(0,2)&!Ch(0,3)&!Ch(3,3)&!turn(p2)&Ch(0,0)&xlen()=3&turn(p1)&!Ch(3,1)&!Ch(2,3)&Ch(2,0)&!Ch(3,0)&Ch(2,1)&Ch(2,2)&ylen()=3&!Ch(3,2)&!Ch(1,3)&Ch(1,2)&Ch(0,1))
 f2:false
2019-10-15 19:18:10,032 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(3>=0&3<xlen()&0>=0&0<ylen()=>Ch(3,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(3>=0&3<xlen()&1>=0&1<ylen()=>Ch(3,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2))&(3>=0&3<xlen()&2>=0&2<ylen()=>Ch(3,2))&(0>=0&0<xlen()&3>=0&3<ylen()=>Ch(0,3))&(1>=0&1<xlen()&3>=0&3<ylen()=>Ch(1,3))&(2>=0&2<xlen()&3>=0&3<ylen()=>Ch(2,3))&(3>=0&3<xlen()&3>=0&3<ylen()=>Ch(3,3)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)&xlen()=3&ylen()=3&forall(X:_S1)[X=p2 or X=p1]
 f2:false
2019-10-15 19:18:10,131 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(3>=0&3<xlen()&0>=0&0<ylen()=>Ch(3,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(3>=0&3<xlen()&1>=0&1<ylen()=>Ch(3,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2))&(3>=0&3<xlen()&2>=0&2<ylen()=>Ch(3,2))&(0>=0&0<xlen()&3>=0&3<ylen()=>Ch(0,3))&(1>=0&1<xlen()&3>=0&3<ylen()=>Ch(1,3))&(2>=0&2<xlen()&3>=0&3<ylen()=>Ch(2,3))&(3>=0&3<xlen()&3>=0&3<ylen()=>Ch(3,3)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)&xlen()=3&ylen()=3&forall(X:_S1)[X=p2 or X=p1]&!(Ch(1,1)&Ch(1,0)&Ch(0,2)&!Ch(0,3)&!Ch(3,3)&!turn(p2)&Ch(0,0)&xlen()=3&turn(p1)&!Ch(3,1)&!Ch(2,3)&Ch(2,0)&!Ch(3,0)&Ch(2,1)&Ch(2,2)&ylen()=3&!Ch(3,2)&!Ch(1,3)&Ch(1,2)&Ch(0,1))
 f2:false
2019-10-15 19:19:20,738 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(3>=0&3<xlen()&0>=0&0<ylen()=>Ch(3,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(3>=0&3<xlen()&1>=0&1<ylen()=>Ch(3,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2))&(3>=0&3<xlen()&2>=0&2<ylen()=>Ch(3,2))&(0>=0&0<xlen()&3>=0&3<ylen()=>Ch(0,3))&(1>=0&1<xlen()&3>=0&3<ylen()=>Ch(1,3))&(2>=0&2<xlen()&3>=0&3<ylen()=>Ch(2,3))&(3>=0&3<xlen()&3>=0&3<ylen()=>Ch(3,3)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)&xlen()=3&ylen()=3&forall(X:_S1)[X=p2 or X=p1]
 f2:false
2019-10-15 19:19:20,823 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(3>=0&3<xlen()&0>=0&0<ylen()=>Ch(3,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(3>=0&3<xlen()&1>=0&1<ylen()=>Ch(3,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2))&(3>=0&3<xlen()&2>=0&2<ylen()=>Ch(3,2))&(0>=0&0<xlen()&3>=0&3<ylen()=>Ch(0,3))&(1>=0&1<xlen()&3>=0&3<ylen()=>Ch(1,3))&(2>=0&2<xlen()&3>=0&3<ylen()=>Ch(2,3))&(3>=0&3<xlen()&3>=0&3<ylen()=>Ch(3,3)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)&xlen()=3&ylen()=3&forall(X:_S1)[X=p2 or X=p1]&!(Ch(1,1)&Ch(1,0)&Ch(0,2)&!Ch(0,3)&!Ch(3,3)&!turn(p2)&Ch(0,0)&xlen()=3&turn(p1)&!Ch(3,1)&!Ch(2,3)&Ch(2,0)&!Ch(3,0)&Ch(2,1)&Ch(2,2)&ylen()=3&!Ch(3,2)&!Ch(1,3)&Ch(1,2)&Ch(0,1))
 f2:false
2019-10-15 19:20:50,697 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(3>=0&3<xlen()&0>=0&0<ylen()=>Ch(3,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(3>=0&3<xlen()&1>=0&1<ylen()=>Ch(3,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2))&(3>=0&3<xlen()&2>=0&2<ylen()=>Ch(3,2))&(0>=0&0<xlen()&3>=0&3<ylen()=>Ch(0,3))&(1>=0&1<xlen()&3>=0&3<ylen()=>Ch(1,3))&(2>=0&2<xlen()&3>=0&3<ylen()=>Ch(2,3))&(3>=0&3<xlen()&3>=0&3<ylen()=>Ch(3,3)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)&xlen()=3&ylen()=3&forall(X:_S1)[X=p2 or X=p1]
 f2:false
2019-10-15 19:20:50,780 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(3>=0&3<xlen()&0>=0&0<ylen()=>Ch(3,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(3>=0&3<xlen()&1>=0&1<ylen()=>Ch(3,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2))&(3>=0&3<xlen()&2>=0&2<ylen()=>Ch(3,2))&(0>=0&0<xlen()&3>=0&3<ylen()=>Ch(0,3))&(1>=0&1<xlen()&3>=0&3<ylen()=>Ch(1,3))&(2>=0&2<xlen()&3>=0&3<ylen()=>Ch(2,3))&(3>=0&3<xlen()&3>=0&3<ylen()=>Ch(3,3)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)&xlen()=3&ylen()=3&forall(X:_S1)[X=p2 or X=p1]&!(Ch(1,1)&Ch(1,0)&Ch(0,2)&!Ch(0,3)&!Ch(3,3)&!turn(p2)&Ch(0,0)&xlen()=3&turn(p1)&!Ch(3,1)&!Ch(2,3)&Ch(2,0)&!Ch(3,0)&Ch(2,1)&Ch(2,2)&ylen()=3&!Ch(3,2)&!Ch(1,3)&Ch(1,2)&Ch(0,1))
 f2:false
2019-10-15 19:21:10,289 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(3>=0&3<xlen()&0>=0&0<ylen()=>Ch(3,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(3>=0&3<xlen()&1>=0&1<ylen()=>Ch(3,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2))&(3>=0&3<xlen()&2>=0&2<ylen()=>Ch(3,2))&(0>=0&0<xlen()&3>=0&3<ylen()=>Ch(0,3))&(1>=0&1<xlen()&3>=0&3<ylen()=>Ch(1,3))&(2>=0&2<xlen()&3>=0&3<ylen()=>Ch(2,3))&(3>=0&3<xlen()&3>=0&3<ylen()=>Ch(3,3)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)&xlen()=3&ylen()=3&forall(X:_S1)[X=p2 or X=p1]
 f2:false
2019-10-15 19:21:10,372 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(3>=0&3<xlen()&0>=0&0<ylen()=>Ch(3,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(3>=0&3<xlen()&1>=0&1<ylen()=>Ch(3,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2))&(3>=0&3<xlen()&2>=0&2<ylen()=>Ch(3,2))&(0>=0&0<xlen()&3>=0&3<ylen()=>Ch(0,3))&(1>=0&1<xlen()&3>=0&3<ylen()=>Ch(1,3))&(2>=0&2<xlen()&3>=0&3<ylen()=>Ch(2,3))&(3>=0&3<xlen()&3>=0&3<ylen()=>Ch(3,3)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)&xlen()=3&ylen()=3&forall(X:_S1)[X=p2 or X=p1]&!(Ch(1,1)&Ch(1,0)&Ch(0,2)&!Ch(0,3)&!Ch(3,3)&!turn(p2)&Ch(0,0)&xlen()=3&turn(p1)&!Ch(3,1)&!Ch(2,3)&Ch(2,0)&!Ch(3,0)&Ch(2,1)&Ch(2,2)&ylen()=3&!Ch(3,2)&!Ch(1,3)&Ch(1,2)&Ch(0,1))
 f2:false
2019-10-15 19:21:50,961 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(3>=0&3<xlen()&0>=0&0<ylen()=>Ch(3,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(3>=0&3<xlen()&1>=0&1<ylen()=>Ch(3,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2))&(3>=0&3<xlen()&2>=0&2<ylen()=>Ch(3,2))&(0>=0&0<xlen()&3>=0&3<ylen()=>Ch(0,3))&(1>=0&1<xlen()&3>=0&3<ylen()=>Ch(1,3))&(2>=0&2<xlen()&3>=0&3<ylen()=>Ch(2,3))&(3>=0&3<xlen()&3>=0&3<ylen()=>Ch(3,3)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)&xlen()=3&ylen()=3&forall(X:_S1)[X=p2 or X=p1]
 f2:false
2019-10-15 19:21:51,050 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(3>=0&3<xlen()&0>=0&0<ylen()=>Ch(3,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(3>=0&3<xlen()&1>=0&1<ylen()=>Ch(3,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2))&(3>=0&3<xlen()&2>=0&2<ylen()=>Ch(3,2))&(0>=0&0<xlen()&3>=0&3<ylen()=>Ch(0,3))&(1>=0&1<xlen()&3>=0&3<ylen()=>Ch(1,3))&(2>=0&2<xlen()&3>=0&3<ylen()=>Ch(2,3))&(3>=0&3<xlen()&3>=0&3<ylen()=>Ch(3,3)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)&xlen()=3&ylen()=3&forall(X:_S1)[X=p2 or X=p1]&!(Ch(1,1)&Ch(1,0)&Ch(0,2)&!Ch(0,3)&!Ch(3,3)&!turn(p2)&Ch(0,0)&xlen()=3&turn(p1)&!Ch(3,1)&!Ch(2,3)&Ch(2,0)&!Ch(3,0)&Ch(2,1)&Ch(2,2)&ylen()=3&!Ch(3,2)&!Ch(1,3)&Ch(1,2)&Ch(0,1))
 f2:false
2019-10-15 19:22:23,973 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(3>=0&3<xlen()&0>=0&0<ylen()=>Ch(3,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(3>=0&3<xlen()&1>=0&1<ylen()=>Ch(3,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2))&(3>=0&3<xlen()&2>=0&2<ylen()=>Ch(3,2))&(0>=0&0<xlen()&3>=0&3<ylen()=>Ch(0,3))&(1>=0&1<xlen()&3>=0&3<ylen()=>Ch(1,3))&(2>=0&2<xlen()&3>=0&3<ylen()=>Ch(2,3))&(3>=0&3<xlen()&3>=0&3<ylen()=>Ch(3,3)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)&xlen()=3&ylen()=3&forall(X:_S1)[X=p2 or X=p1]
 f2:false
2019-10-15 19:22:24,055 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(3>=0&3<xlen()&0>=0&0<ylen()=>Ch(3,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(3>=0&3<xlen()&1>=0&1<ylen()=>Ch(3,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2))&(3>=0&3<xlen()&2>=0&2<ylen()=>Ch(3,2))&(0>=0&0<xlen()&3>=0&3<ylen()=>Ch(0,3))&(1>=0&1<xlen()&3>=0&3<ylen()=>Ch(1,3))&(2>=0&2<xlen()&3>=0&3<ylen()=>Ch(2,3))&(3>=0&3<xlen()&3>=0&3<ylen()=>Ch(3,3)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)&xlen()=3&ylen()=3&forall(X:_S1)[X=p2 or X=p1]&!(Ch(1,1)&Ch(1,0)&Ch(0,2)&!Ch(0,3)&!Ch(3,3)&!turn(p2)&Ch(0,0)&xlen()=3&turn(p1)&!Ch(3,1)&!Ch(2,3)&Ch(2,0)&!Ch(3,0)&Ch(2,1)&Ch(2,2)&ylen()=3&!Ch(3,2)&!Ch(1,3)&Ch(1,2)&Ch(0,1))
 f2:false
2019-10-15 19:22:39,347 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)&ylen()=2&xlen()=2&forall(X:_S1)[X=p2 or X=p1]
 f2:false
2019-10-15 19:22:39,398 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)&ylen()=2&xlen()=2&forall(X:_S1)[X=p2 or X=p1]&!(Ch(1,1)&Ch(1,0)&!Ch(0,2)&!Ch(2,1)&!turn(p2)&Ch(0,0)&xlen()=2&turn(p1)&!Ch(2,0)&!Ch(2,2)&ylen()=2&!Ch(1,2)&Ch(0,1))
 f2:false
2019-10-15 19:22:51,132 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(3>=0&3<xlen()&0>=0&0<ylen()=>Ch(3,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(3>=0&3<xlen()&1>=0&1<ylen()=>Ch(3,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2))&(3>=0&3<xlen()&2>=0&2<ylen()=>Ch(3,2))&(0>=0&0<xlen()&3>=0&3<ylen()=>Ch(0,3))&(1>=0&1<xlen()&3>=0&3<ylen()=>Ch(1,3))&(2>=0&2<xlen()&3>=0&3<ylen()=>Ch(2,3))&(3>=0&3<xlen()&3>=0&3<ylen()=>Ch(3,3)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)&xlen()=3&ylen()=3&forall(X:_S1)[X=p2 or X=p1]
 f2:false
2019-10-15 19:22:51,221 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(3>=0&3<xlen()&0>=0&0<ylen()=>Ch(3,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(3>=0&3<xlen()&1>=0&1<ylen()=>Ch(3,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2))&(3>=0&3<xlen()&2>=0&2<ylen()=>Ch(3,2))&(0>=0&0<xlen()&3>=0&3<ylen()=>Ch(0,3))&(1>=0&1<xlen()&3>=0&3<ylen()=>Ch(1,3))&(2>=0&2<xlen()&3>=0&3<ylen()=>Ch(2,3))&(3>=0&3<xlen()&3>=0&3<ylen()=>Ch(3,3)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)&xlen()=3&ylen()=3&forall(X:_S1)[X=p2 or X=p1]&!(Ch(1,1)&Ch(1,0)&Ch(0,2)&!Ch(0,3)&!Ch(3,3)&!turn(p2)&Ch(0,0)&xlen()=3&turn(p1)&!Ch(3,1)&!Ch(2,3)&Ch(2,0)&!Ch(3,0)&Ch(2,1)&Ch(2,2)&ylen()=3&!Ch(3,2)&!Ch(1,3)&Ch(1,2)&Ch(0,1))
 f2:false
2019-10-15 19:24:28,370 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(3>=0&3<xlen()&0>=0&0<ylen()=>Ch(3,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(3>=0&3<xlen()&1>=0&1<ylen()=>Ch(3,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2))&(3>=0&3<xlen()&2>=0&2<ylen()=>Ch(3,2))&(0>=0&0<xlen()&3>=0&3<ylen()=>Ch(0,3))&(1>=0&1<xlen()&3>=0&3<ylen()=>Ch(1,3))&(2>=0&2<xlen()&3>=0&3<ylen()=>Ch(2,3))&(3>=0&3<xlen()&3>=0&3<ylen()=>Ch(3,3)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)&xlen()=3&ylen()=3&forall(X:_S1)[X=p2 or X=p1]
 f2:false
2019-10-15 19:24:28,453 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(3>=0&3<xlen()&0>=0&0<ylen()=>Ch(3,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(3>=0&3<xlen()&1>=0&1<ylen()=>Ch(3,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2))&(3>=0&3<xlen()&2>=0&2<ylen()=>Ch(3,2))&(0>=0&0<xlen()&3>=0&3<ylen()=>Ch(0,3))&(1>=0&1<xlen()&3>=0&3<ylen()=>Ch(1,3))&(2>=0&2<xlen()&3>=0&3<ylen()=>Ch(2,3))&(3>=0&3<xlen()&3>=0&3<ylen()=>Ch(3,3)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)&xlen()=3&ylen()=3&forall(X:_S1)[X=p2 or X=p1]&!(Ch(1,1)&Ch(1,0)&Ch(0,2)&!Ch(0,3)&!Ch(3,3)&!turn(p2)&Ch(0,0)&xlen()=3&turn(p1)&!Ch(3,1)&!Ch(2,3)&Ch(2,0)&!Ch(3,0)&Ch(2,1)&Ch(2,2)&ylen()=3&!Ch(3,2)&!Ch(1,3)&Ch(1,2)&Ch(0,1))
 f2:false
2019-10-15 19:39:26,065 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:!(!Ch(0,0))=>(exists(K21:Int,K22:Int)[ (Ch(K21,K22)&turn(p1)&K21>=0&K21<xlen()&K22>=0&K22<ylen())&(( !(Ch(0,0)&(K21>0|K22>0)) ) => ( !(Ch(0,0)&(K21>0|K22>0))&(!turn(p1)) )) ])
2019-10-15 19:42:05,370 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:!(!Ch(0,0))=>(exists(K21:Int,K22:Int)[ (Ch(K21,K22)&turn(p1)&K21>=0&K21<xlen()&K22>=0&K22<ylen())&(( !(Ch(0,0)&(K21>0|K22>0)) ) => ( !(Ch(0,0)&(K21>0|K22>0))&(!turn(p1)) )) ])
2019-10-15 19:44:58,238 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:!(!Ch(0,0))=>(exists(K21:Int,K22:Int)[ (Ch(K21,K22)&turn(p1)&K21>=0&K21<xlen()&K22>=0&K22<ylen())&(( !(Ch(0,0)&(K21>0|K22>0)) ) => ( !(Ch(0,0)&(K21>0|K22>0))&(!turn(p1)) )) ])
2019-10-15 19:45:19,572 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:!(!Ch(0,0))=>(exists(K21:Int,K22:Int)[ (Ch(K21,K22)&turn(p1)&K21>=0&K21<xlen()&K22>=0&K22<ylen())&(( !(Ch(0,0)&(K21>0|K22>0)) ) => ( !(Ch(0,0)&(K21>0|K22>0))&(!turn(p1)) )) ])
2019-10-15 19:45:48,456 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:!(!Ch(0,0))=>(exists(K21:Int,K22:Int)[ (Ch(K21,K22)&turn(p1)&K21>=0&K21<xlen()&K22>=0&K22<ylen())&(( !(Ch(0,0)&(K21>0|K22>0)) ) => ( !(Ch(0,0)&(K21>0|K22>0))&(!turn(p1)) )) ])
2019-10-15 19:45:56,193 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:!(!Ch(0,0))=>(exists(K21:Int,K22:Int)[ (Ch(K21,K22)&turn(p1)&K21>=0&K21<xlen()&K22>=0&K22<ylen())&(( !(Ch(0,0)&(K21>0|K22>0)) ) => ( !(Ch(0,0)&(K21>0|K22>0))&(!turn(p1)) )) ])
2019-10-15 19:46:56,408 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:!(!Ch(0,0))=>(exists(K21:Int,K22:Int)[ (Ch(K21,K22)&turn(p1)&K21>=0&K21<xlen()&K22>=0&K22<ylen())&(( !(Ch(0,0)&(K21>0|K22>0)) ) => ( !(Ch(0,0)&(K21>0|K22>0))&(!turn(p1)) )) ])
2019-10-15 19:46:56,456 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:forall(K19:Int,K20:Int)[ Ch(K19,K20)&turn(p2)&K19>=0&K19<xlen()&K20>=0&K20<ylen()=>(( !(Ch(0,0)&(K19>0|K20>0)) ) => ( !(Ch(0,0)&(K19>0|K20>0))&(!turn(p1)) )) ]
2019-10-15 19:46:56,625 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(0,X1)])
 f2:!(!Ch(0,0))=>(exists(K25:Int,K26:Int)[ (Ch(K25,K26)&turn(p1)&K25>=0&K25<xlen()&K26>=0&K26<ylen())&(( !(Ch(0,0)&(K25>0|K26>0)) ) => ( !(Ch(0,0)&(K25>0|K26>0))&(!turn(p1)) )) ])
2019-10-15 19:46:56,658 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:forall(K23:Int,K24:Int)[ Ch(K23,K24)&turn(p2)&K23>=0&K23<xlen()&K24>=0&K24<ylen()=>((( !(Ch(0,0)&(K23>0|K24>0)) ) => ( !(Ch(0,0)&(K23>0|K24>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(Ch(0,X1)&(K23>0|K24>X1))])) ]
2019-10-15 19:46:56,941 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(0,X1)])
 f2:!(!Ch(0,0))=>(exists(K29:Int,K30:Int)[ (Ch(K29,K30)&turn(p1)&K29>=0&K29<xlen()&K30>=0&K30<ylen())&((( !(Ch(0,0)&(K29>0|K30>0)) ) => ( !(Ch(0,0)&(K29>0|K30>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(Ch(1,X1)&(K29>1|K30>X1))])) ])
2019-10-15 19:46:56,976 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(1,X1)])
 f2:forall(K27:Int,K28:Int)[ Ch(K27,K28)&turn(p2)&K27>=0&K27<xlen()&K28>=0&K28<ylen()=>((( !(Ch(0,0)&(K27>0|K28>0)) ) => ( !(Ch(0,0)&(K27>0|K28>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(Ch(0,X1)&(K27>0|K28>X1))])) ]
2019-10-15 19:46:57,022 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(1,X1)])
 f2:forall(K27:Int,K28:Int)[ Ch(K27,K28)&turn(p2)&K27>=0&K27<xlen()&K28>=0&K28<ylen()=>((( !(Ch(0,0)&(K27>0|K28>0)) ) => ( !(Ch(0,0)&(K27>0|K28>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(Ch(0,X1)&(K27>0|K28>X1))])) ]
2019-10-15 19:46:57,533 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(0,X1)])
 f2:!(!Ch(0,0))=>(exists(K33:Int,K34:Int)[ (Ch(K33,K34)&turn(p1)&K33>=0&K33<xlen()&K34>=0&K34<ylen())&((( !(Ch(0,0)&(K33>0|K34>0)) ) => ( !(Ch(0,0)&(K33>0|K34>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(Ch(1,X1)&(K33>1|K34>X1))])&!(exists(X1:Int)[X1>=0&(Ch(0,X1)&(K33>0|K34>X1))])) ])
2019-10-15 19:46:57,570 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(1,X1)])&!(exists(X1:Int)[X1>=0&Ch(0,X1)])
 f2:forall(K31:Int,K32:Int)[ Ch(K31,K32)&turn(p2)&K31>=0&K31<xlen()&K32>=0&K32<ylen()=>((( !(Ch(0,0)&(K31>0|K32>0)) ) => ( !(Ch(0,0)&(K31>0|K32>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(Ch(0,X1)&(K31>0|K32>X1))])) ]
2019-10-15 19:46:57,600 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:forall(K16:Int,K17:Int)[K16>=0&K16<xlen()&K17>=0&K17<ylen()=>Ch(K16,K17)]&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)
 f2:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(0,X1)])
2019-10-15 19:47:18,775 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:!(!Ch(0,0))=>(exists(K21:Int,K22:Int)[ (Ch(K21,K22)&turn(p1)&K21>=0&K21<xlen()&K22>=0&K22<ylen())&(( !(Ch(0,0)&(K21>0|K22>0)) ) => ( !(Ch(0,0)&(K21>0|K22>0))&(!turn(p1)) )) ])
2019-10-15 19:47:18,827 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:forall(K19:Int,K20:Int)[ Ch(K19,K20)&turn(p2)&K19>=0&K19<xlen()&K20>=0&K20<ylen()=>(( !(Ch(0,0)&(K19>0|K20>0)) ) => ( !(Ch(0,0)&(K19>0|K20>0))&(!turn(p1)) )) ]
2019-10-15 19:47:19,012 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(0,X1)])
 f2:!(!Ch(0,0))=>(exists(K25:Int,K26:Int)[ (Ch(K25,K26)&turn(p1)&K25>=0&K25<xlen()&K26>=0&K26<ylen())&(( !(Ch(0,0)&(K25>0|K26>0)) ) => ( !(Ch(0,0)&(K25>0|K26>0))&(!turn(p1)) )) ])
2019-10-15 19:47:19,046 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:forall(K23:Int,K24:Int)[ Ch(K23,K24)&turn(p2)&K23>=0&K23<xlen()&K24>=0&K24<ylen()=>((( !(Ch(0,0)&(K23>0|K24>0)) ) => ( !(Ch(0,0)&(K23>0|K24>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(Ch(0,X1)&(K23>0|K24>X1))])) ]
2019-10-15 19:47:19,330 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(0,X1)])
 f2:!(!Ch(0,0))=>(exists(K29:Int,K30:Int)[ (Ch(K29,K30)&turn(p1)&K29>=0&K29<xlen()&K30>=0&K30<ylen())&((( !(Ch(0,0)&(K29>0|K30>0)) ) => ( !(Ch(0,0)&(K29>0|K30>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(Ch(1,X1)&(K29>1|K30>X1))])) ])
2019-10-15 19:47:19,368 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(1,X1)])
 f2:forall(K27:Int,K28:Int)[ Ch(K27,K28)&turn(p2)&K27>=0&K27<xlen()&K28>=0&K28<ylen()=>((( !(Ch(0,0)&(K27>0|K28>0)) ) => ( !(Ch(0,0)&(K27>0|K28>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(Ch(0,X1)&(K27>0|K28>X1))])) ]
2019-10-15 19:47:19,414 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(1,X1)])
 f2:forall(K27:Int,K28:Int)[ Ch(K27,K28)&turn(p2)&K27>=0&K27<xlen()&K28>=0&K28<ylen()=>((( !(Ch(0,0)&(K27>0|K28>0)) ) => ( !(Ch(0,0)&(K27>0|K28>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(Ch(0,X1)&(K27>0|K28>X1))])) ]
2019-10-15 19:47:19,923 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(0,X1)])
 f2:!(!Ch(0,0))=>(exists(K33:Int,K34:Int)[ (Ch(K33,K34)&turn(p1)&K33>=0&K33<xlen()&K34>=0&K34<ylen())&((( !(Ch(0,0)&(K33>0|K34>0)) ) => ( !(Ch(0,0)&(K33>0|K34>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(Ch(1,X1)&(K33>1|K34>X1))])&!(exists(X1:Int)[X1>=0&(Ch(0,X1)&(K33>0|K34>X1))])) ])
2019-10-15 19:47:19,960 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(1,X1)])&!(exists(X1:Int)[X1>=0&Ch(0,X1)])
 f2:forall(K31:Int,K32:Int)[ Ch(K31,K32)&turn(p2)&K31>=0&K31<xlen()&K32>=0&K32<ylen()=>((( !(Ch(0,0)&(K31>0|K32>0)) ) => ( !(Ch(0,0)&(K31>0|K32>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(Ch(0,X1)&(K31>0|K32>X1))])) ]
2019-10-15 19:47:19,991 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:forall(K16:Int,K17:Int)[K16>=0&K16<xlen()&K17>=0&K17<ylen()=>Ch(K16,K17)]&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)
 f2:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(0,X1)])
2019-10-15 19:47:20,956 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 0&! Ch(1,G0)])
 f2:!(!Ch(0,0))=>(exists(K37:Int,K38:Int)[ (Ch(K37,K38)&turn(p1)&K37>=0&K37<xlen()&K38>=0&K38<ylen())&((( !(Ch(0,0)&(K37>0|K38>0)) ) => ( !(Ch(0,0)&(K37>0|K38>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 0&(Ch(1,G0)&(K37>1|K38>G0))])&!(exists(G0:Int)[G0>=0&G0 = 0&! (Ch(1,G0)&(K37>1|K38>G0))])) ])
2019-10-15 19:47:21,002 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 > 0&Ch(1,G0)])&!(exists(G0:Int)[G0>=0&G0 = 0&! Ch(1,G0)])
 f2:forall(K35:Int,K36:Int)[ Ch(K35,K36)&turn(p2)&K35>=0&K35<xlen()&K36>=0&K36<ylen()=>((( !(Ch(0,0)&(K35>0|K36>0)) ) => ( !(Ch(0,0)&(K35>0|K36>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 0&! (Ch(1,G0)&(K35>1|K36>G0))])) ]
2019-10-15 19:48:22,386 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:!(!Ch(0,0))=>(exists(K21:Int,K22:Int)[ (Ch(K21,K22)&turn(p1)&K21>=0&K21<xlen()&K22>=0&K22<ylen())&(( !(Ch(0,0)&(K21>0|K22>0)) ) => ( !(Ch(0,0)&(K21>0|K22>0))&(!turn(p1)) )) ])
2019-10-15 19:48:22,428 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:forall(K19:Int,K20:Int)[ Ch(K19,K20)&turn(p2)&K19>=0&K19<xlen()&K20>=0&K20<ylen()=>(( !(Ch(0,0)&(K19>0|K20>0)) ) => ( !(Ch(0,0)&(K19>0|K20>0))&(!turn(p1)) )) ]
2019-10-15 19:48:22,647 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(0,X1)])
 f2:!(!Ch(0,0))=>(exists(K25:Int,K26:Int)[ (Ch(K25,K26)&turn(p1)&K25>=0&K25<xlen()&K26>=0&K26<ylen())&(( !(Ch(0,0)&(K25>0|K26>0)) ) => ( !(Ch(0,0)&(K25>0|K26>0))&(!turn(p1)) )) ])
2019-10-15 19:48:22,685 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:forall(K23:Int,K24:Int)[ Ch(K23,K24)&turn(p2)&K23>=0&K23<xlen()&K24>=0&K24<ylen()=>((( !(Ch(0,0)&(K23>0|K24>0)) ) => ( !(Ch(0,0)&(K23>0|K24>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(Ch(0,X1)&(K23>0|K24>X1))])) ]
2019-10-15 19:48:23,003 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(0,X1)])
 f2:!(!Ch(0,0))=>(exists(K29:Int,K30:Int)[ (Ch(K29,K30)&turn(p1)&K29>=0&K29<xlen()&K30>=0&K30<ylen())&((( !(Ch(0,0)&(K29>0|K30>0)) ) => ( !(Ch(0,0)&(K29>0|K30>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(Ch(1,X1)&(K29>1|K30>X1))])) ])
2019-10-15 19:48:23,050 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(1,X1)])
 f2:forall(K27:Int,K28:Int)[ Ch(K27,K28)&turn(p2)&K27>=0&K27<xlen()&K28>=0&K28<ylen()=>((( !(Ch(0,0)&(K27>0|K28>0)) ) => ( !(Ch(0,0)&(K27>0|K28>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(Ch(0,X1)&(K27>0|K28>X1))])) ]
2019-10-15 19:48:23,105 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(1,X1)])
 f2:forall(K27:Int,K28:Int)[ Ch(K27,K28)&turn(p2)&K27>=0&K27<xlen()&K28>=0&K28<ylen()=>((( !(Ch(0,0)&(K27>0|K28>0)) ) => ( !(Ch(0,0)&(K27>0|K28>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(Ch(0,X1)&(K27>0|K28>X1))])) ]
2019-10-15 19:48:23,656 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(0,X1)])
 f2:!(!Ch(0,0))=>(exists(K33:Int,K34:Int)[ (Ch(K33,K34)&turn(p1)&K33>=0&K33<xlen()&K34>=0&K34<ylen())&((( !(Ch(0,0)&(K33>0|K34>0)) ) => ( !(Ch(0,0)&(K33>0|K34>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(Ch(1,X1)&(K33>1|K34>X1))])&!(exists(X1:Int)[X1>=0&(Ch(0,X1)&(K33>0|K34>X1))])) ])
2019-10-15 19:48:23,703 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(1,X1)])&!(exists(X1:Int)[X1>=0&Ch(0,X1)])
 f2:forall(K31:Int,K32:Int)[ Ch(K31,K32)&turn(p2)&K31>=0&K31<xlen()&K32>=0&K32<ylen()=>((( !(Ch(0,0)&(K31>0|K32>0)) ) => ( !(Ch(0,0)&(K31>0|K32>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(Ch(0,X1)&(K31>0|K32>X1))])) ]
2019-10-15 19:48:23,734 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:forall(K16:Int,K17:Int)[K16>=0&K16<xlen()&K17>=0&K17<ylen()=>Ch(K16,K17)]&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)
 f2:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(0,X1)])
2019-10-15 19:48:24,699 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 0&! Ch(1,G0)])
 f2:!(!Ch(0,0))=>(exists(K37:Int,K38:Int)[ (Ch(K37,K38)&turn(p1)&K37>=0&K37<xlen()&K38>=0&K38<ylen())&((( !(Ch(0,0)&(K37>0|K38>0)) ) => ( !(Ch(0,0)&(K37>0|K38>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 0&(Ch(1,G0)&(K37>1|K38>G0))])&!(exists(G0:Int)[G0>=0&G0 = 0&! (Ch(1,G0)&(K37>1|K38>G0))])) ])
2019-10-15 19:48:24,745 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 > 0&Ch(1,G0)])&!(exists(G0:Int)[G0>=0&G0 = 0&! Ch(1,G0)])
 f2:forall(K35:Int,K36:Int)[ Ch(K35,K36)&turn(p2)&K35>=0&K35<xlen()&K36>=0&K36<ylen()=>((( !(Ch(0,0)&(K35>0|K36>0)) ) => ( !(Ch(0,0)&(K35>0|K36>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 0&! (Ch(1,G0)&(K35>1|K36>G0))])) ]
2019-10-15 20:00:03,556 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:!(!Ch(0,0))=>(exists(K21:Int,K22:Int)[ (Ch(K21,K22)&turn(p1)&K21>=0&K21<xlen()&K22>=0&K22<ylen())&(( !(Ch(0,0)&(K21>0|K22>0)) ) => ( !(Ch(0,0)&(K21>0|K22>0))&(!turn(p1)) )) ])
2019-10-15 20:00:03,600 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:forall(K19:Int,K20:Int)[ Ch(K19,K20)&turn(p2)&K19>=0&K19<xlen()&K20>=0&K20<ylen()=>(( !(Ch(0,0)&(K19>0|K20>0)) ) => ( !(Ch(0,0)&(K19>0|K20>0))&(!turn(p1)) )) ]
2019-10-15 20:00:03,812 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(0,X1)])
 f2:!(!Ch(0,0))=>(exists(K25:Int,K26:Int)[ (Ch(K25,K26)&turn(p1)&K25>=0&K25<xlen()&K26>=0&K26<ylen())&(( !(Ch(0,0)&(K25>0|K26>0)) ) => ( !(Ch(0,0)&(K25>0|K26>0))&(!turn(p1)) )) ])
2019-10-15 20:00:03,846 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:forall(K23:Int,K24:Int)[ Ch(K23,K24)&turn(p2)&K23>=0&K23<xlen()&K24>=0&K24<ylen()=>((( !(Ch(0,0)&(K23>0|K24>0)) ) => ( !(Ch(0,0)&(K23>0|K24>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(Ch(0,X1)&(K23>0|K24>X1))])) ]
2019-10-15 20:00:04,159 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(0,X1)])
 f2:!(!Ch(0,0))=>(exists(K29:Int,K30:Int)[ (Ch(K29,K30)&turn(p1)&K29>=0&K29<xlen()&K30>=0&K30<ylen())&((( !(Ch(0,0)&(K29>0|K30>0)) ) => ( !(Ch(0,0)&(K29>0|K30>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(Ch(1,X1)&(K29>1|K30>X1))])) ])
2019-10-15 20:00:04,198 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(1,X1)])
 f2:forall(K27:Int,K28:Int)[ Ch(K27,K28)&turn(p2)&K27>=0&K27<xlen()&K28>=0&K28<ylen()=>((( !(Ch(0,0)&(K27>0|K28>0)) ) => ( !(Ch(0,0)&(K27>0|K28>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(Ch(0,X1)&(K27>0|K28>X1))])) ]
2019-10-15 20:00:04,251 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(1,X1)])
 f2:forall(K27:Int,K28:Int)[ Ch(K27,K28)&turn(p2)&K27>=0&K27<xlen()&K28>=0&K28<ylen()=>((( !(Ch(0,0)&(K27>0|K28>0)) ) => ( !(Ch(0,0)&(K27>0|K28>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(Ch(0,X1)&(K27>0|K28>X1))])) ]
2019-10-15 20:00:04,803 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(0,X1)])
 f2:!(!Ch(0,0))=>(exists(K33:Int,K34:Int)[ (Ch(K33,K34)&turn(p1)&K33>=0&K33<xlen()&K34>=0&K34<ylen())&((( !(Ch(0,0)&(K33>0|K34>0)) ) => ( !(Ch(0,0)&(K33>0|K34>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(Ch(1,X1)&(K33>1|K34>X1))])&!(exists(X1:Int)[X1>=0&(Ch(0,X1)&(K33>0|K34>X1))])) ])
2019-10-15 20:00:04,840 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(1,X1)])&!(exists(X1:Int)[X1>=0&Ch(0,X1)])
 f2:forall(K31:Int,K32:Int)[ Ch(K31,K32)&turn(p2)&K31>=0&K31<xlen()&K32>=0&K32<ylen()=>((( !(Ch(0,0)&(K31>0|K32>0)) ) => ( !(Ch(0,0)&(K31>0|K32>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(Ch(0,X1)&(K31>0|K32>X1))])) ]
2019-10-15 20:00:04,872 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:forall(K16:Int,K17:Int)[K16>=0&K16<xlen()&K17>=0&K17<ylen()=>Ch(K16,K17)]&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)
 f2:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(0,X1)])
2019-10-15 20:00:05,804 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 0&! Ch(1,G0)])
 f2:!(!Ch(0,0))=>(exists(K37:Int,K38:Int)[ (Ch(K37,K38)&turn(p1)&K37>=0&K37<xlen()&K38>=0&K38<ylen())&((( !(Ch(0,0)&(K37>0|K38>0)) ) => ( !(Ch(0,0)&(K37>0|K38>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 0&(Ch(1,G0)&(K37>1|K38>G0))])&!(exists(G0:Int)[G0>=0&G0 = 0&! (Ch(1,G0)&(K37>1|K38>G0))])) ])
2019-10-15 20:00:05,851 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 > 0&Ch(1,G0)])&!(exists(G0:Int)[G0>=0&G0 = 0&! Ch(1,G0)])
 f2:forall(K35:Int,K36:Int)[ Ch(K35,K36)&turn(p2)&K35>=0&K35<xlen()&K36>=0&K36<ylen()=>((( !(Ch(0,0)&(K35>0|K36>0)) ) => ( !(Ch(0,0)&(K35>0|K36>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 0&! (Ch(1,G0)&(K35>1|K36>G0))])) ]
2019-10-15 20:00:05,985 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)&xlen()=2&ylen()=2&forall(X:_S1)[X=p2 or X=p1]
 f2:false
2019-10-15 20:00:06,040 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)&xlen()=2&ylen()=2&forall(X:_S1)[X=p2 or X=p1]&!(Ch(1,1)&Ch(1,0)&!Ch(0,2)&!Ch(2,1)&!turn(p2)&Ch(0,0)&xlen()=2&turn(p1)&!Ch(2,0)&!Ch(2,2)&ylen()=2&!Ch(1,2)&Ch(0,1))
 f2:false
2019-10-15 20:00:06,580 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 0&! Ch(1,G0)])
 f2:!(!Ch(0,0))=>(exists(K41:Int,K42:Int)[ (Ch(K41,K42)&turn(p1)&K41>=0&K41<xlen()&K42>=0&K42<ylen())&((( !(Ch(0,0)&(K41>0|K42>0)) ) => ( !(Ch(0,0)&(K41>0|K42>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 0&(Ch(1,G0)&(K41>1|K42>G0))])&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K41>0|K42>G0))&! (Ch(G0,0)&(K41>G0|K42>0))])) ])
2019-10-15 20:00:06,644 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 0&! Ch(1,G0)])
 f2:!(!Ch(0,0))=>(exists(K41:Int,K42:Int)[ (Ch(K41,K42)&turn(p1)&K41>=0&K41<xlen()&K42>=0&K42<ylen())&((( !(Ch(0,0)&(K41>0|K42>0)) ) => ( !(Ch(0,0)&(K41>0|K42>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 0&(Ch(1,G0)&(K41>1|K42>G0))])&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K41>0|K42>G0))&! (Ch(G0,0)&(K41>G0|K42>0))])) ])
2019-10-15 20:00:06,680 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 > 0&Ch(1,G0)])&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(G0,0)])
 f2:forall(K39:Int,K40:Int)[ Ch(K39,K40)&turn(p2)&K39>=0&K39<xlen()&K40>=0&K40<ylen()=>((( !(Ch(0,0)&(K39>0|K40>0)) ) => ( !(Ch(0,0)&(K39>0|K40>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 0&! (Ch(1,G0)&(K39>1|K40>G0))])) ]
2019-10-15 20:00:07,631 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 0&! Ch(1,G0)])&!(turn(p2))
 f2:!(!Ch(0,0))=>(exists(K45:Int,K46:Int)[ (Ch(K45,K46)&turn(p1)&K45>=0&K45<xlen()&K46>=0&K46<ylen())&((( !(Ch(0,0)&(K45>0|K46>0)) ) => ( !(Ch(0,0)&(K45>0|K46>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K45>0|K46>G0))&! (Ch(G0,0)&(K45>G0|K46>0))])&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K45>1|K46>G0))&! (Ch(0,1)&(K45>0|K46>1))])) ])
2019-10-15 20:00:07,950 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 0&! Ch(1,G0)])&!(turn(p2))
 f2:!(!Ch(0,0))=>(exists(K45:Int,K46:Int)[ (Ch(K45,K46)&turn(p1)&K45>=0&K45<xlen()&K46>=0&K46<ylen())&((( !(Ch(0,0)&(K45>0|K46>0)) ) => ( !(Ch(0,0)&(K45>0|K46>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K45>0|K46>G0))&! (Ch(G0,0)&(K45>G0|K46>0))])&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K45>1|K46>G0))&! (Ch(0,1)&(K45>0|K46>1))])) ])
2019-10-15 20:00:07,997 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(G0,0)])&!(exists(G0:Int)[G0>=0&Ch(1,G0)&! Ch(0,1)])
 f2:forall(K43:Int,K44:Int)[ Ch(K43,K44)&turn(p2)&K43>=0&K43<xlen()&K44>=0&K44<ylen()=>((( !(Ch(0,0)&(K43>0|K44>0)) ) => ( !(Ch(0,0)&(K43>0|K44>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 0&! (Ch(1,G0)&(K43>1|K44>G0))])&!((!turn(p2)))) ]
2019-10-15 20:00:08,233 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)&xlen()=2&ylen()=2&forall(X:_S1)[X=p2 or X=p1]
 f2:false
2019-10-15 20:00:08,277 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)&xlen()=2&ylen()=2&forall(X:_S1)[X=p2 or X=p1]&!(Ch(1,1)&Ch(1,0)&!Ch(0,2)&!Ch(2,1)&!turn(p2)&Ch(0,0)&xlen()=2&turn(p1)&!Ch(2,0)&!Ch(2,2)&ylen()=2&!Ch(1,2)&Ch(0,1))
 f2:false
2019-10-15 20:00:08,827 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(turn(p2))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&turn(p2)])
 f2:!(!Ch(0,0))=>(exists(K49:Int,K50:Int)[ (Ch(K49,K50)&turn(p1)&K49>=0&K49<xlen()&K50>=0&K50<ylen())&((( !(Ch(0,0)&(K49>0|K50>0)) ) => ( !(Ch(0,0)&(K49>0|K50>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K49>0|K50>G0))&! (Ch(G0,0)&(K49>G0|K50>0))])&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K49>1|K50>G0))&! (Ch(0,1)&(K49>0|K50>1))])) ])
2019-10-15 20:00:08,873 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(G0,0)])&!(exists(G0:Int)[G0>=0&Ch(1,G0)&! Ch(0,1)])
 f2:forall(K47:Int,K48:Int)[ Ch(K47,K48)&turn(p2)&K47>=0&K47<xlen()&K48>=0&K48<ylen()=>((( !(Ch(0,0)&(K47>0|K48>0)) ) => ( !(Ch(0,0)&(K47>0|K48>0))&(!turn(p1)) ))&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K47>0|K48>G0))&(!turn(p2))])) ]
2019-10-15 20:00:34,083 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&turn(p2)])&!(turn(p2))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(1,0)&! Ch(0,1)])
 f2:!(!Ch(0,0))=>(exists(K53:Int,K54:Int)[ (Ch(K53,K54)&turn(p1)&K53>=0&K53<xlen()&K54>=0&K54<ylen())&((( !(Ch(0,0)&(K53>0|K54>0)) ) => ( !(Ch(0,0)&(K53>0|K54>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K53>0|K54>G0))&! (Ch(G0,0)&(K53>G0|K54>0))])&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K53>1|K54>G0))&! (Ch(0,1)&(K53>0|K54>1))])) ])
2019-10-15 20:00:34,837 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&turn(p2)])&!(turn(p2))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(1,0)&! Ch(0,1)])
 f2:!(!Ch(0,0))=>(exists(K53:Int,K54:Int)[ (Ch(K53,K54)&turn(p1)&K53>=0&K53<xlen()&K54>=0&K54<ylen())&((( !(Ch(0,0)&(K53>0|K54>0)) ) => ( !(Ch(0,0)&(K53>0|K54>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K53>0|K54>G0))&! (Ch(G0,0)&(K53>G0|K54>0))])&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K53>1|K54>G0))&! (Ch(0,1)&(K53>0|K54>1))])) ])
2019-10-15 20:00:34,883 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(G0,0)])&!(exists(G0:Int)[G0>=0&Ch(1,G0)&! Ch(0,1)])
 f2:forall(K51:Int,K52:Int)[ Ch(K51,K52)&turn(p2)&K51>=0&K51<xlen()&K52>=0&K52<ylen()=>((( !(Ch(0,0)&(K51>0|K52>0)) ) => ( !(Ch(0,0)&(K51>0|K52>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K51>0|K52>G0))&(!turn(p2))])&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K51>0|K52>G0))&! (Ch(1,0)&(K51>1|K52>0))&! (Ch(0,1)&(K51>0|K52>1))])) ]
2019-10-15 20:00:34,939 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(G0,0)])&!(exists(G0:Int)[G0>=0&Ch(1,G0)&! Ch(0,1)])
 f2:forall(K51:Int,K52:Int)[ Ch(K51,K52)&turn(p2)&K51>=0&K51<xlen()&K52>=0&K52<ylen()=>((( !(Ch(0,0)&(K51>0|K52>0)) ) => ( !(Ch(0,0)&(K51>0|K52>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K51>0|K52>G0))&(!turn(p2))])&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K51>0|K52>G0))&! (Ch(1,0)&(K51>1|K52>0))&! (Ch(0,1)&(K51>0|K52>1))])) ]
2019-10-15 20:00:34,972 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(G0,0)])&!(exists(G0:Int)[G0>=0&Ch(1,G0)&! Ch(0,1)])
 f2:forall(K51:Int,K52:Int)[ Ch(K51,K52)&turn(p2)&K51>=0&K51<xlen()&K52>=0&K52<ylen()=>((( !(Ch(0,0)&(K51>0|K52>0)) ) => ( !(Ch(0,0)&(K51>0|K52>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K51>0|K52>G0))&(!turn(p2))])&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K51>0|K52>G0))&! (Ch(1,0)&(K51>1|K52>0))&! (Ch(0,1)&(K51>0|K52>1))])) ]
2019-10-15 20:01:10,650 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&turn(p2)])&!(turn(p2))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(1,0)&! Ch(0,1)])&!(exists(G0:Int)[G0>=0&Ch(1,0)&Ch(G0,1)&! Ch(1,1)])
 f2:!(!Ch(0,0))=>(exists(K57:Int,K58:Int)[ (Ch(K57,K58)&turn(p1)&K57>=0&K57<xlen()&K58>=0&K58<ylen())&((( !(Ch(0,0)&(K57>0|K58>0)) ) => ( !(Ch(0,0)&(K57>0|K58>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K57>0|K58>G0))&! (Ch(G0,0)&(K57>G0|K58>0))])&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K57>1|K58>G0))&! (Ch(0,1)&(K57>0|K58>1))])&!(exists(G0:Int)[G0>=0&G0 > 1&(Ch(0,G0)&(K57>0|K58>G0))])) ])
2019-10-15 20:01:11,317 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&turn(p2)])&!(turn(p2))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(1,0)&! Ch(0,1)])&!(exists(G0:Int)[G0>=0&Ch(1,0)&Ch(G0,1)&! Ch(1,1)])
 f2:!(!Ch(0,0))=>(exists(K57:Int,K58:Int)[ (Ch(K57,K58)&turn(p1)&K57>=0&K57<xlen()&K58>=0&K58<ylen())&((( !(Ch(0,0)&(K57>0|K58>0)) ) => ( !(Ch(0,0)&(K57>0|K58>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K57>0|K58>G0))&! (Ch(G0,0)&(K57>G0|K58>0))])&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K57>1|K58>G0))&! (Ch(0,1)&(K57>0|K58>1))])&!(exists(G0:Int)[G0>=0&G0 > 1&(Ch(0,G0)&(K57>0|K58>G0))])) ])
2019-10-15 20:01:11,360 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&turn(p2)])&!(turn(p2))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(1,0)&! Ch(0,1)])&!(exists(G0:Int)[G0>=0&Ch(1,0)&Ch(G0,1)&! Ch(1,1)])
 f2:!(!Ch(0,0))=>(exists(K57:Int,K58:Int)[ (Ch(K57,K58)&turn(p1)&K57>=0&K57<xlen()&K58>=0&K58<ylen())&((( !(Ch(0,0)&(K57>0|K58>0)) ) => ( !(Ch(0,0)&(K57>0|K58>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K57>0|K58>G0))&! (Ch(G0,0)&(K57>G0|K58>0))])&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K57>1|K58>G0))&! (Ch(0,1)&(K57>0|K58>1))])&!(exists(G0:Int)[G0>=0&G0 > 1&(Ch(0,G0)&(K57>0|K58>G0))])) ])
2019-10-15 20:01:11,425 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(G0,0)])&!(exists(G0:Int)[G0>=0&Ch(1,G0)&! Ch(0,1)])&!(exists(G0:Int)[G0>=0&G0 > 1&Ch(0,G0)])
 f2:forall(K55:Int,K56:Int)[ Ch(K55,K56)&turn(p2)&K55>=0&K55<xlen()&K56>=0&K56<ylen()=>((( !(Ch(0,0)&(K55>0|K56>0)) ) => ( !(Ch(0,0)&(K55>0|K56>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K55>0|K56>G0))&(!turn(p2))])&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K55>0|K56>G0))&! (Ch(1,0)&(K55>1|K56>0))&! (Ch(0,1)&(K55>0|K56>1))])&!(exists(G0:Int)[G0>=0&(Ch(1,0)&(K55>1|K56>0))&(Ch(G0,1)&(K55>G0|K56>1))&! (Ch(1,1)&(K55>1|K56>1))])) ]
2019-10-15 20:01:12,213 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(3>=0&3<xlen()&0>=0&0<ylen()=>Ch(3,0))&(4>=0&4<xlen()&0>=0&0<ylen()=>Ch(4,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(3>=0&3<xlen()&1>=0&1<ylen()=>Ch(3,1))&(4>=0&4<xlen()&1>=0&1<ylen()=>Ch(4,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2))&(3>=0&3<xlen()&2>=0&2<ylen()=>Ch(3,2))&(4>=0&4<xlen()&2>=0&2<ylen()=>Ch(4,2))&(0>=0&0<xlen()&3>=0&3<ylen()=>Ch(0,3))&(1>=0&1<xlen()&3>=0&3<ylen()=>Ch(1,3))&(2>=0&2<xlen()&3>=0&3<ylen()=>Ch(2,3))&(3>=0&3<xlen()&3>=0&3<ylen()=>Ch(3,3))&(4>=0&4<xlen()&3>=0&3<ylen()=>Ch(4,3))&(0>=0&0<xlen()&4>=0&4<ylen()=>Ch(0,4))&(1>=0&1<xlen()&4>=0&4<ylen()=>Ch(1,4))&(2>=0&2<xlen()&4>=0&4<ylen()=>Ch(2,4))&(3>=0&3<xlen()&4>=0&4<ylen()=>Ch(3,4))&(4>=0&4<xlen()&4>=0&4<ylen()=>Ch(4,4)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)&ylen()=4&xlen()=4&forall(X:_S1)[X=p2 or X=p1]
 f2:false
2019-10-15 20:01:12,326 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(3>=0&3<xlen()&0>=0&0<ylen()=>Ch(3,0))&(4>=0&4<xlen()&0>=0&0<ylen()=>Ch(4,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(3>=0&3<xlen()&1>=0&1<ylen()=>Ch(3,1))&(4>=0&4<xlen()&1>=0&1<ylen()=>Ch(4,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2))&(3>=0&3<xlen()&2>=0&2<ylen()=>Ch(3,2))&(4>=0&4<xlen()&2>=0&2<ylen()=>Ch(4,2))&(0>=0&0<xlen()&3>=0&3<ylen()=>Ch(0,3))&(1>=0&1<xlen()&3>=0&3<ylen()=>Ch(1,3))&(2>=0&2<xlen()&3>=0&3<ylen()=>Ch(2,3))&(3>=0&3<xlen()&3>=0&3<ylen()=>Ch(3,3))&(4>=0&4<xlen()&3>=0&3<ylen()=>Ch(4,3))&(0>=0&0<xlen()&4>=0&4<ylen()=>Ch(0,4))&(1>=0&1<xlen()&4>=0&4<ylen()=>Ch(1,4))&(2>=0&2<xlen()&4>=0&4<ylen()=>Ch(2,4))&(3>=0&3<xlen()&4>=0&4<ylen()=>Ch(3,4))&(4>=0&4<xlen()&4>=0&4<ylen()=>Ch(4,4)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)&ylen()=4&xlen()=4&forall(X:_S1)[X=p2 or X=p1]&!(Ch(1,0)&Ch(2,1)&!turn(p2)&Ch(2,3)&!Ch(1,4)&Ch(3,1)&ylen()=4&Ch(3,3)&Ch(1,2)&Ch(0,2)&Ch(0,0)&!Ch(4,2)&!Ch(4,3)&!Ch(4,1)&!Ch(4,4)&!Ch(3,4)&Ch(1,1)&Ch(2,0)&Ch(2,2)&turn(p1)&!Ch(2,4)&Ch(3,0)&!Ch(0,4)&Ch(3,2)&Ch(1,3)&Ch(0,3)&xlen()=4&!Ch(4,0)&Ch(0,1))
 f2:false
2019-10-15 20:01:20,781 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&turn(p2)])&!(turn(p2))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(1,0)&! Ch(0,1)])&!(exists(G0:Int)[G0>=0&Ch(1,0)&Ch(G0,1)&! Ch(1,1)])&!(exists(G0:Int)[G0>=0&G0 > 1&Ch(0,G0)])
 f2:!(!Ch(0,0))=>(exists(K61:Int,K62:Int)[ (Ch(K61,K62)&turn(p1)&K61>=0&K61<xlen()&K62>=0&K62<ylen())&((( !(Ch(0,0)&(K61>0|K62>0)) ) => ( !(Ch(0,0)&(K61>0|K62>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K61>0|K62>G0))&! (Ch(G0,0)&(K61>G0|K62>0))])&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K61>1|K62>G0))&! (Ch(0,1)&(K61>0|K62>1))])&!(exists(G0:Int)[G0>=0&G0 > 1&(Ch(0,G0)&(K61>0|K62>G0))])&!((Ch(1,1)&(K61>1|K62>1)))) ])
2019-10-15 20:01:20,828 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(G0,0)])&!(exists(G0:Int)[G0>=0&Ch(1,G0)&! Ch(0,1)])&!(exists(G0:Int)[G0>=0&G0 > 1&Ch(0,G0)])&!(Ch(1,1))
 f2:forall(K59:Int,K60:Int)[ Ch(K59,K60)&turn(p2)&K59>=0&K59<xlen()&K60>=0&K60<ylen()=>((( !(Ch(0,0)&(K59>0|K60>0)) ) => ( !(Ch(0,0)&(K59>0|K60>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K59>0|K60>G0))&(!turn(p2))])&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K59>0|K60>G0))&! (Ch(1,0)&(K59>1|K60>0))&! (Ch(0,1)&(K59>0|K60>1))])&!(exists(G0:Int)[G0>=0&(Ch(1,0)&(K59>1|K60>0))&(Ch(G0,1)&(K59>G0|K60>1))&! (Ch(1,1)&(K59>1|K60>1))])&!(exists(G0:Int)[G0>=0&G0 > 1&(Ch(0,G0)&(K59>0|K60>G0))])) ]
2019-10-15 20:01:20,875 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(G0,0)])&!(exists(G0:Int)[G0>=0&Ch(1,G0)&! Ch(0,1)])&!(exists(G0:Int)[G0>=0&G0 > 1&Ch(0,G0)])&!(Ch(1,1))
 f2:forall(K59:Int,K60:Int)[ Ch(K59,K60)&turn(p2)&K59>=0&K59<xlen()&K60>=0&K60<ylen()=>((( !(Ch(0,0)&(K59>0|K60>0)) ) => ( !(Ch(0,0)&(K59>0|K60>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K59>0|K60>G0))&(!turn(p2))])&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K59>0|K60>G0))&! (Ch(1,0)&(K59>1|K60>0))&! (Ch(0,1)&(K59>0|K60>1))])&!(exists(G0:Int)[G0>=0&(Ch(1,0)&(K59>1|K60>0))&(Ch(G0,1)&(K59>G0|K60>1))&! (Ch(1,1)&(K59>1|K60>1))])&!(exists(G0:Int)[G0>=0&G0 > 1&(Ch(0,G0)&(K59>0|K60>G0))])) ]
2019-10-15 20:01:20,914 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(G0,0)])&!(exists(G0:Int)[G0>=0&Ch(1,G0)&! Ch(0,1)])&!(exists(G0:Int)[G0>=0&G0 > 1&Ch(0,G0)])&!(Ch(1,1))
 f2:forall(K59:Int,K60:Int)[ Ch(K59,K60)&turn(p2)&K59>=0&K59<xlen()&K60>=0&K60<ylen()=>((( !(Ch(0,0)&(K59>0|K60>0)) ) => ( !(Ch(0,0)&(K59>0|K60>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K59>0|K60>G0))&(!turn(p2))])&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K59>0|K60>G0))&! (Ch(1,0)&(K59>1|K60>0))&! (Ch(0,1)&(K59>0|K60>1))])&!(exists(G0:Int)[G0>=0&(Ch(1,0)&(K59>1|K60>0))&(Ch(G0,1)&(K59>G0|K60>1))&! (Ch(1,1)&(K59>1|K60>1))])&!(exists(G0:Int)[G0>=0&G0 > 1&(Ch(0,G0)&(K59>0|K60>G0))])) ]
2019-10-15 20:01:22,266 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&turn(p2)])&!(turn(p2))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(1,0)&! Ch(0,1)])&!(exists(G0:Int)[G0>=0&Ch(1,0)&Ch(G0,1)&! Ch(1,1)])&!(exists(G0:Int)[G0>=0&G0 > 1&Ch(0,G0)])
 f2:!(!Ch(0,0))=>(exists(K65:Int,K66:Int)[ (Ch(K65,K66)&turn(p1)&K65>=0&K65<xlen()&K66>=0&K66<ylen())&((( !(Ch(0,0)&(K65>0|K66>0)) ) => ( !(Ch(0,0)&(K65>0|K66>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K65>1|K66>G0))&! (Ch(0,1)&(K65>0|K66>1))])&!(exists(G0:Int)[G0>=0&G0 > 1&(Ch(0,G0)&(K65>0|K66>G0))])&!((Ch(1,1)&(K65>1|K66>1)))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K65>G0|K66>G1))&! (Ch(G1,0)&(K65>G1|K66>0))])) ])
2019-10-15 20:01:22,313 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(1,G0)&! Ch(0,1)])&!(exists(G0:Int)[G0>=0&G0 > 1&Ch(0,G0)])&!(Ch(1,1))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,0)])
 f2:forall(K63:Int,K64:Int)[ Ch(K63,K64)&turn(p2)&K63>=0&K63<xlen()&K64>=0&K64<ylen()=>((( !(Ch(0,0)&(K63>0|K64>0)) ) => ( !(Ch(0,0)&(K63>0|K64>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K63>0|K64>G0))&(!turn(p2))])&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K63>0|K64>G0))&! (Ch(1,0)&(K63>1|K64>0))&! (Ch(0,1)&(K63>0|K64>1))])&!(exists(G0:Int)[G0>=0&(Ch(1,0)&(K63>1|K64>0))&(Ch(G0,1)&(K63>G0|K64>1))&! (Ch(1,1)&(K63>1|K64>1))])&!(exists(G0:Int)[G0>=0&G0 > 1&(Ch(0,G0)&(K63>0|K64>G0))])) ]
2019-10-15 20:01:22,359 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(1,G0)&! Ch(0,1)])&!(exists(G0:Int)[G0>=0&G0 > 1&Ch(0,G0)])&!(Ch(1,1))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,0)])
 f2:forall(K63:Int,K64:Int)[ Ch(K63,K64)&turn(p2)&K63>=0&K63<xlen()&K64>=0&K64<ylen()=>((( !(Ch(0,0)&(K63>0|K64>0)) ) => ( !(Ch(0,0)&(K63>0|K64>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K63>0|K64>G0))&(!turn(p2))])&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K63>0|K64>G0))&! (Ch(1,0)&(K63>1|K64>0))&! (Ch(0,1)&(K63>0|K64>1))])&!(exists(G0:Int)[G0>=0&(Ch(1,0)&(K63>1|K64>0))&(Ch(G0,1)&(K63>G0|K64>1))&! (Ch(1,1)&(K63>1|K64>1))])&!(exists(G0:Int)[G0>=0&G0 > 1&(Ch(0,G0)&(K63>0|K64>G0))])) ]
2019-10-15 20:01:22,395 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(1,G0)&! Ch(0,1)])&!(exists(G0:Int)[G0>=0&G0 > 1&Ch(0,G0)])&!(Ch(1,1))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,0)])
 f2:forall(K63:Int,K64:Int)[ Ch(K63,K64)&turn(p2)&K63>=0&K63<xlen()&K64>=0&K64<ylen()=>((( !(Ch(0,0)&(K63>0|K64>0)) ) => ( !(Ch(0,0)&(K63>0|K64>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K63>0|K64>G0))&(!turn(p2))])&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K63>0|K64>G0))&! (Ch(1,0)&(K63>1|K64>0))&! (Ch(0,1)&(K63>0|K64>1))])&!(exists(G0:Int)[G0>=0&(Ch(1,0)&(K63>1|K64>0))&(Ch(G0,1)&(K63>G0|K64>1))&! (Ch(1,1)&(K63>1|K64>1))])&!(exists(G0:Int)[G0>=0&G0 > 1&(Ch(0,G0)&(K63>0|K64>G0))])) ]
2019-10-15 20:01:29,323 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&turn(p2)])&!(turn(p2))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(1,0)&! Ch(0,1)])&!(exists(G0:Int)[G0>=0&Ch(1,0)&Ch(G0,1)&! Ch(1,1)])&!(exists(G0:Int)[G0>=0&G0 > 1&Ch(0,G0)])
 f2:!(!Ch(0,0))=>(exists(K69:Int,K70:Int)[ (Ch(K69,K70)&turn(p1)&K69>=0&K69<xlen()&K70>=0&K70<ylen())&((( !(Ch(0,0)&(K69>0|K70>0)) ) => ( !(Ch(0,0)&(K69>0|K70>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 1&(Ch(0,G0)&(K69>0|K70>G0))])&!((Ch(1,1)&(K69>1|K70>1)))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K69>G0|K70>G1))&! (Ch(G1,0)&(K69>G1|K70>0))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K69>G0|K70>G1))&! (Ch(0,G0)&(K69>0|K70>G0))])) ])
2019-10-15 20:01:29,411 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&turn(p2)])&!(turn(p2))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(1,0)&! Ch(0,1)])&!(exists(G0:Int)[G0>=0&Ch(1,0)&Ch(G0,1)&! Ch(1,1)])&!(exists(G0:Int)[G0>=0&G0 > 1&Ch(0,G0)])
 f2:!(!Ch(0,0))=>(exists(K69:Int,K70:Int)[ (Ch(K69,K70)&turn(p1)&K69>=0&K69<xlen()&K70>=0&K70<ylen())&((( !(Ch(0,0)&(K69>0|K70>0)) ) => ( !(Ch(0,0)&(K69>0|K70>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 1&(Ch(0,G0)&(K69>0|K70>G0))])&!((Ch(1,1)&(K69>1|K70>1)))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K69>G0|K70>G1))&! (Ch(G1,0)&(K69>G1|K70>0))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K69>G0|K70>G1))&! (Ch(0,G0)&(K69>0|K70>G0))])) ])
2019-10-15 20:01:29,463 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&turn(p2)])&!(turn(p2))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(1,0)&! Ch(0,1)])&!(exists(G0:Int)[G0>=0&Ch(1,0)&Ch(G0,1)&! Ch(1,1)])&!(exists(G0:Int)[G0>=0&G0 > 1&Ch(0,G0)])
 f2:!(!Ch(0,0))=>(exists(K69:Int,K70:Int)[ (Ch(K69,K70)&turn(p1)&K69>=0&K69<xlen()&K70>=0&K70<ylen())&((( !(Ch(0,0)&(K69>0|K70>0)) ) => ( !(Ch(0,0)&(K69>0|K70>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 1&(Ch(0,G0)&(K69>0|K70>G0))])&!((Ch(1,1)&(K69>1|K70>1)))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K69>G0|K70>G1))&! (Ch(G1,0)&(K69>G1|K70>0))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K69>G0|K70>G1))&! (Ch(0,G0)&(K69>0|K70>G0))])) ])
2019-10-15 20:01:29,543 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 > 1&Ch(0,G0)])&!(Ch(1,1))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,0)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(0,G0)])
 f2:forall(K67:Int,K68:Int)[ Ch(K67,K68)&turn(p2)&K67>=0&K67<xlen()&K68>=0&K68<ylen()=>((( !(Ch(0,0)&(K67>0|K68>0)) ) => ( !(Ch(0,0)&(K67>0|K68>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K67>0|K68>G0))&(!turn(p2))])&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K67>0|K68>G0))&! (Ch(1,0)&(K67>1|K68>0))&! (Ch(0,1)&(K67>0|K68>1))])&!(exists(G0:Int)[G0>=0&(Ch(1,0)&(K67>1|K68>0))&(Ch(G0,1)&(K67>G0|K68>1))&! (Ch(1,1)&(K67>1|K68>1))])&!(exists(G0:Int)[G0>=0&G0 > 1&(Ch(0,G0)&(K67>0|K68>G0))])) ]
2019-10-15 20:01:35,510 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&turn(p2)])&!(turn(p2))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(1,0)&! Ch(0,1)])&!(exists(G0:Int)[G0>=0&Ch(1,0)&Ch(G0,1)&! Ch(1,1)])&!(exists(G0:Int)[G0>=0&G0 > 1&Ch(G0,0)])
 f2:!(!Ch(0,0))=>(exists(K73:Int,K74:Int)[ (Ch(K73,K74)&turn(p1)&K73>=0&K73<xlen()&K74>=0&K74<ylen())&((( !(Ch(0,0)&(K73>0|K74>0)) ) => ( !(Ch(0,0)&(K73>0|K74>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 1&(Ch(0,G0)&(K73>0|K74>G0))])&!((Ch(1,1)&(K73>1|K74>1)))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K73>G0|K74>G1))&! (Ch(G1,0)&(K73>G1|K74>0))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K73>G0|K74>G1))&! (Ch(0,G0)&(K73>0|K74>G0))])) ])
2019-10-15 20:01:35,579 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&turn(p2)])&!(turn(p2))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(1,0)&! Ch(0,1)])&!(exists(G0:Int)[G0>=0&Ch(1,0)&Ch(G0,1)&! Ch(1,1)])&!(exists(G0:Int)[G0>=0&G0 > 1&Ch(G0,0)])
 f2:!(!Ch(0,0))=>(exists(K73:Int,K74:Int)[ (Ch(K73,K74)&turn(p1)&K73>=0&K73<xlen()&K74>=0&K74<ylen())&((( !(Ch(0,0)&(K73>0|K74>0)) ) => ( !(Ch(0,0)&(K73>0|K74>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 1&(Ch(0,G0)&(K73>0|K74>G0))])&!((Ch(1,1)&(K73>1|K74>1)))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K73>G0|K74>G1))&! (Ch(G1,0)&(K73>G1|K74>0))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K73>G0|K74>G1))&! (Ch(0,G0)&(K73>0|K74>G0))])) ])
2019-10-15 20:01:35,630 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&turn(p2)])&!(turn(p2))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(1,0)&! Ch(0,1)])&!(exists(G0:Int)[G0>=0&Ch(1,0)&Ch(G0,1)&! Ch(1,1)])&!(exists(G0:Int)[G0>=0&G0 > 1&Ch(G0,0)])
 f2:!(!Ch(0,0))=>(exists(K73:Int,K74:Int)[ (Ch(K73,K74)&turn(p1)&K73>=0&K73<xlen()&K74>=0&K74<ylen())&((( !(Ch(0,0)&(K73>0|K74>0)) ) => ( !(Ch(0,0)&(K73>0|K74>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 1&(Ch(0,G0)&(K73>0|K74>G0))])&!((Ch(1,1)&(K73>1|K74>1)))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K73>G0|K74>G1))&! (Ch(G1,0)&(K73>G1|K74>0))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K73>G0|K74>G1))&! (Ch(0,G0)&(K73>0|K74>G0))])) ])
2019-10-15 20:01:35,690 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 > 1&Ch(0,G0)])&!(Ch(1,1))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,0)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(0,G0)])
 f2:forall(K71:Int,K72:Int)[ Ch(K71,K72)&turn(p2)&K71>=0&K71<xlen()&K72>=0&K72<ylen()=>((( !(Ch(0,0)&(K71>0|K72>0)) ) => ( !(Ch(0,0)&(K71>0|K72>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K71>0|K72>G0))&(!turn(p2))])&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K71>0|K72>G0))&! (Ch(1,0)&(K71>1|K72>0))&! (Ch(0,1)&(K71>0|K72>1))])&!(exists(G0:Int)[G0>=0&(Ch(1,0)&(K71>1|K72>0))&(Ch(G0,1)&(K71>G0|K72>1))&! (Ch(1,1)&(K71>1|K72>1))])&!(exists(G0:Int)[G0>=0&G0 > 1&(Ch(G0,0)&(K71>G0|K72>0))])) ]
2019-10-15 20:01:42,673 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&turn(p2)])&!(turn(p2))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(1,0)&! Ch(0,1)])&!(exists(G0:Int)[G0>=0&Ch(1,0)&Ch(G0,1)&! Ch(1,1)])&!(exists(G0:Int)[G0>=0&G0 > 1&xlen() > G0])
 f2:!(!Ch(0,0))=>(exists(K78:Int,K79:Int)[ (Ch(K78,K79)&turn(p1)&K78>=0&K78<xlen()&K79>=0&K79<ylen())&((( !(Ch(0,0)&(K78>0|K79>0)) ) => ( !(Ch(0,0)&(K78>0|K79>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 1&(Ch(0,G0)&(K78>0|K79>G0))])&!((Ch(1,1)&(K78>1|K79>1)))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K78>G0|K79>G1))&! (Ch(G1,0)&(K78>G1|K79>0))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K78>G0|K79>G1))&! (Ch(0,G0)&(K78>0|K79>G0))])) ])
2019-10-15 20:01:42,735 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 > 1&Ch(0,G0)])&!(Ch(1,1))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,0)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(0,G0)])
 f2:forall(K75:Int,K76:Int)[ Ch(K75,K76)&turn(p2)&K75>=0&K75<xlen()&K76>=0&K76<ylen()=>((( !(Ch(0,0)&(K75>0|K76>0)) ) => ( !(Ch(0,0)&(K75>0|K76>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K75>0|K76>G0))&(!turn(p2))])&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K75>0|K76>G0))&! (Ch(1,0)&(K75>1|K76>0))&! (Ch(0,1)&(K75>0|K76>1))])&!(exists(G0:Int)[G0>=0&(Ch(1,0)&(K75>1|K76>0))&(Ch(G0,1)&(K75>G0|K76>1))&! (Ch(1,1)&(K75>1|K76>1))])&!(exists(G0:Int)[ exists(K77:Int)[ (xlen()=K77)&(G0>=0&G0 > 1& K77 > G0)] ])) ]
2019-10-15 20:01:42,780 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 > 1&Ch(0,G0)])&!(Ch(1,1))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,0)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(0,G0)])
 f2:forall(K75:Int,K76:Int)[ Ch(K75,K76)&turn(p2)&K75>=0&K75<xlen()&K76>=0&K76<ylen()=>((( !(Ch(0,0)&(K75>0|K76>0)) ) => ( !(Ch(0,0)&(K75>0|K76>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K75>0|K76>G0))&(!turn(p2))])&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K75>0|K76>G0))&! (Ch(1,0)&(K75>1|K76>0))&! (Ch(0,1)&(K75>0|K76>1))])&!(exists(G0:Int)[G0>=0&(Ch(1,0)&(K75>1|K76>0))&(Ch(G0,1)&(K75>G0|K76>1))&! (Ch(1,1)&(K75>1|K76>1))])&!(exists(G0:Int)[ exists(K77:Int)[ (xlen()=K77)&(G0>=0&G0 > 1& K77 > G0)] ])) ]
2019-10-15 20:01:42,818 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 > 1&Ch(0,G0)])&!(Ch(1,1))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,0)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(0,G0)])
 f2:forall(K75:Int,K76:Int)[ Ch(K75,K76)&turn(p2)&K75>=0&K75<xlen()&K76>=0&K76<ylen()=>((( !(Ch(0,0)&(K75>0|K76>0)) ) => ( !(Ch(0,0)&(K75>0|K76>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K75>0|K76>G0))&(!turn(p2))])&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K75>0|K76>G0))&! (Ch(1,0)&(K75>1|K76>0))&! (Ch(0,1)&(K75>0|K76>1))])&!(exists(G0:Int)[G0>=0&(Ch(1,0)&(K75>1|K76>0))&(Ch(G0,1)&(K75>G0|K76>1))&! (Ch(1,1)&(K75>1|K76>1))])&!(exists(G0:Int)[ exists(K77:Int)[ (xlen()=K77)&(G0>=0&G0 > 1& K77 > G0)] ])) ]
2019-10-15 20:01:43,110 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(3>=0&3<xlen()&0>=0&0<ylen()=>Ch(3,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(3>=0&3<xlen()&1>=0&1<ylen()=>Ch(3,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2))&(3>=0&3<xlen()&2>=0&2<ylen()=>Ch(3,2))&(0>=0&0<xlen()&3>=0&3<ylen()=>Ch(0,3))&(1>=0&1<xlen()&3>=0&3<ylen()=>Ch(1,3))&(2>=0&2<xlen()&3>=0&3<ylen()=>Ch(2,3))&(3>=0&3<xlen()&3>=0&3<ylen()=>Ch(3,3)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)&xlen()=3&ylen()=3&forall(X:_S1)[X=p2 or X=p1]
 f2:false
2019-10-15 20:01:43,197 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(3>=0&3<xlen()&0>=0&0<ylen()=>Ch(3,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(3>=0&3<xlen()&1>=0&1<ylen()=>Ch(3,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2))&(3>=0&3<xlen()&2>=0&2<ylen()=>Ch(3,2))&(0>=0&0<xlen()&3>=0&3<ylen()=>Ch(0,3))&(1>=0&1<xlen()&3>=0&3<ylen()=>Ch(1,3))&(2>=0&2<xlen()&3>=0&3<ylen()=>Ch(2,3))&(3>=0&3<xlen()&3>=0&3<ylen()=>Ch(3,3)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)&xlen()=3&ylen()=3&forall(X:_S1)[X=p2 or X=p1]&!(Ch(1,1)&Ch(1,0)&Ch(0,2)&!Ch(0,3)&!Ch(3,3)&!turn(p2)&Ch(0,0)&xlen()=3&turn(p1)&!Ch(3,1)&!Ch(2,3)&Ch(2,0)&!Ch(3,0)&Ch(2,1)&Ch(2,2)&ylen()=3&!Ch(3,2)&!Ch(1,3)&Ch(1,2)&Ch(0,1))
 f2:false
2019-10-15 20:01:50,307 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&turn(p2)])&!(turn(p2))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(1,0)&! Ch(0,1)])&!(exists(G0:Int)[G0>=0&Ch(1,0)&Ch(G0,1)&! Ch(1,1)])&!(exists(G0:Int)[G0>=0&xlen() > G0&G0 > 1&Ch(1,1)])
 f2:!(!Ch(0,0))=>(exists(K83:Int,K84:Int)[ (Ch(K83,K84)&turn(p1)&K83>=0&K83<xlen()&K84>=0&K84<ylen())&((( !(Ch(0,0)&(K83>0|K84>0)) ) => ( !(Ch(0,0)&(K83>0|K84>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 1&(Ch(0,G0)&(K83>0|K84>G0))])&!((Ch(1,1)&(K83>1|K84>1)))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K83>G0|K84>G1))&! (Ch(G1,0)&(K83>G1|K84>0))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K83>G0|K84>G1))&! (Ch(0,G0)&(K83>0|K84>G0))])) ])
2019-10-15 20:01:51,604 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&turn(p2)])&!(turn(p2))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(1,0)&! Ch(0,1)])&!(exists(G0:Int)[G0>=0&Ch(1,0)&Ch(G0,1)&! Ch(1,1)])&!(exists(G0:Int)[G0>=0&xlen() > G0&G0 > 1&Ch(1,1)])
 f2:!(!Ch(0,0))=>(exists(K83:Int,K84:Int)[ (Ch(K83,K84)&turn(p1)&K83>=0&K83<xlen()&K84>=0&K84<ylen())&((( !(Ch(0,0)&(K83>0|K84>0)) ) => ( !(Ch(0,0)&(K83>0|K84>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 1&(Ch(0,G0)&(K83>0|K84>G0))])&!((Ch(1,1)&(K83>1|K84>1)))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K83>G0|K84>G1))&! (Ch(G1,0)&(K83>G1|K84>0))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K83>G0|K84>G1))&! (Ch(0,G0)&(K83>0|K84>G0))])) ])
2019-10-15 20:01:51,709 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&turn(p2)])&!(turn(p2))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(1,0)&! Ch(0,1)])&!(exists(G0:Int)[G0>=0&Ch(1,0)&Ch(G0,1)&! Ch(1,1)])&!(exists(G0:Int)[G0>=0&xlen() > G0&G0 > 1&Ch(1,1)])
 f2:!(!Ch(0,0))=>(exists(K83:Int,K84:Int)[ (Ch(K83,K84)&turn(p1)&K83>=0&K83<xlen()&K84>=0&K84<ylen())&((( !(Ch(0,0)&(K83>0|K84>0)) ) => ( !(Ch(0,0)&(K83>0|K84>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 1&(Ch(0,G0)&(K83>0|K84>G0))])&!((Ch(1,1)&(K83>1|K84>1)))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K83>G0|K84>G1))&! (Ch(G1,0)&(K83>G1|K84>0))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K83>G0|K84>G1))&! (Ch(0,G0)&(K83>0|K84>G0))])) ])
2019-10-15 20:01:51,912 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 > 1&Ch(0,G0)])&!(Ch(1,1))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,0)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(0,G0)])
 f2:forall(K80:Int,K81:Int)[ Ch(K80,K81)&turn(p2)&K80>=0&K80<xlen()&K81>=0&K81<ylen()=>((( !(Ch(0,0)&(K80>0|K81>0)) ) => ( !(Ch(0,0)&(K80>0|K81>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K80>0|K81>G0))&(!turn(p2))])&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K80>0|K81>G0))&! (Ch(1,0)&(K80>1|K81>0))&! (Ch(0,1)&(K80>0|K81>1))])&!(exists(G0:Int)[G0>=0&(Ch(1,0)&(K80>1|K81>0))&(Ch(G0,1)&(K80>G0|K81>1))&! (Ch(1,1)&(K80>1|K81>1))])&!(exists(G0:Int)[ exists(K82:Int)[ (xlen()=K82)&(G0>=0& K82 > G0&G0 > 1&(Ch(1,1)&(K80>1|K81>1)))] ])) ]
2019-10-15 20:01:52,672 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(3>=0&3<xlen()&0>=0&0<ylen()=>Ch(3,0))&(4>=0&4<xlen()&0>=0&0<ylen()=>Ch(4,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(3>=0&3<xlen()&1>=0&1<ylen()=>Ch(3,1))&(4>=0&4<xlen()&1>=0&1<ylen()=>Ch(4,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2))&(3>=0&3<xlen()&2>=0&2<ylen()=>Ch(3,2))&(4>=0&4<xlen()&2>=0&2<ylen()=>Ch(4,2))&(0>=0&0<xlen()&3>=0&3<ylen()=>Ch(0,3))&(1>=0&1<xlen()&3>=0&3<ylen()=>Ch(1,3))&(2>=0&2<xlen()&3>=0&3<ylen()=>Ch(2,3))&(3>=0&3<xlen()&3>=0&3<ylen()=>Ch(3,3))&(4>=0&4<xlen()&3>=0&3<ylen()=>Ch(4,3))&(0>=0&0<xlen()&4>=0&4<ylen()=>Ch(0,4))&(1>=0&1<xlen()&4>=0&4<ylen()=>Ch(1,4))&(2>=0&2<xlen()&4>=0&4<ylen()=>Ch(2,4))&(3>=0&3<xlen()&4>=0&4<ylen()=>Ch(3,4))&(4>=0&4<xlen()&4>=0&4<ylen()=>Ch(4,4)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)&ylen()=4&xlen()=4&forall(X:_S1)[X=p2 or X=p1]
 f2:false
2019-10-15 20:01:52,790 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(3>=0&3<xlen()&0>=0&0<ylen()=>Ch(3,0))&(4>=0&4<xlen()&0>=0&0<ylen()=>Ch(4,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(3>=0&3<xlen()&1>=0&1<ylen()=>Ch(3,1))&(4>=0&4<xlen()&1>=0&1<ylen()=>Ch(4,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2))&(3>=0&3<xlen()&2>=0&2<ylen()=>Ch(3,2))&(4>=0&4<xlen()&2>=0&2<ylen()=>Ch(4,2))&(0>=0&0<xlen()&3>=0&3<ylen()=>Ch(0,3))&(1>=0&1<xlen()&3>=0&3<ylen()=>Ch(1,3))&(2>=0&2<xlen()&3>=0&3<ylen()=>Ch(2,3))&(3>=0&3<xlen()&3>=0&3<ylen()=>Ch(3,3))&(4>=0&4<xlen()&3>=0&3<ylen()=>Ch(4,3))&(0>=0&0<xlen()&4>=0&4<ylen()=>Ch(0,4))&(1>=0&1<xlen()&4>=0&4<ylen()=>Ch(1,4))&(2>=0&2<xlen()&4>=0&4<ylen()=>Ch(2,4))&(3>=0&3<xlen()&4>=0&4<ylen()=>Ch(3,4))&(4>=0&4<xlen()&4>=0&4<ylen()=>Ch(4,4)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)&ylen()=4&xlen()=4&forall(X:_S1)[X=p2 or X=p1]&!(Ch(1,0)&Ch(2,1)&!turn(p2)&Ch(2,3)&!Ch(1,4)&Ch(3,1)&ylen()=4&Ch(3,3)&Ch(1,2)&Ch(0,2)&Ch(0,0)&!Ch(4,2)&!Ch(4,3)&!Ch(4,1)&!Ch(4,4)&!Ch(3,4)&Ch(1,1)&Ch(2,0)&Ch(2,2)&turn(p1)&!Ch(2,4)&Ch(3,0)&!Ch(0,4)&Ch(3,2)&Ch(1,3)&Ch(0,3)&xlen()=4&!Ch(4,0)&Ch(0,1))
 f2:false
2019-10-15 20:01:55,601 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&turn(p2)])&!(turn(p2))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(1,0)&! Ch(0,1)])&!(exists(G0:Int)[G0>=0&Ch(1,0)&Ch(G0,1)&! Ch(1,1)])&!(exists(G0:Int)[G0>=0&xlen() > G0&G0 > 1&Ch(1,1)])&!(exists(G0:Int)[G0>=0&G0 > 1&Ch(0,G0)])
 f2:!(!Ch(0,0))=>(exists(K88:Int,K89:Int)[ (Ch(K88,K89)&turn(p1)&K88>=0&K88<xlen()&K89>=0&K89<ylen())&((( !(Ch(0,0)&(K88>0|K89>0)) ) => ( !(Ch(0,0)&(K88>0|K89>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 1&(Ch(0,G0)&(K88>0|K89>G0))])&!((Ch(1,1)&(K88>1|K89>1)))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K88>G0|K89>G1))&! (Ch(G1,0)&(K88>G1|K89>0))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K88>G0|K89>G1))&! (Ch(0,G0)&(K88>0|K89>G0))])) ])
2019-10-15 20:01:57,089 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&turn(p2)])&!(turn(p2))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(1,0)&! Ch(0,1)])&!(exists(G0:Int)[G0>=0&Ch(1,0)&Ch(G0,1)&! Ch(1,1)])&!(exists(G0:Int)[G0>=0&xlen() > G0&G0 > 1&Ch(1,1)])&!(exists(G0:Int)[G0>=0&G0 > 1&Ch(0,G0)])
 f2:!(!Ch(0,0))=>(exists(K88:Int,K89:Int)[ (Ch(K88,K89)&turn(p1)&K88>=0&K88<xlen()&K89>=0&K89<ylen())&((( !(Ch(0,0)&(K88>0|K89>0)) ) => ( !(Ch(0,0)&(K88>0|K89>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 1&(Ch(0,G0)&(K88>0|K89>G0))])&!((Ch(1,1)&(K88>1|K89>1)))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K88>G0|K89>G1))&! (Ch(G1,0)&(K88>G1|K89>0))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K88>G0|K89>G1))&! (Ch(0,G0)&(K88>0|K89>G0))])) ])
2019-10-15 20:01:57,151 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&turn(p2)])&!(turn(p2))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(1,0)&! Ch(0,1)])&!(exists(G0:Int)[G0>=0&Ch(1,0)&Ch(G0,1)&! Ch(1,1)])&!(exists(G0:Int)[G0>=0&xlen() > G0&G0 > 1&Ch(1,1)])&!(exists(G0:Int)[G0>=0&G0 > 1&Ch(0,G0)])
 f2:!(!Ch(0,0))=>(exists(K88:Int,K89:Int)[ (Ch(K88,K89)&turn(p1)&K88>=0&K88<xlen()&K89>=0&K89<ylen())&((( !(Ch(0,0)&(K88>0|K89>0)) ) => ( !(Ch(0,0)&(K88>0|K89>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 1&(Ch(0,G0)&(K88>0|K89>G0))])&!((Ch(1,1)&(K88>1|K89>1)))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K88>G0|K89>G1))&! (Ch(G1,0)&(K88>G1|K89>0))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K88>G0|K89>G1))&! (Ch(0,G0)&(K88>0|K89>G0))])) ])
2019-10-15 20:01:59,101 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 > 1&Ch(0,G0)])&!(Ch(1,1))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,0)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(0,G0)])
 f2:forall(K85:Int,K86:Int)[ Ch(K85,K86)&turn(p2)&K85>=0&K85<xlen()&K86>=0&K86<ylen()=>((( !(Ch(0,0)&(K85>0|K86>0)) ) => ( !(Ch(0,0)&(K85>0|K86>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K85>0|K86>G0))&(!turn(p2))])&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K85>0|K86>G0))&! (Ch(1,0)&(K85>1|K86>0))&! (Ch(0,1)&(K85>0|K86>1))])&!(exists(G0:Int)[G0>=0&(Ch(1,0)&(K85>1|K86>0))&(Ch(G0,1)&(K85>G0|K86>1))&! (Ch(1,1)&(K85>1|K86>1))])&!(exists(G0:Int)[ exists(K87:Int)[ (xlen()=K87)&(G0>=0& K87 > G0&G0 > 1&(Ch(1,1)&(K85>1|K86>1)))] ])&!(exists(G0:Int)[G0>=0&G0 > 1&(Ch(0,G0)&(K85>0|K86>G0))])) ]
2019-10-15 20:02:05,650 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&turn(p2)])&!(turn(p2))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(1,0)&! Ch(0,1)])&!(exists(G0:Int)[G0>=0&Ch(1,0)&Ch(G0,1)&! Ch(1,1)])&!(exists(G0:Int)[G0>=0&xlen() > G0&G0 > 1&Ch(1,1)])&!(exists(G0:Int)[G0>=0&G0 > 1&Ch(G0,1)])
 f2:!(!Ch(0,0))=>(exists(K93:Int,K94:Int)[ (Ch(K93,K94)&turn(p1)&K93>=0&K93<xlen()&K94>=0&K94<ylen())&((( !(Ch(0,0)&(K93>0|K94>0)) ) => ( !(Ch(0,0)&(K93>0|K94>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 1&(Ch(0,G0)&(K93>0|K94>G0))])&!((Ch(1,1)&(K93>1|K94>1)))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K93>G0|K94>G1))&! (Ch(G1,0)&(K93>G1|K94>0))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K93>G0|K94>G1))&! (Ch(0,G0)&(K93>0|K94>G0))])) ])
2019-10-15 20:02:06,318 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&turn(p2)])&!(turn(p2))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(1,0)&! Ch(0,1)])&!(exists(G0:Int)[G0>=0&Ch(1,0)&Ch(G0,1)&! Ch(1,1)])&!(exists(G0:Int)[G0>=0&xlen() > G0&G0 > 1&Ch(1,1)])&!(exists(G0:Int)[G0>=0&G0 > 1&Ch(G0,1)])
 f2:!(!Ch(0,0))=>(exists(K93:Int,K94:Int)[ (Ch(K93,K94)&turn(p1)&K93>=0&K93<xlen()&K94>=0&K94<ylen())&((( !(Ch(0,0)&(K93>0|K94>0)) ) => ( !(Ch(0,0)&(K93>0|K94>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 1&(Ch(0,G0)&(K93>0|K94>G0))])&!((Ch(1,1)&(K93>1|K94>1)))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K93>G0|K94>G1))&! (Ch(G1,0)&(K93>G1|K94>0))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K93>G0|K94>G1))&! (Ch(0,G0)&(K93>0|K94>G0))])) ])
2019-10-15 20:02:06,393 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&turn(p2)])&!(turn(p2))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(1,0)&! Ch(0,1)])&!(exists(G0:Int)[G0>=0&Ch(1,0)&Ch(G0,1)&! Ch(1,1)])&!(exists(G0:Int)[G0>=0&xlen() > G0&G0 > 1&Ch(1,1)])&!(exists(G0:Int)[G0>=0&G0 > 1&Ch(G0,1)])
 f2:!(!Ch(0,0))=>(exists(K93:Int,K94:Int)[ (Ch(K93,K94)&turn(p1)&K93>=0&K93<xlen()&K94>=0&K94<ylen())&((( !(Ch(0,0)&(K93>0|K94>0)) ) => ( !(Ch(0,0)&(K93>0|K94>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 1&(Ch(0,G0)&(K93>0|K94>G0))])&!((Ch(1,1)&(K93>1|K94>1)))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K93>G0|K94>G1))&! (Ch(G1,0)&(K93>G1|K94>0))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K93>G0|K94>G1))&! (Ch(0,G0)&(K93>0|K94>G0))])) ])
2019-10-15 20:02:06,474 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 > 1&Ch(0,G0)])&!(Ch(1,1))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,0)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(0,G0)])
 f2:forall(K90:Int,K91:Int)[ Ch(K90,K91)&turn(p2)&K90>=0&K90<xlen()&K91>=0&K91<ylen()=>((( !(Ch(0,0)&(K90>0|K91>0)) ) => ( !(Ch(0,0)&(K90>0|K91>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K90>0|K91>G0))&(!turn(p2))])&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K90>0|K91>G0))&! (Ch(1,0)&(K90>1|K91>0))&! (Ch(0,1)&(K90>0|K91>1))])&!(exists(G0:Int)[G0>=0&(Ch(1,0)&(K90>1|K91>0))&(Ch(G0,1)&(K90>G0|K91>1))&! (Ch(1,1)&(K90>1|K91>1))])&!(exists(G0:Int)[ exists(K92:Int)[ (xlen()=K92)&(G0>=0& K92 > G0&G0 > 1&(Ch(1,1)&(K90>1|K91>1)))] ])&!(exists(G0:Int)[G0>=0&G0 > 1&(Ch(G0,1)&(K90>G0|K91>1))])) ]
2019-10-15 20:02:07,238 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(3>=0&3<xlen()&0>=0&0<ylen()=>Ch(3,0))&(4>=0&4<xlen()&0>=0&0<ylen()=>Ch(4,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(3>=0&3<xlen()&1>=0&1<ylen()=>Ch(3,1))&(4>=0&4<xlen()&1>=0&1<ylen()=>Ch(4,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2))&(3>=0&3<xlen()&2>=0&2<ylen()=>Ch(3,2))&(4>=0&4<xlen()&2>=0&2<ylen()=>Ch(4,2))&(0>=0&0<xlen()&3>=0&3<ylen()=>Ch(0,3))&(1>=0&1<xlen()&3>=0&3<ylen()=>Ch(1,3))&(2>=0&2<xlen()&3>=0&3<ylen()=>Ch(2,3))&(3>=0&3<xlen()&3>=0&3<ylen()=>Ch(3,3))&(4>=0&4<xlen()&3>=0&3<ylen()=>Ch(4,3))&(0>=0&0<xlen()&4>=0&4<ylen()=>Ch(0,4))&(1>=0&1<xlen()&4>=0&4<ylen()=>Ch(1,4))&(2>=0&2<xlen()&4>=0&4<ylen()=>Ch(2,4))&(3>=0&3<xlen()&4>=0&4<ylen()=>Ch(3,4))&(4>=0&4<xlen()&4>=0&4<ylen()=>Ch(4,4)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)&ylen()=4&xlen()=4&forall(X:_S1)[X=p2 or X=p1]
 f2:false
2019-10-15 20:02:07,351 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(3>=0&3<xlen()&0>=0&0<ylen()=>Ch(3,0))&(4>=0&4<xlen()&0>=0&0<ylen()=>Ch(4,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(3>=0&3<xlen()&1>=0&1<ylen()=>Ch(3,1))&(4>=0&4<xlen()&1>=0&1<ylen()=>Ch(4,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2))&(3>=0&3<xlen()&2>=0&2<ylen()=>Ch(3,2))&(4>=0&4<xlen()&2>=0&2<ylen()=>Ch(4,2))&(0>=0&0<xlen()&3>=0&3<ylen()=>Ch(0,3))&(1>=0&1<xlen()&3>=0&3<ylen()=>Ch(1,3))&(2>=0&2<xlen()&3>=0&3<ylen()=>Ch(2,3))&(3>=0&3<xlen()&3>=0&3<ylen()=>Ch(3,3))&(4>=0&4<xlen()&3>=0&3<ylen()=>Ch(4,3))&(0>=0&0<xlen()&4>=0&4<ylen()=>Ch(0,4))&(1>=0&1<xlen()&4>=0&4<ylen()=>Ch(1,4))&(2>=0&2<xlen()&4>=0&4<ylen()=>Ch(2,4))&(3>=0&3<xlen()&4>=0&4<ylen()=>Ch(3,4))&(4>=0&4<xlen()&4>=0&4<ylen()=>Ch(4,4)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)&ylen()=4&xlen()=4&forall(X:_S1)[X=p2 or X=p1]&!(Ch(1,0)&Ch(2,1)&!turn(p2)&Ch(2,3)&!Ch(1,4)&Ch(3,1)&ylen()=4&Ch(3,3)&Ch(1,2)&Ch(0,2)&Ch(0,0)&!Ch(4,2)&!Ch(4,3)&!Ch(4,1)&!Ch(4,4)&!Ch(3,4)&Ch(1,1)&Ch(2,0)&Ch(2,2)&turn(p1)&!Ch(2,4)&Ch(3,0)&!Ch(0,4)&Ch(3,2)&Ch(1,3)&Ch(0,3)&xlen()=4&!Ch(4,0)&Ch(0,1))
 f2:false
2019-10-15 20:02:15,257 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&turn(p2)])&!(turn(p2))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(1,0)&! Ch(0,1)])&!(exists(G0:Int)[G0>=0&Ch(1,0)&Ch(G0,1)&! Ch(1,1)])&!(exists(G0:Int)[G0>=0&xlen() > G0&G0 > 1&Ch(1,1)])&!(exists(G0:Int)[G0>=0&G0 > 1&Ch(G0,0)])
 f2:!(!Ch(0,0))=>(exists(K98:Int,K99:Int)[ (Ch(K98,K99)&turn(p1)&K98>=0&K98<xlen()&K99>=0&K99<ylen())&((( !(Ch(0,0)&(K98>0|K99>0)) ) => ( !(Ch(0,0)&(K98>0|K99>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 1&(Ch(0,G0)&(K98>0|K99>G0))])&!((Ch(1,1)&(K98>1|K99>1)))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K98>G0|K99>G1))&! (Ch(G1,0)&(K98>G1|K99>0))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K98>G0|K99>G1))&! (Ch(0,G0)&(K98>0|K99>G0))])) ])
2019-10-15 20:02:16,461 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&turn(p2)])&!(turn(p2))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(1,0)&! Ch(0,1)])&!(exists(G0:Int)[G0>=0&Ch(1,0)&Ch(G0,1)&! Ch(1,1)])&!(exists(G0:Int)[G0>=0&xlen() > G0&G0 > 1&Ch(1,1)])&!(exists(G0:Int)[G0>=0&G0 > 1&Ch(G0,0)])
 f2:!(!Ch(0,0))=>(exists(K98:Int,K99:Int)[ (Ch(K98,K99)&turn(p1)&K98>=0&K98<xlen()&K99>=0&K99<ylen())&((( !(Ch(0,0)&(K98>0|K99>0)) ) => ( !(Ch(0,0)&(K98>0|K99>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 1&(Ch(0,G0)&(K98>0|K99>G0))])&!((Ch(1,1)&(K98>1|K99>1)))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K98>G0|K99>G1))&! (Ch(G1,0)&(K98>G1|K99>0))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K98>G0|K99>G1))&! (Ch(0,G0)&(K98>0|K99>G0))])) ])
2019-10-15 20:02:16,517 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&turn(p2)])&!(turn(p2))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(1,0)&! Ch(0,1)])&!(exists(G0:Int)[G0>=0&Ch(1,0)&Ch(G0,1)&! Ch(1,1)])&!(exists(G0:Int)[G0>=0&xlen() > G0&G0 > 1&Ch(1,1)])&!(exists(G0:Int)[G0>=0&G0 > 1&Ch(G0,0)])
 f2:!(!Ch(0,0))=>(exists(K98:Int,K99:Int)[ (Ch(K98,K99)&turn(p1)&K98>=0&K98<xlen()&K99>=0&K99<ylen())&((( !(Ch(0,0)&(K98>0|K99>0)) ) => ( !(Ch(0,0)&(K98>0|K99>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 1&(Ch(0,G0)&(K98>0|K99>G0))])&!((Ch(1,1)&(K98>1|K99>1)))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K98>G0|K99>G1))&! (Ch(G1,0)&(K98>G1|K99>0))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K98>G0|K99>G1))&! (Ch(0,G0)&(K98>0|K99>G0))])) ])
2019-10-15 20:02:16,588 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 > 1&Ch(0,G0)])&!(Ch(1,1))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,0)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(0,G0)])
 f2:forall(K95:Int,K96:Int)[ Ch(K95,K96)&turn(p2)&K95>=0&K95<xlen()&K96>=0&K96<ylen()=>((( !(Ch(0,0)&(K95>0|K96>0)) ) => ( !(Ch(0,0)&(K95>0|K96>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K95>0|K96>G0))&(!turn(p2))])&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K95>0|K96>G0))&! (Ch(1,0)&(K95>1|K96>0))&! (Ch(0,1)&(K95>0|K96>1))])&!(exists(G0:Int)[G0>=0&(Ch(1,0)&(K95>1|K96>0))&(Ch(G0,1)&(K95>G0|K96>1))&! (Ch(1,1)&(K95>1|K96>1))])&!(exists(G0:Int)[ exists(K97:Int)[ (xlen()=K97)&(G0>=0& K97 > G0&G0 > 1&(Ch(1,1)&(K95>1|K96>1)))] ])&!(exists(G0:Int)[G0>=0&G0 > 1&(Ch(G0,0)&(K95>G0|K96>0))])) ]
2019-10-15 20:02:17,342 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(3>=0&3<xlen()&0>=0&0<ylen()=>Ch(3,0))&(4>=0&4<xlen()&0>=0&0<ylen()=>Ch(4,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(3>=0&3<xlen()&1>=0&1<ylen()=>Ch(3,1))&(4>=0&4<xlen()&1>=0&1<ylen()=>Ch(4,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2))&(3>=0&3<xlen()&2>=0&2<ylen()=>Ch(3,2))&(4>=0&4<xlen()&2>=0&2<ylen()=>Ch(4,2))&(0>=0&0<xlen()&3>=0&3<ylen()=>Ch(0,3))&(1>=0&1<xlen()&3>=0&3<ylen()=>Ch(1,3))&(2>=0&2<xlen()&3>=0&3<ylen()=>Ch(2,3))&(3>=0&3<xlen()&3>=0&3<ylen()=>Ch(3,3))&(4>=0&4<xlen()&3>=0&3<ylen()=>Ch(4,3))&(0>=0&0<xlen()&4>=0&4<ylen()=>Ch(0,4))&(1>=0&1<xlen()&4>=0&4<ylen()=>Ch(1,4))&(2>=0&2<xlen()&4>=0&4<ylen()=>Ch(2,4))&(3>=0&3<xlen()&4>=0&4<ylen()=>Ch(3,4))&(4>=0&4<xlen()&4>=0&4<ylen()=>Ch(4,4)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)&ylen()=4&xlen()=4&forall(X:_S1)[X=p2 or X=p1]
 f2:false
2019-10-15 20:02:17,456 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(3>=0&3<xlen()&0>=0&0<ylen()=>Ch(3,0))&(4>=0&4<xlen()&0>=0&0<ylen()=>Ch(4,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(3>=0&3<xlen()&1>=0&1<ylen()=>Ch(3,1))&(4>=0&4<xlen()&1>=0&1<ylen()=>Ch(4,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2))&(3>=0&3<xlen()&2>=0&2<ylen()=>Ch(3,2))&(4>=0&4<xlen()&2>=0&2<ylen()=>Ch(4,2))&(0>=0&0<xlen()&3>=0&3<ylen()=>Ch(0,3))&(1>=0&1<xlen()&3>=0&3<ylen()=>Ch(1,3))&(2>=0&2<xlen()&3>=0&3<ylen()=>Ch(2,3))&(3>=0&3<xlen()&3>=0&3<ylen()=>Ch(3,3))&(4>=0&4<xlen()&3>=0&3<ylen()=>Ch(4,3))&(0>=0&0<xlen()&4>=0&4<ylen()=>Ch(0,4))&(1>=0&1<xlen()&4>=0&4<ylen()=>Ch(1,4))&(2>=0&2<xlen()&4>=0&4<ylen()=>Ch(2,4))&(3>=0&3<xlen()&4>=0&4<ylen()=>Ch(3,4))&(4>=0&4<xlen()&4>=0&4<ylen()=>Ch(4,4)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)&ylen()=4&xlen()=4&forall(X:_S1)[X=p2 or X=p1]&!(Ch(1,0)&Ch(2,1)&!turn(p2)&Ch(2,3)&!Ch(1,4)&Ch(3,1)&ylen()=4&Ch(3,3)&Ch(1,2)&Ch(0,2)&Ch(0,0)&!Ch(4,2)&!Ch(4,3)&!Ch(4,1)&!Ch(4,4)&!Ch(3,4)&Ch(1,1)&Ch(2,0)&Ch(2,2)&turn(p1)&!Ch(2,4)&Ch(3,0)&!Ch(0,4)&Ch(3,2)&Ch(1,3)&Ch(0,3)&xlen()=4&!Ch(4,0)&Ch(0,1))
 f2:false
2019-10-15 20:02:26,834 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&turn(p2)])&!(turn(p2))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(1,0)&! Ch(0,1)])&!(exists(G0:Int)[G0>=0&Ch(1,0)&Ch(G0,1)&! Ch(1,1)])&!(exists(G0:Int)[G0>=0&xlen() > G0&G0 > 1&Ch(1,1)])&!(exists(G0:Int,Y11:Int)[G0>=0&Y11>=0&G0 > 1&Ch(G0,Y11)])
 f2:!(!Ch(0,0))=>(exists(K103:Int,K104:Int)[ (Ch(K103,K104)&turn(p1)&K103>=0&K103<xlen()&K104>=0&K104<ylen())&((( !(Ch(0,0)&(K103>0|K104>0)) ) => ( !(Ch(0,0)&(K103>0|K104>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 1&(Ch(0,G0)&(K103>0|K104>G0))])&!((Ch(1,1)&(K103>1|K104>1)))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K103>G0|K104>G1))&! (Ch(G1,0)&(K103>G1|K104>0))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K103>G0|K104>G1))&! (Ch(0,G0)&(K103>0|K104>G0))])) ])
2019-10-15 20:02:27,562 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&turn(p2)])&!(turn(p2))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(1,0)&! Ch(0,1)])&!(exists(G0:Int)[G0>=0&Ch(1,0)&Ch(G0,1)&! Ch(1,1)])&!(exists(G0:Int)[G0>=0&xlen() > G0&G0 > 1&Ch(1,1)])&!(exists(G0:Int,Y11:Int)[G0>=0&Y11>=0&G0 > 1&Ch(G0,Y11)])
 f2:!(!Ch(0,0))=>(exists(K103:Int,K104:Int)[ (Ch(K103,K104)&turn(p1)&K103>=0&K103<xlen()&K104>=0&K104<ylen())&((( !(Ch(0,0)&(K103>0|K104>0)) ) => ( !(Ch(0,0)&(K103>0|K104>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 1&(Ch(0,G0)&(K103>0|K104>G0))])&!((Ch(1,1)&(K103>1|K104>1)))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K103>G0|K104>G1))&! (Ch(G1,0)&(K103>G1|K104>0))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K103>G0|K104>G1))&! (Ch(0,G0)&(K103>0|K104>G0))])) ])
2019-10-15 20:02:27,623 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&turn(p2)])&!(turn(p2))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(1,0)&! Ch(0,1)])&!(exists(G0:Int)[G0>=0&Ch(1,0)&Ch(G0,1)&! Ch(1,1)])&!(exists(G0:Int)[G0>=0&xlen() > G0&G0 > 1&Ch(1,1)])&!(exists(G0:Int,Y11:Int)[G0>=0&Y11>=0&G0 > 1&Ch(G0,Y11)])
 f2:!(!Ch(0,0))=>(exists(K103:Int,K104:Int)[ (Ch(K103,K104)&turn(p1)&K103>=0&K103<xlen()&K104>=0&K104<ylen())&((( !(Ch(0,0)&(K103>0|K104>0)) ) => ( !(Ch(0,0)&(K103>0|K104>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 1&(Ch(0,G0)&(K103>0|K104>G0))])&!((Ch(1,1)&(K103>1|K104>1)))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K103>G0|K104>G1))&! (Ch(G1,0)&(K103>G1|K104>0))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K103>G0|K104>G1))&! (Ch(0,G0)&(K103>0|K104>G0))])) ])
2019-10-15 20:02:27,696 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 > 1&Ch(0,G0)])&!(Ch(1,1))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,0)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(0,G0)])
 f2:forall(K100:Int,K101:Int)[ Ch(K100,K101)&turn(p2)&K100>=0&K100<xlen()&K101>=0&K101<ylen()=>((( !(Ch(0,0)&(K100>0|K101>0)) ) => ( !(Ch(0,0)&(K100>0|K101>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K100>0|K101>G0))&(!turn(p2))])&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K100>0|K101>G0))&! (Ch(1,0)&(K100>1|K101>0))&! (Ch(0,1)&(K100>0|K101>1))])&!(exists(G0:Int)[G0>=0&(Ch(1,0)&(K100>1|K101>0))&(Ch(G0,1)&(K100>G0|K101>1))&! (Ch(1,1)&(K100>1|K101>1))])&!(exists(G0:Int)[ exists(K102:Int)[ (xlen()=K102)&(G0>=0& K102 > G0&G0 > 1&(Ch(1,1)&(K100>1|K101>1)))] ])&!(exists(G0:Int,Y11:Int)[G0>=0&Y11>=0&G0 > 1&(Ch(G0,Y11)&(K100>G0|K101>Y11))])) ]
2019-10-15 20:02:28,460 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(3>=0&3<xlen()&0>=0&0<ylen()=>Ch(3,0))&(4>=0&4<xlen()&0>=0&0<ylen()=>Ch(4,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(3>=0&3<xlen()&1>=0&1<ylen()=>Ch(3,1))&(4>=0&4<xlen()&1>=0&1<ylen()=>Ch(4,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2))&(3>=0&3<xlen()&2>=0&2<ylen()=>Ch(3,2))&(4>=0&4<xlen()&2>=0&2<ylen()=>Ch(4,2))&(0>=0&0<xlen()&3>=0&3<ylen()=>Ch(0,3))&(1>=0&1<xlen()&3>=0&3<ylen()=>Ch(1,3))&(2>=0&2<xlen()&3>=0&3<ylen()=>Ch(2,3))&(3>=0&3<xlen()&3>=0&3<ylen()=>Ch(3,3))&(4>=0&4<xlen()&3>=0&3<ylen()=>Ch(4,3))&(0>=0&0<xlen()&4>=0&4<ylen()=>Ch(0,4))&(1>=0&1<xlen()&4>=0&4<ylen()=>Ch(1,4))&(2>=0&2<xlen()&4>=0&4<ylen()=>Ch(2,4))&(3>=0&3<xlen()&4>=0&4<ylen()=>Ch(3,4))&(4>=0&4<xlen()&4>=0&4<ylen()=>Ch(4,4)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)&ylen()=4&xlen()=4&forall(X:_S1)[X=p2 or X=p1]
 f2:false
2019-10-15 20:02:28,568 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(3>=0&3<xlen()&0>=0&0<ylen()=>Ch(3,0))&(4>=0&4<xlen()&0>=0&0<ylen()=>Ch(4,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(3>=0&3<xlen()&1>=0&1<ylen()=>Ch(3,1))&(4>=0&4<xlen()&1>=0&1<ylen()=>Ch(4,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2))&(3>=0&3<xlen()&2>=0&2<ylen()=>Ch(3,2))&(4>=0&4<xlen()&2>=0&2<ylen()=>Ch(4,2))&(0>=0&0<xlen()&3>=0&3<ylen()=>Ch(0,3))&(1>=0&1<xlen()&3>=0&3<ylen()=>Ch(1,3))&(2>=0&2<xlen()&3>=0&3<ylen()=>Ch(2,3))&(3>=0&3<xlen()&3>=0&3<ylen()=>Ch(3,3))&(4>=0&4<xlen()&3>=0&3<ylen()=>Ch(4,3))&(0>=0&0<xlen()&4>=0&4<ylen()=>Ch(0,4))&(1>=0&1<xlen()&4>=0&4<ylen()=>Ch(1,4))&(2>=0&2<xlen()&4>=0&4<ylen()=>Ch(2,4))&(3>=0&3<xlen()&4>=0&4<ylen()=>Ch(3,4))&(4>=0&4<xlen()&4>=0&4<ylen()=>Ch(4,4)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)&ylen()=4&xlen()=4&forall(X:_S1)[X=p2 or X=p1]&!(Ch(1,0)&Ch(2,1)&!turn(p2)&Ch(2,3)&!Ch(1,4)&Ch(3,1)&ylen()=4&Ch(3,3)&Ch(1,2)&Ch(0,2)&Ch(0,0)&!Ch(4,2)&!Ch(4,3)&!Ch(4,1)&!Ch(4,4)&!Ch(3,4)&Ch(1,1)&Ch(2,0)&Ch(2,2)&turn(p1)&!Ch(2,4)&Ch(3,0)&!Ch(0,4)&Ch(3,2)&Ch(1,3)&Ch(0,3)&xlen()=4&!Ch(4,0)&Ch(0,1))
 f2:false
2019-10-15 20:02:51,408 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&turn(p2)])&!(turn(p2))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(1,0)&! Ch(0,1)])&!(exists(G0:Int)[G0>=0&Ch(1,0)&Ch(G0,1)&! Ch(1,1)])&!(exists(G0:Int)[G0>=0&xlen() > G0&G0 > 1&Ch(1,1)])&!(exists(G0:Int,Y10:Int)[G0>=0&Y10>=0&G0 > 1&Ch(Y10,G0)])
 f2:!(!Ch(0,0))=>(exists(K108:Int,K109:Int)[ (Ch(K108,K109)&turn(p1)&K108>=0&K108<xlen()&K109>=0&K109<ylen())&((( !(Ch(0,0)&(K108>0|K109>0)) ) => ( !(Ch(0,0)&(K108>0|K109>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 1&(Ch(0,G0)&(K108>0|K109>G0))])&!((Ch(1,1)&(K108>1|K109>1)))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K108>G0|K109>G1))&! (Ch(G1,0)&(K108>G1|K109>0))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K108>G0|K109>G1))&! (Ch(0,G0)&(K108>0|K109>G0))])) ])
2019-10-15 20:02:51,509 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&turn(p2)])&!(turn(p2))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(1,0)&! Ch(0,1)])&!(exists(G0:Int)[G0>=0&Ch(1,0)&Ch(G0,1)&! Ch(1,1)])&!(exists(G0:Int)[G0>=0&xlen() > G0&G0 > 1&Ch(1,1)])&!(exists(G0:Int,Y10:Int)[G0>=0&Y10>=0&G0 > 1&Ch(Y10,G0)])
 f2:!(!Ch(0,0))=>(exists(K108:Int,K109:Int)[ (Ch(K108,K109)&turn(p1)&K108>=0&K108<xlen()&K109>=0&K109<ylen())&((( !(Ch(0,0)&(K108>0|K109>0)) ) => ( !(Ch(0,0)&(K108>0|K109>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 1&(Ch(0,G0)&(K108>0|K109>G0))])&!((Ch(1,1)&(K108>1|K109>1)))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K108>G0|K109>G1))&! (Ch(G1,0)&(K108>G1|K109>0))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K108>G0|K109>G1))&! (Ch(0,G0)&(K108>0|K109>G0))])) ])
2019-10-15 20:02:51,562 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&turn(p2)])&!(turn(p2))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(1,0)&! Ch(0,1)])&!(exists(G0:Int)[G0>=0&Ch(1,0)&Ch(G0,1)&! Ch(1,1)])&!(exists(G0:Int)[G0>=0&xlen() > G0&G0 > 1&Ch(1,1)])&!(exists(G0:Int,Y10:Int)[G0>=0&Y10>=0&G0 > 1&Ch(Y10,G0)])
 f2:!(!Ch(0,0))=>(exists(K108:Int,K109:Int)[ (Ch(K108,K109)&turn(p1)&K108>=0&K108<xlen()&K109>=0&K109<ylen())&((( !(Ch(0,0)&(K108>0|K109>0)) ) => ( !(Ch(0,0)&(K108>0|K109>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 1&(Ch(0,G0)&(K108>0|K109>G0))])&!((Ch(1,1)&(K108>1|K109>1)))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K108>G0|K109>G1))&! (Ch(G1,0)&(K108>G1|K109>0))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K108>G0|K109>G1))&! (Ch(0,G0)&(K108>0|K109>G0))])) ])
2019-10-15 20:02:52,246 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 > 1&Ch(0,G0)])&!(Ch(1,1))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,0)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(0,G0)])
 f2:forall(K105:Int,K106:Int)[ Ch(K105,K106)&turn(p2)&K105>=0&K105<xlen()&K106>=0&K106<ylen()=>((( !(Ch(0,0)&(K105>0|K106>0)) ) => ( !(Ch(0,0)&(K105>0|K106>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K105>0|K106>G0))&(!turn(p2))])&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K105>0|K106>G0))&! (Ch(1,0)&(K105>1|K106>0))&! (Ch(0,1)&(K105>0|K106>1))])&!(exists(G0:Int)[G0>=0&(Ch(1,0)&(K105>1|K106>0))&(Ch(G0,1)&(K105>G0|K106>1))&! (Ch(1,1)&(K105>1|K106>1))])&!(exists(G0:Int)[ exists(K107:Int)[ (xlen()=K107)&(G0>=0& K107 > G0&G0 > 1&(Ch(1,1)&(K105>1|K106>1)))] ])&!(exists(G0:Int,Y10:Int)[G0>=0&Y10>=0&G0 > 1&(Ch(Y10,G0)&(K105>Y10|K106>G0))])) ]
2019-10-15 20:02:53,038 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(3>=0&3<xlen()&0>=0&0<ylen()=>Ch(3,0))&(4>=0&4<xlen()&0>=0&0<ylen()=>Ch(4,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(3>=0&3<xlen()&1>=0&1<ylen()=>Ch(3,1))&(4>=0&4<xlen()&1>=0&1<ylen()=>Ch(4,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2))&(3>=0&3<xlen()&2>=0&2<ylen()=>Ch(3,2))&(4>=0&4<xlen()&2>=0&2<ylen()=>Ch(4,2))&(0>=0&0<xlen()&3>=0&3<ylen()=>Ch(0,3))&(1>=0&1<xlen()&3>=0&3<ylen()=>Ch(1,3))&(2>=0&2<xlen()&3>=0&3<ylen()=>Ch(2,3))&(3>=0&3<xlen()&3>=0&3<ylen()=>Ch(3,3))&(4>=0&4<xlen()&3>=0&3<ylen()=>Ch(4,3))&(0>=0&0<xlen()&4>=0&4<ylen()=>Ch(0,4))&(1>=0&1<xlen()&4>=0&4<ylen()=>Ch(1,4))&(2>=0&2<xlen()&4>=0&4<ylen()=>Ch(2,4))&(3>=0&3<xlen()&4>=0&4<ylen()=>Ch(3,4))&(4>=0&4<xlen()&4>=0&4<ylen()=>Ch(4,4)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)&ylen()=4&xlen()=4&forall(X:_S1)[X=p2 or X=p1]
 f2:false
2019-10-15 20:02:53,154 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(3>=0&3<xlen()&0>=0&0<ylen()=>Ch(3,0))&(4>=0&4<xlen()&0>=0&0<ylen()=>Ch(4,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(3>=0&3<xlen()&1>=0&1<ylen()=>Ch(3,1))&(4>=0&4<xlen()&1>=0&1<ylen()=>Ch(4,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2))&(3>=0&3<xlen()&2>=0&2<ylen()=>Ch(3,2))&(4>=0&4<xlen()&2>=0&2<ylen()=>Ch(4,2))&(0>=0&0<xlen()&3>=0&3<ylen()=>Ch(0,3))&(1>=0&1<xlen()&3>=0&3<ylen()=>Ch(1,3))&(2>=0&2<xlen()&3>=0&3<ylen()=>Ch(2,3))&(3>=0&3<xlen()&3>=0&3<ylen()=>Ch(3,3))&(4>=0&4<xlen()&3>=0&3<ylen()=>Ch(4,3))&(0>=0&0<xlen()&4>=0&4<ylen()=>Ch(0,4))&(1>=0&1<xlen()&4>=0&4<ylen()=>Ch(1,4))&(2>=0&2<xlen()&4>=0&4<ylen()=>Ch(2,4))&(3>=0&3<xlen()&4>=0&4<ylen()=>Ch(3,4))&(4>=0&4<xlen()&4>=0&4<ylen()=>Ch(4,4)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)&ylen()=4&xlen()=4&forall(X:_S1)[X=p2 or X=p1]&!(Ch(1,0)&Ch(2,1)&!turn(p2)&Ch(2,3)&!Ch(1,4)&Ch(3,1)&ylen()=4&Ch(3,3)&Ch(1,2)&Ch(0,2)&Ch(0,0)&!Ch(4,2)&!Ch(4,3)&!Ch(4,1)&!Ch(4,4)&!Ch(3,4)&Ch(1,1)&Ch(2,0)&Ch(2,2)&turn(p1)&!Ch(2,4)&Ch(3,0)&!Ch(0,4)&Ch(3,2)&Ch(1,3)&Ch(0,3)&xlen()=4&!Ch(4,0)&Ch(0,1))
 f2:false
2019-10-15 20:03:18,256 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&turn(p2)])&!(turn(p2))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(1,0)&! Ch(0,1)])&!(exists(G0:Int)[G0>=0&Ch(1,0)&Ch(G0,1)&! Ch(1,1)])&!(exists(G0:Int)[G0>=0&xlen() > G0&G0 > 1&Ch(1,1)])&!(exists(G0:Int,Y10:Int)[G0>=0&Y10>=0&G0 > 1&Ch(Y10,G0)])&!(exists(G0:Int)[G0>=0&G0 > 1&Ch(G0,1)])
 f2:!(!Ch(0,0))=>(exists(K113:Int,K114:Int)[ (Ch(K113,K114)&turn(p1)&K113>=0&K113<xlen()&K114>=0&K114<ylen())&((( !(Ch(0,0)&(K113>0|K114>0)) ) => ( !(Ch(0,0)&(K113>0|K114>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 1&(Ch(0,G0)&(K113>0|K114>G0))])&!((Ch(1,1)&(K113>1|K114>1)))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K113>G0|K114>G1))&! (Ch(G1,0)&(K113>G1|K114>0))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K113>G0|K114>G1))&! (Ch(0,G0)&(K113>0|K114>G0))])) ])
2019-10-15 20:03:18,354 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&turn(p2)])&!(turn(p2))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(1,0)&! Ch(0,1)])&!(exists(G0:Int)[G0>=0&Ch(1,0)&Ch(G0,1)&! Ch(1,1)])&!(exists(G0:Int)[G0>=0&xlen() > G0&G0 > 1&Ch(1,1)])&!(exists(G0:Int,Y10:Int)[G0>=0&Y10>=0&G0 > 1&Ch(Y10,G0)])&!(exists(G0:Int)[G0>=0&G0 > 1&Ch(G0,1)])
 f2:!(!Ch(0,0))=>(exists(K113:Int,K114:Int)[ (Ch(K113,K114)&turn(p1)&K113>=0&K113<xlen()&K114>=0&K114<ylen())&((( !(Ch(0,0)&(K113>0|K114>0)) ) => ( !(Ch(0,0)&(K113>0|K114>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 1&(Ch(0,G0)&(K113>0|K114>G0))])&!((Ch(1,1)&(K113>1|K114>1)))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K113>G0|K114>G1))&! (Ch(G1,0)&(K113>G1|K114>0))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K113>G0|K114>G1))&! (Ch(0,G0)&(K113>0|K114>G0))])) ])
2019-10-15 20:03:18,407 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&turn(p2)])&!(turn(p2))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(1,0)&! Ch(0,1)])&!(exists(G0:Int)[G0>=0&Ch(1,0)&Ch(G0,1)&! Ch(1,1)])&!(exists(G0:Int)[G0>=0&xlen() > G0&G0 > 1&Ch(1,1)])&!(exists(G0:Int,Y10:Int)[G0>=0&Y10>=0&G0 > 1&Ch(Y10,G0)])&!(exists(G0:Int)[G0>=0&G0 > 1&Ch(G0,1)])
 f2:!(!Ch(0,0))=>(exists(K113:Int,K114:Int)[ (Ch(K113,K114)&turn(p1)&K113>=0&K113<xlen()&K114>=0&K114<ylen())&((( !(Ch(0,0)&(K113>0|K114>0)) ) => ( !(Ch(0,0)&(K113>0|K114>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 1&(Ch(0,G0)&(K113>0|K114>G0))])&!((Ch(1,1)&(K113>1|K114>1)))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K113>G0|K114>G1))&! (Ch(G1,0)&(K113>G1|K114>0))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K113>G0|K114>G1))&! (Ch(0,G0)&(K113>0|K114>G0))])) ])
2019-10-15 20:03:18,887 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 > 1&Ch(0,G0)])&!(Ch(1,1))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,0)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(0,G0)])
 f2:forall(K110:Int,K111:Int)[ Ch(K110,K111)&turn(p2)&K110>=0&K110<xlen()&K111>=0&K111<ylen()=>((( !(Ch(0,0)&(K110>0|K111>0)) ) => ( !(Ch(0,0)&(K110>0|K111>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K110>0|K111>G0))&(!turn(p2))])&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K110>0|K111>G0))&! (Ch(1,0)&(K110>1|K111>0))&! (Ch(0,1)&(K110>0|K111>1))])&!(exists(G0:Int)[G0>=0&(Ch(1,0)&(K110>1|K111>0))&(Ch(G0,1)&(K110>G0|K111>1))&! (Ch(1,1)&(K110>1|K111>1))])&!(exists(G0:Int)[ exists(K112:Int)[ (xlen()=K112)&(G0>=0& K112 > G0&G0 > 1&(Ch(1,1)&(K110>1|K111>1)))] ])&!(exists(G0:Int,Y10:Int)[G0>=0&Y10>=0&G0 > 1&(Ch(Y10,G0)&(K110>Y10|K111>G0))])&!(exists(G0:Int)[G0>=0&G0 > 1&(Ch(G0,1)&(K110>G0|K111>1))])) ]
2019-10-15 20:03:19,655 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(3>=0&3<xlen()&0>=0&0<ylen()=>Ch(3,0))&(4>=0&4<xlen()&0>=0&0<ylen()=>Ch(4,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(3>=0&3<xlen()&1>=0&1<ylen()=>Ch(3,1))&(4>=0&4<xlen()&1>=0&1<ylen()=>Ch(4,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2))&(3>=0&3<xlen()&2>=0&2<ylen()=>Ch(3,2))&(4>=0&4<xlen()&2>=0&2<ylen()=>Ch(4,2))&(0>=0&0<xlen()&3>=0&3<ylen()=>Ch(0,3))&(1>=0&1<xlen()&3>=0&3<ylen()=>Ch(1,3))&(2>=0&2<xlen()&3>=0&3<ylen()=>Ch(2,3))&(3>=0&3<xlen()&3>=0&3<ylen()=>Ch(3,3))&(4>=0&4<xlen()&3>=0&3<ylen()=>Ch(4,3))&(0>=0&0<xlen()&4>=0&4<ylen()=>Ch(0,4))&(1>=0&1<xlen()&4>=0&4<ylen()=>Ch(1,4))&(2>=0&2<xlen()&4>=0&4<ylen()=>Ch(2,4))&(3>=0&3<xlen()&4>=0&4<ylen()=>Ch(3,4))&(4>=0&4<xlen()&4>=0&4<ylen()=>Ch(4,4)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)&ylen()=4&xlen()=4&forall(X:_S1)[X=p2 or X=p1]
 f2:false
2019-10-15 20:03:19,777 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(3>=0&3<xlen()&0>=0&0<ylen()=>Ch(3,0))&(4>=0&4<xlen()&0>=0&0<ylen()=>Ch(4,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(3>=0&3<xlen()&1>=0&1<ylen()=>Ch(3,1))&(4>=0&4<xlen()&1>=0&1<ylen()=>Ch(4,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2))&(3>=0&3<xlen()&2>=0&2<ylen()=>Ch(3,2))&(4>=0&4<xlen()&2>=0&2<ylen()=>Ch(4,2))&(0>=0&0<xlen()&3>=0&3<ylen()=>Ch(0,3))&(1>=0&1<xlen()&3>=0&3<ylen()=>Ch(1,3))&(2>=0&2<xlen()&3>=0&3<ylen()=>Ch(2,3))&(3>=0&3<xlen()&3>=0&3<ylen()=>Ch(3,3))&(4>=0&4<xlen()&3>=0&3<ylen()=>Ch(4,3))&(0>=0&0<xlen()&4>=0&4<ylen()=>Ch(0,4))&(1>=0&1<xlen()&4>=0&4<ylen()=>Ch(1,4))&(2>=0&2<xlen()&4>=0&4<ylen()=>Ch(2,4))&(3>=0&3<xlen()&4>=0&4<ylen()=>Ch(3,4))&(4>=0&4<xlen()&4>=0&4<ylen()=>Ch(4,4)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)&ylen()=4&xlen()=4&forall(X:_S1)[X=p2 or X=p1]&!(Ch(1,0)&Ch(2,1)&!turn(p2)&Ch(2,3)&!Ch(1,4)&Ch(3,1)&ylen()=4&Ch(3,3)&Ch(1,2)&Ch(0,2)&Ch(0,0)&!Ch(4,2)&!Ch(4,3)&!Ch(4,1)&!Ch(4,4)&!Ch(3,4)&Ch(1,1)&Ch(2,0)&Ch(2,2)&turn(p1)&!Ch(2,4)&Ch(3,0)&!Ch(0,4)&Ch(3,2)&Ch(1,3)&Ch(0,3)&xlen()=4&!Ch(4,0)&Ch(0,1))
 f2:false
2019-10-15 20:03:26,081 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&turn(p2)])&!(turn(p2))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(1,0)&! Ch(0,1)])&!(exists(G0:Int)[G0>=0&Ch(1,0)&Ch(G0,1)&! Ch(1,1)])&!(exists(G0:Int)[G0>=0&xlen() > G0&G0 > 1&Ch(1,1)])&!(exists(G0:Int,Y10:Int)[G0>=0&Y10>=0&G0 > 1&Ch(Y10,G0)])&!(exists(G0:Int)[G0>=0&G0 > 1&Ch(G0,0)])
 f2:!(!Ch(0,0))=>(exists(K118:Int,K119:Int)[ (Ch(K118,K119)&turn(p1)&K118>=0&K118<xlen()&K119>=0&K119<ylen())&((( !(Ch(0,0)&(K118>0|K119>0)) ) => ( !(Ch(0,0)&(K118>0|K119>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 1&(Ch(0,G0)&(K118>0|K119>G0))])&!((Ch(1,1)&(K118>1|K119>1)))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K118>G0|K119>G1))&! (Ch(G1,0)&(K118>G1|K119>0))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K118>G0|K119>G1))&! (Ch(0,G0)&(K118>0|K119>G0))])) ])
2019-10-15 20:03:26,139 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 > 1&Ch(0,G0)])&!(Ch(1,1))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,0)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(0,G0)])
 f2:forall(K115:Int,K116:Int)[ Ch(K115,K116)&turn(p2)&K115>=0&K115<xlen()&K116>=0&K116<ylen()=>((( !(Ch(0,0)&(K115>0|K116>0)) ) => ( !(Ch(0,0)&(K115>0|K116>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K115>0|K116>G0))&(!turn(p2))])&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K115>0|K116>G0))&! (Ch(1,0)&(K115>1|K116>0))&! (Ch(0,1)&(K115>0|K116>1))])&!(exists(G0:Int)[G0>=0&(Ch(1,0)&(K115>1|K116>0))&(Ch(G0,1)&(K115>G0|K116>1))&! (Ch(1,1)&(K115>1|K116>1))])&!(exists(G0:Int)[ exists(K117:Int)[ (xlen()=K117)&(G0>=0& K117 > G0&G0 > 1&(Ch(1,1)&(K115>1|K116>1)))] ])&!(exists(G0:Int,Y10:Int)[G0>=0&Y10>=0&G0 > 1&(Ch(Y10,G0)&(K115>Y10|K116>G0))])&!(exists(G0:Int)[G0>=0&G0 > 1&(Ch(G0,0)&(K115>G0|K116>0))])) ]
2019-10-15 20:03:26,182 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:forall(K16:Int,K17:Int)[K16>=0&K16<xlen()&K17>=0&K17<ylen()=>Ch(K16,K17)]&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)
 f2:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&turn(p2)])&!(turn(p2))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(1,0)&! Ch(0,1)])&!(exists(G0:Int)[G0>=0&Ch(1,0)&Ch(G0,1)&! Ch(1,1)])&!(exists(G0:Int)[G0>=0&xlen() > G0&G0 > 1&Ch(1,1)])&!(exists(G0:Int,Y10:Int)[G0>=0&Y10>=0&G0 > 1&Ch(Y10,G0)])&!(exists(G0:Int)[G0>=0&G0 > 1&Ch(G0,0)])
2019-10-15 20:03:26,301 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:forall(K16:Int,K17:Int)[K16>=0&K16<xlen()&K17>=0&K17<ylen()=>Ch(K16,K17)]&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)
 f2:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&turn(p2)])&!(turn(p2))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(1,0)&! Ch(0,1)])&!(exists(G0:Int)[G0>=0&Ch(1,0)&Ch(G0,1)&! Ch(1,1)])&!(exists(G0:Int)[G0>=0&xlen() > G0&G0 > 1&Ch(1,1)])&!(exists(G0:Int,Y10:Int)[G0>=0&Y10>=0&G0 > 1&Ch(Y10,G0)])&!(exists(G0:Int)[G0>=0&G0 > 1&Ch(G0,0)])
2019-10-15 20:03:26,335 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:forall(K16:Int,K17:Int)[K16>=0&K16<xlen()&K17>=0&K17<ylen()=>Ch(K16,K17)]&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)
 f2:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&turn(p2)])&!(turn(p2))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(1,0)&! Ch(0,1)])&!(exists(G0:Int)[G0>=0&Ch(1,0)&Ch(G0,1)&! Ch(1,1)])&!(exists(G0:Int)[G0>=0&xlen() > G0&G0 > 1&Ch(1,1)])&!(exists(G0:Int,Y10:Int)[G0>=0&Y10>=0&G0 > 1&Ch(Y10,G0)])&!(exists(G0:Int)[G0>=0&G0 > 1&Ch(G0,0)])
2019-10-15 20:03:33,882 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&turn(p2)])&!(turn(p2))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(1,0)&! Ch(0,1)])&!(exists(G0:Int)[G0>=0&Ch(1,0)&Ch(G0,1)&! Ch(1,1)])&!(exists(G0:Int)[G0>=0&xlen() > G0&Ch(1,1)&! Ch(1,G0)])&!(exists(G0:Int,G1:Int,G2:Int)[G0>=0&G1>=0&G2>=0&Ch(G1,G0)&G0 >= G2&! Ch(0,G2)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,0)&G0 >= G1&! Ch(G1,0)])
 f2:!(!Ch(0,0))=>(exists(K123:Int,K124:Int)[ (Ch(K123,K124)&turn(p1)&K123>=0&K123<xlen()&K124>=0&K124<ylen())&((( !(Ch(0,0)&(K123>0|K124>0)) ) => ( !(Ch(0,0)&(K123>0|K124>0))&(!turn(p1)) ))&!((Ch(1,1)&(K123>1|K124>1)))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K123>G0|K124>G1))&! (Ch(G1,0)&(K123>G1|K124>0))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K123>G0|K124>G1))&! (Ch(0,G0)&(K123>0|K124>G0))])&!(exists(G0:Int)[G0>=0&G0 > 1&(Ch(G0,G0)&(K123>G0|K124>G0))])) ])
2019-10-15 20:03:45,199 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&turn(p2)])&!(turn(p2))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(1,0)&! Ch(0,1)])&!(exists(G0:Int)[G0>=0&Ch(1,0)&Ch(G0,1)&! Ch(1,1)])&!(exists(G0:Int)[G0>=0&xlen() > G0&Ch(1,1)&! Ch(1,G0)])&!(exists(G0:Int,G1:Int,G2:Int)[G0>=0&G1>=0&G2>=0&Ch(G1,G0)&G0 >= G2&! Ch(0,G2)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,0)&G0 >= G1&! Ch(G1,0)])
 f2:!(!Ch(0,0))=>(exists(K123:Int,K124:Int)[ (Ch(K123,K124)&turn(p1)&K123>=0&K123<xlen()&K124>=0&K124<ylen())&((( !(Ch(0,0)&(K123>0|K124>0)) ) => ( !(Ch(0,0)&(K123>0|K124>0))&(!turn(p1)) ))&!((Ch(1,1)&(K123>1|K124>1)))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K123>G0|K124>G1))&! (Ch(G1,0)&(K123>G1|K124>0))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K123>G0|K124>G1))&! (Ch(0,G0)&(K123>0|K124>G0))])&!(exists(G0:Int)[G0>=0&G0 > 1&(Ch(G0,G0)&(K123>G0|K124>G0))])) ])
2019-10-15 20:03:45,269 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&turn(p2)])&!(turn(p2))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(1,0)&! Ch(0,1)])&!(exists(G0:Int)[G0>=0&Ch(1,0)&Ch(G0,1)&! Ch(1,1)])&!(exists(G0:Int)[G0>=0&xlen() > G0&Ch(1,1)&! Ch(1,G0)])&!(exists(G0:Int,G1:Int,G2:Int)[G0>=0&G1>=0&G2>=0&Ch(G1,G0)&G0 >= G2&! Ch(0,G2)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,0)&G0 >= G1&! Ch(G1,0)])
 f2:!(!Ch(0,0))=>(exists(K123:Int,K124:Int)[ (Ch(K123,K124)&turn(p1)&K123>=0&K123<xlen()&K124>=0&K124<ylen())&((( !(Ch(0,0)&(K123>0|K124>0)) ) => ( !(Ch(0,0)&(K123>0|K124>0))&(!turn(p1)) ))&!((Ch(1,1)&(K123>1|K124>1)))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K123>G0|K124>G1))&! (Ch(G1,0)&(K123>G1|K124>0))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K123>G0|K124>G1))&! (Ch(0,G0)&(K123>0|K124>G0))])&!(exists(G0:Int)[G0>=0&G0 > 1&(Ch(G0,G0)&(K123>G0|K124>G0))])) ])
2019-10-15 20:03:45,720 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(Ch(1,1))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,0)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(0,G0)])&!(exists(G0:Int)[G0>=0&G0 > 1&Ch(G0,G0)])
 f2:forall(K120:Int,K121:Int)[ Ch(K120,K121)&turn(p2)&K120>=0&K120<xlen()&K121>=0&K121<ylen()=>((( !(Ch(0,0)&(K120>0|K121>0)) ) => ( !(Ch(0,0)&(K120>0|K121>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K120>0|K121>G0))&(!turn(p2))])&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K120>0|K121>G0))&! (Ch(1,0)&(K120>1|K121>0))&! (Ch(0,1)&(K120>0|K121>1))])&!(exists(G0:Int)[G0>=0&(Ch(1,0)&(K120>1|K121>0))&(Ch(G0,1)&(K120>G0|K121>1))&! (Ch(1,1)&(K120>1|K121>1))])&!(exists(G0:Int)[ exists(K122:Int)[ (xlen()=K122)&(G0>=0& K122 > G0&(Ch(1,1)&(K120>1|K121>1))&! (Ch(1,G0)&(K120>1|K121>G0)))] ])&!(exists(G0:Int,G1:Int,G2:Int)[G0>=0&G1>=0&G2>=0&(Ch(G1,G0)&(K120>G1|K121>G0))&G0 >= G2&! (Ch(0,G2)&(K120>0|K121>G2))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,0)&(K120>G0|K121>0))&G0 >= G1&! (Ch(G1,0)&(K120>G1|K121>0))])) ]
2019-10-15 20:03:45,777 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(Ch(1,1))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,0)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(0,G0)])&!(exists(G0:Int)[G0>=0&G0 > 1&Ch(G0,G0)])
 f2:forall(K120:Int,K121:Int)[ Ch(K120,K121)&turn(p2)&K120>=0&K120<xlen()&K121>=0&K121<ylen()=>((( !(Ch(0,0)&(K120>0|K121>0)) ) => ( !(Ch(0,0)&(K120>0|K121>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K120>0|K121>G0))&(!turn(p2))])&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K120>0|K121>G0))&! (Ch(1,0)&(K120>1|K121>0))&! (Ch(0,1)&(K120>0|K121>1))])&!(exists(G0:Int)[G0>=0&(Ch(1,0)&(K120>1|K121>0))&(Ch(G0,1)&(K120>G0|K121>1))&! (Ch(1,1)&(K120>1|K121>1))])&!(exists(G0:Int)[ exists(K122:Int)[ (xlen()=K122)&(G0>=0& K122 > G0&(Ch(1,1)&(K120>1|K121>1))&! (Ch(1,G0)&(K120>1|K121>G0)))] ])&!(exists(G0:Int,G1:Int,G2:Int)[G0>=0&G1>=0&G2>=0&(Ch(G1,G0)&(K120>G1|K121>G0))&G0 >= G2&! (Ch(0,G2)&(K120>0|K121>G2))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,0)&(K120>G0|K121>0))&G0 >= G1&! (Ch(G1,0)&(K120>G1|K121>0))])) ]
2019-10-15 20:03:45,824 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(Ch(1,1))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,0)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(0,G0)])&!(exists(G0:Int)[G0>=0&G0 > 1&Ch(G0,G0)])
 f2:forall(K120:Int,K121:Int)[ Ch(K120,K121)&turn(p2)&K120>=0&K120<xlen()&K121>=0&K121<ylen()=>((( !(Ch(0,0)&(K120>0|K121>0)) ) => ( !(Ch(0,0)&(K120>0|K121>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K120>0|K121>G0))&(!turn(p2))])&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K120>0|K121>G0))&! (Ch(1,0)&(K120>1|K121>0))&! (Ch(0,1)&(K120>0|K121>1))])&!(exists(G0:Int)[G0>=0&(Ch(1,0)&(K120>1|K121>0))&(Ch(G0,1)&(K120>G0|K121>1))&! (Ch(1,1)&(K120>1|K121>1))])&!(exists(G0:Int)[ exists(K122:Int)[ (xlen()=K122)&(G0>=0& K122 > G0&(Ch(1,1)&(K120>1|K121>1))&! (Ch(1,G0)&(K120>1|K121>G0)))] ])&!(exists(G0:Int,G1:Int,G2:Int)[G0>=0&G1>=0&G2>=0&(Ch(G1,G0)&(K120>G1|K121>G0))&G0 >= G2&! (Ch(0,G2)&(K120>0|K121>G2))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,0)&(K120>G0|K121>0))&G0 >= G1&! (Ch(G1,0)&(K120>G1|K121>0))])) ]
2019-10-15 20:03:46,805 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(3>=0&3<xlen()&0>=0&0<ylen()=>Ch(3,0))&(4>=0&4<xlen()&0>=0&0<ylen()=>Ch(4,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(3>=0&3<xlen()&1>=0&1<ylen()=>Ch(3,1))&(4>=0&4<xlen()&1>=0&1<ylen()=>Ch(4,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2))&(3>=0&3<xlen()&2>=0&2<ylen()=>Ch(3,2))&(4>=0&4<xlen()&2>=0&2<ylen()=>Ch(4,2))&(0>=0&0<xlen()&3>=0&3<ylen()=>Ch(0,3))&(1>=0&1<xlen()&3>=0&3<ylen()=>Ch(1,3))&(2>=0&2<xlen()&3>=0&3<ylen()=>Ch(2,3))&(3>=0&3<xlen()&3>=0&3<ylen()=>Ch(3,3))&(4>=0&4<xlen()&3>=0&3<ylen()=>Ch(4,3))&(0>=0&0<xlen()&4>=0&4<ylen()=>Ch(0,4))&(1>=0&1<xlen()&4>=0&4<ylen()=>Ch(1,4))&(2>=0&2<xlen()&4>=0&4<ylen()=>Ch(2,4))&(3>=0&3<xlen()&4>=0&4<ylen()=>Ch(3,4))&(4>=0&4<xlen()&4>=0&4<ylen()=>Ch(4,4)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)&ylen()=4&xlen()=4&forall(X:_S1)[X=p2 or X=p1]
 f2:false
2019-10-15 20:03:46,920 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(3>=0&3<xlen()&0>=0&0<ylen()=>Ch(3,0))&(4>=0&4<xlen()&0>=0&0<ylen()=>Ch(4,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(3>=0&3<xlen()&1>=0&1<ylen()=>Ch(3,1))&(4>=0&4<xlen()&1>=0&1<ylen()=>Ch(4,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2))&(3>=0&3<xlen()&2>=0&2<ylen()=>Ch(3,2))&(4>=0&4<xlen()&2>=0&2<ylen()=>Ch(4,2))&(0>=0&0<xlen()&3>=0&3<ylen()=>Ch(0,3))&(1>=0&1<xlen()&3>=0&3<ylen()=>Ch(1,3))&(2>=0&2<xlen()&3>=0&3<ylen()=>Ch(2,3))&(3>=0&3<xlen()&3>=0&3<ylen()=>Ch(3,3))&(4>=0&4<xlen()&3>=0&3<ylen()=>Ch(4,3))&(0>=0&0<xlen()&4>=0&4<ylen()=>Ch(0,4))&(1>=0&1<xlen()&4>=0&4<ylen()=>Ch(1,4))&(2>=0&2<xlen()&4>=0&4<ylen()=>Ch(2,4))&(3>=0&3<xlen()&4>=0&4<ylen()=>Ch(3,4))&(4>=0&4<xlen()&4>=0&4<ylen()=>Ch(4,4)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)&ylen()=4&xlen()=4&forall(X:_S1)[X=p2 or X=p1]&!(Ch(1,0)&Ch(2,1)&!turn(p2)&Ch(2,3)&!Ch(1,4)&Ch(3,1)&ylen()=4&Ch(3,3)&Ch(1,2)&Ch(0,2)&Ch(0,0)&!Ch(4,2)&!Ch(4,3)&!Ch(4,1)&!Ch(4,4)&!Ch(3,4)&Ch(1,1)&Ch(2,0)&Ch(2,2)&turn(p1)&!Ch(2,4)&Ch(3,0)&!Ch(0,4)&Ch(3,2)&Ch(1,3)&Ch(0,3)&xlen()=4&!Ch(4,0)&Ch(0,1))
 f2:false
2019-10-15 20:03:54,987 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(3>=0&3<xlen()&0>=0&0<ylen()=>Ch(3,0))&(4>=0&4<xlen()&0>=0&0<ylen()=>Ch(4,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(3>=0&3<xlen()&1>=0&1<ylen()=>Ch(3,1))&(4>=0&4<xlen()&1>=0&1<ylen()=>Ch(4,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2))&(3>=0&3<xlen()&2>=0&2<ylen()=>Ch(3,2))&(4>=0&4<xlen()&2>=0&2<ylen()=>Ch(4,2))&(0>=0&0<xlen()&3>=0&3<ylen()=>Ch(0,3))&(1>=0&1<xlen()&3>=0&3<ylen()=>Ch(1,3))&(2>=0&2<xlen()&3>=0&3<ylen()=>Ch(2,3))&(3>=0&3<xlen()&3>=0&3<ylen()=>Ch(3,3))&(4>=0&4<xlen()&3>=0&3<ylen()=>Ch(4,3))&(0>=0&0<xlen()&4>=0&4<ylen()=>Ch(0,4))&(1>=0&1<xlen()&4>=0&4<ylen()=>Ch(1,4))&(2>=0&2<xlen()&4>=0&4<ylen()=>Ch(2,4))&(3>=0&3<xlen()&4>=0&4<ylen()=>Ch(3,4))&(4>=0&4<xlen()&4>=0&4<ylen()=>Ch(4,4)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)&ylen()=4&xlen()=4&forall(X:_S1)[X=p2 or X=p1]
 f2:false
2019-10-15 20:03:55,104 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(3>=0&3<xlen()&0>=0&0<ylen()=>Ch(3,0))&(4>=0&4<xlen()&0>=0&0<ylen()=>Ch(4,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(3>=0&3<xlen()&1>=0&1<ylen()=>Ch(3,1))&(4>=0&4<xlen()&1>=0&1<ylen()=>Ch(4,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2))&(3>=0&3<xlen()&2>=0&2<ylen()=>Ch(3,2))&(4>=0&4<xlen()&2>=0&2<ylen()=>Ch(4,2))&(0>=0&0<xlen()&3>=0&3<ylen()=>Ch(0,3))&(1>=0&1<xlen()&3>=0&3<ylen()=>Ch(1,3))&(2>=0&2<xlen()&3>=0&3<ylen()=>Ch(2,3))&(3>=0&3<xlen()&3>=0&3<ylen()=>Ch(3,3))&(4>=0&4<xlen()&3>=0&3<ylen()=>Ch(4,3))&(0>=0&0<xlen()&4>=0&4<ylen()=>Ch(0,4))&(1>=0&1<xlen()&4>=0&4<ylen()=>Ch(1,4))&(2>=0&2<xlen()&4>=0&4<ylen()=>Ch(2,4))&(3>=0&3<xlen()&4>=0&4<ylen()=>Ch(3,4))&(4>=0&4<xlen()&4>=0&4<ylen()=>Ch(4,4)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)&ylen()=4&xlen()=4&forall(X:_S1)[X=p2 or X=p1]&!(Ch(1,0)&Ch(2,1)&!turn(p2)&Ch(2,3)&!Ch(1,4)&Ch(3,1)&ylen()=4&Ch(3,3)&Ch(1,2)&Ch(0,2)&Ch(0,0)&!Ch(4,2)&!Ch(4,3)&!Ch(4,1)&!Ch(4,4)&!Ch(3,4)&Ch(1,1)&Ch(2,0)&Ch(2,2)&turn(p1)&!Ch(2,4)&Ch(3,0)&!Ch(0,4)&Ch(3,2)&Ch(1,3)&Ch(0,3)&xlen()=4&!Ch(4,0)&Ch(0,1))
 f2:false
2019-10-15 20:04:03,227 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&turn(p2)])&!(turn(p2))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(1,0)&! Ch(0,1)])&!(exists(G0:Int)[G0>=0&Ch(1,0)&Ch(G0,1)&! Ch(1,1)])&!(exists(G0:Int)[G0>=0&xlen() > G0&Ch(1,1)&! Ch(1,G0)])&!(exists(G0:Int,G1:Int,G2:Int)[G0>=0&G1>=0&G2>=0&Ch(G1,G0)&G0 >= G2&! Ch(0,G2)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,0)&G0 >= G1&! Ch(G1,0)])
 f2:!(!Ch(0,0))=>(exists(K128:Int,K129:Int)[ (Ch(K128,K129)&turn(p1)&K128>=0&K128<xlen()&K129>=0&K129<ylen())&((( !(Ch(0,0)&(K128>0|K129>0)) ) => ( !(Ch(0,0)&(K128>0|K129>0))&(!turn(p1)) ))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K128>G0|K129>G1))&! (Ch(G1,0)&(K128>G1|K129>0))])&!(exists(G0:Int)[G0>=0&G0 > 1&(Ch(G0,G0)&(K128>G0|K129>G0))])) ])
2019-10-15 20:04:03,277 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,0)])&!(exists(G0:Int)[G0>=0&G0 > 1&Ch(G0,G0)])
 f2:forall(K125:Int,K126:Int)[ Ch(K125,K126)&turn(p2)&K125>=0&K125<xlen()&K126>=0&K126<ylen()=>((( !(Ch(0,0)&(K125>0|K126>0)) ) => ( !(Ch(0,0)&(K125>0|K126>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K125>0|K126>G0))&(!turn(p2))])&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K125>0|K126>G0))&! (Ch(1,0)&(K125>1|K126>0))&! (Ch(0,1)&(K125>0|K126>1))])&!(exists(G0:Int)[G0>=0&(Ch(1,0)&(K125>1|K126>0))&(Ch(G0,1)&(K125>G0|K126>1))&! (Ch(1,1)&(K125>1|K126>1))])&!(exists(G0:Int)[ exists(K127:Int)[ (xlen()=K127)&(G0>=0& K127 > G0&(Ch(1,1)&(K125>1|K126>1))&! (Ch(1,G0)&(K125>1|K126>G0)))] ])&!(exists(G0:Int,G1:Int,G2:Int)[G0>=0&G1>=0&G2>=0&(Ch(G1,G0)&(K125>G1|K126>G0))&G0 >= G2&! (Ch(0,G2)&(K125>0|K126>G2))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,0)&(K125>G0|K126>0))&G0 >= G1&! (Ch(G1,0)&(K125>G1|K126>0))])) ]
2019-10-15 20:04:03,329 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,0)])&!(exists(G0:Int)[G0>=0&G0 > 1&Ch(G0,G0)])
 f2:forall(K125:Int,K126:Int)[ Ch(K125,K126)&turn(p2)&K125>=0&K125<xlen()&K126>=0&K126<ylen()=>((( !(Ch(0,0)&(K125>0|K126>0)) ) => ( !(Ch(0,0)&(K125>0|K126>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K125>0|K126>G0))&(!turn(p2))])&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K125>0|K126>G0))&! (Ch(1,0)&(K125>1|K126>0))&! (Ch(0,1)&(K125>0|K126>1))])&!(exists(G0:Int)[G0>=0&(Ch(1,0)&(K125>1|K126>0))&(Ch(G0,1)&(K125>G0|K126>1))&! (Ch(1,1)&(K125>1|K126>1))])&!(exists(G0:Int)[ exists(K127:Int)[ (xlen()=K127)&(G0>=0& K127 > G0&(Ch(1,1)&(K125>1|K126>1))&! (Ch(1,G0)&(K125>1|K126>G0)))] ])&!(exists(G0:Int,G1:Int,G2:Int)[G0>=0&G1>=0&G2>=0&(Ch(G1,G0)&(K125>G1|K126>G0))&G0 >= G2&! (Ch(0,G2)&(K125>0|K126>G2))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,0)&(K125>G0|K126>0))&G0 >= G1&! (Ch(G1,0)&(K125>G1|K126>0))])) ]
2019-10-15 20:04:03,881 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&turn(p2)])&!(turn(p2))&!(exists(G0:Int)[G0>=0&Ch(0,G0)&! Ch(1,0)&! Ch(0,1)])&!(exists(G0:Int)[G0>=0&Ch(1,0)&Ch(G0,1)&! Ch(1,1)])&!(exists(G0:Int)[G0>=0&xlen() > G0&Ch(1,1)&! Ch(1,G0)])&!(exists(G0:Int,G1:Int,G2:Int)[G0>=0&G1>=0&G2>=0&Ch(G1,G0)&G0 >= G2&! Ch(0,G2)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,0)&G0 >= G1&! Ch(G1,0)])
 f2:!(!Ch(0,0))=>(exists(K133:Int,K134:Int)[ (Ch(K133,K134)&turn(p1)&K133>=0&K133<xlen()&K134>=0&K134<ylen())&((( !(Ch(0,0)&(K133>0|K134>0)) ) => ( !(Ch(0,0)&(K133>0|K134>0))&(!turn(p1)) ))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K133>G0|K134>G1))&! (Ch(G1,0)&(K133>G1|K134>0))])&!(exists(G0:Int)[G0>=0&G0 > 1&(Ch(G0,G0)&(K133>G0|K134>G0))])&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K133>1|K134>G0))&! (Ch(G0,1)&(K133>G0|K134>1))])) ])
2019-10-15 20:04:04,192 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,0)])&!(exists(G0:Int)[G0>=0&G0 > 1&Ch(G0,G0)])&!(exists(G0:Int)[G0>=0&Ch(1,G0)&! Ch(G0,1)])
 f2:forall(K130:Int,K131:Int)[ Ch(K130,K131)&turn(p2)&K130>=0&K130<xlen()&K131>=0&K131<ylen()=>((( !(Ch(0,0)&(K130>0|K131>0)) ) => ( !(Ch(0,0)&(K130>0|K131>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K130>0|K131>G0))&(!turn(p2))])&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K130>0|K131>G0))&! (Ch(1,0)&(K130>1|K131>0))&! (Ch(0,1)&(K130>0|K131>1))])&!(exists(G0:Int)[G0>=0&(Ch(1,0)&(K130>1|K131>0))&(Ch(G0,1)&(K130>G0|K131>1))&! (Ch(1,1)&(K130>1|K131>1))])&!(exists(G0:Int)[ exists(K132:Int)[ (xlen()=K132)&(G0>=0& K132 > G0&(Ch(1,1)&(K130>1|K131>1))&! (Ch(1,G0)&(K130>1|K131>G0)))] ])&!(exists(G0:Int,G1:Int,G2:Int)[G0>=0&G1>=0&G2>=0&(Ch(G1,G0)&(K130>G1|K131>G0))&G0 >= G2&! (Ch(0,G2)&(K130>0|K131>G2))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,0)&(K130>G0|K131>0))&G0 >= G1&! (Ch(G1,0)&(K130>G1|K131>0))])) ]
2019-10-15 20:04:04,245 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,0)])&!(exists(G0:Int)[G0>=0&G0 > 1&Ch(G0,G0)])&!(exists(G0:Int)[G0>=0&Ch(1,G0)&! Ch(G0,1)])
 f2:forall(K130:Int,K131:Int)[ Ch(K130,K131)&turn(p2)&K130>=0&K130<xlen()&K131>=0&K131<ylen()=>((( !(Ch(0,0)&(K130>0|K131>0)) ) => ( !(Ch(0,0)&(K130>0|K131>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K130>0|K131>G0))&(!turn(p2))])&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(Ch(0,G0)&(K130>0|K131>G0))&! (Ch(1,0)&(K130>1|K131>0))&! (Ch(0,1)&(K130>0|K131>1))])&!(exists(G0:Int)[G0>=0&(Ch(1,0)&(K130>1|K131>0))&(Ch(G0,1)&(K130>G0|K131>1))&! (Ch(1,1)&(K130>1|K131>1))])&!(exists(G0:Int)[ exists(K132:Int)[ (xlen()=K132)&(G0>=0& K132 > G0&(Ch(1,1)&(K130>1|K131>1))&! (Ch(1,G0)&(K130>1|K131>G0)))] ])&!(exists(G0:Int,G1:Int,G2:Int)[G0>=0&G1>=0&G2>=0&(Ch(G1,G0)&(K130>G1|K131>G0))&G0 >= G2&! (Ch(0,G2)&(K130>0|K131>G2))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,0)&(K130>G0|K131>0))&G0 >= G1&! (Ch(G1,0)&(K130>G1|K131>0))])) ]
2019-10-15 20:04:35,974 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:!(!Ch(0,0))=>(exists(K137:Int,K138:Int)[ (Ch(K137,K138)&turn(p1)&K137>=0&K137<xlen()&K138>=0&K138<ylen())&(( !(Ch(0,0)&(K137>0|K138>0)) ) => ( !(Ch(0,0)&(K137>0|K138>0))&(!turn(p1)) )) ])
2019-10-15 20:04:36,016 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:forall(K135:Int,K136:Int)[ Ch(K135,K136)&turn(p2)&K135>=0&K135<xlen()&K136>=0&K136<ylen()=>(( !(Ch(0,0)&(K135>0|K136>0)) ) => ( !(Ch(0,0)&(K135>0|K136>0))&(!turn(p1)) )) ]
2019-10-15 20:04:36,189 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X0:_S1)[turn(X0)])
 f2:!(!Ch(0,0))=>(exists(K141:Int,K142:Int)[ (Ch(K141,K142)&turn(p1)&K141>=0&K141<xlen()&K142>=0&K142<ylen())&(( !(Ch(0,0)&(K141>0|K142>0)) ) => ( !(Ch(0,0)&(K141>0|K142>0))&(!turn(p1)) )) ])
2019-10-15 20:04:36,224 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:forall(K139:Int,K140:Int)[ Ch(K139,K140)&turn(p2)&K139>=0&K139<xlen()&K140>=0&K140<ylen()=>((( !(Ch(0,0)&(K139>0|K140>0)) ) => ( !(Ch(0,0)&(K139>0|K140>0))&(!turn(p1)) ))&!(exists(X0:_S1)[(!turn(X0))])) ]
2019-10-15 20:04:36,512 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X0:_S1)[turn(X0)])
 f2:!(!Ch(0,0))=>(exists(K145:Int,K146:Int)[ (Ch(K145,K146)&turn(p1)&K145>=0&K145<xlen()&K146>=0&K146<ylen())&((( !(Ch(0,0)&(K145>0|K146>0)) ) => ( !(Ch(0,0)&(K145>0|K146>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(Ch(X1,1)&(K145>X1|K146>1))])) ])
2019-10-15 20:04:36,544 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(X1,1)])
 f2:forall(K143:Int,K144:Int)[ Ch(K143,K144)&turn(p2)&K143>=0&K143<xlen()&K144>=0&K144<ylen()=>((( !(Ch(0,0)&(K143>0|K144>0)) ) => ( !(Ch(0,0)&(K143>0|K144>0))&(!turn(p1)) ))&!(exists(X0:_S1)[(!turn(X0))])) ]
2019-10-15 20:04:36,581 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(X1,1)])
 f2:forall(K143:Int,K144:Int)[ Ch(K143,K144)&turn(p2)&K143>=0&K143<xlen()&K144>=0&K144<ylen()=>((( !(Ch(0,0)&(K143>0|K144>0)) ) => ( !(Ch(0,0)&(K143>0|K144>0))&(!turn(p1)) ))&!(exists(X0:_S1)[(!turn(X0))])) ]
2019-10-15 20:04:37,109 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X0:_S1)[turn(X0)])
 f2:!(!Ch(0,0))=>(exists(K149:Int,K150:Int)[ (Ch(K149,K150)&turn(p1)&K149>=0&K149<xlen()&K150>=0&K150<ylen())&((( !(Ch(0,0)&(K149>0|K150>0)) ) => ( !(Ch(0,0)&(K149>0|K150>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(Ch(X1,1)&(K149>X1|K150>1))])&!(exists(X1:Int)[X1>=0&(Ch(X1,0)&(K149>X1|K150>0))])) ])
2019-10-15 20:04:37,145 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&Ch(X1,1)])&!(exists(X1:Int)[X1>=0&Ch(X1,0)])
 f2:forall(K147:Int,K148:Int)[ Ch(K147,K148)&turn(p2)&K147>=0&K147<xlen()&K148>=0&K148<ylen()=>((( !(Ch(0,0)&(K147>0|K148>0)) ) => ( !(Ch(0,0)&(K147>0|K148>0))&(!turn(p1)) ))&!(exists(X0:_S1)[(!turn(X0))])) ]
2019-10-15 20:04:37,177 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:forall(K16:Int,K17:Int)[K16>=0&K16<xlen()&K17>=0&K17<ylen()=>Ch(K16,K17)]&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)
 f2:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X0:_S1)[turn(X0)])
2019-10-15 20:04:38,133 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 1&! Ch(G0,1)])
 f2:!(!Ch(0,0))=>(exists(K153:Int,K154:Int)[ (Ch(K153,K154)&turn(p1)&K153>=0&K153<xlen()&K154>=0&K154<ylen())&((( !(Ch(0,0)&(K153>0|K154>0)) ) => ( !(Ch(0,0)&(K153>0|K154>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 1&(Ch(G0,1)&(K153>G0|K154>1))])&!(exists(G0:Int)[G0>=0&G0 = 1&! (Ch(0,G0)&(K153>0|K154>G0))])) ])
2019-10-15 20:04:38,189 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 1&! Ch(G0,1)])
 f2:!(!Ch(0,0))=>(exists(K153:Int,K154:Int)[ (Ch(K153,K154)&turn(p1)&K153>=0&K153<xlen()&K154>=0&K154<ylen())&((( !(Ch(0,0)&(K153>0|K154>0)) ) => ( !(Ch(0,0)&(K153>0|K154>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 1&(Ch(G0,1)&(K153>G0|K154>1))])&!(exists(G0:Int)[G0>=0&G0 = 1&! (Ch(0,G0)&(K153>0|K154>G0))])) ])
2019-10-15 20:04:38,230 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 1&Ch(G0,1)])&!(exists(G0:Int)[G0>=0&G0 = 1&! Ch(0,G0)])
 f2:forall(K151:Int,K152:Int)[ Ch(K151,K152)&turn(p2)&K151>=0&K151<xlen()&K152>=0&K152<ylen()=>((( !(Ch(0,0)&(K151>0|K152>0)) ) => ( !(Ch(0,0)&(K151>0|K152>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 1&! (Ch(G0,1)&(K151>G0|K152>1))])) ]
2019-10-15 20:04:38,278 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 1&Ch(G0,1)])&!(exists(G0:Int)[G0>=0&G0 = 1&! Ch(0,G0)])
 f2:forall(K151:Int,K152:Int)[ Ch(K151,K152)&turn(p2)&K151>=0&K151<xlen()&K152>=0&K152<ylen()=>((( !(Ch(0,0)&(K151>0|K152>0)) ) => ( !(Ch(0,0)&(K151>0|K152>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 1&! (Ch(G0,1)&(K151>G0|K152>1))])) ]
2019-10-15 20:04:38,409 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)&xlen()=2&ylen()=2&forall(X:_S1)[X=p2 or X=p1]
 f2:false
2019-10-15 20:04:38,450 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)&xlen()=2&ylen()=2&forall(X:_S1)[X=p2 or X=p1]&!(Ch(1,1)&Ch(1,0)&!Ch(0,2)&!Ch(2,1)&!turn(p2)&Ch(0,0)&xlen()=2&turn(p1)&!Ch(2,0)&!Ch(2,2)&ylen()=2&!Ch(1,2)&Ch(0,1))
 f2:false
2019-10-15 20:04:38,658 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)&xlen()=2&ylen()=2&forall(X:_S1)[X=p2 or X=p1]
 f2:false
2019-10-15 20:04:38,706 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)&xlen()=2&ylen()=2&forall(X:_S1)[X=p2 or X=p1]&!(Ch(1,1)&Ch(1,0)&!Ch(0,2)&!Ch(2,1)&!turn(p2)&Ch(0,0)&xlen()=2&turn(p1)&!Ch(2,0)&!Ch(2,2)&ylen()=2&!Ch(1,2)&Ch(0,1))
 f2:false
2019-10-15 20:04:39,239 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:_S1)[turn(G0)&! turn(p1)])
 f2:!(!Ch(0,0))=>(exists(K157:Int,K158:Int)[ (Ch(K157,K158)&turn(p1)&K157>=0&K157<xlen()&K158>=0&K158<ylen())&((( !(Ch(0,0)&(K157>0|K158>0)) ) => ( !(Ch(0,0)&(K157>0|K158>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 1&(Ch(G0,1)&(K157>G0|K158>1))])&!(exists(G0:Int)[G0>=0&G0 = 1&! (Ch(0,G0)&(K157>0|K158>G0))])) ])
2019-10-15 20:04:39,280 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 1&Ch(G0,1)])&!(exists(G0:Int)[G0>=0&G0 = 1&! Ch(0,G0)])
 f2:forall(K155:Int,K156:Int)[ Ch(K155,K156)&turn(p2)&K155>=0&K155<xlen()&K156>=0&K156<ylen()=>((( !(Ch(0,0)&(K155>0|K156>0)) ) => ( !(Ch(0,0)&(K155>0|K156>0))&(!turn(p1)) ))&!(exists(G0:_S1)[(!turn(G0))&! (!turn(p1))])) ]
2019-10-15 20:05:04,276 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:_S1)[turn(G0)&! turn(p1)])&!(exists(G0:Int)[G0>=0&Ch(G0,0)&! Ch(1,0)&! Ch(G0,1)])
 f2:!(!Ch(0,0))=>(exists(K161:Int,K162:Int)[ (Ch(K161,K162)&turn(p1)&K161>=0&K161<xlen()&K162>=0&K162<ylen())&((( !(Ch(0,0)&(K161>0|K162>0)) ) => ( !(Ch(0,0)&(K161>0|K162>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 1&(Ch(G0,1)&(K161>G0|K162>1))])&!(exists(G0:Int)[G0>=0&G0 = 1&! (Ch(0,G0)&(K161>0|K162>G0))])) ])
2019-10-15 20:05:04,319 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 1&Ch(G0,1)])&!(exists(G0:Int)[G0>=0&G0 = 1&! Ch(0,G0)])
 f2:forall(K159:Int,K160:Int)[ Ch(K159,K160)&turn(p2)&K159>=0&K159<xlen()&K160>=0&K160<ylen()=>((( !(Ch(0,0)&(K159>0|K160>0)) ) => ( !(Ch(0,0)&(K159>0|K160>0))&(!turn(p1)) ))&!(exists(G0:_S1)[(!turn(G0))&! (!turn(p1))])&!(exists(G0:Int)[G0>=0&(Ch(G0,0)&(K159>G0|K160>0))&! (Ch(1,0)&(K159>1|K160>0))&! (Ch(G0,1)&(K159>G0|K160>1))])) ]
2019-10-15 20:05:04,373 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 1&Ch(G0,1)])&!(exists(G0:Int)[G0>=0&G0 = 1&! Ch(0,G0)])
 f2:forall(K159:Int,K160:Int)[ Ch(K159,K160)&turn(p2)&K159>=0&K159<xlen()&K160>=0&K160<ylen()=>((( !(Ch(0,0)&(K159>0|K160>0)) ) => ( !(Ch(0,0)&(K159>0|K160>0))&(!turn(p1)) ))&!(exists(G0:_S1)[(!turn(G0))&! (!turn(p1))])&!(exists(G0:Int)[G0>=0&(Ch(G0,0)&(K159>G0|K160>0))&! (Ch(1,0)&(K159>1|K160>0))&! (Ch(G0,1)&(K159>G0|K160>1))])) ]
2019-10-15 20:05:04,500 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)&xlen()=2&ylen()=2&forall(X:_S1)[X=p2 or X=p1]
 f2:false
2019-10-15 20:05:04,541 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)&xlen()=2&ylen()=2&forall(X:_S1)[X=p2 or X=p1]&!(Ch(1,1)&Ch(1,0)&!Ch(0,2)&!Ch(2,1)&!turn(p2)&Ch(0,0)&xlen()=2&turn(p1)&!Ch(2,0)&!Ch(2,2)&ylen()=2&!Ch(1,2)&Ch(0,1))
 f2:false
2019-10-15 20:05:05,086 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:_S1)[turn(G0)&! turn(p1)])&!(exists(G0:Int)[G0>=0&Ch(G0,0)&! Ch(1,0)&! Ch(G0,1)])
 f2:!(!Ch(0,0))=>(exists(K165:Int,K166:Int)[ (Ch(K165,K166)&turn(p1)&K165>=0&K165<xlen()&K166>=0&K166<ylen())&((( !(Ch(0,0)&(K165>0|K166>0)) ) => ( !(Ch(0,0)&(K165>0|K166>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 1&(Ch(G0,1)&(K165>G0|K166>1))])&!(exists(G0:Int)[G0>=0&(Ch(G0,0)&(K165>G0|K166>0))&! (Ch(0,G0)&(K165>0|K166>G0))])) ])
2019-10-15 20:05:05,271 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:_S1)[turn(G0)&! turn(p1)])&!(exists(G0:Int)[G0>=0&Ch(G0,0)&! Ch(1,0)&! Ch(G0,1)])
 f2:!(!Ch(0,0))=>(exists(K165:Int,K166:Int)[ (Ch(K165,K166)&turn(p1)&K165>=0&K165<xlen()&K166>=0&K166<ylen())&((( !(Ch(0,0)&(K165>0|K166>0)) ) => ( !(Ch(0,0)&(K165>0|K166>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 1&(Ch(G0,1)&(K165>G0|K166>1))])&!(exists(G0:Int)[G0>=0&(Ch(G0,0)&(K165>G0|K166>0))&! (Ch(0,G0)&(K165>0|K166>G0))])) ])
2019-10-15 20:05:05,312 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:_S1)[turn(G0)&! turn(p1)])&!(exists(G0:Int)[G0>=0&Ch(G0,0)&! Ch(1,0)&! Ch(G0,1)])
 f2:!(!Ch(0,0))=>(exists(K165:Int,K166:Int)[ (Ch(K165,K166)&turn(p1)&K165>=0&K165<xlen()&K166>=0&K166<ylen())&((( !(Ch(0,0)&(K165>0|K166>0)) ) => ( !(Ch(0,0)&(K165>0|K166>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 1&(Ch(G0,1)&(K165>G0|K166>1))])&!(exists(G0:Int)[G0>=0&(Ch(G0,0)&(K165>G0|K166>0))&! (Ch(0,G0)&(K165>0|K166>G0))])) ])
2019-10-15 20:05:05,393 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 1&Ch(G0,1)])&!(exists(G0:Int)[G0>=0&Ch(G0,0)&! Ch(0,G0)])
 f2:forall(K163:Int,K164:Int)[ Ch(K163,K164)&turn(p2)&K163>=0&K163<xlen()&K164>=0&K164<ylen()=>((( !(Ch(0,0)&(K163>0|K164>0)) ) => ( !(Ch(0,0)&(K163>0|K164>0))&(!turn(p1)) ))&!(exists(G0:_S1)[(!turn(G0))&! (!turn(p1))])&!(exists(G0:Int)[G0>=0&(Ch(G0,0)&(K163>G0|K164>0))&! (Ch(1,0)&(K163>1|K164>0))&! (Ch(G0,1)&(K163>G0|K164>1))])) ]
2019-10-15 20:05:05,435 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&G0 = 1&Ch(G0,1)])&!(exists(G0:Int)[G0>=0&Ch(G0,0)&! Ch(0,G0)])
 f2:forall(K163:Int,K164:Int)[ Ch(K163,K164)&turn(p2)&K163>=0&K163<xlen()&K164>=0&K164<ylen()=>((( !(Ch(0,0)&(K163>0|K164>0)) ) => ( !(Ch(0,0)&(K163>0|K164>0))&(!turn(p1)) ))&!(exists(G0:_S1)[(!turn(G0))&! (!turn(p1))])&!(exists(G0:Int)[G0>=0&(Ch(G0,0)&(K163>G0|K164>0))&! (Ch(1,0)&(K163>1|K164>0))&! (Ch(G0,1)&(K163>G0|K164>1))])) ]
2019-10-15 20:05:06,186 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(3>=0&3<xlen()&0>=0&0<ylen()=>Ch(3,0))&(4>=0&4<xlen()&0>=0&0<ylen()=>Ch(4,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(3>=0&3<xlen()&1>=0&1<ylen()=>Ch(3,1))&(4>=0&4<xlen()&1>=0&1<ylen()=>Ch(4,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2))&(3>=0&3<xlen()&2>=0&2<ylen()=>Ch(3,2))&(4>=0&4<xlen()&2>=0&2<ylen()=>Ch(4,2))&(0>=0&0<xlen()&3>=0&3<ylen()=>Ch(0,3))&(1>=0&1<xlen()&3>=0&3<ylen()=>Ch(1,3))&(2>=0&2<xlen()&3>=0&3<ylen()=>Ch(2,3))&(3>=0&3<xlen()&3>=0&3<ylen()=>Ch(3,3))&(4>=0&4<xlen()&3>=0&3<ylen()=>Ch(4,3))&(0>=0&0<xlen()&4>=0&4<ylen()=>Ch(0,4))&(1>=0&1<xlen()&4>=0&4<ylen()=>Ch(1,4))&(2>=0&2<xlen()&4>=0&4<ylen()=>Ch(2,4))&(3>=0&3<xlen()&4>=0&4<ylen()=>Ch(3,4))&(4>=0&4<xlen()&4>=0&4<ylen()=>Ch(4,4)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)&ylen()=4&xlen()=4&forall(X:_S1)[X=p2 or X=p1]
 f2:false
2019-10-15 20:05:06,315 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(3>=0&3<xlen()&0>=0&0<ylen()=>Ch(3,0))&(4>=0&4<xlen()&0>=0&0<ylen()=>Ch(4,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(3>=0&3<xlen()&1>=0&1<ylen()=>Ch(3,1))&(4>=0&4<xlen()&1>=0&1<ylen()=>Ch(4,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2))&(3>=0&3<xlen()&2>=0&2<ylen()=>Ch(3,2))&(4>=0&4<xlen()&2>=0&2<ylen()=>Ch(4,2))&(0>=0&0<xlen()&3>=0&3<ylen()=>Ch(0,3))&(1>=0&1<xlen()&3>=0&3<ylen()=>Ch(1,3))&(2>=0&2<xlen()&3>=0&3<ylen()=>Ch(2,3))&(3>=0&3<xlen()&3>=0&3<ylen()=>Ch(3,3))&(4>=0&4<xlen()&3>=0&3<ylen()=>Ch(4,3))&(0>=0&0<xlen()&4>=0&4<ylen()=>Ch(0,4))&(1>=0&1<xlen()&4>=0&4<ylen()=>Ch(1,4))&(2>=0&2<xlen()&4>=0&4<ylen()=>Ch(2,4))&(3>=0&3<xlen()&4>=0&4<ylen()=>Ch(3,4))&(4>=0&4<xlen()&4>=0&4<ylen()=>Ch(4,4)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)&ylen()=4&xlen()=4&forall(X:_S1)[X=p2 or X=p1]&!(Ch(1,0)&Ch(2,1)&!turn(p2)&Ch(2,3)&!Ch(1,4)&Ch(3,1)&ylen()=4&Ch(3,3)&Ch(1,2)&Ch(0,2)&Ch(0,0)&!Ch(4,2)&!Ch(4,3)&!Ch(4,1)&!Ch(4,4)&!Ch(3,4)&Ch(1,1)&Ch(2,0)&Ch(2,2)&turn(p1)&!Ch(2,4)&Ch(3,0)&!Ch(0,4)&Ch(3,2)&Ch(1,3)&Ch(0,3)&xlen()=4&!Ch(4,0)&Ch(0,1))
 f2:false
2019-10-15 20:05:13,980 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:_S1)[turn(G0)&! turn(p1)])&!(exists(G0:Int)[G0>=0&Ch(G0,0)&! Ch(1,0)&! Ch(G0,1)])&!(exists(G0:Int)[G0>=0&G0 > 1&ylen() > G0])
 f2:!(!Ch(0,0))=>(exists(K170:Int,K171:Int)[ (Ch(K170,K171)&turn(p1)&K170>=0&K170<xlen()&K171>=0&K171<ylen())&((( !(Ch(0,0)&(K170>0|K171>0)) ) => ( !(Ch(0,0)&(K170>0|K171>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(G0,0)&(K170>G0|K171>0))&! (Ch(0,G0)&(K170>0|K171>G0))])&!(exists(G0:Int)[G0>=0&(Ch(G0,1)&(K170>G0|K171>1))&! (Ch(1,0)&(K170>1|K171>0))])) ])
2019-10-15 20:05:14,087 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(G0,0)&! Ch(0,G0)])&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(1,0)])
 f2:forall(K167:Int,K168:Int)[ Ch(K167,K168)&turn(p2)&K167>=0&K167<xlen()&K168>=0&K168<ylen()=>((( !(Ch(0,0)&(K167>0|K168>0)) ) => ( !(Ch(0,0)&(K167>0|K168>0))&(!turn(p1)) ))&!(exists(G0:_S1)[(!turn(G0))&! (!turn(p1))])&!(exists(G0:Int)[G0>=0&(Ch(G0,0)&(K167>G0|K168>0))&! (Ch(1,0)&(K167>1|K168>0))&! (Ch(G0,1)&(K167>G0|K168>1))])&!(exists(G0:Int)[ exists(K169:Int)[ (ylen()=K169)&(G0>=0&G0 > 1& K169 > G0)] ])) ]
2019-10-15 20:05:14,130 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(G0,0)&! Ch(0,G0)])&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(1,0)])
 f2:forall(K167:Int,K168:Int)[ Ch(K167,K168)&turn(p2)&K167>=0&K167<xlen()&K168>=0&K168<ylen()=>((( !(Ch(0,0)&(K167>0|K168>0)) ) => ( !(Ch(0,0)&(K167>0|K168>0))&(!turn(p1)) ))&!(exists(G0:_S1)[(!turn(G0))&! (!turn(p1))])&!(exists(G0:Int)[G0>=0&(Ch(G0,0)&(K167>G0|K168>0))&! (Ch(1,0)&(K167>1|K168>0))&! (Ch(G0,1)&(K167>G0|K168>1))])&!(exists(G0:Int)[ exists(K169:Int)[ (ylen()=K169)&(G0>=0&G0 > 1& K169 > G0)] ])) ]
2019-10-15 20:05:14,169 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(G0,0)&! Ch(0,G0)])&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(1,0)])
 f2:forall(K167:Int,K168:Int)[ Ch(K167,K168)&turn(p2)&K167>=0&K167<xlen()&K168>=0&K168<ylen()=>((( !(Ch(0,0)&(K167>0|K168>0)) ) => ( !(Ch(0,0)&(K167>0|K168>0))&(!turn(p1)) ))&!(exists(G0:_S1)[(!turn(G0))&! (!turn(p1))])&!(exists(G0:Int)[G0>=0&(Ch(G0,0)&(K167>G0|K168>0))&! (Ch(1,0)&(K167>1|K168>0))&! (Ch(G0,1)&(K167>G0|K168>1))])&!(exists(G0:Int)[ exists(K169:Int)[ (ylen()=K169)&(G0>=0&G0 > 1& K169 > G0)] ])) ]
2019-10-15 20:05:21,318 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:_S1)[turn(G0)&! turn(p1)])&!(exists(G0:Int)[G0>=0&G0 > 1&ylen() > G0])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! Ch(G0,1)&Ch(G0,0)&Ch(0,G1)&! Ch(1,G1)])
 f2:!(!Ch(0,0))=>(exists(K175:Int,K176:Int)[ (Ch(K175,K176)&turn(p1)&K175>=0&K175<xlen()&K176>=0&K176<ylen())&((( !(Ch(0,0)&(K175>0|K176>0)) ) => ( !(Ch(0,0)&(K175>0|K176>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(G0,0)&(K175>G0|K176>0))&! (Ch(0,G0)&(K175>0|K176>G0))])&!(exists(G0:Int)[G0>=0&(Ch(G0,1)&(K175>G0|K176>1))&! (Ch(1,0)&(K175>1|K176>0))])&!((Ch(1,1)&(K175>1|K176>1)))) ])
2019-10-15 20:05:21,371 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(G0,0)&! Ch(0,G0)])&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(1,0)])&!(Ch(1,1))
 f2:forall(K172:Int,K173:Int)[ Ch(K172,K173)&turn(p2)&K172>=0&K172<xlen()&K173>=0&K173<ylen()=>((( !(Ch(0,0)&(K172>0|K173>0)) ) => ( !(Ch(0,0)&(K172>0|K173>0))&(!turn(p1)) ))&!(exists(G0:_S1)[(!turn(G0))&! (!turn(p1))])&!(exists(G0:Int)[ exists(K174:Int)[ (ylen()=K174)&(G0>=0&G0 > 1& K174 > G0)] ])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! (Ch(G0,1)&(K172>G0|K173>1))&(Ch(G0,0)&(K172>G0|K173>0))&(Ch(0,G1)&(K172>0|K173>G1))&! (Ch(1,G1)&(K172>1|K173>G1))])) ]
2019-10-15 20:05:21,413 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(G0,0)&! Ch(0,G0)])&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(1,0)])&!(Ch(1,1))
 f2:forall(K172:Int,K173:Int)[ Ch(K172,K173)&turn(p2)&K172>=0&K172<xlen()&K173>=0&K173<ylen()=>((( !(Ch(0,0)&(K172>0|K173>0)) ) => ( !(Ch(0,0)&(K172>0|K173>0))&(!turn(p1)) ))&!(exists(G0:_S1)[(!turn(G0))&! (!turn(p1))])&!(exists(G0:Int)[ exists(K174:Int)[ (ylen()=K174)&(G0>=0&G0 > 1& K174 > G0)] ])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! (Ch(G0,1)&(K172>G0|K173>1))&(Ch(G0,0)&(K172>G0|K173>0))&(Ch(0,G1)&(K172>0|K173>G1))&! (Ch(1,G1)&(K172>1|K173>G1))])) ]
2019-10-15 20:05:21,446 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(G0,0)&! Ch(0,G0)])&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(1,0)])&!(Ch(1,1))
 f2:forall(K172:Int,K173:Int)[ Ch(K172,K173)&turn(p2)&K172>=0&K172<xlen()&K173>=0&K173<ylen()=>((( !(Ch(0,0)&(K172>0|K173>0)) ) => ( !(Ch(0,0)&(K172>0|K173>0))&(!turn(p1)) ))&!(exists(G0:_S1)[(!turn(G0))&! (!turn(p1))])&!(exists(G0:Int)[ exists(K174:Int)[ (ylen()=K174)&(G0>=0&G0 > 1& K174 > G0)] ])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! (Ch(G0,1)&(K172>G0|K173>1))&(Ch(G0,0)&(K172>G0|K173>0))&(Ch(0,G1)&(K172>0|K173>G1))&! (Ch(1,G1)&(K172>1|K173>G1))])) ]
2019-10-15 20:05:23,374 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:_S1)[turn(G0)&! turn(p1)])&!(exists(G0:Int)[G0>=0&G0 > 1&ylen() > G0])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! Ch(G0,1)&Ch(G0,0)&Ch(0,G1)&! Ch(1,G1)])
 f2:!(!Ch(0,0))=>(exists(K180:Int,K181:Int)[ (Ch(K180,K181)&turn(p1)&K180>=0&K180<xlen()&K181>=0&K181<ylen())&((( !(Ch(0,0)&(K180>0|K181>0)) ) => ( !(Ch(0,0)&(K180>0|K181>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(G0,0)&(K180>G0|K181>0))&! (Ch(0,G0)&(K180>0|K181>G0))])&!(exists(G0:Int)[G0>=0&(Ch(G0,1)&(K180>G0|K181>1))&! (Ch(1,0)&(K180>1|K181>0))])&!(exists(G0:Int)[G0>=0&G0 >= 1&(Ch(G0,1)&(K180>G0|K181>1))])) ])
2019-10-15 20:05:23,430 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(G0,0)&! Ch(0,G0)])&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(1,0)])&!(exists(G0:Int)[G0>=0&G0 >= 1&Ch(G0,1)])
 f2:forall(K177:Int,K178:Int)[ Ch(K177,K178)&turn(p2)&K177>=0&K177<xlen()&K178>=0&K178<ylen()=>((( !(Ch(0,0)&(K177>0|K178>0)) ) => ( !(Ch(0,0)&(K177>0|K178>0))&(!turn(p1)) ))&!(exists(G0:_S1)[(!turn(G0))&! (!turn(p1))])&!(exists(G0:Int)[ exists(K179:Int)[ (ylen()=K179)&(G0>=0&G0 > 1& K179 > G0)] ])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! (Ch(G0,1)&(K177>G0|K178>1))&(Ch(G0,0)&(K177>G0|K178>0))&(Ch(0,G1)&(K177>0|K178>G1))&! (Ch(1,G1)&(K177>1|K178>G1))])) ]
2019-10-15 20:05:23,473 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(G0,0)&! Ch(0,G0)])&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(1,0)])&!(exists(G0:Int)[G0>=0&G0 >= 1&Ch(G0,1)])
 f2:forall(K177:Int,K178:Int)[ Ch(K177,K178)&turn(p2)&K177>=0&K177<xlen()&K178>=0&K178<ylen()=>((( !(Ch(0,0)&(K177>0|K178>0)) ) => ( !(Ch(0,0)&(K177>0|K178>0))&(!turn(p1)) ))&!(exists(G0:_S1)[(!turn(G0))&! (!turn(p1))])&!(exists(G0:Int)[ exists(K179:Int)[ (ylen()=K179)&(G0>=0&G0 > 1& K179 > G0)] ])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! (Ch(G0,1)&(K177>G0|K178>1))&(Ch(G0,0)&(K177>G0|K178>0))&(Ch(0,G1)&(K177>0|K178>G1))&! (Ch(1,G1)&(K177>1|K178>G1))])) ]
2019-10-15 20:05:23,509 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(G0,0)&! Ch(0,G0)])&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(1,0)])&!(exists(G0:Int)[G0>=0&G0 >= 1&Ch(G0,1)])
 f2:forall(K177:Int,K178:Int)[ Ch(K177,K178)&turn(p2)&K177>=0&K177<xlen()&K178>=0&K178<ylen()=>((( !(Ch(0,0)&(K177>0|K178>0)) ) => ( !(Ch(0,0)&(K177>0|K178>0))&(!turn(p1)) ))&!(exists(G0:_S1)[(!turn(G0))&! (!turn(p1))])&!(exists(G0:Int)[ exists(K179:Int)[ (ylen()=K179)&(G0>=0&G0 > 1& K179 > G0)] ])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! (Ch(G0,1)&(K177>G0|K178>1))&(Ch(G0,0)&(K177>G0|K178>0))&(Ch(0,G1)&(K177>0|K178>G1))&! (Ch(1,G1)&(K177>1|K178>G1))])) ]
2019-10-15 20:05:28,467 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:_S1)[turn(G0)&! turn(p1)])&!(exists(G0:Int)[G0>=0&G0 > 1&ylen() > G0])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! Ch(G0,1)&Ch(G0,0)&Ch(0,G1)&! Ch(1,G1)])
 f2:!(!Ch(0,0))=>(exists(K185:Int,K186:Int)[ (Ch(K185,K186)&turn(p1)&K185>=0&K185<xlen()&K186>=0&K186<ylen())&((( !(Ch(0,0)&(K185>0|K186>0)) ) => ( !(Ch(0,0)&(K185>0|K186>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(G0,1)&(K185>G0|K186>1))&! (Ch(1,0)&(K185>1|K186>0))])&!(exists(G0:Int)[G0>=0&G0 >= 1&(Ch(G0,1)&(K185>G0|K186>1))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K185>G0|K186>G1))&! (Ch(G1,G0)&(K185>G1|K186>G0))])) ])
2019-10-15 20:05:28,529 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(1,0)])&!(exists(G0:Int)[G0>=0&G0 >= 1&Ch(G0,1)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,G0)])
 f2:forall(K182:Int,K183:Int)[ Ch(K182,K183)&turn(p2)&K182>=0&K182<xlen()&K183>=0&K183<ylen()=>((( !(Ch(0,0)&(K182>0|K183>0)) ) => ( !(Ch(0,0)&(K182>0|K183>0))&(!turn(p1)) ))&!(exists(G0:_S1)[(!turn(G0))&! (!turn(p1))])&!(exists(G0:Int)[ exists(K184:Int)[ (ylen()=K184)&(G0>=0&G0 > 1& K184 > G0)] ])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! (Ch(G0,1)&(K182>G0|K183>1))&(Ch(G0,0)&(K182>G0|K183>0))&(Ch(0,G1)&(K182>0|K183>G1))&! (Ch(1,G1)&(K182>1|K183>G1))])) ]
2019-10-15 20:05:28,573 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(1,0)])&!(exists(G0:Int)[G0>=0&G0 >= 1&Ch(G0,1)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,G0)])
 f2:forall(K182:Int,K183:Int)[ Ch(K182,K183)&turn(p2)&K182>=0&K182<xlen()&K183>=0&K183<ylen()=>((( !(Ch(0,0)&(K182>0|K183>0)) ) => ( !(Ch(0,0)&(K182>0|K183>0))&(!turn(p1)) ))&!(exists(G0:_S1)[(!turn(G0))&! (!turn(p1))])&!(exists(G0:Int)[ exists(K184:Int)[ (ylen()=K184)&(G0>=0&G0 > 1& K184 > G0)] ])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! (Ch(G0,1)&(K182>G0|K183>1))&(Ch(G0,0)&(K182>G0|K183>0))&(Ch(0,G1)&(K182>0|K183>G1))&! (Ch(1,G1)&(K182>1|K183>G1))])) ]
2019-10-15 20:05:28,608 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(1,0)])&!(exists(G0:Int)[G0>=0&G0 >= 1&Ch(G0,1)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,G0)])
 f2:forall(K182:Int,K183:Int)[ Ch(K182,K183)&turn(p2)&K182>=0&K182<xlen()&K183>=0&K183<ylen()=>((( !(Ch(0,0)&(K182>0|K183>0)) ) => ( !(Ch(0,0)&(K182>0|K183>0))&(!turn(p1)) ))&!(exists(G0:_S1)[(!turn(G0))&! (!turn(p1))])&!(exists(G0:Int)[ exists(K184:Int)[ (ylen()=K184)&(G0>=0&G0 > 1& K184 > G0)] ])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! (Ch(G0,1)&(K182>G0|K183>1))&(Ch(G0,0)&(K182>G0|K183>0))&(Ch(0,G1)&(K182>0|K183>G1))&! (Ch(1,G1)&(K182>1|K183>G1))])) ]
2019-10-15 20:05:40,533 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:_S1)[turn(G0)&! turn(p1)])&!(exists(G0:Int)[G0>=0&G0 > 1&ylen() > G0])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! Ch(G0,1)&Ch(G0,0)&Ch(0,G1)&! Ch(1,G1)])
 f2:!(!Ch(0,0))=>(exists(K190:Int,K191:Int)[ (Ch(K190,K191)&turn(p1)&K190>=0&K190<xlen()&K191>=0&K191<ylen())&((( !(Ch(0,0)&(K190>0|K191>0)) ) => ( !(Ch(0,0)&(K190>0|K191>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(G0,1)&(K190>G0|K191>1))&! (Ch(1,0)&(K190>1|K191>0))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K190>G0|K191>G1))&! (Ch(G1,G0)&(K190>G1|K191>G0))])&!(exists(G0:Int)[G0>=0&G0 >= 1&! G0 = 1&(Ch(G0,0)&(K190>G0|K191>0))])) ])
2019-10-15 20:05:40,673 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(1,0)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,G0)])&!(exists(G0:Int)[G0>=0&G0 >= 1&! G0 = 1&Ch(G0,0)])
 f2:forall(K187:Int,K188:Int)[ Ch(K187,K188)&turn(p2)&K187>=0&K187<xlen()&K188>=0&K188<ylen()=>((( !(Ch(0,0)&(K187>0|K188>0)) ) => ( !(Ch(0,0)&(K187>0|K188>0))&(!turn(p1)) ))&!(exists(G0:_S1)[(!turn(G0))&! (!turn(p1))])&!(exists(G0:Int)[ exists(K189:Int)[ (ylen()=K189)&(G0>=0&G0 > 1& K189 > G0)] ])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! (Ch(G0,1)&(K187>G0|K188>1))&(Ch(G0,0)&(K187>G0|K188>0))&(Ch(0,G1)&(K187>0|K188>G1))&! (Ch(1,G1)&(K187>1|K188>G1))])) ]
2019-10-15 20:05:40,734 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(1,0)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,G0)])&!(exists(G0:Int)[G0>=0&G0 >= 1&! G0 = 1&Ch(G0,0)])
 f2:forall(K187:Int,K188:Int)[ Ch(K187,K188)&turn(p2)&K187>=0&K187<xlen()&K188>=0&K188<ylen()=>((( !(Ch(0,0)&(K187>0|K188>0)) ) => ( !(Ch(0,0)&(K187>0|K188>0))&(!turn(p1)) ))&!(exists(G0:_S1)[(!turn(G0))&! (!turn(p1))])&!(exists(G0:Int)[ exists(K189:Int)[ (ylen()=K189)&(G0>=0&G0 > 1& K189 > G0)] ])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! (Ch(G0,1)&(K187>G0|K188>1))&(Ch(G0,0)&(K187>G0|K188>0))&(Ch(0,G1)&(K187>0|K188>G1))&! (Ch(1,G1)&(K187>1|K188>G1))])) ]
2019-10-15 20:05:55,052 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:_S1)[turn(G0)&! turn(p1)])&!(exists(G0:Int)[G0>=0&G0 > 1&ylen() > G0])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! Ch(G0,1)&Ch(G0,0)&Ch(0,G1)&! Ch(1,G1)])
 f2:!(!Ch(0,0))=>(exists(K195:Int,K196:Int)[ (Ch(K195,K196)&turn(p1)&K195>=0&K195<xlen()&K196>=0&K196<ylen())&((( !(Ch(0,0)&(K195>0|K196>0)) ) => ( !(Ch(0,0)&(K195>0|K196>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(G0,1)&(K195>G0|K196>1))&! (Ch(1,0)&(K195>1|K196>0))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K195>G0|K196>G1))&! (Ch(G1,G0)&(K195>G1|K196>G0))])&!(exists(G0:Int)[G0>=0&G0 >= 1&! G0 = 1&(Ch(G0,0)&(K195>G0|K196>0))])&!((Ch(1,1)&(K195>1|K196>1)))) ])
2019-10-15 20:05:55,183 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(1,0)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,G0)])&!(exists(G0:Int)[G0>=0&G0 >= 1&! G0 = 1&Ch(G0,0)])&!(Ch(1,1))
 f2:forall(K192:Int,K193:Int)[ Ch(K192,K193)&turn(p2)&K192>=0&K192<xlen()&K193>=0&K193<ylen()=>((( !(Ch(0,0)&(K192>0|K193>0)) ) => ( !(Ch(0,0)&(K192>0|K193>0))&(!turn(p1)) ))&!(exists(G0:_S1)[(!turn(G0))&! (!turn(p1))])&!(exists(G0:Int)[ exists(K194:Int)[ (ylen()=K194)&(G0>=0&G0 > 1& K194 > G0)] ])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! (Ch(G0,1)&(K192>G0|K193>1))&(Ch(G0,0)&(K192>G0|K193>0))&(Ch(0,G1)&(K192>0|K193>G1))&! (Ch(1,G1)&(K192>1|K193>G1))])) ]
2019-10-15 20:05:55,223 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(1,0)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,G0)])&!(exists(G0:Int)[G0>=0&G0 >= 1&! G0 = 1&Ch(G0,0)])&!(Ch(1,1))
 f2:forall(K192:Int,K193:Int)[ Ch(K192,K193)&turn(p2)&K192>=0&K192<xlen()&K193>=0&K193<ylen()=>((( !(Ch(0,0)&(K192>0|K193>0)) ) => ( !(Ch(0,0)&(K192>0|K193>0))&(!turn(p1)) ))&!(exists(G0:_S1)[(!turn(G0))&! (!turn(p1))])&!(exists(G0:Int)[ exists(K194:Int)[ (ylen()=K194)&(G0>=0&G0 > 1& K194 > G0)] ])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! (Ch(G0,1)&(K192>G0|K193>1))&(Ch(G0,0)&(K192>G0|K193>0))&(Ch(0,G1)&(K192>0|K193>G1))&! (Ch(1,G1)&(K192>1|K193>G1))])) ]
2019-10-15 20:05:55,256 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(1,0)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,G0)])&!(exists(G0:Int)[G0>=0&G0 >= 1&! G0 = 1&Ch(G0,0)])&!(Ch(1,1))
 f2:forall(K192:Int,K193:Int)[ Ch(K192,K193)&turn(p2)&K192>=0&K192<xlen()&K193>=0&K193<ylen()=>((( !(Ch(0,0)&(K192>0|K193>0)) ) => ( !(Ch(0,0)&(K192>0|K193>0))&(!turn(p1)) ))&!(exists(G0:_S1)[(!turn(G0))&! (!turn(p1))])&!(exists(G0:Int)[ exists(K194:Int)[ (ylen()=K194)&(G0>=0&G0 > 1& K194 > G0)] ])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! (Ch(G0,1)&(K192>G0|K193>1))&(Ch(G0,0)&(K192>G0|K193>0))&(Ch(0,G1)&(K192>0|K193>G1))&! (Ch(1,G1)&(K192>1|K193>G1))])) ]
2019-10-15 20:05:56,496 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:_S1)[turn(G0)&! turn(p1)])&!(exists(G0:Int)[G0>=0&G0 > 1&ylen() > G0])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! Ch(G0,1)&Ch(G0,0)&Ch(0,G1)&! Ch(1,G1)])
 f2:!(!Ch(0,0))=>(exists(K200:Int,K201:Int)[ (Ch(K200,K201)&turn(p1)&K200>=0&K200<xlen()&K201>=0&K201<ylen())&((( !(Ch(0,0)&(K200>0|K201>0)) ) => ( !(Ch(0,0)&(K200>0|K201>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(G0,1)&(K200>G0|K201>1))&! (Ch(1,0)&(K200>1|K201>0))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K200>G0|K201>G1))&! (Ch(G1,G0)&(K200>G1|K201>G0))])&!((Ch(1,1)&(K200>1|K201>1)))&!(exists(G0:Int)[ exists(K202:Int)[ (xlen()=K202)&(G0>=0&! G0 = 1&G0 >= 1& K202 > G0)] ])) ])
2019-10-15 20:05:56,568 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(1,0)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,G0)])&!(Ch(1,1))&!(exists(G0:Int)[G0>=0&! G0 = 1&G0 >= 1&xlen() > G0])
 f2:forall(K197:Int,K198:Int)[ Ch(K197,K198)&turn(p2)&K197>=0&K197<xlen()&K198>=0&K198<ylen()=>((( !(Ch(0,0)&(K197>0|K198>0)) ) => ( !(Ch(0,0)&(K197>0|K198>0))&(!turn(p1)) ))&!(exists(G0:_S1)[(!turn(G0))&! (!turn(p1))])&!(exists(G0:Int)[ exists(K199:Int)[ (ylen()=K199)&(G0>=0&G0 > 1& K199 > G0)] ])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! (Ch(G0,1)&(K197>G0|K198>1))&(Ch(G0,0)&(K197>G0|K198>0))&(Ch(0,G1)&(K197>0|K198>G1))&! (Ch(1,G1)&(K197>1|K198>G1))])) ]
2019-10-15 20:05:56,603 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:forall(K16:Int,K17:Int)[K16>=0&K16<xlen()&K17>=0&K17<ylen()=>Ch(K16,K17)]&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)
 f2:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:_S1)[turn(G0)&! turn(p1)])&!(exists(G0:Int)[G0>=0&G0 > 1&ylen() > G0])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! Ch(G0,1)&Ch(G0,0)&Ch(0,G1)&! Ch(1,G1)])
2019-10-15 20:05:56,649 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:forall(K16:Int,K17:Int)[K16>=0&K16<xlen()&K17>=0&K17<ylen()=>Ch(K16,K17)]&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)
 f2:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:_S1)[turn(G0)&! turn(p1)])&!(exists(G0:Int)[G0>=0&G0 > 1&ylen() > G0])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! Ch(G0,1)&Ch(G0,0)&Ch(0,G1)&! Ch(1,G1)])
2019-10-15 20:05:56,677 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:forall(K16:Int,K17:Int)[K16>=0&K16<xlen()&K17>=0&K17<ylen()=>Ch(K16,K17)]&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)
 f2:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:_S1)[turn(G0)&! turn(p1)])&!(exists(G0:Int)[G0>=0&G0 > 1&ylen() > G0])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! Ch(G0,1)&Ch(G0,0)&Ch(0,G1)&! Ch(1,G1)])
2019-10-15 20:06:14,878 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:_S1)[turn(G0)&! turn(p1)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! Ch(G0,1)&Ch(G0,0)&Ch(0,G1)&! Ch(1,G1)])&!(exists(G0:Int)[G0>=0&Ch(1,G0)&! Ch(G0,0)])
 f2:!(!Ch(0,0))=>(exists(K205:Int,K206:Int)[ (Ch(K205,K206)&turn(p1)&K205>=0&K205<xlen()&K206>=0&K206<ylen())&((( !(Ch(0,0)&(K205>0|K206>0)) ) => ( !(Ch(0,0)&(K205>0|K206>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(G0,1)&(K205>G0|K206>1))&! (Ch(1,0)&(K205>1|K206>0))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K205>G0|K206>G1))&! (Ch(G1,G0)&(K205>G1|K206>G0))])&!((Ch(1,1)&(K205>1|K206>1)))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&G0 >= 1&G1 >= 1&(Ch(G0,G1)&(K205>G0|K206>G1))])) ])
2019-10-15 20:06:21,074 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:_S1)[turn(G0)&! turn(p1)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! Ch(G0,1)&Ch(G0,0)&Ch(0,G1)&! Ch(1,G1)])&!(exists(G0:Int)[G0>=0&Ch(1,G0)&! Ch(G0,0)])
 f2:!(!Ch(0,0))=>(exists(K205:Int,K206:Int)[ (Ch(K205,K206)&turn(p1)&K205>=0&K205<xlen()&K206>=0&K206<ylen())&((( !(Ch(0,0)&(K205>0|K206>0)) ) => ( !(Ch(0,0)&(K205>0|K206>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(G0,1)&(K205>G0|K206>1))&! (Ch(1,0)&(K205>1|K206>0))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K205>G0|K206>G1))&! (Ch(G1,G0)&(K205>G1|K206>G0))])&!((Ch(1,1)&(K205>1|K206>1)))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&G0 >= 1&G1 >= 1&(Ch(G0,G1)&(K205>G0|K206>G1))])) ])
2019-10-15 20:06:21,134 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:_S1)[turn(G0)&! turn(p1)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! Ch(G0,1)&Ch(G0,0)&Ch(0,G1)&! Ch(1,G1)])&!(exists(G0:Int)[G0>=0&Ch(1,G0)&! Ch(G0,0)])
 f2:!(!Ch(0,0))=>(exists(K205:Int,K206:Int)[ (Ch(K205,K206)&turn(p1)&K205>=0&K205<xlen()&K206>=0&K206<ylen())&((( !(Ch(0,0)&(K205>0|K206>0)) ) => ( !(Ch(0,0)&(K205>0|K206>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(Ch(G0,1)&(K205>G0|K206>1))&! (Ch(1,0)&(K205>1|K206>0))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K205>G0|K206>G1))&! (Ch(G1,G0)&(K205>G1|K206>G0))])&!((Ch(1,1)&(K205>1|K206>1)))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&G0 >= 1&G1 >= 1&(Ch(G0,G1)&(K205>G0|K206>G1))])) ])
2019-10-15 20:06:21,238 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(1,0)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,G0)])&!(Ch(1,1))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&G0 >= 1&G1 >= 1&Ch(G0,G1)])
 f2:forall(K203:Int,K204:Int)[ Ch(K203,K204)&turn(p2)&K203>=0&K203<xlen()&K204>=0&K204<ylen()=>((( !(Ch(0,0)&(K203>0|K204>0)) ) => ( !(Ch(0,0)&(K203>0|K204>0))&(!turn(p1)) ))&!(exists(G0:_S1)[(!turn(G0))&! (!turn(p1))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! (Ch(G0,1)&(K203>G0|K204>1))&(Ch(G0,0)&(K203>G0|K204>0))&(Ch(0,G1)&(K203>0|K204>G1))&! (Ch(1,G1)&(K203>1|K204>G1))])&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K203>1|K204>G0))&! (Ch(G0,0)&(K203>G0|K204>0))])) ]
2019-10-15 20:06:21,280 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(1,0)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,G0)])&!(Ch(1,1))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&G0 >= 1&G1 >= 1&Ch(G0,G1)])
 f2:forall(K203:Int,K204:Int)[ Ch(K203,K204)&turn(p2)&K203>=0&K203<xlen()&K204>=0&K204<ylen()=>((( !(Ch(0,0)&(K203>0|K204>0)) ) => ( !(Ch(0,0)&(K203>0|K204>0))&(!turn(p1)) ))&!(exists(G0:_S1)[(!turn(G0))&! (!turn(p1))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! (Ch(G0,1)&(K203>G0|K204>1))&(Ch(G0,0)&(K203>G0|K204>0))&(Ch(0,G1)&(K203>0|K204>G1))&! (Ch(1,G1)&(K203>1|K204>G1))])&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K203>1|K204>G0))&! (Ch(G0,0)&(K203>G0|K204>0))])) ]
2019-10-15 20:06:21,316 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(1,0)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,G0)])&!(Ch(1,1))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&G0 >= 1&G1 >= 1&Ch(G0,G1)])
 f2:forall(K203:Int,K204:Int)[ Ch(K203,K204)&turn(p2)&K203>=0&K203<xlen()&K204>=0&K204<ylen()=>((( !(Ch(0,0)&(K203>0|K204>0)) ) => ( !(Ch(0,0)&(K203>0|K204>0))&(!turn(p1)) ))&!(exists(G0:_S1)[(!turn(G0))&! (!turn(p1))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! (Ch(G0,1)&(K203>G0|K204>1))&(Ch(G0,0)&(K203>G0|K204>0))&(Ch(0,G1)&(K203>0|K204>G1))&! (Ch(1,G1)&(K203>1|K204>G1))])&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K203>1|K204>G0))&! (Ch(G0,0)&(K203>G0|K204>0))])) ]
2019-10-15 20:06:22,316 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(3>=0&3<xlen()&0>=0&0<ylen()=>Ch(3,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(3>=0&3<xlen()&1>=0&1<ylen()=>Ch(3,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2))&(3>=0&3<xlen()&2>=0&2<ylen()=>Ch(3,2))&(0>=0&0<xlen()&3>=0&3<ylen()=>Ch(0,3))&(1>=0&1<xlen()&3>=0&3<ylen()=>Ch(1,3))&(2>=0&2<xlen()&3>=0&3<ylen()=>Ch(2,3))&(3>=0&3<xlen()&3>=0&3<ylen()=>Ch(3,3)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)&xlen()=3&ylen()=3&forall(X:_S1)[X=p2 or X=p1]
 f2:false
2019-10-15 20:06:22,392 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(3>=0&3<xlen()&0>=0&0<ylen()=>Ch(3,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(3>=0&3<xlen()&1>=0&1<ylen()=>Ch(3,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2))&(3>=0&3<xlen()&2>=0&2<ylen()=>Ch(3,2))&(0>=0&0<xlen()&3>=0&3<ylen()=>Ch(0,3))&(1>=0&1<xlen()&3>=0&3<ylen()=>Ch(1,3))&(2>=0&2<xlen()&3>=0&3<ylen()=>Ch(2,3))&(3>=0&3<xlen()&3>=0&3<ylen()=>Ch(3,3)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)&xlen()=3&ylen()=3&forall(X:_S1)[X=p2 or X=p1]&!(Ch(1,1)&Ch(1,0)&Ch(0,2)&!Ch(0,3)&!Ch(3,3)&!turn(p2)&Ch(0,0)&xlen()=3&turn(p1)&!Ch(3,1)&!Ch(2,3)&Ch(2,0)&!Ch(3,0)&Ch(2,1)&Ch(2,2)&ylen()=3&!Ch(3,2)&!Ch(1,3)&Ch(1,2)&Ch(0,1))
 f2:false
2019-10-15 20:06:55,541 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:_S1)[turn(G0)&! turn(p1)])&!(exists(G0:Int)[G0>=0&Ch(1,G0)&! Ch(G0,0)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! Ch(G0,1)&Ch(G0,0)&Ch(0,G1)&! Ch(1,G1)])&!(exists(G0:Int)[G0>=0&Ch(1,G0)&! Ch(G0,G0)])
 f2:!(!Ch(0,0))=>(exists(K209:Int,K210:Int)[ (Ch(K209,K210)&turn(p1)&K209>=0&K209<xlen()&K210>=0&K210<ylen())&((( !(Ch(0,0)&(K209>0|K210>0)) ) => ( !(Ch(0,0)&(K209>0|K210>0))&(!turn(p1)) ))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K209>G0|K210>G1))&! (Ch(G1,G0)&(K209>G1|K210>G0))])&!((Ch(1,1)&(K209>1|K210>1)))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&G0 >= 1&G1 >= 1&(Ch(G0,G1)&(K209>G0|K210>G1))])&!(exists(G0:Int,Y10:Int)[G0>=0&Y10>=0&! (Ch(1,0)&(K209>1|K210>0))&G0 >= 1&(Ch(Y10,G0)&(K209>Y10|K210>G0))])) ])
2019-10-15 20:06:58,797 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:_S1)[turn(G0)&! turn(p1)])&!(exists(G0:Int)[G0>=0&Ch(1,G0)&! Ch(G0,0)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! Ch(G0,1)&Ch(G0,0)&Ch(0,G1)&! Ch(1,G1)])&!(exists(G0:Int)[G0>=0&Ch(1,G0)&! Ch(G0,G0)])
 f2:!(!Ch(0,0))=>(exists(K209:Int,K210:Int)[ (Ch(K209,K210)&turn(p1)&K209>=0&K209<xlen()&K210>=0&K210<ylen())&((( !(Ch(0,0)&(K209>0|K210>0)) ) => ( !(Ch(0,0)&(K209>0|K210>0))&(!turn(p1)) ))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K209>G0|K210>G1))&! (Ch(G1,G0)&(K209>G1|K210>G0))])&!((Ch(1,1)&(K209>1|K210>1)))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&G0 >= 1&G1 >= 1&(Ch(G0,G1)&(K209>G0|K210>G1))])&!(exists(G0:Int,Y10:Int)[G0>=0&Y10>=0&! (Ch(1,0)&(K209>1|K210>0))&G0 >= 1&(Ch(Y10,G0)&(K209>Y10|K210>G0))])) ])
2019-10-15 20:06:58,858 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:_S1)[turn(G0)&! turn(p1)])&!(exists(G0:Int)[G0>=0&Ch(1,G0)&! Ch(G0,0)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! Ch(G0,1)&Ch(G0,0)&Ch(0,G1)&! Ch(1,G1)])&!(exists(G0:Int)[G0>=0&Ch(1,G0)&! Ch(G0,G0)])
 f2:!(!Ch(0,0))=>(exists(K209:Int,K210:Int)[ (Ch(K209,K210)&turn(p1)&K209>=0&K209<xlen()&K210>=0&K210<ylen())&((( !(Ch(0,0)&(K209>0|K210>0)) ) => ( !(Ch(0,0)&(K209>0|K210>0))&(!turn(p1)) ))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K209>G0|K210>G1))&! (Ch(G1,G0)&(K209>G1|K210>G0))])&!((Ch(1,1)&(K209>1|K210>1)))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&G0 >= 1&G1 >= 1&(Ch(G0,G1)&(K209>G0|K210>G1))])&!(exists(G0:Int,Y10:Int)[G0>=0&Y10>=0&! (Ch(1,0)&(K209>1|K210>0))&G0 >= 1&(Ch(Y10,G0)&(K209>Y10|K210>G0))])) ])
2019-10-15 20:07:00,694 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,G0)])&!(Ch(1,1))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&G0 >= 1&G1 >= 1&Ch(G0,G1)])&!(exists(G0:Int,Y10:Int)[G0>=0&Y10>=0&! Ch(1,0)&G0 >= 1&Ch(Y10,G0)])
 f2:forall(K207:Int,K208:Int)[ Ch(K207,K208)&turn(p2)&K207>=0&K207<xlen()&K208>=0&K208<ylen()=>((( !(Ch(0,0)&(K207>0|K208>0)) ) => ( !(Ch(0,0)&(K207>0|K208>0))&(!turn(p1)) ))&!(exists(G0:_S1)[(!turn(G0))&! (!turn(p1))])&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K207>1|K208>G0))&! (Ch(G0,0)&(K207>G0|K208>0))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! (Ch(G0,1)&(K207>G0|K208>1))&(Ch(G0,0)&(K207>G0|K208>0))&(Ch(0,G1)&(K207>0|K208>G1))&! (Ch(1,G1)&(K207>1|K208>G1))])&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K207>1|K208>G0))&! (Ch(G0,G0)&(K207>G0|K208>G0))])) ]
2019-10-15 20:07:00,743 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,G0)])&!(Ch(1,1))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&G0 >= 1&G1 >= 1&Ch(G0,G1)])&!(exists(G0:Int,Y10:Int)[G0>=0&Y10>=0&! Ch(1,0)&G0 >= 1&Ch(Y10,G0)])
 f2:forall(K207:Int,K208:Int)[ Ch(K207,K208)&turn(p2)&K207>=0&K207<xlen()&K208>=0&K208<ylen()=>((( !(Ch(0,0)&(K207>0|K208>0)) ) => ( !(Ch(0,0)&(K207>0|K208>0))&(!turn(p1)) ))&!(exists(G0:_S1)[(!turn(G0))&! (!turn(p1))])&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K207>1|K208>G0))&! (Ch(G0,0)&(K207>G0|K208>0))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! (Ch(G0,1)&(K207>G0|K208>1))&(Ch(G0,0)&(K207>G0|K208>0))&(Ch(0,G1)&(K207>0|K208>G1))&! (Ch(1,G1)&(K207>1|K208>G1))])&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K207>1|K208>G0))&! (Ch(G0,G0)&(K207>G0|K208>G0))])) ]
2019-10-15 20:07:00,781 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,G0)])&!(Ch(1,1))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&G0 >= 1&G1 >= 1&Ch(G0,G1)])&!(exists(G0:Int,Y10:Int)[G0>=0&Y10>=0&! Ch(1,0)&G0 >= 1&Ch(Y10,G0)])
 f2:forall(K207:Int,K208:Int)[ Ch(K207,K208)&turn(p2)&K207>=0&K207<xlen()&K208>=0&K208<ylen()=>((( !(Ch(0,0)&(K207>0|K208>0)) ) => ( !(Ch(0,0)&(K207>0|K208>0))&(!turn(p1)) ))&!(exists(G0:_S1)[(!turn(G0))&! (!turn(p1))])&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K207>1|K208>G0))&! (Ch(G0,0)&(K207>G0|K208>0))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! (Ch(G0,1)&(K207>G0|K208>1))&(Ch(G0,0)&(K207>G0|K208>0))&(Ch(0,G1)&(K207>0|K208>G1))&! (Ch(1,G1)&(K207>1|K208>G1))])&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K207>1|K208>G0))&! (Ch(G0,G0)&(K207>G0|K208>G0))])) ]
2019-10-15 20:07:01,503 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(3>=0&3<xlen()&0>=0&0<ylen()=>Ch(3,0))&(4>=0&4<xlen()&0>=0&0<ylen()=>Ch(4,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(3>=0&3<xlen()&1>=0&1<ylen()=>Ch(3,1))&(4>=0&4<xlen()&1>=0&1<ylen()=>Ch(4,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2))&(3>=0&3<xlen()&2>=0&2<ylen()=>Ch(3,2))&(4>=0&4<xlen()&2>=0&2<ylen()=>Ch(4,2))&(0>=0&0<xlen()&3>=0&3<ylen()=>Ch(0,3))&(1>=0&1<xlen()&3>=0&3<ylen()=>Ch(1,3))&(2>=0&2<xlen()&3>=0&3<ylen()=>Ch(2,3))&(3>=0&3<xlen()&3>=0&3<ylen()=>Ch(3,3))&(4>=0&4<xlen()&3>=0&3<ylen()=>Ch(4,3))&(0>=0&0<xlen()&4>=0&4<ylen()=>Ch(0,4))&(1>=0&1<xlen()&4>=0&4<ylen()=>Ch(1,4))&(2>=0&2<xlen()&4>=0&4<ylen()=>Ch(2,4))&(3>=0&3<xlen()&4>=0&4<ylen()=>Ch(3,4))&(4>=0&4<xlen()&4>=0&4<ylen()=>Ch(4,4)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)&ylen()=4&xlen()=4&forall(X:_S1)[X=p2 or X=p1]
 f2:false
2019-10-15 20:07:01,624 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(3>=0&3<xlen()&0>=0&0<ylen()=>Ch(3,0))&(4>=0&4<xlen()&0>=0&0<ylen()=>Ch(4,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(3>=0&3<xlen()&1>=0&1<ylen()=>Ch(3,1))&(4>=0&4<xlen()&1>=0&1<ylen()=>Ch(4,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2))&(3>=0&3<xlen()&2>=0&2<ylen()=>Ch(3,2))&(4>=0&4<xlen()&2>=0&2<ylen()=>Ch(4,2))&(0>=0&0<xlen()&3>=0&3<ylen()=>Ch(0,3))&(1>=0&1<xlen()&3>=0&3<ylen()=>Ch(1,3))&(2>=0&2<xlen()&3>=0&3<ylen()=>Ch(2,3))&(3>=0&3<xlen()&3>=0&3<ylen()=>Ch(3,3))&(4>=0&4<xlen()&3>=0&3<ylen()=>Ch(4,3))&(0>=0&0<xlen()&4>=0&4<ylen()=>Ch(0,4))&(1>=0&1<xlen()&4>=0&4<ylen()=>Ch(1,4))&(2>=0&2<xlen()&4>=0&4<ylen()=>Ch(2,4))&(3>=0&3<xlen()&4>=0&4<ylen()=>Ch(3,4))&(4>=0&4<xlen()&4>=0&4<ylen()=>Ch(4,4)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)&ylen()=4&xlen()=4&forall(X:_S1)[X=p2 or X=p1]&!(Ch(1,0)&Ch(2,1)&!turn(p2)&Ch(2,3)&!Ch(1,4)&Ch(3,1)&ylen()=4&Ch(3,3)&Ch(1,2)&Ch(0,2)&Ch(0,0)&!Ch(4,2)&!Ch(4,3)&!Ch(4,1)&!Ch(4,4)&!Ch(3,4)&Ch(1,1)&Ch(2,0)&Ch(2,2)&turn(p1)&!Ch(2,4)&Ch(3,0)&!Ch(0,4)&Ch(3,2)&Ch(1,3)&Ch(0,3)&xlen()=4&!Ch(4,0)&Ch(0,1))
 f2:false
2019-10-15 20:07:03,381 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(3>=0&3<xlen()&0>=0&0<ylen()=>Ch(3,0))&(4>=0&4<xlen()&0>=0&0<ylen()=>Ch(4,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(3>=0&3<xlen()&1>=0&1<ylen()=>Ch(3,1))&(4>=0&4<xlen()&1>=0&1<ylen()=>Ch(4,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2))&(3>=0&3<xlen()&2>=0&2<ylen()=>Ch(3,2))&(4>=0&4<xlen()&2>=0&2<ylen()=>Ch(4,2))&(0>=0&0<xlen()&3>=0&3<ylen()=>Ch(0,3))&(1>=0&1<xlen()&3>=0&3<ylen()=>Ch(1,3))&(2>=0&2<xlen()&3>=0&3<ylen()=>Ch(2,3))&(3>=0&3<xlen()&3>=0&3<ylen()=>Ch(3,3))&(4>=0&4<xlen()&3>=0&3<ylen()=>Ch(4,3))&(0>=0&0<xlen()&4>=0&4<ylen()=>Ch(0,4))&(1>=0&1<xlen()&4>=0&4<ylen()=>Ch(1,4))&(2>=0&2<xlen()&4>=0&4<ylen()=>Ch(2,4))&(3>=0&3<xlen()&4>=0&4<ylen()=>Ch(3,4))&(4>=0&4<xlen()&4>=0&4<ylen()=>Ch(4,4)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)&ylen()=4&xlen()=4&forall(X:_S1)[X=p2 or X=p1]
 f2:false
2019-10-15 20:07:03,514 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(3>=0&3<xlen()&0>=0&0<ylen()=>Ch(3,0))&(4>=0&4<xlen()&0>=0&0<ylen()=>Ch(4,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(3>=0&3<xlen()&1>=0&1<ylen()=>Ch(3,1))&(4>=0&4<xlen()&1>=0&1<ylen()=>Ch(4,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2))&(3>=0&3<xlen()&2>=0&2<ylen()=>Ch(3,2))&(4>=0&4<xlen()&2>=0&2<ylen()=>Ch(4,2))&(0>=0&0<xlen()&3>=0&3<ylen()=>Ch(0,3))&(1>=0&1<xlen()&3>=0&3<ylen()=>Ch(1,3))&(2>=0&2<xlen()&3>=0&3<ylen()=>Ch(2,3))&(3>=0&3<xlen()&3>=0&3<ylen()=>Ch(3,3))&(4>=0&4<xlen()&3>=0&3<ylen()=>Ch(4,3))&(0>=0&0<xlen()&4>=0&4<ylen()=>Ch(0,4))&(1>=0&1<xlen()&4>=0&4<ylen()=>Ch(1,4))&(2>=0&2<xlen()&4>=0&4<ylen()=>Ch(2,4))&(3>=0&3<xlen()&4>=0&4<ylen()=>Ch(3,4))&(4>=0&4<xlen()&4>=0&4<ylen()=>Ch(4,4)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)&ylen()=4&xlen()=4&forall(X:_S1)[X=p2 or X=p1]&!(Ch(1,0)&Ch(2,1)&!turn(p2)&Ch(2,3)&!Ch(1,4)&Ch(3,1)&ylen()=4&Ch(3,3)&Ch(1,2)&Ch(0,2)&Ch(0,0)&!Ch(4,2)&!Ch(4,3)&!Ch(4,1)&!Ch(4,4)&!Ch(3,4)&Ch(1,1)&Ch(2,0)&Ch(2,2)&turn(p1)&!Ch(2,4)&Ch(3,0)&!Ch(0,4)&Ch(3,2)&Ch(1,3)&Ch(0,3)&xlen()=4&!Ch(4,0)&Ch(0,1))
 f2:false
2019-10-15 20:07:11,861 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:_S1)[turn(G0)&! turn(p1)])&!(exists(G0:Int)[G0>=0&Ch(1,G0)&! Ch(G0,0)])&!(exists(G0:Int)[G0>=0&Ch(1,G0)&! Ch(G0,G0)])
 f2:!(!Ch(0,0))=>(exists(K213:Int,K214:Int)[ (Ch(K213,K214)&turn(p1)&K213>=0&K213<xlen()&K214>=0&K214<ylen())&((( !(Ch(0,0)&(K213>0|K214>0)) ) => ( !(Ch(0,0)&(K213>0|K214>0))&(!turn(p1)) ))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K213>G0|K214>G1))&! (Ch(G1,G0)&(K213>G1|K214>G0))])&!((Ch(1,1)&(K213>1|K214>1)))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&G0 >= 1&G1 >= 1&(Ch(G0,G1)&(K213>G0|K214>G1))])&!(exists(G0:Int,Y10:Int)[G0>=0&Y10>=0&! (Ch(1,0)&(K213>1|K214>0))&G0 >= 1&(Ch(Y10,G0)&(K213>Y10|K214>G0))])) ])
2019-10-15 20:07:11,905 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,G0)])&!(Ch(1,1))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&G0 >= 1&G1 >= 1&Ch(G0,G1)])&!(exists(G0:Int,Y10:Int)[G0>=0&Y10>=0&! Ch(1,0)&G0 >= 1&Ch(Y10,G0)])
 f2:forall(K211:Int,K212:Int)[ Ch(K211,K212)&turn(p2)&K211>=0&K211<xlen()&K212>=0&K212<ylen()=>((( !(Ch(0,0)&(K211>0|K212>0)) ) => ( !(Ch(0,0)&(K211>0|K212>0))&(!turn(p1)) ))&!(exists(G0:_S1)[(!turn(G0))&! (!turn(p1))])&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K211>1|K212>G0))&! (Ch(G0,0)&(K211>G0|K212>0))])&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K211>1|K212>G0))&! (Ch(G0,G0)&(K211>G0|K212>G0))])) ]
2019-10-15 20:07:41,577 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:_S1)[turn(G0)&! turn(p1)])&!(exists(G0:Int)[G0>=0&Ch(1,G0)&! Ch(G0,0)])&!(exists(G0:Int)[G0>=0&Ch(1,G0)&! Ch(G0,G0)])&!(exists(G0:Int)[G0>=0&Ch(G0,0)&! Ch(1,0)&! Ch(G0,1)])
 f2:!(!Ch(0,0))=>(exists(K217:Int,K218:Int)[ (Ch(K217,K218)&turn(p1)&K217>=0&K217<xlen()&K218>=0&K218<ylen())&((( !(Ch(0,0)&(K217>0|K218>0)) ) => ( !(Ch(0,0)&(K217>0|K218>0))&(!turn(p1)) ))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K217>G0|K218>G1))&! (Ch(G1,G0)&(K217>G1|K218>G0))])&!((Ch(1,1)&(K217>1|K218>1)))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&G0 >= 1&G1 >= 1&(Ch(G0,G1)&(K217>G0|K218>G1))])&!(exists(G0:Int,Y10:Int)[G0>=0&Y10>=0&! (Ch(1,0)&(K217>1|K218>0))&G0 >= 1&(Ch(Y10,G0)&(K217>Y10|K218>G0))])) ])
2019-10-15 20:07:51,647 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,G0)])&!(Ch(1,1))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&G0 >= 1&G1 >= 1&Ch(G0,G1)])&!(exists(G0:Int,Y10:Int)[G0>=0&Y10>=0&! Ch(1,0)&G0 >= 1&Ch(Y10,G0)])
 f2:forall(K215:Int,K216:Int)[ Ch(K215,K216)&turn(p2)&K215>=0&K215<xlen()&K216>=0&K216<ylen()=>((( !(Ch(0,0)&(K215>0|K216>0)) ) => ( !(Ch(0,0)&(K215>0|K216>0))&(!turn(p1)) ))&!(exists(G0:_S1)[(!turn(G0))&! (!turn(p1))])&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K215>1|K216>G0))&! (Ch(G0,0)&(K215>G0|K216>0))])&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K215>1|K216>G0))&! (Ch(G0,G0)&(K215>G0|K216>G0))])&!(exists(G0:Int)[G0>=0&(Ch(G0,0)&(K215>G0|K216>0))&! (Ch(1,0)&(K215>1|K216>0))&! (Ch(G0,1)&(K215>G0|K216>1))])) ]
2019-10-15 20:07:51,744 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:_S1)[turn(G0)&! turn(p1)])&!(exists(G0:Int)[G0>=0&Ch(1,G0)&! Ch(G0,0)])&!(exists(G0:Int)[G0>=0&Ch(1,G0)&! Ch(G0,G0)])&!(exists(G0:Int)[G0>=0&Ch(G0,0)&! Ch(G0,1)&! Ch(1,0)])
 f2:!(!Ch(0,0))=>(exists(K221:Int,K222:Int)[ (Ch(K221,K222)&turn(p1)&K221>=0&K221<xlen()&K222>=0&K222<ylen())&((( !(Ch(0,0)&(K221>0|K222>0)) ) => ( !(Ch(0,0)&(K221>0|K222>0))&(!turn(p1)) ))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K221>G0|K222>G1))&! (Ch(G1,G0)&(K221>G1|K222>G0))])&!((Ch(1,1)&(K221>1|K222>1)))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&G0 >= 1&G1 >= 1&(Ch(G0,G1)&(K221>G0|K222>G1))])&!(exists(G0:Int,Y10:Int)[G0>=0&Y10>=0&! (Ch(1,0)&(K221>1|K222>0))&G0 >= 1&(Ch(Y10,G0)&(K221>Y10|K222>G0))])) ])
2019-10-15 20:08:01,811 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,G0)])&!(Ch(1,1))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&G0 >= 1&G1 >= 1&Ch(G0,G1)])&!(exists(G0:Int,Y10:Int)[G0>=0&Y10>=0&! Ch(1,0)&G0 >= 1&Ch(Y10,G0)])
 f2:forall(K219:Int,K220:Int)[ Ch(K219,K220)&turn(p2)&K219>=0&K219<xlen()&K220>=0&K220<ylen()=>((( !(Ch(0,0)&(K219>0|K220>0)) ) => ( !(Ch(0,0)&(K219>0|K220>0))&(!turn(p1)) ))&!(exists(G0:_S1)[(!turn(G0))&! (!turn(p1))])&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K219>1|K220>G0))&! (Ch(G0,0)&(K219>G0|K220>0))])&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K219>1|K220>G0))&! (Ch(G0,G0)&(K219>G0|K220>G0))])&!(exists(G0:Int)[G0>=0&(Ch(G0,0)&(K219>G0|K220>0))&! (Ch(G0,1)&(K219>G0|K220>1))&! (Ch(1,0)&(K219>1|K220>0))])) ]
2019-10-15 20:08:01,925 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:_S1)[turn(G0)&! turn(p1)])&!(exists(G0:Int)[G0>=0&Ch(1,G0)&! Ch(G0,0)])&!(exists(G0:Int)[G0>=0&Ch(1,G0)&! Ch(G0,G0)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(1,0)&! Ch(G0,1)])
 f2:!(!Ch(0,0))=>(exists(K225:Int,K226:Int)[ (Ch(K225,K226)&turn(p1)&K225>=0&K225<xlen()&K226>=0&K226<ylen())&((( !(Ch(0,0)&(K225>0|K226>0)) ) => ( !(Ch(0,0)&(K225>0|K226>0))&(!turn(p1)) ))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K225>G0|K226>G1))&! (Ch(G1,G0)&(K225>G1|K226>G0))])&!((Ch(1,1)&(K225>1|K226>1)))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&G0 >= 1&G1 >= 1&(Ch(G0,G1)&(K225>G0|K226>G1))])&!(exists(G0:Int,Y10:Int)[G0>=0&Y10>=0&! (Ch(1,0)&(K225>1|K226>0))&G0 >= 1&(Ch(Y10,G0)&(K225>Y10|K226>G0))])) ])
2019-10-15 20:08:12,129 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,G0)])&!(Ch(1,1))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&G0 >= 1&G1 >= 1&Ch(G0,G1)])&!(exists(G0:Int,Y10:Int)[G0>=0&Y10>=0&! Ch(1,0)&G0 >= 1&Ch(Y10,G0)])
 f2:forall(K223:Int,K224:Int)[ Ch(K223,K224)&turn(p2)&K223>=0&K223<xlen()&K224>=0&K224<ylen()=>((( !(Ch(0,0)&(K223>0|K224>0)) ) => ( !(Ch(0,0)&(K223>0|K224>0))&(!turn(p1)) ))&!(exists(G0:_S1)[(!turn(G0))&! (!turn(p1))])&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K223>1|K224>G0))&! (Ch(G0,0)&(K223>G0|K224>0))])&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K223>1|K224>G0))&! (Ch(G0,G0)&(K223>G0|K224>G0))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K223>G0|K224>G1))&! (Ch(1,0)&(K223>1|K224>0))&! (Ch(G0,1)&(K223>G0|K224>1))])) ]
2019-10-15 20:08:12,246 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:_S1)[turn(G0)&! turn(p1)])&!(exists(G0:Int)[G0>=0&Ch(1,G0)&! Ch(G0,0)])&!(exists(G0:Int)[G0>=0&Ch(1,G0)&! Ch(G0,G0)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(1,G1)&! Ch(G0,1)])
 f2:!(!Ch(0,0))=>(exists(K229:Int,K230:Int)[ (Ch(K229,K230)&turn(p1)&K229>=0&K229<xlen()&K230>=0&K230<ylen())&((( !(Ch(0,0)&(K229>0|K230>0)) ) => ( !(Ch(0,0)&(K229>0|K230>0))&(!turn(p1)) ))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K229>G0|K230>G1))&! (Ch(G1,G0)&(K229>G1|K230>G0))])&!((Ch(1,1)&(K229>1|K230>1)))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&G0 >= 1&G1 >= 1&(Ch(G0,G1)&(K229>G0|K230>G1))])&!(exists(G0:Int,Y10:Int)[G0>=0&Y10>=0&! (Ch(1,0)&(K229>1|K230>0))&G0 >= 1&(Ch(Y10,G0)&(K229>Y10|K230>G0))])) ])
2019-10-15 20:08:22,583 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,G0)])&!(Ch(1,1))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&G0 >= 1&G1 >= 1&Ch(G0,G1)])&!(exists(G0:Int,Y10:Int)[G0>=0&Y10>=0&! Ch(1,0)&G0 >= 1&Ch(Y10,G0)])
 f2:forall(K227:Int,K228:Int)[ Ch(K227,K228)&turn(p2)&K227>=0&K227<xlen()&K228>=0&K228<ylen()=>((( !(Ch(0,0)&(K227>0|K228>0)) ) => ( !(Ch(0,0)&(K227>0|K228>0))&(!turn(p1)) ))&!(exists(G0:_S1)[(!turn(G0))&! (!turn(p1))])&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K227>1|K228>G0))&! (Ch(G0,0)&(K227>G0|K228>0))])&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K227>1|K228>G0))&! (Ch(G0,G0)&(K227>G0|K228>G0))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K227>G0|K228>G1))&! (Ch(1,G1)&(K227>1|K228>G1))&! (Ch(G0,1)&(K227>G0|K228>1))])) ]
2019-10-15 20:08:22,689 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:_S1)[turn(G0)&! turn(p1)])&!(exists(G0:Int)[G0>=0&Ch(1,G0)&! Ch(G0,0)])&!(exists(G0:Int)[G0>=0&Ch(1,G0)&! Ch(G0,G0)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G0,1)&! Ch(1,G1)])
 f2:!(!Ch(0,0))=>(exists(K233:Int,K234:Int)[ (Ch(K233,K234)&turn(p1)&K233>=0&K233<xlen()&K234>=0&K234<ylen())&((( !(Ch(0,0)&(K233>0|K234>0)) ) => ( !(Ch(0,0)&(K233>0|K234>0))&(!turn(p1)) ))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K233>G0|K234>G1))&! (Ch(G1,G0)&(K233>G1|K234>G0))])&!((Ch(1,1)&(K233>1|K234>1)))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&G0 >= 1&G1 >= 1&(Ch(G0,G1)&(K233>G0|K234>G1))])&!(exists(G0:Int,Y10:Int)[G0>=0&Y10>=0&! (Ch(1,0)&(K233>1|K234>0))&G0 >= 1&(Ch(Y10,G0)&(K233>Y10|K234>G0))])) ])
2019-10-15 20:08:33,028 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,G0)])&!(Ch(1,1))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&G0 >= 1&G1 >= 1&Ch(G0,G1)])&!(exists(G0:Int,Y10:Int)[G0>=0&Y10>=0&! Ch(1,0)&G0 >= 1&Ch(Y10,G0)])
 f2:forall(K231:Int,K232:Int)[ Ch(K231,K232)&turn(p2)&K231>=0&K231<xlen()&K232>=0&K232<ylen()=>((( !(Ch(0,0)&(K231>0|K232>0)) ) => ( !(Ch(0,0)&(K231>0|K232>0))&(!turn(p1)) ))&!(exists(G0:_S1)[(!turn(G0))&! (!turn(p1))])&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K231>1|K232>G0))&! (Ch(G0,0)&(K231>G0|K232>0))])&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K231>1|K232>G0))&! (Ch(G0,G0)&(K231>G0|K232>G0))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K231>G0|K232>G1))&! (Ch(G0,1)&(K231>G0|K232>1))&! (Ch(1,G1)&(K231>1|K232>G1))])) ]
2019-10-15 20:08:33,133 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:_S1)[turn(G0)&! turn(p1)])&!(exists(G0:Int)[G0>=0&Ch(1,G0)&! Ch(G0,0)])&!(exists(G0:Int)[G0>=0&Ch(1,G0)&! Ch(G0,G0)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G0,1)&! Ch(1,0)])
 f2:!(!Ch(0,0))=>(exists(K237:Int,K238:Int)[ (Ch(K237,K238)&turn(p1)&K237>=0&K237<xlen()&K238>=0&K238<ylen())&((( !(Ch(0,0)&(K237>0|K238>0)) ) => ( !(Ch(0,0)&(K237>0|K238>0))&(!turn(p1)) ))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K237>G0|K238>G1))&! (Ch(G1,G0)&(K237>G1|K238>G0))])&!((Ch(1,1)&(K237>1|K238>1)))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&G0 >= 1&G1 >= 1&(Ch(G0,G1)&(K237>G0|K238>G1))])&!(exists(G0:Int,Y10:Int)[G0>=0&Y10>=0&! (Ch(1,0)&(K237>1|K238>0))&G0 >= 1&(Ch(Y10,G0)&(K237>Y10|K238>G0))])) ])
2019-10-15 20:08:43,344 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,G0)])&!(Ch(1,1))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&G0 >= 1&G1 >= 1&Ch(G0,G1)])&!(exists(G0:Int,Y10:Int)[G0>=0&Y10>=0&! Ch(1,0)&G0 >= 1&Ch(Y10,G0)])
 f2:forall(K235:Int,K236:Int)[ Ch(K235,K236)&turn(p2)&K235>=0&K235<xlen()&K236>=0&K236<ylen()=>((( !(Ch(0,0)&(K235>0|K236>0)) ) => ( !(Ch(0,0)&(K235>0|K236>0))&(!turn(p1)) ))&!(exists(G0:_S1)[(!turn(G0))&! (!turn(p1))])&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K235>1|K236>G0))&! (Ch(G0,0)&(K235>G0|K236>0))])&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K235>1|K236>G0))&! (Ch(G0,G0)&(K235>G0|K236>G0))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K235>G0|K236>G1))&! (Ch(G0,1)&(K235>G0|K236>1))&! (Ch(1,0)&(K235>1|K236>0))])) ]
2019-10-15 20:08:43,430 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:_S1)[turn(G0)&! turn(p1)])&!(exists(G0:Int)[G0>=0&Ch(1,G0)&! Ch(G0,0)])&!(exists(G0:Int)[G0>=0&Ch(1,G0)&! Ch(G0,G0)])&!(exists(G0:Int)[G0>=0&Ch(G0,G0)&! Ch(1,0)&! Ch(G0,1)])
 f2:!(!Ch(0,0))=>(exists(K241:Int,K242:Int)[ (Ch(K241,K242)&turn(p1)&K241>=0&K241<xlen()&K242>=0&K242<ylen())&((( !(Ch(0,0)&(K241>0|K242>0)) ) => ( !(Ch(0,0)&(K241>0|K242>0))&(!turn(p1)) ))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K241>G0|K242>G1))&! (Ch(G1,G0)&(K241>G1|K242>G0))])&!((Ch(1,1)&(K241>1|K242>1)))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&G0 >= 1&G1 >= 1&(Ch(G0,G1)&(K241>G0|K242>G1))])&!(exists(G0:Int,Y10:Int)[G0>=0&Y10>=0&! (Ch(1,0)&(K241>1|K242>0))&G0 >= 1&(Ch(Y10,G0)&(K241>Y10|K242>G0))])) ])
2019-10-15 20:08:53,525 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,G0)])&!(Ch(1,1))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&G0 >= 1&G1 >= 1&Ch(G0,G1)])&!(exists(G0:Int,Y10:Int)[G0>=0&Y10>=0&! Ch(1,0)&G0 >= 1&Ch(Y10,G0)])
 f2:forall(K239:Int,K240:Int)[ Ch(K239,K240)&turn(p2)&K239>=0&K239<xlen()&K240>=0&K240<ylen()=>((( !(Ch(0,0)&(K239>0|K240>0)) ) => ( !(Ch(0,0)&(K239>0|K240>0))&(!turn(p1)) ))&!(exists(G0:_S1)[(!turn(G0))&! (!turn(p1))])&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K239>1|K240>G0))&! (Ch(G0,0)&(K239>G0|K240>0))])&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K239>1|K240>G0))&! (Ch(G0,G0)&(K239>G0|K240>G0))])&!(exists(G0:Int)[G0>=0&(Ch(G0,G0)&(K239>G0|K240>G0))&! (Ch(1,0)&(K239>1|K240>0))&! (Ch(G0,1)&(K239>G0|K240>1))])) ]
2019-10-15 20:08:53,622 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:_S1)[turn(G0)&! turn(p1)])&!(exists(G0:Int)[G0>=0&Ch(1,G0)&! Ch(G0,0)])&!(exists(G0:Int)[G0>=0&Ch(1,G0)&! Ch(G0,G0)])&!(exists(G0:Int)[G0>=0&Ch(G0,G0)&! Ch(1,G0)&! Ch(G0,1)])
 f2:!(!Ch(0,0))=>(exists(K245:Int,K246:Int)[ (Ch(K245,K246)&turn(p1)&K245>=0&K245<xlen()&K246>=0&K246<ylen())&((( !(Ch(0,0)&(K245>0|K246>0)) ) => ( !(Ch(0,0)&(K245>0|K246>0))&(!turn(p1)) ))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K245>G0|K246>G1))&! (Ch(G1,G0)&(K245>G1|K246>G0))])&!((Ch(1,1)&(K245>1|K246>1)))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&G0 >= 1&G1 >= 1&(Ch(G0,G1)&(K245>G0|K246>G1))])&!(exists(G0:Int,Y10:Int)[G0>=0&Y10>=0&! (Ch(1,0)&(K245>1|K246>0))&G0 >= 1&(Ch(Y10,G0)&(K245>Y10|K246>G0))])) ])
2019-10-15 20:08:55,295 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:_S1)[turn(G0)&! turn(p1)])&!(exists(G0:Int)[G0>=0&Ch(1,G0)&! Ch(G0,0)])&!(exists(G0:Int)[G0>=0&Ch(1,G0)&! Ch(G0,G0)])&!(exists(G0:Int)[G0>=0&Ch(G0,G0)&! Ch(1,G0)&! Ch(G0,1)])
 f2:!(!Ch(0,0))=>(exists(K245:Int,K246:Int)[ (Ch(K245,K246)&turn(p1)&K245>=0&K245<xlen()&K246>=0&K246<ylen())&((( !(Ch(0,0)&(K245>0|K246>0)) ) => ( !(Ch(0,0)&(K245>0|K246>0))&(!turn(p1)) ))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,G1)&(K245>G0|K246>G1))&! (Ch(G1,G0)&(K245>G1|K246>G0))])&!((Ch(1,1)&(K245>1|K246>1)))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&G0 >= 1&G1 >= 1&(Ch(G0,G1)&(K245>G0|K246>G1))])&!(exists(G0:Int,Y10:Int)[G0>=0&Y10>=0&! (Ch(1,0)&(K245>1|K246>0))&G0 >= 1&(Ch(Y10,G0)&(K245>Y10|K246>G0))])) ])
2019-10-15 20:08:55,359 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,G1)&! Ch(G1,G0)])&!(Ch(1,1))&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&G0 >= 1&G1 >= 1&Ch(G0,G1)])&!(exists(G0:Int,Y10:Int)[G0>=0&Y10>=0&! Ch(1,0)&G0 >= 1&Ch(Y10,G0)])
 f2:forall(K243:Int,K244:Int)[ Ch(K243,K244)&turn(p2)&K243>=0&K243<xlen()&K244>=0&K244<ylen()=>((( !(Ch(0,0)&(K243>0|K244>0)) ) => ( !(Ch(0,0)&(K243>0|K244>0))&(!turn(p1)) ))&!(exists(G0:_S1)[(!turn(G0))&! (!turn(p1))])&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K243>1|K244>G0))&! (Ch(G0,0)&(K243>G0|K244>0))])&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K243>1|K244>G0))&! (Ch(G0,G0)&(K243>G0|K244>G0))])&!(exists(G0:Int)[G0>=0&(Ch(G0,G0)&(K243>G0|K244>G0))&! (Ch(1,G0)&(K243>1|K244>G0))&! (Ch(G0,1)&(K243>G0|K244>1))])) ]
2019-10-15 20:09:30,133 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:!(!Ch(0,0))=>(exists(K249:Int,K250:Int)[ (Ch(K249,K250)&turn(p1)&K249>=0&K249<xlen()&K250>=0&K250<ylen())&(( !(Ch(0,0)&(K249>0|K250>0)) ) => ( !(Ch(0,0)&(K249>0|K250>0))&(!turn(p1)) )) ])
2019-10-15 20:09:30,171 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:forall(K247:Int,K248:Int)[ Ch(K247,K248)&turn(p2)&K247>=0&K247<xlen()&K248>=0&K248<ylen()=>(( !(Ch(0,0)&(K247>0|K248>0)) ) => ( !(Ch(0,0)&(K247>0|K248>0))&(!turn(p1)) )) ]
2019-10-15 20:09:30,321 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&xlen() = X1])
 f2:!(!Ch(0,0))=>(exists(K253:Int,K254:Int)[ (Ch(K253,K254)&turn(p1)&K253>=0&K253<xlen()&K254>=0&K254<ylen())&(( !(Ch(0,0)&(K253>0|K254>0)) ) => ( !(Ch(0,0)&(K253>0|K254>0))&(!turn(p1)) )) ])
2019-10-15 20:09:30,350 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) )
 f2:forall(K251:Int,K252:Int)[ Ch(K251,K252)&turn(p2)&K251>=0&K251<xlen()&K252>=0&K252<ylen()=>((( !(Ch(0,0)&(K251>0|K252>0)) ) => ( !(Ch(0,0)&(K251>0|K252>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(xlen()=X1)])) ]
2019-10-15 20:09:30,601 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&xlen() = X1])
 f2:!(!Ch(0,0))=>(exists(K257:Int,K258:Int)[ (Ch(K257,K258)&turn(p1)&K257>=0&K257<xlen()&K258>=0&K258<ylen())&((( !(Ch(0,0)&(K257>0|K258>0)) ) => ( !(Ch(0,0)&(K257>0|K258>0))&(!turn(p1)) ))&!(exists(X0:_S1)[(!turn(X0))])) ])
2019-10-15 20:09:30,633 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X0:_S1)[turn(X0)])
 f2:forall(K255:Int,K256:Int)[ Ch(K255,K256)&turn(p2)&K255>=0&K255<xlen()&K256>=0&K256<ylen()=>((( !(Ch(0,0)&(K255>0|K256>0)) ) => ( !(Ch(0,0)&(K255>0|K256>0))&(!turn(p1)) ))&!(exists(X1:Int)[X1>=0&(xlen()=X1)])) ]
2019-10-15 20:09:30,663 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:forall(K16:Int,K17:Int)[K16>=0&K16<xlen()&K17>=0&K17<ylen()=>Ch(K16,K17)]&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)
 f2:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(X1:Int)[X1>=0&xlen() = X1])
2019-10-15 20:09:31,451 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 > 1&! Ch(0,G0)])
 f2:!(!Ch(0,0))=>(exists(K261:Int,K262:Int)[ (Ch(K261,K262)&turn(p1)&K261>=0&K261<xlen()&K262>=0&K262<ylen())&((( !(Ch(0,0)&(K261>0|K262>0)) ) => ( !(Ch(0,0)&(K261>0|K262>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! G0 > 1&! (Ch(G0,0)&(K261>G0|K262>0))])) ])
2019-10-15 20:09:31,493 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 > 1&! Ch(0,G0)])
 f2:!(!Ch(0,0))=>(exists(K261:Int,K262:Int)[ (Ch(K261,K262)&turn(p1)&K261>=0&K261<xlen()&K262>=0&K262<ylen())&((( !(Ch(0,0)&(K261>0|K262>0)) ) => ( !(Ch(0,0)&(K261>0|K262>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! G0 > 1&! (Ch(G0,0)&(K261>G0|K262>0))])) ])
2019-10-15 20:09:31,528 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 > 1&! Ch(G0,0)])
 f2:forall(K259:Int,K260:Int)[ Ch(K259,K260)&turn(p2)&K259>=0&K259<xlen()&K260>=0&K260<ylen()=>((( !(Ch(0,0)&(K259>0|K260>0)) ) => ( !(Ch(0,0)&(K259>0|K260>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! G0 > 1&! (Ch(0,G0)&(K259>0|K260>G0))])) ]
2019-10-15 20:09:31,569 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 > 1&! Ch(G0,0)])
 f2:forall(K259:Int,K260:Int)[ Ch(K259,K260)&turn(p2)&K259>=0&K259<xlen()&K260>=0&K260<ylen()=>((( !(Ch(0,0)&(K259>0|K260>0)) ) => ( !(Ch(0,0)&(K259>0|K260>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! G0 > 1&! (Ch(0,G0)&(K259>0|K260>G0))])) ]
2019-10-15 20:09:31,718 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)&xlen()=2&ylen()=2&forall(X:_S1)[X=p2 or X=p1]
 f2:false
2019-10-15 20:09:31,765 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)&xlen()=2&ylen()=2&forall(X:_S1)[X=p2 or X=p1]&!(Ch(1,1)&Ch(1,0)&!Ch(0,2)&!Ch(2,1)&!turn(p2)&Ch(0,0)&xlen()=2&turn(p1)&!Ch(2,0)&!Ch(2,2)&ylen()=2&!Ch(1,2)&Ch(0,1))
 f2:false
2019-10-15 20:09:32,278 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 > 1&! Ch(0,G0)])
 f2:!(!Ch(0,0))=>(exists(K265:Int,K266:Int)[ (Ch(K265,K266)&turn(p1)&K265>=0&K265<xlen()&K266>=0&K266<ylen())&((( !(Ch(0,0)&(K265>0|K266>0)) ) => ( !(Ch(0,0)&(K265>0|K266>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! G0 = 0&(Ch(1,G0)&(K265>1|K266>G0))])) ])
2019-10-15 20:09:32,321 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 > 1&! Ch(0,G0)])
 f2:!(!Ch(0,0))=>(exists(K265:Int,K266:Int)[ (Ch(K265,K266)&turn(p1)&K265>=0&K265<xlen()&K266>=0&K266<ylen())&((( !(Ch(0,0)&(K265>0|K266>0)) ) => ( !(Ch(0,0)&(K265>0|K266>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! G0 = 0&(Ch(1,G0)&(K265>1|K266>G0))])) ])
2019-10-15 20:09:32,358 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 = 0&Ch(1,G0)])
 f2:forall(K263:Int,K264:Int)[ Ch(K263,K264)&turn(p2)&K263>=0&K263<xlen()&K264>=0&K264<ylen()=>((( !(Ch(0,0)&(K263>0|K264>0)) ) => ( !(Ch(0,0)&(K263>0|K264>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! G0 > 1&! (Ch(0,G0)&(K263>0|K264>G0))])) ]
2019-10-15 20:09:32,396 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 = 0&Ch(1,G0)])
 f2:forall(K263:Int,K264:Int)[ Ch(K263,K264)&turn(p2)&K263>=0&K263<xlen()&K264>=0&K264<ylen()=>((( !(Ch(0,0)&(K263>0|K264>0)) ) => ( !(Ch(0,0)&(K263>0|K264>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! G0 > 1&! (Ch(0,G0)&(K263>0|K264>G0))])) ]
2019-10-15 20:09:33,485 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 > 1&! Ch(0,G0)])&!(turn(p2))
 f2:!(!Ch(0,0))=>(exists(K269:Int,K270:Int)[ (Ch(K269,K270)&turn(p1)&K269>=0&K269<xlen()&K270>=0&K270<ylen())&((( !(Ch(0,0)&(K269>0|K270>0)) ) => ( !(Ch(0,0)&(K269>0|K270>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! G0 = 0&(Ch(1,G0)&(K269>1|K270>G0))])&!((Ch(0,1)&(K269>0|K270>1))&! (Ch(1,0)&(K269>1|K270>0)))) ])
2019-10-15 20:09:33,521 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 = 0&Ch(1,G0)])&!(Ch(0,1)&! Ch(1,0))
 f2:forall(K267:Int,K268:Int)[ Ch(K267,K268)&turn(p2)&K267>=0&K267<xlen()&K268>=0&K268<ylen()=>((( !(Ch(0,0)&(K267>0|K268>0)) ) => ( !(Ch(0,0)&(K267>0|K268>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! G0 > 1&! (Ch(0,G0)&(K267>0|K268>G0))])&!((!turn(p2)))) ]
2019-10-15 20:09:33,667 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)&xlen()=2&ylen()=2&forall(X:_S1)[X=p2 or X=p1]
 f2:false
2019-10-15 20:09:33,710 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)&xlen()=2&ylen()=2&forall(X:_S1)[X=p2 or X=p1]&!(Ch(1,1)&Ch(1,0)&!Ch(0,2)&!Ch(2,1)&!turn(p2)&Ch(0,0)&xlen()=2&turn(p1)&!Ch(2,0)&!Ch(2,2)&ylen()=2&!Ch(1,2)&Ch(0,1))
 f2:false
2019-10-15 20:09:34,240 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(turn(p2))&!(exists(G0:Int)[G0>=0&xlen() = G0&turn(p2)])
 f2:!(!Ch(0,0))=>(exists(K273:Int,K274:Int)[ (Ch(K273,K274)&turn(p1)&K273>=0&K273<xlen()&K274>=0&K274<ylen())&((( !(Ch(0,0)&(K273>0|K274>0)) ) => ( !(Ch(0,0)&(K273>0|K274>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! G0 = 0&(Ch(1,G0)&(K273>1|K274>G0))])&!((Ch(0,1)&(K273>0|K274>1))&! (Ch(1,0)&(K273>1|K274>0)))) ])
2019-10-15 20:09:34,280 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 = 0&Ch(1,G0)])&!(Ch(0,1)&! Ch(1,0))
 f2:forall(K271:Int,K272:Int)[ Ch(K271,K272)&turn(p2)&K271>=0&K271<xlen()&K272>=0&K272<ylen()=>((( !(Ch(0,0)&(K271>0|K272>0)) ) => ( !(Ch(0,0)&(K271>0|K272>0))&(!turn(p1)) ))&!((!turn(p2)))&!(exists(G0:Int)[G0>=0&(xlen()=G0)&(!turn(p2))])) ]
2019-10-15 20:09:58,279 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() = G0&turn(p2)])&!(turn(p2))&!(Ch(0,0)&! Ch(1,0)&! Ch(0,1))
 f2:!(!Ch(0,0))=>(exists(K277:Int,K278:Int)[ (Ch(K277,K278)&turn(p1)&K277>=0&K277<xlen()&K278>=0&K278<ylen())&((( !(Ch(0,0)&(K277>0|K278>0)) ) => ( !(Ch(0,0)&(K277>0|K278>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! G0 = 0&(Ch(1,G0)&(K277>1|K278>G0))])&!((Ch(0,1)&(K277>0|K278>1))&! (Ch(1,0)&(K277>1|K278>0)))) ])
2019-10-15 20:09:58,314 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 = 0&Ch(1,G0)])&!(Ch(0,1)&! Ch(1,0))
 f2:forall(K275:Int,K276:Int)[ Ch(K275,K276)&turn(p2)&K275>=0&K275<xlen()&K276>=0&K276<ylen()=>((( !(Ch(0,0)&(K275>0|K276>0)) ) => ( !(Ch(0,0)&(K275>0|K276>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(xlen()=G0)&(!turn(p2))])&!((!turn(p2)))&!((Ch(0,0)&(K275>0|K276>0))&! (Ch(1,0)&(K275>1|K276>0))&! (Ch(0,1)&(K275>0|K276>1)))) ]
2019-10-15 20:09:58,353 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 = 0&Ch(1,G0)])&!(Ch(0,1)&! Ch(1,0))
 f2:forall(K275:Int,K276:Int)[ Ch(K275,K276)&turn(p2)&K275>=0&K275<xlen()&K276>=0&K276<ylen()=>((( !(Ch(0,0)&(K275>0|K276>0)) ) => ( !(Ch(0,0)&(K275>0|K276>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(xlen()=G0)&(!turn(p2))])&!((!turn(p2)))&!((Ch(0,0)&(K275>0|K276>0))&! (Ch(1,0)&(K275>1|K276>0))&! (Ch(0,1)&(K275>0|K276>1)))) ]
2019-10-15 20:09:59,742 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() = G0&turn(p2)])&!(turn(p2))&!(Ch(0,0)&! Ch(1,0)&! Ch(0,1))
 f2:!(!Ch(0,0))=>(exists(K281:Int,K282:Int)[ (Ch(K281,K282)&turn(p1)&K281>=0&K281<xlen()&K282>=0&K282<ylen())&((( !(Ch(0,0)&(K281>0|K282>0)) ) => ( !(Ch(0,0)&(K281>0|K282>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! G0 = 0&(Ch(1,G0)&(K281>1|K282>G0))])&!((Ch(0,1)&(K281>0|K282>1))&! (Ch(1,0)&(K281>1|K282>0)))&!((Ch(1,0)&(K281>1|K282>0))&! (Ch(0,1)&(K281>0|K282>1)))) ])
2019-10-15 20:09:59,789 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 = 0&Ch(1,G0)])&!(Ch(0,1)&! Ch(1,0))&!(Ch(1,0)&! Ch(0,1))
 f2:forall(K279:Int,K280:Int)[ Ch(K279,K280)&turn(p2)&K279>=0&K279<xlen()&K280>=0&K280<ylen()=>((( !(Ch(0,0)&(K279>0|K280>0)) ) => ( !(Ch(0,0)&(K279>0|K280>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(xlen()=G0)&(!turn(p2))])&!((!turn(p2)))&!((Ch(0,0)&(K279>0|K280>0))&! (Ch(1,0)&(K279>1|K280>0))&! (Ch(0,1)&(K279>0|K280>1)))) ]
2019-10-15 20:09:59,835 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 = 0&Ch(1,G0)])&!(Ch(0,1)&! Ch(1,0))&!(Ch(1,0)&! Ch(0,1))
 f2:forall(K279:Int,K280:Int)[ Ch(K279,K280)&turn(p2)&K279>=0&K279<xlen()&K280>=0&K280<ylen()=>((( !(Ch(0,0)&(K279>0|K280>0)) ) => ( !(Ch(0,0)&(K279>0|K280>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(xlen()=G0)&(!turn(p2))])&!((!turn(p2)))&!((Ch(0,0)&(K279>0|K280>0))&! (Ch(1,0)&(K279>1|K280>0))&! (Ch(0,1)&(K279>0|K280>1)))) ]
2019-10-15 20:09:59,868 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 = 0&Ch(1,G0)])&!(Ch(0,1)&! Ch(1,0))&!(Ch(1,0)&! Ch(0,1))
 f2:forall(K279:Int,K280:Int)[ Ch(K279,K280)&turn(p2)&K279>=0&K279<xlen()&K280>=0&K280<ylen()=>((( !(Ch(0,0)&(K279>0|K280>0)) ) => ( !(Ch(0,0)&(K279>0|K280>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(xlen()=G0)&(!turn(p2))])&!((!turn(p2)))&!((Ch(0,0)&(K279>0|K280>0))&! (Ch(1,0)&(K279>1|K280>0))&! (Ch(0,1)&(K279>0|K280>1)))) ]
2019-10-15 20:10:31,209 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() = G0&turn(p2)])&!(turn(p2))&!(Ch(0,0)&! Ch(1,0)&! Ch(0,1))&!(exists(G0:Int)[G0>=0&Ch(1,G0)&Ch(0,1)&! Ch(1,1)])
 f2:!(!Ch(0,0))=>(exists(K285:Int,K286:Int)[ (Ch(K285,K286)&turn(p1)&K285>=0&K285<xlen()&K286>=0&K286<ylen())&((( !(Ch(0,0)&(K285>0|K286>0)) ) => ( !(Ch(0,0)&(K285>0|K286>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! G0 = 0&(Ch(1,G0)&(K285>1|K286>G0))])&!((Ch(0,1)&(K285>0|K286>1))&! (Ch(1,0)&(K285>1|K286>0)))&!((Ch(1,0)&(K285>1|K286>0))&! (Ch(0,1)&(K285>0|K286>1)))&!(exists(G0:Int)[ exists(K287:Int)[ (ylen()=K287)&(G0>=0&G0 > 1& K287 > G0)] ])) ])
2019-10-15 20:10:31,255 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() = G0&turn(p2)])&!(turn(p2))&!(Ch(0,0)&! Ch(1,0)&! Ch(0,1))&!(exists(G0:Int)[G0>=0&Ch(1,G0)&Ch(0,1)&! Ch(1,1)])
 f2:!(!Ch(0,0))=>(exists(K285:Int,K286:Int)[ (Ch(K285,K286)&turn(p1)&K285>=0&K285<xlen()&K286>=0&K286<ylen())&((( !(Ch(0,0)&(K285>0|K286>0)) ) => ( !(Ch(0,0)&(K285>0|K286>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! G0 = 0&(Ch(1,G0)&(K285>1|K286>G0))])&!((Ch(0,1)&(K285>0|K286>1))&! (Ch(1,0)&(K285>1|K286>0)))&!((Ch(1,0)&(K285>1|K286>0))&! (Ch(0,1)&(K285>0|K286>1)))&!(exists(G0:Int)[ exists(K287:Int)[ (ylen()=K287)&(G0>=0&G0 > 1& K287 > G0)] ])) ])
2019-10-15 20:10:31,291 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() = G0&turn(p2)])&!(turn(p2))&!(Ch(0,0)&! Ch(1,0)&! Ch(0,1))&!(exists(G0:Int)[G0>=0&Ch(1,G0)&Ch(0,1)&! Ch(1,1)])
 f2:!(!Ch(0,0))=>(exists(K285:Int,K286:Int)[ (Ch(K285,K286)&turn(p1)&K285>=0&K285<xlen()&K286>=0&K286<ylen())&((( !(Ch(0,0)&(K285>0|K286>0)) ) => ( !(Ch(0,0)&(K285>0|K286>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! G0 = 0&(Ch(1,G0)&(K285>1|K286>G0))])&!((Ch(0,1)&(K285>0|K286>1))&! (Ch(1,0)&(K285>1|K286>0)))&!((Ch(1,0)&(K285>1|K286>0))&! (Ch(0,1)&(K285>0|K286>1)))&!(exists(G0:Int)[ exists(K287:Int)[ (ylen()=K287)&(G0>=0&G0 > 1& K287 > G0)] ])) ])
2019-10-15 20:10:31,335 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 = 0&Ch(1,G0)])&!(Ch(0,1)&! Ch(1,0))&!(Ch(1,0)&! Ch(0,1))&!(exists(G0:Int)[G0>=0&G0 > 1&ylen() > G0])
 f2:forall(K283:Int,K284:Int)[ Ch(K283,K284)&turn(p2)&K283>=0&K283<xlen()&K284>=0&K284<ylen()=>((( !(Ch(0,0)&(K283>0|K284>0)) ) => ( !(Ch(0,0)&(K283>0|K284>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(xlen()=G0)&(!turn(p2))])&!((!turn(p2)))&!((Ch(0,0)&(K283>0|K284>0))&! (Ch(1,0)&(K283>1|K284>0))&! (Ch(0,1)&(K283>0|K284>1)))&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K283>1|K284>G0))&(Ch(0,1)&(K283>0|K284>1))&! (Ch(1,1)&(K283>1|K284>1))])) ]
2019-10-15 20:10:31,609 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(3>=0&3<xlen()&0>=0&0<ylen()=>Ch(3,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(3>=0&3<xlen()&1>=0&1<ylen()=>Ch(3,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2))&(3>=0&3<xlen()&2>=0&2<ylen()=>Ch(3,2))&(0>=0&0<xlen()&3>=0&3<ylen()=>Ch(0,3))&(1>=0&1<xlen()&3>=0&3<ylen()=>Ch(1,3))&(2>=0&2<xlen()&3>=0&3<ylen()=>Ch(2,3))&(3>=0&3<xlen()&3>=0&3<ylen()=>Ch(3,3)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)&xlen()=3&ylen()=3&forall(X:_S1)[X=p2 or X=p1]
 f2:false
2019-10-15 20:10:31,687 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(3>=0&3<xlen()&0>=0&0<ylen()=>Ch(3,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(3>=0&3<xlen()&1>=0&1<ylen()=>Ch(3,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2))&(3>=0&3<xlen()&2>=0&2<ylen()=>Ch(3,2))&(0>=0&0<xlen()&3>=0&3<ylen()=>Ch(0,3))&(1>=0&1<xlen()&3>=0&3<ylen()=>Ch(1,3))&(2>=0&2<xlen()&3>=0&3<ylen()=>Ch(2,3))&(3>=0&3<xlen()&3>=0&3<ylen()=>Ch(3,3)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)&xlen()=3&ylen()=3&forall(X:_S1)[X=p2 or X=p1]&!(Ch(1,1)&Ch(1,0)&Ch(0,2)&!Ch(0,3)&!Ch(3,3)&!turn(p2)&Ch(0,0)&xlen()=3&turn(p1)&!Ch(3,1)&!Ch(2,3)&Ch(2,0)&!Ch(3,0)&Ch(2,1)&Ch(2,2)&ylen()=3&!Ch(3,2)&!Ch(1,3)&Ch(1,2)&Ch(0,1))
 f2:false
2019-10-15 20:10:34,718 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() = G0&turn(p2)])&!(turn(p2))&!(Ch(0,0)&! Ch(1,0)&! Ch(0,1))&!(exists(G0:Int)[G0>=0&Ch(1,G0)&Ch(0,1)&! Ch(1,1)])
 f2:!(!Ch(0,0))=>(exists(K290:Int,K291:Int)[ (Ch(K290,K291)&turn(p1)&K290>=0&K290<xlen()&K291>=0&K291<ylen())&((( !(Ch(0,0)&(K290>0|K291>0)) ) => ( !(Ch(0,0)&(K290>0|K291>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! G0 = 0&(Ch(1,G0)&(K290>1|K291>G0))])&!((Ch(0,1)&(K290>0|K291>1))&! (Ch(1,0)&(K290>1|K291>0)))&!((Ch(1,0)&(K290>1|K291>0))&! (Ch(0,1)&(K290>0|K291>1)))&!(exists(G0:Int)[G0>=0&! G0 = 0&(Ch(G0,G0)&(K290>G0|K291>G0))])) ])
2019-10-15 20:10:34,758 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 = 0&Ch(1,G0)])&!(Ch(0,1)&! Ch(1,0))&!(Ch(1,0)&! Ch(0,1))&!(exists(G0:Int)[G0>=0&! G0 = 0&Ch(G0,G0)])
 f2:forall(K288:Int,K289:Int)[ Ch(K288,K289)&turn(p2)&K288>=0&K288<xlen()&K289>=0&K289<ylen()=>((( !(Ch(0,0)&(K288>0|K289>0)) ) => ( !(Ch(0,0)&(K288>0|K289>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(xlen()=G0)&(!turn(p2))])&!((!turn(p2)))&!((Ch(0,0)&(K288>0|K289>0))&! (Ch(1,0)&(K288>1|K289>0))&! (Ch(0,1)&(K288>0|K289>1)))&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K288>1|K289>G0))&(Ch(0,1)&(K288>0|K289>1))&! (Ch(1,1)&(K288>1|K289>1))])) ]
2019-10-15 20:10:34,804 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 = 0&Ch(1,G0)])&!(Ch(0,1)&! Ch(1,0))&!(Ch(1,0)&! Ch(0,1))&!(exists(G0:Int)[G0>=0&! G0 = 0&Ch(G0,G0)])
 f2:forall(K288:Int,K289:Int)[ Ch(K288,K289)&turn(p2)&K288>=0&K288<xlen()&K289>=0&K289<ylen()=>((( !(Ch(0,0)&(K288>0|K289>0)) ) => ( !(Ch(0,0)&(K288>0|K289>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(xlen()=G0)&(!turn(p2))])&!((!turn(p2)))&!((Ch(0,0)&(K288>0|K289>0))&! (Ch(1,0)&(K288>1|K289>0))&! (Ch(0,1)&(K288>0|K289>1)))&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K288>1|K289>G0))&(Ch(0,1)&(K288>0|K289>1))&! (Ch(1,1)&(K288>1|K289>1))])) ]
2019-10-15 20:10:34,839 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 = 0&Ch(1,G0)])&!(Ch(0,1)&! Ch(1,0))&!(Ch(1,0)&! Ch(0,1))&!(exists(G0:Int)[G0>=0&! G0 = 0&Ch(G0,G0)])
 f2:forall(K288:Int,K289:Int)[ Ch(K288,K289)&turn(p2)&K288>=0&K288<xlen()&K289>=0&K289<ylen()=>((( !(Ch(0,0)&(K288>0|K289>0)) ) => ( !(Ch(0,0)&(K288>0|K289>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(xlen()=G0)&(!turn(p2))])&!((!turn(p2)))&!((Ch(0,0)&(K288>0|K289>0))&! (Ch(1,0)&(K288>1|K289>0))&! (Ch(0,1)&(K288>0|K289>1)))&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K288>1|K289>G0))&(Ch(0,1)&(K288>0|K289>1))&! (Ch(1,1)&(K288>1|K289>1))])) ]
2019-10-15 20:10:36,967 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() = G0&turn(p2)])&!(turn(p2))&!(Ch(0,0)&! Ch(1,0)&! Ch(0,1))&!(exists(G0:Int)[G0>=0&Ch(1,G0)&Ch(0,1)&! Ch(1,1)])
 f2:!(!Ch(0,0))=>(exists(K294:Int,K295:Int)[ (Ch(K294,K295)&turn(p1)&K294>=0&K294<xlen()&K295>=0&K295<ylen())&((( !(Ch(0,0)&(K294>0|K295>0)) ) => ( !(Ch(0,0)&(K294>0|K295>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! G0 = 0&(Ch(1,G0)&(K294>1|K295>G0))])&!((Ch(1,0)&(K294>1|K295>0))&! (Ch(0,1)&(K294>0|K295>1)))&!(exists(G0:Int)[G0>=0&! G0 = 0&(Ch(G0,G0)&(K294>G0|K295>G0))])&!(exists(G0:Int)[ exists(K296:Int)[ (ylen()=K296)&(G0>=0&(Ch(0,1)&(K294>0|K295>1))& K296 > G0&! (Ch(G0,0)&(K294>G0|K295>0)))] ])) ])
2019-10-15 20:10:37,034 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() = G0&turn(p2)])&!(turn(p2))&!(Ch(0,0)&! Ch(1,0)&! Ch(0,1))&!(exists(G0:Int)[G0>=0&Ch(1,G0)&Ch(0,1)&! Ch(1,1)])
 f2:!(!Ch(0,0))=>(exists(K294:Int,K295:Int)[ (Ch(K294,K295)&turn(p1)&K294>=0&K294<xlen()&K295>=0&K295<ylen())&((( !(Ch(0,0)&(K294>0|K295>0)) ) => ( !(Ch(0,0)&(K294>0|K295>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! G0 = 0&(Ch(1,G0)&(K294>1|K295>G0))])&!((Ch(1,0)&(K294>1|K295>0))&! (Ch(0,1)&(K294>0|K295>1)))&!(exists(G0:Int)[G0>=0&! G0 = 0&(Ch(G0,G0)&(K294>G0|K295>G0))])&!(exists(G0:Int)[ exists(K296:Int)[ (ylen()=K296)&(G0>=0&(Ch(0,1)&(K294>0|K295>1))& K296 > G0&! (Ch(G0,0)&(K294>G0|K295>0)))] ])) ])
2019-10-15 20:10:37,073 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() = G0&turn(p2)])&!(turn(p2))&!(Ch(0,0)&! Ch(1,0)&! Ch(0,1))&!(exists(G0:Int)[G0>=0&Ch(1,G0)&Ch(0,1)&! Ch(1,1)])
 f2:!(!Ch(0,0))=>(exists(K294:Int,K295:Int)[ (Ch(K294,K295)&turn(p1)&K294>=0&K294<xlen()&K295>=0&K295<ylen())&((( !(Ch(0,0)&(K294>0|K295>0)) ) => ( !(Ch(0,0)&(K294>0|K295>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! G0 = 0&(Ch(1,G0)&(K294>1|K295>G0))])&!((Ch(1,0)&(K294>1|K295>0))&! (Ch(0,1)&(K294>0|K295>1)))&!(exists(G0:Int)[G0>=0&! G0 = 0&(Ch(G0,G0)&(K294>G0|K295>G0))])&!(exists(G0:Int)[ exists(K296:Int)[ (ylen()=K296)&(G0>=0&(Ch(0,1)&(K294>0|K295>1))& K296 > G0&! (Ch(G0,0)&(K294>G0|K295>0)))] ])) ])
2019-10-15 20:10:37,127 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 = 0&Ch(1,G0)])&!(Ch(1,0)&! Ch(0,1))&!(exists(G0:Int)[G0>=0&! G0 = 0&Ch(G0,G0)])&!(exists(G0:Int)[G0>=0&Ch(0,1)&ylen() > G0&! Ch(G0,0)])
 f2:forall(K292:Int,K293:Int)[ Ch(K292,K293)&turn(p2)&K292>=0&K292<xlen()&K293>=0&K293<ylen()=>((( !(Ch(0,0)&(K292>0|K293>0)) ) => ( !(Ch(0,0)&(K292>0|K293>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(xlen()=G0)&(!turn(p2))])&!((!turn(p2)))&!((Ch(0,0)&(K292>0|K293>0))&! (Ch(1,0)&(K292>1|K293>0))&! (Ch(0,1)&(K292>0|K293>1)))&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K292>1|K293>G0))&(Ch(0,1)&(K292>0|K293>1))&! (Ch(1,1)&(K292>1|K293>1))])) ]
2019-10-15 20:10:37,168 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 = 0&Ch(1,G0)])&!(Ch(1,0)&! Ch(0,1))&!(exists(G0:Int)[G0>=0&! G0 = 0&Ch(G0,G0)])&!(exists(G0:Int)[G0>=0&Ch(0,1)&ylen() > G0&! Ch(G0,0)])
 f2:forall(K292:Int,K293:Int)[ Ch(K292,K293)&turn(p2)&K292>=0&K292<xlen()&K293>=0&K293<ylen()=>((( !(Ch(0,0)&(K292>0|K293>0)) ) => ( !(Ch(0,0)&(K292>0|K293>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(xlen()=G0)&(!turn(p2))])&!((!turn(p2)))&!((Ch(0,0)&(K292>0|K293>0))&! (Ch(1,0)&(K292>1|K293>0))&! (Ch(0,1)&(K292>0|K293>1)))&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K292>1|K293>G0))&(Ch(0,1)&(K292>0|K293>1))&! (Ch(1,1)&(K292>1|K293>1))])) ]
2019-10-15 20:10:37,202 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 = 0&Ch(1,G0)])&!(Ch(1,0)&! Ch(0,1))&!(exists(G0:Int)[G0>=0&! G0 = 0&Ch(G0,G0)])&!(exists(G0:Int)[G0>=0&Ch(0,1)&ylen() > G0&! Ch(G0,0)])
 f2:forall(K292:Int,K293:Int)[ Ch(K292,K293)&turn(p2)&K292>=0&K292<xlen()&K293>=0&K293<ylen()=>((( !(Ch(0,0)&(K292>0|K293>0)) ) => ( !(Ch(0,0)&(K292>0|K293>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(xlen()=G0)&(!turn(p2))])&!((!turn(p2)))&!((Ch(0,0)&(K292>0|K293>0))&! (Ch(1,0)&(K292>1|K293>0))&! (Ch(0,1)&(K292>0|K293>1)))&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K292>1|K293>G0))&(Ch(0,1)&(K292>0|K293>1))&! (Ch(1,1)&(K292>1|K293>1))])) ]
2019-10-15 20:10:37,486 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(3>=0&3<xlen()&0>=0&0<ylen()=>Ch(3,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(3>=0&3<xlen()&1>=0&1<ylen()=>Ch(3,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2))&(3>=0&3<xlen()&2>=0&2<ylen()=>Ch(3,2))&(0>=0&0<xlen()&3>=0&3<ylen()=>Ch(0,3))&(1>=0&1<xlen()&3>=0&3<ylen()=>Ch(1,3))&(2>=0&2<xlen()&3>=0&3<ylen()=>Ch(2,3))&(3>=0&3<xlen()&3>=0&3<ylen()=>Ch(3,3)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)&xlen()=3&ylen()=3&forall(X:_S1)[X=p2 or X=p1]
 f2:false
2019-10-15 20:10:37,563 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(3>=0&3<xlen()&0>=0&0<ylen()=>Ch(3,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(3>=0&3<xlen()&1>=0&1<ylen()=>Ch(3,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2))&(3>=0&3<xlen()&2>=0&2<ylen()=>Ch(3,2))&(0>=0&0<xlen()&3>=0&3<ylen()=>Ch(0,3))&(1>=0&1<xlen()&3>=0&3<ylen()=>Ch(1,3))&(2>=0&2<xlen()&3>=0&3<ylen()=>Ch(2,3))&(3>=0&3<xlen()&3>=0&3<ylen()=>Ch(3,3)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)&xlen()=3&ylen()=3&forall(X:_S1)[X=p2 or X=p1]&!(Ch(1,1)&Ch(1,0)&Ch(0,2)&!Ch(0,3)&!Ch(3,3)&!turn(p2)&Ch(0,0)&xlen()=3&turn(p1)&!Ch(3,1)&!Ch(2,3)&Ch(2,0)&!Ch(3,0)&Ch(2,1)&Ch(2,2)&ylen()=3&!Ch(3,2)&!Ch(1,3)&Ch(1,2)&Ch(0,1))
 f2:false
2019-10-15 20:10:51,153 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() = G0&turn(p2)])&!(turn(p2))&!(Ch(0,0)&! Ch(1,0)&! Ch(0,1))&!(exists(G0:Int)[G0>=0&Ch(1,G0)&Ch(0,1)&! Ch(1,1)])
 f2:!(!Ch(0,0))=>(exists(K299:Int,K300:Int)[ (Ch(K299,K300)&turn(p1)&K299>=0&K299<xlen()&K300>=0&K300<ylen())&((( !(Ch(0,0)&(K299>0|K300>0)) ) => ( !(Ch(0,0)&(K299>0|K300>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! G0 = 0&(Ch(1,G0)&(K299>1|K300>G0))])&!((Ch(1,0)&(K299>1|K300>0))&! (Ch(0,1)&(K299>0|K300>1)))&!(exists(G0:Int)[G0>=0&! G0 = 0&(Ch(G0,G0)&(K299>G0|K300>G0))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! (Ch(G0,0)&(K299>G0|K300>0))&G1 >= 0&(Ch(G1,G0)&(K299>G1|K300>G0))])) ])
2019-10-15 20:10:51,226 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() = G0&turn(p2)])&!(turn(p2))&!(Ch(0,0)&! Ch(1,0)&! Ch(0,1))&!(exists(G0:Int)[G0>=0&Ch(1,G0)&Ch(0,1)&! Ch(1,1)])
 f2:!(!Ch(0,0))=>(exists(K299:Int,K300:Int)[ (Ch(K299,K300)&turn(p1)&K299>=0&K299<xlen()&K300>=0&K300<ylen())&((( !(Ch(0,0)&(K299>0|K300>0)) ) => ( !(Ch(0,0)&(K299>0|K300>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! G0 = 0&(Ch(1,G0)&(K299>1|K300>G0))])&!((Ch(1,0)&(K299>1|K300>0))&! (Ch(0,1)&(K299>0|K300>1)))&!(exists(G0:Int)[G0>=0&! G0 = 0&(Ch(G0,G0)&(K299>G0|K300>G0))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! (Ch(G0,0)&(K299>G0|K300>0))&G1 >= 0&(Ch(G1,G0)&(K299>G1|K300>G0))])) ])
2019-10-15 20:10:51,265 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() = G0&turn(p2)])&!(turn(p2))&!(Ch(0,0)&! Ch(1,0)&! Ch(0,1))&!(exists(G0:Int)[G0>=0&Ch(1,G0)&Ch(0,1)&! Ch(1,1)])
 f2:!(!Ch(0,0))=>(exists(K299:Int,K300:Int)[ (Ch(K299,K300)&turn(p1)&K299>=0&K299<xlen()&K300>=0&K300<ylen())&((( !(Ch(0,0)&(K299>0|K300>0)) ) => ( !(Ch(0,0)&(K299>0|K300>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! G0 = 0&(Ch(1,G0)&(K299>1|K300>G0))])&!((Ch(1,0)&(K299>1|K300>0))&! (Ch(0,1)&(K299>0|K300>1)))&!(exists(G0:Int)[G0>=0&! G0 = 0&(Ch(G0,G0)&(K299>G0|K300>G0))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! (Ch(G0,0)&(K299>G0|K300>0))&G1 >= 0&(Ch(G1,G0)&(K299>G1|K300>G0))])) ])
2019-10-15 20:10:51,323 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 = 0&Ch(1,G0)])&!(Ch(1,0)&! Ch(0,1))&!(exists(G0:Int)[G0>=0&! G0 = 0&Ch(G0,G0)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! Ch(G0,0)&G1 >= 0&Ch(G1,G0)])
 f2:forall(K297:Int,K298:Int)[ Ch(K297,K298)&turn(p2)&K297>=0&K297<xlen()&K298>=0&K298<ylen()=>((( !(Ch(0,0)&(K297>0|K298>0)) ) => ( !(Ch(0,0)&(K297>0|K298>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(xlen()=G0)&(!turn(p2))])&!((!turn(p2)))&!((Ch(0,0)&(K297>0|K298>0))&! (Ch(1,0)&(K297>1|K298>0))&! (Ch(0,1)&(K297>0|K298>1)))&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K297>1|K298>G0))&(Ch(0,1)&(K297>0|K298>1))&! (Ch(1,1)&(K297>1|K298>1))])) ]
2019-10-15 20:10:51,367 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 = 0&Ch(1,G0)])&!(Ch(1,0)&! Ch(0,1))&!(exists(G0:Int)[G0>=0&! G0 = 0&Ch(G0,G0)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! Ch(G0,0)&G1 >= 0&Ch(G1,G0)])
 f2:forall(K297:Int,K298:Int)[ Ch(K297,K298)&turn(p2)&K297>=0&K297<xlen()&K298>=0&K298<ylen()=>((( !(Ch(0,0)&(K297>0|K298>0)) ) => ( !(Ch(0,0)&(K297>0|K298>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(xlen()=G0)&(!turn(p2))])&!((!turn(p2)))&!((Ch(0,0)&(K297>0|K298>0))&! (Ch(1,0)&(K297>1|K298>0))&! (Ch(0,1)&(K297>0|K298>1)))&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K297>1|K298>G0))&(Ch(0,1)&(K297>0|K298>1))&! (Ch(1,1)&(K297>1|K298>1))])) ]
2019-10-15 20:10:51,404 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 = 0&Ch(1,G0)])&!(Ch(1,0)&! Ch(0,1))&!(exists(G0:Int)[G0>=0&! G0 = 0&Ch(G0,G0)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! Ch(G0,0)&G1 >= 0&Ch(G1,G0)])
 f2:forall(K297:Int,K298:Int)[ Ch(K297,K298)&turn(p2)&K297>=0&K297<xlen()&K298>=0&K298<ylen()=>((( !(Ch(0,0)&(K297>0|K298>0)) ) => ( !(Ch(0,0)&(K297>0|K298>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(xlen()=G0)&(!turn(p2))])&!((!turn(p2)))&!((Ch(0,0)&(K297>0|K298>0))&! (Ch(1,0)&(K297>1|K298>0))&! (Ch(0,1)&(K297>0|K298>1)))&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K297>1|K298>G0))&(Ch(0,1)&(K297>0|K298>1))&! (Ch(1,1)&(K297>1|K298>1))])) ]
2019-10-15 20:10:52,146 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(3>=0&3<xlen()&0>=0&0<ylen()=>Ch(3,0))&(4>=0&4<xlen()&0>=0&0<ylen()=>Ch(4,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(3>=0&3<xlen()&1>=0&1<ylen()=>Ch(3,1))&(4>=0&4<xlen()&1>=0&1<ylen()=>Ch(4,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2))&(3>=0&3<xlen()&2>=0&2<ylen()=>Ch(3,2))&(4>=0&4<xlen()&2>=0&2<ylen()=>Ch(4,2))&(0>=0&0<xlen()&3>=0&3<ylen()=>Ch(0,3))&(1>=0&1<xlen()&3>=0&3<ylen()=>Ch(1,3))&(2>=0&2<xlen()&3>=0&3<ylen()=>Ch(2,3))&(3>=0&3<xlen()&3>=0&3<ylen()=>Ch(3,3))&(4>=0&4<xlen()&3>=0&3<ylen()=>Ch(4,3))&(0>=0&0<xlen()&4>=0&4<ylen()=>Ch(0,4))&(1>=0&1<xlen()&4>=0&4<ylen()=>Ch(1,4))&(2>=0&2<xlen()&4>=0&4<ylen()=>Ch(2,4))&(3>=0&3<xlen()&4>=0&4<ylen()=>Ch(3,4))&(4>=0&4<xlen()&4>=0&4<ylen()=>Ch(4,4)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)&ylen()=4&xlen()=4&forall(X:_S1)[X=p2 or X=p1]
 f2:false
2019-10-15 20:10:52,264 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(3>=0&3<xlen()&0>=0&0<ylen()=>Ch(3,0))&(4>=0&4<xlen()&0>=0&0<ylen()=>Ch(4,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(3>=0&3<xlen()&1>=0&1<ylen()=>Ch(3,1))&(4>=0&4<xlen()&1>=0&1<ylen()=>Ch(4,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2))&(3>=0&3<xlen()&2>=0&2<ylen()=>Ch(3,2))&(4>=0&4<xlen()&2>=0&2<ylen()=>Ch(4,2))&(0>=0&0<xlen()&3>=0&3<ylen()=>Ch(0,3))&(1>=0&1<xlen()&3>=0&3<ylen()=>Ch(1,3))&(2>=0&2<xlen()&3>=0&3<ylen()=>Ch(2,3))&(3>=0&3<xlen()&3>=0&3<ylen()=>Ch(3,3))&(4>=0&4<xlen()&3>=0&3<ylen()=>Ch(4,3))&(0>=0&0<xlen()&4>=0&4<ylen()=>Ch(0,4))&(1>=0&1<xlen()&4>=0&4<ylen()=>Ch(1,4))&(2>=0&2<xlen()&4>=0&4<ylen()=>Ch(2,4))&(3>=0&3<xlen()&4>=0&4<ylen()=>Ch(3,4))&(4>=0&4<xlen()&4>=0&4<ylen()=>Ch(4,4)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)&ylen()=4&xlen()=4&forall(X:_S1)[X=p2 or X=p1]&!(Ch(1,0)&Ch(2,1)&!turn(p2)&Ch(2,3)&!Ch(1,4)&Ch(3,1)&ylen()=4&Ch(3,3)&Ch(1,2)&Ch(0,2)&Ch(0,0)&!Ch(4,2)&!Ch(4,3)&!Ch(4,1)&!Ch(4,4)&!Ch(3,4)&Ch(1,1)&Ch(2,0)&Ch(2,2)&turn(p1)&!Ch(2,4)&Ch(3,0)&!Ch(0,4)&Ch(3,2)&Ch(1,3)&Ch(0,3)&xlen()=4&!Ch(4,0)&Ch(0,1))
 f2:false
2019-10-15 20:10:53,849 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(3>=0&3<xlen()&0>=0&0<ylen()=>Ch(3,0))&(4>=0&4<xlen()&0>=0&0<ylen()=>Ch(4,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(3>=0&3<xlen()&1>=0&1<ylen()=>Ch(3,1))&(4>=0&4<xlen()&1>=0&1<ylen()=>Ch(4,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2))&(3>=0&3<xlen()&2>=0&2<ylen()=>Ch(3,2))&(4>=0&4<xlen()&2>=0&2<ylen()=>Ch(4,2))&(0>=0&0<xlen()&3>=0&3<ylen()=>Ch(0,3))&(1>=0&1<xlen()&3>=0&3<ylen()=>Ch(1,3))&(2>=0&2<xlen()&3>=0&3<ylen()=>Ch(2,3))&(3>=0&3<xlen()&3>=0&3<ylen()=>Ch(3,3))&(4>=0&4<xlen()&3>=0&3<ylen()=>Ch(4,3))&(0>=0&0<xlen()&4>=0&4<ylen()=>Ch(0,4))&(1>=0&1<xlen()&4>=0&4<ylen()=>Ch(1,4))&(2>=0&2<xlen()&4>=0&4<ylen()=>Ch(2,4))&(3>=0&3<xlen()&4>=0&4<ylen()=>Ch(3,4))&(4>=0&4<xlen()&4>=0&4<ylen()=>Ch(4,4)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)&ylen()=4&xlen()=4&forall(X:_S1)[X=p2 or X=p1]
 f2:false
2019-10-15 20:10:53,957 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(3>=0&3<xlen()&0>=0&0<ylen()=>Ch(3,0))&(4>=0&4<xlen()&0>=0&0<ylen()=>Ch(4,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(3>=0&3<xlen()&1>=0&1<ylen()=>Ch(3,1))&(4>=0&4<xlen()&1>=0&1<ylen()=>Ch(4,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2))&(3>=0&3<xlen()&2>=0&2<ylen()=>Ch(3,2))&(4>=0&4<xlen()&2>=0&2<ylen()=>Ch(4,2))&(0>=0&0<xlen()&3>=0&3<ylen()=>Ch(0,3))&(1>=0&1<xlen()&3>=0&3<ylen()=>Ch(1,3))&(2>=0&2<xlen()&3>=0&3<ylen()=>Ch(2,3))&(3>=0&3<xlen()&3>=0&3<ylen()=>Ch(3,3))&(4>=0&4<xlen()&3>=0&3<ylen()=>Ch(4,3))&(0>=0&0<xlen()&4>=0&4<ylen()=>Ch(0,4))&(1>=0&1<xlen()&4>=0&4<ylen()=>Ch(1,4))&(2>=0&2<xlen()&4>=0&4<ylen()=>Ch(2,4))&(3>=0&3<xlen()&4>=0&4<ylen()=>Ch(3,4))&(4>=0&4<xlen()&4>=0&4<ylen()=>Ch(4,4)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)&ylen()=4&xlen()=4&forall(X:_S1)[X=p2 or X=p1]&!(Ch(1,0)&Ch(2,1)&!turn(p2)&Ch(2,3)&!Ch(1,4)&Ch(3,1)&ylen()=4&Ch(3,3)&Ch(1,2)&Ch(0,2)&Ch(0,0)&!Ch(4,2)&!Ch(4,3)&!Ch(4,1)&!Ch(4,4)&!Ch(3,4)&Ch(1,1)&Ch(2,0)&Ch(2,2)&turn(p1)&!Ch(2,4)&Ch(3,0)&!Ch(0,4)&Ch(3,2)&Ch(1,3)&Ch(0,3)&xlen()=4&!Ch(4,0)&Ch(0,1))
 f2:false
2019-10-15 20:11:01,340 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() = G0&turn(p2)])&!(turn(p2))&!(Ch(0,0)&! Ch(1,0)&! Ch(0,1))&!(exists(G0:Int)[G0>=0&Ch(1,G0)&Ch(0,1)&! Ch(1,1)])&!(exists(G0:Int)[G0>=0&Ch(1,G0)&! Ch(0,G0)])
 f2:!(!Ch(0,0))=>(exists(K303:Int,K304:Int)[ (Ch(K303,K304)&turn(p1)&K303>=0&K303<xlen()&K304>=0&K304<ylen())&((( !(Ch(0,0)&(K303>0|K304>0)) ) => ( !(Ch(0,0)&(K303>0|K304>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! G0 = 0&(Ch(1,G0)&(K303>1|K304>G0))])&!((Ch(1,0)&(K303>1|K304>0))&! (Ch(0,1)&(K303>0|K304>1)))&!(exists(G0:Int)[G0>=0&! G0 = 0&(Ch(G0,G0)&(K303>G0|K304>G0))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! (Ch(G0,0)&(K303>G0|K304>0))&G1 >= 0&(Ch(G1,G0)&(K303>G1|K304>G0))])&!(exists(G0:Int)[G0>=0&G0 > 1&(Ch(G0,0)&(K303>G0|K304>0))])) ])
2019-10-15 20:11:01,427 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() = G0&turn(p2)])&!(turn(p2))&!(Ch(0,0)&! Ch(1,0)&! Ch(0,1))&!(exists(G0:Int)[G0>=0&Ch(1,G0)&Ch(0,1)&! Ch(1,1)])&!(exists(G0:Int)[G0>=0&Ch(1,G0)&! Ch(0,G0)])
 f2:!(!Ch(0,0))=>(exists(K303:Int,K304:Int)[ (Ch(K303,K304)&turn(p1)&K303>=0&K303<xlen()&K304>=0&K304<ylen())&((( !(Ch(0,0)&(K303>0|K304>0)) ) => ( !(Ch(0,0)&(K303>0|K304>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! G0 = 0&(Ch(1,G0)&(K303>1|K304>G0))])&!((Ch(1,0)&(K303>1|K304>0))&! (Ch(0,1)&(K303>0|K304>1)))&!(exists(G0:Int)[G0>=0&! G0 = 0&(Ch(G0,G0)&(K303>G0|K304>G0))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! (Ch(G0,0)&(K303>G0|K304>0))&G1 >= 0&(Ch(G1,G0)&(K303>G1|K304>G0))])&!(exists(G0:Int)[G0>=0&G0 > 1&(Ch(G0,0)&(K303>G0|K304>0))])) ])
2019-10-15 20:11:01,475 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() = G0&turn(p2)])&!(turn(p2))&!(Ch(0,0)&! Ch(1,0)&! Ch(0,1))&!(exists(G0:Int)[G0>=0&Ch(1,G0)&Ch(0,1)&! Ch(1,1)])&!(exists(G0:Int)[G0>=0&Ch(1,G0)&! Ch(0,G0)])
 f2:!(!Ch(0,0))=>(exists(K303:Int,K304:Int)[ (Ch(K303,K304)&turn(p1)&K303>=0&K303<xlen()&K304>=0&K304<ylen())&((( !(Ch(0,0)&(K303>0|K304>0)) ) => ( !(Ch(0,0)&(K303>0|K304>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&! G0 = 0&(Ch(1,G0)&(K303>1|K304>G0))])&!((Ch(1,0)&(K303>1|K304>0))&! (Ch(0,1)&(K303>0|K304>1)))&!(exists(G0:Int)[G0>=0&! G0 = 0&(Ch(G0,G0)&(K303>G0|K304>G0))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! (Ch(G0,0)&(K303>G0|K304>0))&G1 >= 0&(Ch(G1,G0)&(K303>G1|K304>G0))])&!(exists(G0:Int)[G0>=0&G0 > 1&(Ch(G0,0)&(K303>G0|K304>0))])) ])
2019-10-15 20:11:01,550 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 = 0&Ch(1,G0)])&!(Ch(1,0)&! Ch(0,1))&!(exists(G0:Int)[G0>=0&! G0 = 0&Ch(G0,G0)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! Ch(G0,0)&G1 >= 0&Ch(G1,G0)])&!(exists(G0:Int)[G0>=0&G0 > 1&Ch(G0,0)])
 f2:forall(K301:Int,K302:Int)[ Ch(K301,K302)&turn(p2)&K301>=0&K301<xlen()&K302>=0&K302<ylen()=>((( !(Ch(0,0)&(K301>0|K302>0)) ) => ( !(Ch(0,0)&(K301>0|K302>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(xlen()=G0)&(!turn(p2))])&!((!turn(p2)))&!((Ch(0,0)&(K301>0|K302>0))&! (Ch(1,0)&(K301>1|K302>0))&! (Ch(0,1)&(K301>0|K302>1)))&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K301>1|K302>G0))&(Ch(0,1)&(K301>0|K302>1))&! (Ch(1,1)&(K301>1|K302>1))])&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K301>1|K302>G0))&! (Ch(0,G0)&(K301>0|K302>G0))])) ]
2019-10-15 20:11:01,594 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 = 0&Ch(1,G0)])&!(Ch(1,0)&! Ch(0,1))&!(exists(G0:Int)[G0>=0&! G0 = 0&Ch(G0,G0)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! Ch(G0,0)&G1 >= 0&Ch(G1,G0)])&!(exists(G0:Int)[G0>=0&G0 > 1&Ch(G0,0)])
 f2:forall(K301:Int,K302:Int)[ Ch(K301,K302)&turn(p2)&K301>=0&K301<xlen()&K302>=0&K302<ylen()=>((( !(Ch(0,0)&(K301>0|K302>0)) ) => ( !(Ch(0,0)&(K301>0|K302>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(xlen()=G0)&(!turn(p2))])&!((!turn(p2)))&!((Ch(0,0)&(K301>0|K302>0))&! (Ch(1,0)&(K301>1|K302>0))&! (Ch(0,1)&(K301>0|K302>1)))&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K301>1|K302>G0))&(Ch(0,1)&(K301>0|K302>1))&! (Ch(1,1)&(K301>1|K302>1))])&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K301>1|K302>G0))&! (Ch(0,G0)&(K301>0|K302>G0))])) ]
2019-10-15 20:11:01,632 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&! G0 = 0&Ch(1,G0)])&!(Ch(1,0)&! Ch(0,1))&!(exists(G0:Int)[G0>=0&! G0 = 0&Ch(G0,G0)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! Ch(G0,0)&G1 >= 0&Ch(G1,G0)])&!(exists(G0:Int)[G0>=0&G0 > 1&Ch(G0,0)])
 f2:forall(K301:Int,K302:Int)[ Ch(K301,K302)&turn(p2)&K301>=0&K301<xlen()&K302>=0&K302<ylen()=>((( !(Ch(0,0)&(K301>0|K302>0)) ) => ( !(Ch(0,0)&(K301>0|K302>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(xlen()=G0)&(!turn(p2))])&!((!turn(p2)))&!((Ch(0,0)&(K301>0|K302>0))&! (Ch(1,0)&(K301>1|K302>0))&! (Ch(0,1)&(K301>0|K302>1)))&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K301>1|K302>G0))&(Ch(0,1)&(K301>0|K302>1))&! (Ch(1,1)&(K301>1|K302>1))])&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K301>1|K302>G0))&! (Ch(0,G0)&(K301>0|K302>G0))])) ]
2019-10-15 20:11:12,330 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() = G0&turn(p2)])&!(turn(p2))&!(Ch(0,0)&! Ch(1,0)&! Ch(0,1))&!(exists(G0:Int)[G0>=0&Ch(1,G0)&Ch(0,1)&! Ch(1,1)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(1,G0)&G0 > G1&! Ch(G0,G1)])
 f2:!(!Ch(0,0))=>(exists(K307:Int,K308:Int)[ (Ch(K307,K308)&turn(p1)&K307>=0&K307<xlen()&K308>=0&K308<ylen())&((( !(Ch(0,0)&(K307>0|K308>0)) ) => ( !(Ch(0,0)&(K307>0|K308>0))&(!turn(p1)) ))&!((Ch(1,0)&(K307>1|K308>0))&! (Ch(0,1)&(K307>0|K308>1)))&!(exists(G0:Int)[G0>=0&! G0 = 0&(Ch(G0,G0)&(K307>G0|K308>G0))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! (Ch(G0,0)&(K307>G0|K308>0))&G1 >= 0&(Ch(G1,G0)&(K307>G1|K308>G0))])&!(exists(G0:Int)[G0>=0&G0 > 1&(Ch(G0,0)&(K307>G0|K308>0))])&!(exists(G0:Int)[G0>=0&! G0 = 0&(Ch(G0,1)&(K307>G0|K308>1))])) ])
2019-10-15 20:11:12,382 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() = G0&turn(p2)])&!(turn(p2))&!(Ch(0,0)&! Ch(1,0)&! Ch(0,1))&!(exists(G0:Int)[G0>=0&Ch(1,G0)&Ch(0,1)&! Ch(1,1)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(1,G0)&G0 > G1&! Ch(G0,G1)])
 f2:!(!Ch(0,0))=>(exists(K307:Int,K308:Int)[ (Ch(K307,K308)&turn(p1)&K307>=0&K307<xlen()&K308>=0&K308<ylen())&((( !(Ch(0,0)&(K307>0|K308>0)) ) => ( !(Ch(0,0)&(K307>0|K308>0))&(!turn(p1)) ))&!((Ch(1,0)&(K307>1|K308>0))&! (Ch(0,1)&(K307>0|K308>1)))&!(exists(G0:Int)[G0>=0&! G0 = 0&(Ch(G0,G0)&(K307>G0|K308>G0))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! (Ch(G0,0)&(K307>G0|K308>0))&G1 >= 0&(Ch(G1,G0)&(K307>G1|K308>G0))])&!(exists(G0:Int)[G0>=0&G0 > 1&(Ch(G0,0)&(K307>G0|K308>0))])&!(exists(G0:Int)[G0>=0&! G0 = 0&(Ch(G0,1)&(K307>G0|K308>1))])) ])
2019-10-15 20:11:12,424 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() = G0&turn(p2)])&!(turn(p2))&!(Ch(0,0)&! Ch(1,0)&! Ch(0,1))&!(exists(G0:Int)[G0>=0&Ch(1,G0)&Ch(0,1)&! Ch(1,1)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(1,G0)&G0 > G1&! Ch(G0,G1)])
 f2:!(!Ch(0,0))=>(exists(K307:Int,K308:Int)[ (Ch(K307,K308)&turn(p1)&K307>=0&K307<xlen()&K308>=0&K308<ylen())&((( !(Ch(0,0)&(K307>0|K308>0)) ) => ( !(Ch(0,0)&(K307>0|K308>0))&(!turn(p1)) ))&!((Ch(1,0)&(K307>1|K308>0))&! (Ch(0,1)&(K307>0|K308>1)))&!(exists(G0:Int)[G0>=0&! G0 = 0&(Ch(G0,G0)&(K307>G0|K308>G0))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! (Ch(G0,0)&(K307>G0|K308>0))&G1 >= 0&(Ch(G1,G0)&(K307>G1|K308>G0))])&!(exists(G0:Int)[G0>=0&G0 > 1&(Ch(G0,0)&(K307>G0|K308>0))])&!(exists(G0:Int)[G0>=0&! G0 = 0&(Ch(G0,1)&(K307>G0|K308>1))])) ])
2019-10-15 20:11:12,467 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(Ch(1,0)&! Ch(0,1))&!(exists(G0:Int)[G0>=0&! G0 = 0&Ch(G0,G0)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! Ch(G0,0)&G1 >= 0&Ch(G1,G0)])&!(exists(G0:Int)[G0>=0&G0 > 1&Ch(G0,0)])&!(exists(G0:Int)[G0>=0&! G0 = 0&Ch(G0,1)])
 f2:forall(K305:Int,K306:Int)[ Ch(K305,K306)&turn(p2)&K305>=0&K305<xlen()&K306>=0&K306<ylen()=>((( !(Ch(0,0)&(K305>0|K306>0)) ) => ( !(Ch(0,0)&(K305>0|K306>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(xlen()=G0)&(!turn(p2))])&!((!turn(p2)))&!((Ch(0,0)&(K305>0|K306>0))&! (Ch(1,0)&(K305>1|K306>0))&! (Ch(0,1)&(K305>0|K306>1)))&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K305>1|K306>G0))&(Ch(0,1)&(K305>0|K306>1))&! (Ch(1,1)&(K305>1|K306>1))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(1,G0)&(K305>1|K306>G0))&G0 > G1&! (Ch(G0,G1)&(K305>G0|K306>G1))])) ]
2019-10-15 20:11:57,491 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() = G0&turn(p2)])&!(turn(p2))&!(Ch(0,0)&! Ch(1,0)&! Ch(0,1))&!(exists(G0:Int)[G0>=0&Ch(1,G0)&Ch(0,1)&! Ch(1,1)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(1,G0)&G0 > G1&! Ch(G0,G1)])&!(exists(G0:Int)[G0>=0&G0 > 1&xlen() > G0])
 f2:!(!Ch(0,0))=>(exists(K312:Int,K313:Int)[ (Ch(K312,K313)&turn(p1)&K312>=0&K312<xlen()&K313>=0&K313<ylen())&((( !(Ch(0,0)&(K312>0|K313>0)) ) => ( !(Ch(0,0)&(K312>0|K313>0))&(!turn(p1)) ))&!((Ch(1,0)&(K312>1|K313>0))&! (Ch(0,1)&(K312>0|K313>1)))&!(exists(G0:Int)[G0>=0&! G0 = 0&(Ch(G0,G0)&(K312>G0|K313>G0))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! (Ch(G0,0)&(K312>G0|K313>0))&G1 >= 0&(Ch(G1,G0)&(K312>G1|K313>G0))])&!(exists(G0:Int)[G0>=0&G0 > 1&(Ch(G0,0)&(K312>G0|K313>0))])&!(exists(G0:Int)[G0>=0&! G0 = 0&(Ch(G0,1)&(K312>G0|K313>1))])) ])
2019-10-15 20:11:57,537 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(Ch(1,0)&! Ch(0,1))&!(exists(G0:Int)[G0>=0&! G0 = 0&Ch(G0,G0)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! Ch(G0,0)&G1 >= 0&Ch(G1,G0)])&!(exists(G0:Int)[G0>=0&G0 > 1&Ch(G0,0)])&!(exists(G0:Int)[G0>=0&! G0 = 0&Ch(G0,1)])
 f2:forall(K309:Int,K310:Int)[ Ch(K309,K310)&turn(p2)&K309>=0&K309<xlen()&K310>=0&K310<ylen()=>((( !(Ch(0,0)&(K309>0|K310>0)) ) => ( !(Ch(0,0)&(K309>0|K310>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(xlen()=G0)&(!turn(p2))])&!((!turn(p2)))&!((Ch(0,0)&(K309>0|K310>0))&! (Ch(1,0)&(K309>1|K310>0))&! (Ch(0,1)&(K309>0|K310>1)))&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K309>1|K310>G0))&(Ch(0,1)&(K309>0|K310>1))&! (Ch(1,1)&(K309>1|K310>1))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(1,G0)&(K309>1|K310>G0))&G0 > G1&! (Ch(G0,G1)&(K309>G0|K310>G1))])&!(exists(G0:Int)[ exists(K311:Int)[ (xlen()=K311)&(G0>=0&G0 > 1& K311 > G0)] ])) ]
2019-10-15 20:11:57,583 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(Ch(1,0)&! Ch(0,1))&!(exists(G0:Int)[G0>=0&! G0 = 0&Ch(G0,G0)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! Ch(G0,0)&G1 >= 0&Ch(G1,G0)])&!(exists(G0:Int)[G0>=0&G0 > 1&Ch(G0,0)])&!(exists(G0:Int)[G0>=0&! G0 = 0&Ch(G0,1)])
 f2:forall(K309:Int,K310:Int)[ Ch(K309,K310)&turn(p2)&K309>=0&K309<xlen()&K310>=0&K310<ylen()=>((( !(Ch(0,0)&(K309>0|K310>0)) ) => ( !(Ch(0,0)&(K309>0|K310>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(xlen()=G0)&(!turn(p2))])&!((!turn(p2)))&!((Ch(0,0)&(K309>0|K310>0))&! (Ch(1,0)&(K309>1|K310>0))&! (Ch(0,1)&(K309>0|K310>1)))&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K309>1|K310>G0))&(Ch(0,1)&(K309>0|K310>1))&! (Ch(1,1)&(K309>1|K310>1))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(1,G0)&(K309>1|K310>G0))&G0 > G1&! (Ch(G0,G1)&(K309>G0|K310>G1))])&!(exists(G0:Int)[ exists(K311:Int)[ (xlen()=K311)&(G0>=0&G0 > 1& K311 > G0)] ])) ]
2019-10-15 20:11:57,623 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(Ch(1,0)&! Ch(0,1))&!(exists(G0:Int)[G0>=0&! G0 = 0&Ch(G0,G0)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! Ch(G0,0)&G1 >= 0&Ch(G1,G0)])&!(exists(G0:Int)[G0>=0&G0 > 1&Ch(G0,0)])&!(exists(G0:Int)[G0>=0&! G0 = 0&Ch(G0,1)])
 f2:forall(K309:Int,K310:Int)[ Ch(K309,K310)&turn(p2)&K309>=0&K309<xlen()&K310>=0&K310<ylen()=>((( !(Ch(0,0)&(K309>0|K310>0)) ) => ( !(Ch(0,0)&(K309>0|K310>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(xlen()=G0)&(!turn(p2))])&!((!turn(p2)))&!((Ch(0,0)&(K309>0|K310>0))&! (Ch(1,0)&(K309>1|K310>0))&! (Ch(0,1)&(K309>0|K310>1)))&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K309>1|K310>G0))&(Ch(0,1)&(K309>0|K310>1))&! (Ch(1,1)&(K309>1|K310>1))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(1,G0)&(K309>1|K310>G0))&G0 > G1&! (Ch(G0,G1)&(K309>G0|K310>G1))])&!(exists(G0:Int)[ exists(K311:Int)[ (xlen()=K311)&(G0>=0&G0 > 1& K311 > G0)] ])) ]
2019-10-15 20:11:57,907 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(3>=0&3<xlen()&0>=0&0<ylen()=>Ch(3,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(3>=0&3<xlen()&1>=0&1<ylen()=>Ch(3,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2))&(3>=0&3<xlen()&2>=0&2<ylen()=>Ch(3,2))&(0>=0&0<xlen()&3>=0&3<ylen()=>Ch(0,3))&(1>=0&1<xlen()&3>=0&3<ylen()=>Ch(1,3))&(2>=0&2<xlen()&3>=0&3<ylen()=>Ch(2,3))&(3>=0&3<xlen()&3>=0&3<ylen()=>Ch(3,3)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)&xlen()=3&ylen()=3&forall(X:_S1)[X=p2 or X=p1]
 f2:false
2019-10-15 20:11:57,983 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(3>=0&3<xlen()&0>=0&0<ylen()=>Ch(3,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(3>=0&3<xlen()&1>=0&1<ylen()=>Ch(3,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2))&(3>=0&3<xlen()&2>=0&2<ylen()=>Ch(3,2))&(0>=0&0<xlen()&3>=0&3<ylen()=>Ch(0,3))&(1>=0&1<xlen()&3>=0&3<ylen()=>Ch(1,3))&(2>=0&2<xlen()&3>=0&3<ylen()=>Ch(2,3))&(3>=0&3<xlen()&3>=0&3<ylen()=>Ch(3,3)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)&xlen()=3&ylen()=3&forall(X:_S1)[X=p2 or X=p1]&!(Ch(1,1)&Ch(1,0)&Ch(0,2)&!Ch(0,3)&!Ch(3,3)&!turn(p2)&Ch(0,0)&xlen()=3&turn(p1)&!Ch(3,1)&!Ch(2,3)&Ch(2,0)&!Ch(3,0)&Ch(2,1)&Ch(2,2)&ylen()=3&!Ch(3,2)&!Ch(1,3)&Ch(1,2)&Ch(0,1))
 f2:false
2019-10-15 20:12:01,630 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() = G0&turn(p2)])&!(turn(p2))&!(Ch(0,0)&! Ch(1,0)&! Ch(0,1))&!(exists(G0:Int)[G0>=0&Ch(1,G0)&Ch(0,1)&! Ch(1,1)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(1,G0)&G0 > G1&! Ch(G0,G1)])&!(exists(G0:Int)[G0>=0&G0 > 1&Ch(0,G0)])
 f2:!(!Ch(0,0))=>(exists(K316:Int,K317:Int)[ (Ch(K316,K317)&turn(p1)&K316>=0&K316<xlen()&K317>=0&K317<ylen())&((( !(Ch(0,0)&(K316>0|K317>0)) ) => ( !(Ch(0,0)&(K316>0|K317>0))&(!turn(p1)) ))&!((Ch(1,0)&(K316>1|K317>0))&! (Ch(0,1)&(K316>0|K317>1)))&!(exists(G0:Int)[G0>=0&! G0 = 0&(Ch(G0,G0)&(K316>G0|K317>G0))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! (Ch(G0,0)&(K316>G0|K317>0))&G1 >= 0&(Ch(G1,G0)&(K316>G1|K317>G0))])&!(exists(G0:Int)[G0>=0&G0 > 1&(Ch(G0,0)&(K316>G0|K317>0))])&!(exists(G0:Int)[G0>=0&! G0 = 0&(Ch(G0,1)&(K316>G0|K317>1))])) ])
2019-10-15 20:12:01,749 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() = G0&turn(p2)])&!(turn(p2))&!(Ch(0,0)&! Ch(1,0)&! Ch(0,1))&!(exists(G0:Int)[G0>=0&Ch(1,G0)&Ch(0,1)&! Ch(1,1)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(1,G0)&G0 > G1&! Ch(G0,G1)])&!(exists(G0:Int)[G0>=0&G0 > 1&Ch(0,G0)])
 f2:!(!Ch(0,0))=>(exists(K316:Int,K317:Int)[ (Ch(K316,K317)&turn(p1)&K316>=0&K316<xlen()&K317>=0&K317<ylen())&((( !(Ch(0,0)&(K316>0|K317>0)) ) => ( !(Ch(0,0)&(K316>0|K317>0))&(!turn(p1)) ))&!((Ch(1,0)&(K316>1|K317>0))&! (Ch(0,1)&(K316>0|K317>1)))&!(exists(G0:Int)[G0>=0&! G0 = 0&(Ch(G0,G0)&(K316>G0|K317>G0))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! (Ch(G0,0)&(K316>G0|K317>0))&G1 >= 0&(Ch(G1,G0)&(K316>G1|K317>G0))])&!(exists(G0:Int)[G0>=0&G0 > 1&(Ch(G0,0)&(K316>G0|K317>0))])&!(exists(G0:Int)[G0>=0&! G0 = 0&(Ch(G0,1)&(K316>G0|K317>1))])) ])
2019-10-15 20:12:01,789 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() = G0&turn(p2)])&!(turn(p2))&!(Ch(0,0)&! Ch(1,0)&! Ch(0,1))&!(exists(G0:Int)[G0>=0&Ch(1,G0)&Ch(0,1)&! Ch(1,1)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(1,G0)&G0 > G1&! Ch(G0,G1)])&!(exists(G0:Int)[G0>=0&G0 > 1&Ch(0,G0)])
 f2:!(!Ch(0,0))=>(exists(K316:Int,K317:Int)[ (Ch(K316,K317)&turn(p1)&K316>=0&K316<xlen()&K317>=0&K317<ylen())&((( !(Ch(0,0)&(K316>0|K317>0)) ) => ( !(Ch(0,0)&(K316>0|K317>0))&(!turn(p1)) ))&!((Ch(1,0)&(K316>1|K317>0))&! (Ch(0,1)&(K316>0|K317>1)))&!(exists(G0:Int)[G0>=0&! G0 = 0&(Ch(G0,G0)&(K316>G0|K317>G0))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! (Ch(G0,0)&(K316>G0|K317>0))&G1 >= 0&(Ch(G1,G0)&(K316>G1|K317>G0))])&!(exists(G0:Int)[G0>=0&G0 > 1&(Ch(G0,0)&(K316>G0|K317>0))])&!(exists(G0:Int)[G0>=0&! G0 = 0&(Ch(G0,1)&(K316>G0|K317>1))])) ])
2019-10-15 20:12:01,859 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(Ch(1,0)&! Ch(0,1))&!(exists(G0:Int)[G0>=0&! G0 = 0&Ch(G0,G0)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! Ch(G0,0)&G1 >= 0&Ch(G1,G0)])&!(exists(G0:Int)[G0>=0&G0 > 1&Ch(G0,0)])&!(exists(G0:Int)[G0>=0&! G0 = 0&Ch(G0,1)])
 f2:forall(K314:Int,K315:Int)[ Ch(K314,K315)&turn(p2)&K314>=0&K314<xlen()&K315>=0&K315<ylen()=>((( !(Ch(0,0)&(K314>0|K315>0)) ) => ( !(Ch(0,0)&(K314>0|K315>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(xlen()=G0)&(!turn(p2))])&!((!turn(p2)))&!((Ch(0,0)&(K314>0|K315>0))&! (Ch(1,0)&(K314>1|K315>0))&! (Ch(0,1)&(K314>0|K315>1)))&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K314>1|K315>G0))&(Ch(0,1)&(K314>0|K315>1))&! (Ch(1,1)&(K314>1|K315>1))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(1,G0)&(K314>1|K315>G0))&G0 > G1&! (Ch(G0,G1)&(K314>G0|K315>G1))])&!(exists(G0:Int)[G0>=0&G0 > 1&(Ch(0,G0)&(K314>0|K315>G0))])) ]
2019-10-15 20:12:02,590 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(3>=0&3<xlen()&0>=0&0<ylen()=>Ch(3,0))&(4>=0&4<xlen()&0>=0&0<ylen()=>Ch(4,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(3>=0&3<xlen()&1>=0&1<ylen()=>Ch(3,1))&(4>=0&4<xlen()&1>=0&1<ylen()=>Ch(4,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2))&(3>=0&3<xlen()&2>=0&2<ylen()=>Ch(3,2))&(4>=0&4<xlen()&2>=0&2<ylen()=>Ch(4,2))&(0>=0&0<xlen()&3>=0&3<ylen()=>Ch(0,3))&(1>=0&1<xlen()&3>=0&3<ylen()=>Ch(1,3))&(2>=0&2<xlen()&3>=0&3<ylen()=>Ch(2,3))&(3>=0&3<xlen()&3>=0&3<ylen()=>Ch(3,3))&(4>=0&4<xlen()&3>=0&3<ylen()=>Ch(4,3))&(0>=0&0<xlen()&4>=0&4<ylen()=>Ch(0,4))&(1>=0&1<xlen()&4>=0&4<ylen()=>Ch(1,4))&(2>=0&2<xlen()&4>=0&4<ylen()=>Ch(2,4))&(3>=0&3<xlen()&4>=0&4<ylen()=>Ch(3,4))&(4>=0&4<xlen()&4>=0&4<ylen()=>Ch(4,4)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)&ylen()=4&xlen()=4&forall(X:_S1)[X=p2 or X=p1]
 f2:false
2019-10-15 20:12:02,721 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(3>=0&3<xlen()&0>=0&0<ylen()=>Ch(3,0))&(4>=0&4<xlen()&0>=0&0<ylen()=>Ch(4,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(3>=0&3<xlen()&1>=0&1<ylen()=>Ch(3,1))&(4>=0&4<xlen()&1>=0&1<ylen()=>Ch(4,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2))&(3>=0&3<xlen()&2>=0&2<ylen()=>Ch(3,2))&(4>=0&4<xlen()&2>=0&2<ylen()=>Ch(4,2))&(0>=0&0<xlen()&3>=0&3<ylen()=>Ch(0,3))&(1>=0&1<xlen()&3>=0&3<ylen()=>Ch(1,3))&(2>=0&2<xlen()&3>=0&3<ylen()=>Ch(2,3))&(3>=0&3<xlen()&3>=0&3<ylen()=>Ch(3,3))&(4>=0&4<xlen()&3>=0&3<ylen()=>Ch(4,3))&(0>=0&0<xlen()&4>=0&4<ylen()=>Ch(0,4))&(1>=0&1<xlen()&4>=0&4<ylen()=>Ch(1,4))&(2>=0&2<xlen()&4>=0&4<ylen()=>Ch(2,4))&(3>=0&3<xlen()&4>=0&4<ylen()=>Ch(3,4))&(4>=0&4<xlen()&4>=0&4<ylen()=>Ch(4,4)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)&ylen()=4&xlen()=4&forall(X:_S1)[X=p2 or X=p1]&!(Ch(1,0)&Ch(2,1)&!turn(p2)&Ch(2,3)&!Ch(1,4)&Ch(3,1)&ylen()=4&Ch(3,3)&Ch(1,2)&Ch(0,2)&Ch(0,0)&!Ch(4,2)&!Ch(4,3)&!Ch(4,1)&!Ch(4,4)&!Ch(3,4)&Ch(1,1)&Ch(2,0)&Ch(2,2)&turn(p1)&!Ch(2,4)&Ch(3,0)&!Ch(0,4)&Ch(3,2)&Ch(1,3)&Ch(0,3)&xlen()=4&!Ch(4,0)&Ch(0,1))
 f2:false
2019-10-15 20:12:06,953 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() = G0&turn(p2)])&!(turn(p2))&!(Ch(0,0)&! Ch(1,0)&! Ch(0,1))&!(exists(G0:Int)[G0>=0&Ch(1,G0)&Ch(0,1)&! Ch(1,1)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(1,G0)&G0 > G1&! Ch(G0,G1)])&!(exists(G0:Int)[G0>=0&G0 > 1&Ch(0,G0)])&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(0,G0)])
 f2:!(!Ch(0,0))=>(exists(K320:Int,K321:Int)[ (Ch(K320,K321)&turn(p1)&K320>=0&K320<xlen()&K321>=0&K321<ylen())&((( !(Ch(0,0)&(K320>0|K321>0)) ) => ( !(Ch(0,0)&(K320>0|K321>0))&(!turn(p1)) ))&!((Ch(1,0)&(K320>1|K321>0))&! (Ch(0,1)&(K320>0|K321>1)))&!(exists(G0:Int)[G0>=0&! G0 = 0&(Ch(G0,G0)&(K320>G0|K321>G0))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! (Ch(G0,0)&(K320>G0|K321>0))&G1 >= 0&(Ch(G1,G0)&(K320>G1|K321>G0))])&!(exists(G0:Int)[G0>=0&G0 > 1&(Ch(G0,0)&(K320>G0|K321>0))])&!(exists(G0:Int)[G0>=0&! G0 = 0&(Ch(G0,1)&(K320>G0|K321>1))])) ])
2019-10-15 20:12:08,986 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() = G0&turn(p2)])&!(turn(p2))&!(Ch(0,0)&! Ch(1,0)&! Ch(0,1))&!(exists(G0:Int)[G0>=0&Ch(1,G0)&Ch(0,1)&! Ch(1,1)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(1,G0)&G0 > G1&! Ch(G0,G1)])&!(exists(G0:Int)[G0>=0&G0 > 1&Ch(0,G0)])&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(0,G0)])
 f2:!(!Ch(0,0))=>(exists(K320:Int,K321:Int)[ (Ch(K320,K321)&turn(p1)&K320>=0&K320<xlen()&K321>=0&K321<ylen())&((( !(Ch(0,0)&(K320>0|K321>0)) ) => ( !(Ch(0,0)&(K320>0|K321>0))&(!turn(p1)) ))&!((Ch(1,0)&(K320>1|K321>0))&! (Ch(0,1)&(K320>0|K321>1)))&!(exists(G0:Int)[G0>=0&! G0 = 0&(Ch(G0,G0)&(K320>G0|K321>G0))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! (Ch(G0,0)&(K320>G0|K321>0))&G1 >= 0&(Ch(G1,G0)&(K320>G1|K321>G0))])&!(exists(G0:Int)[G0>=0&G0 > 1&(Ch(G0,0)&(K320>G0|K321>0))])&!(exists(G0:Int)[G0>=0&! G0 = 0&(Ch(G0,1)&(K320>G0|K321>1))])) ])
2019-10-15 20:12:09,027 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() = G0&turn(p2)])&!(turn(p2))&!(Ch(0,0)&! Ch(1,0)&! Ch(0,1))&!(exists(G0:Int)[G0>=0&Ch(1,G0)&Ch(0,1)&! Ch(1,1)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(1,G0)&G0 > G1&! Ch(G0,G1)])&!(exists(G0:Int)[G0>=0&G0 > 1&Ch(0,G0)])&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(0,G0)])
 f2:!(!Ch(0,0))=>(exists(K320:Int,K321:Int)[ (Ch(K320,K321)&turn(p1)&K320>=0&K320<xlen()&K321>=0&K321<ylen())&((( !(Ch(0,0)&(K320>0|K321>0)) ) => ( !(Ch(0,0)&(K320>0|K321>0))&(!turn(p1)) ))&!((Ch(1,0)&(K320>1|K321>0))&! (Ch(0,1)&(K320>0|K321>1)))&!(exists(G0:Int)[G0>=0&! G0 = 0&(Ch(G0,G0)&(K320>G0|K321>G0))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! (Ch(G0,0)&(K320>G0|K321>0))&G1 >= 0&(Ch(G1,G0)&(K320>G1|K321>G0))])&!(exists(G0:Int)[G0>=0&G0 > 1&(Ch(G0,0)&(K320>G0|K321>0))])&!(exists(G0:Int)[G0>=0&! G0 = 0&(Ch(G0,1)&(K320>G0|K321>1))])) ])
2019-10-15 20:12:09,132 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(Ch(1,0)&! Ch(0,1))&!(exists(G0:Int)[G0>=0&! G0 = 0&Ch(G0,G0)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! Ch(G0,0)&G1 >= 0&Ch(G1,G0)])&!(exists(G0:Int)[G0>=0&G0 > 1&Ch(G0,0)])&!(exists(G0:Int)[G0>=0&! G0 = 0&Ch(G0,1)])
 f2:forall(K318:Int,K319:Int)[ Ch(K318,K319)&turn(p2)&K318>=0&K318<xlen()&K319>=0&K319<ylen()=>((( !(Ch(0,0)&(K318>0|K319>0)) ) => ( !(Ch(0,0)&(K318>0|K319>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(xlen()=G0)&(!turn(p2))])&!((!turn(p2)))&!((Ch(0,0)&(K318>0|K319>0))&! (Ch(1,0)&(K318>1|K319>0))&! (Ch(0,1)&(K318>0|K319>1)))&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K318>1|K319>G0))&(Ch(0,1)&(K318>0|K319>1))&! (Ch(1,1)&(K318>1|K319>1))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(1,G0)&(K318>1|K319>G0))&G0 > G1&! (Ch(G0,G1)&(K318>G0|K319>G1))])&!(exists(G0:Int)[G0>=0&G0 > 1&(Ch(0,G0)&(K318>0|K319>G0))])&!(exists(G0:Int)[G0>=0&(Ch(G0,1)&(K318>G0|K319>1))&! (Ch(0,G0)&(K318>0|K319>G0))])) ]
2019-10-15 20:12:09,853 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(3>=0&3<xlen()&0>=0&0<ylen()=>Ch(3,0))&(4>=0&4<xlen()&0>=0&0<ylen()=>Ch(4,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(3>=0&3<xlen()&1>=0&1<ylen()=>Ch(3,1))&(4>=0&4<xlen()&1>=0&1<ylen()=>Ch(4,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2))&(3>=0&3<xlen()&2>=0&2<ylen()=>Ch(3,2))&(4>=0&4<xlen()&2>=0&2<ylen()=>Ch(4,2))&(0>=0&0<xlen()&3>=0&3<ylen()=>Ch(0,3))&(1>=0&1<xlen()&3>=0&3<ylen()=>Ch(1,3))&(2>=0&2<xlen()&3>=0&3<ylen()=>Ch(2,3))&(3>=0&3<xlen()&3>=0&3<ylen()=>Ch(3,3))&(4>=0&4<xlen()&3>=0&3<ylen()=>Ch(4,3))&(0>=0&0<xlen()&4>=0&4<ylen()=>Ch(0,4))&(1>=0&1<xlen()&4>=0&4<ylen()=>Ch(1,4))&(2>=0&2<xlen()&4>=0&4<ylen()=>Ch(2,4))&(3>=0&3<xlen()&4>=0&4<ylen()=>Ch(3,4))&(4>=0&4<xlen()&4>=0&4<ylen()=>Ch(4,4)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)&ylen()=4&xlen()=4&forall(X:_S1)[X=p2 or X=p1]
 f2:false
2019-10-15 20:12:09,964 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:((0>=0&0<xlen()&0>=0&0<ylen()=>Ch(0,0))&(1>=0&1<xlen()&0>=0&0<ylen()=>Ch(1,0))&(2>=0&2<xlen()&0>=0&0<ylen()=>Ch(2,0))&(3>=0&3<xlen()&0>=0&0<ylen()=>Ch(3,0))&(4>=0&4<xlen()&0>=0&0<ylen()=>Ch(4,0))&(0>=0&0<xlen()&1>=0&1<ylen()=>Ch(0,1))&(1>=0&1<xlen()&1>=0&1<ylen()=>Ch(1,1))&(2>=0&2<xlen()&1>=0&1<ylen()=>Ch(2,1))&(3>=0&3<xlen()&1>=0&1<ylen()=>Ch(3,1))&(4>=0&4<xlen()&1>=0&1<ylen()=>Ch(4,1))&(0>=0&0<xlen()&2>=0&2<ylen()=>Ch(0,2))&(1>=0&1<xlen()&2>=0&2<ylen()=>Ch(1,2))&(2>=0&2<xlen()&2>=0&2<ylen()=>Ch(2,2))&(3>=0&3<xlen()&2>=0&2<ylen()=>Ch(3,2))&(4>=0&4<xlen()&2>=0&2<ylen()=>Ch(4,2))&(0>=0&0<xlen()&3>=0&3<ylen()=>Ch(0,3))&(1>=0&1<xlen()&3>=0&3<ylen()=>Ch(1,3))&(2>=0&2<xlen()&3>=0&3<ylen()=>Ch(2,3))&(3>=0&3<xlen()&3>=0&3<ylen()=>Ch(3,3))&(4>=0&4<xlen()&3>=0&3<ylen()=>Ch(4,3))&(0>=0&0<xlen()&4>=0&4<ylen()=>Ch(0,4))&(1>=0&1<xlen()&4>=0&4<ylen()=>Ch(1,4))&(2>=0&2<xlen()&4>=0&4<ylen()=>Ch(2,4))&(3>=0&3<xlen()&4>=0&4<ylen()=>Ch(3,4))&(4>=0&4<xlen()&4>=0&4<ylen()=>Ch(4,4)))&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)&ylen()=4&xlen()=4&forall(X:_S1)[X=p2 or X=p1]&!(Ch(1,0)&Ch(2,1)&!turn(p2)&Ch(2,3)&!Ch(1,4)&Ch(3,1)&ylen()=4&Ch(3,3)&Ch(1,2)&Ch(0,2)&Ch(0,0)&!Ch(4,2)&!Ch(4,3)&!Ch(4,1)&!Ch(4,4)&!Ch(3,4)&Ch(1,1)&Ch(2,0)&Ch(2,2)&turn(p1)&!Ch(2,4)&Ch(3,0)&!Ch(0,4)&Ch(3,2)&Ch(1,3)&Ch(0,3)&xlen()=4&!Ch(4,0)&Ch(0,1))
 f2:false
2019-10-15 20:12:18,479 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() = G0&turn(p2)])&!(turn(p2))&!(Ch(0,0)&! Ch(1,0)&! Ch(0,1))&!(exists(G0:Int)[G0>=0&Ch(1,G0)&Ch(0,1)&! Ch(1,1)])&!(exists(G0:Int)[G0>=0&G0 > 1&Ch(0,G0)])&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(0,G0)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&G0 > G1&! G0 = 1&Ch(G0,G1)])
 f2:!(!Ch(0,0))=>(exists(K324:Int,K325:Int)[ (Ch(K324,K325)&turn(p1)&K324>=0&K324<xlen()&K325>=0&K325<ylen())&((( !(Ch(0,0)&(K324>0|K325>0)) ) => ( !(Ch(0,0)&(K324>0|K325>0))&(!turn(p1)) ))&!((Ch(1,0)&(K324>1|K325>0))&! (Ch(0,1)&(K324>0|K325>1)))&!(exists(G0:Int)[G0>=0&! G0 = 0&(Ch(G0,G0)&(K324>G0|K325>G0))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! (Ch(G0,0)&(K324>G0|K325>0))&G1 >= 0&(Ch(G1,G0)&(K324>G1|K325>G0))])&!(exists(G0:Int)[G0>=0&G0 > 1&(Ch(G0,0)&(K324>G0|K325>0))])&!(exists(G0:Int)[G0>=0&! G0 = 0&(Ch(G0,1)&(K324>G0|K325>1))])) ])
2019-10-15 20:12:18,527 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(Ch(1,0)&! Ch(0,1))&!(exists(G0:Int)[G0>=0&! G0 = 0&Ch(G0,G0)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! Ch(G0,0)&G1 >= 0&Ch(G1,G0)])&!(exists(G0:Int)[G0>=0&G0 > 1&Ch(G0,0)])&!(exists(G0:Int)[G0>=0&! G0 = 0&Ch(G0,1)])
 f2:forall(K322:Int,K323:Int)[ Ch(K322,K323)&turn(p2)&K322>=0&K322<xlen()&K323>=0&K323<ylen()=>((( !(Ch(0,0)&(K322>0|K323>0)) ) => ( !(Ch(0,0)&(K322>0|K323>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(xlen()=G0)&(!turn(p2))])&!((!turn(p2)))&!((Ch(0,0)&(K322>0|K323>0))&! (Ch(1,0)&(K322>1|K323>0))&! (Ch(0,1)&(K322>0|K323>1)))&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K322>1|K323>G0))&(Ch(0,1)&(K322>0|K323>1))&! (Ch(1,1)&(K322>1|K323>1))])&!(exists(G0:Int)[G0>=0&G0 > 1&(Ch(0,G0)&(K322>0|K323>G0))])&!(exists(G0:Int)[G0>=0&(Ch(G0,1)&(K322>G0|K323>1))&! (Ch(0,G0)&(K322>0|K323>G0))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&G0 > G1&! G0 = 1&(Ch(G0,G1)&(K322>G0|K323>G1))])) ]
2019-10-15 20:12:18,566 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:forall(K16:Int,K17:Int)[K16>=0&K16<xlen()&K17>=0&K17<ylen()=>Ch(K16,K17)]&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)
 f2:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() = G0&turn(p2)])&!(turn(p2))&!(Ch(0,0)&! Ch(1,0)&! Ch(0,1))&!(exists(G0:Int)[G0>=0&Ch(1,G0)&Ch(0,1)&! Ch(1,1)])&!(exists(G0:Int)[G0>=0&G0 > 1&Ch(0,G0)])&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(0,G0)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&G0 > G1&! G0 = 1&Ch(G0,G1)])
2019-10-15 20:12:18,682 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:forall(K16:Int,K17:Int)[K16>=0&K16<xlen()&K17>=0&K17<ylen()=>Ch(K16,K17)]&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)
 f2:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() = G0&turn(p2)])&!(turn(p2))&!(Ch(0,0)&! Ch(1,0)&! Ch(0,1))&!(exists(G0:Int)[G0>=0&Ch(1,G0)&Ch(0,1)&! Ch(1,1)])&!(exists(G0:Int)[G0>=0&G0 > 1&Ch(0,G0)])&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(0,G0)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&G0 > G1&! G0 = 1&Ch(G0,G1)])
2019-10-15 20:12:18,713 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:forall(K16:Int,K17:Int)[K16>=0&K16<xlen()&K17>=0&K17<ylen()=>Ch(K16,K17)]&xlen()>1&ylen()=xlen()&turn(p1)&!turn(p2)
 f2:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() = G0&turn(p2)])&!(turn(p2))&!(Ch(0,0)&! Ch(1,0)&! Ch(0,1))&!(exists(G0:Int)[G0>=0&Ch(1,G0)&Ch(0,1)&! Ch(1,1)])&!(exists(G0:Int)[G0>=0&G0 > 1&Ch(0,G0)])&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(0,G0)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&G0 > G1&! G0 = 1&Ch(G0,G1)])
2019-10-15 20:13:15,956 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(exists(G0:Int)[G0>=0&xlen() = G0&turn(p2)])&!(turn(p2))&!(Ch(0,0)&! Ch(1,0)&! Ch(0,1))&!(exists(G0:Int)[G0>=0&Ch(1,G0)&Ch(0,1)&! Ch(1,1)])&!(exists(G0:Int)[G0>=0&Ch(G0,1)&! Ch(0,G0)])&!(exists(G0:Int)[G0>=0&G0 > 1&! Ch(1,1)&Ch(0,G0)])&!(exists(G0:Int,G1:Int,G2:Int)[G0>=0&G1>=0&G2>=0&Ch(G0,G1)&G0 > G2&! Ch(0,G2)])
 f2:!(!Ch(0,0))=>(exists(K328:Int,K329:Int)[ (Ch(K328,K329)&turn(p1)&K328>=0&K328<xlen()&K329>=0&K329<ylen())&((( !(Ch(0,0)&(K328>0|K329>0)) ) => ( !(Ch(0,0)&(K328>0|K329>0))&(!turn(p1)) ))&!((Ch(1,0)&(K328>1|K329>0))&! (Ch(0,1)&(K328>0|K329>1)))&!(exists(G0:Int)[G0>=0&! G0 = 0&(Ch(G0,G0)&(K328>G0|K329>G0))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! (Ch(G0,0)&(K328>G0|K329>0))&G1 >= 0&(Ch(G1,G0)&(K328>G1|K329>G0))])&!(exists(G0:Int)[G0>=0&! G0 = 0&(Ch(G0,1)&(K328>G0|K329>1))])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&(Ch(G0,0)&(K328>G0|K329>0))&G0 >= G1&! (Ch(G1,0)&(K328>G1|K329>0))])) ])
2019-10-15 20:13:26,079 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(Ch(1,0)&! Ch(0,1))&!(exists(G0:Int)[G0>=0&! G0 = 0&Ch(G0,G0)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! Ch(G0,0)&G1 >= 0&Ch(G1,G0)])&!(exists(G0:Int)[G0>=0&! G0 = 0&Ch(G0,1)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,0)&G0 >= G1&! Ch(G1,0)])
 f2:forall(K326:Int,K327:Int)[ Ch(K326,K327)&turn(p2)&K326>=0&K326<xlen()&K327>=0&K327<ylen()=>((( !(Ch(0,0)&(K326>0|K327>0)) ) => ( !(Ch(0,0)&(K326>0|K327>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(xlen()=G0)&(!turn(p2))])&!((!turn(p2)))&!((Ch(0,0)&(K326>0|K327>0))&! (Ch(1,0)&(K326>1|K327>0))&! (Ch(0,1)&(K326>0|K327>1)))&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K326>1|K327>G0))&(Ch(0,1)&(K326>0|K327>1))&! (Ch(1,1)&(K326>1|K327>1))])&!(exists(G0:Int)[G0>=0&(Ch(G0,1)&(K326>G0|K327>1))&! (Ch(0,G0)&(K326>0|K327>G0))])&!(exists(G0:Int)[G0>=0&G0 > 1&! (Ch(1,1)&(K326>1|K327>1))&(Ch(0,G0)&(K326>0|K327>G0))])&!(exists(G0:Int,G1:Int,G2:Int)[G0>=0&G1>=0&G2>=0&(Ch(G0,G1)&(K326>G0|K327>G1))&G0 > G2&! (Ch(0,G2)&(K326>0|K327>G2))])) ]
2019-10-15 20:13:26,136 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(Ch(1,0)&! Ch(0,1))&!(exists(G0:Int)[G0>=0&! G0 = 0&Ch(G0,G0)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! Ch(G0,0)&G1 >= 0&Ch(G1,G0)])&!(exists(G0:Int)[G0>=0&! G0 = 0&Ch(G0,1)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,0)&G0 >= G1&! Ch(G1,0)])
 f2:forall(K326:Int,K327:Int)[ Ch(K326,K327)&turn(p2)&K326>=0&K326<xlen()&K327>=0&K327<ylen()=>((( !(Ch(0,0)&(K326>0|K327>0)) ) => ( !(Ch(0,0)&(K326>0|K327>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(xlen()=G0)&(!turn(p2))])&!((!turn(p2)))&!((Ch(0,0)&(K326>0|K327>0))&! (Ch(1,0)&(K326>1|K327>0))&! (Ch(0,1)&(K326>0|K327>1)))&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K326>1|K327>G0))&(Ch(0,1)&(K326>0|K327>1))&! (Ch(1,1)&(K326>1|K327>1))])&!(exists(G0:Int)[G0>=0&(Ch(G0,1)&(K326>G0|K327>1))&! (Ch(0,G0)&(K326>0|K327>G0))])&!(exists(G0:Int)[G0>=0&G0 > 1&! (Ch(1,1)&(K326>1|K327>1))&(Ch(0,G0)&(K326>0|K327>G0))])&!(exists(G0:Int,G1:Int,G2:Int)[G0>=0&G1>=0&G2>=0&(Ch(G0,G1)&(K326>G0|K327>G1))&G0 > G2&! (Ch(0,G2)&(K326>0|K327>G2))])) ]
2019-10-15 20:13:26,178 -- z3prover.py -- [function:imply][line:49] -- DEBUG: #checking imply:
 f1:(( !Ch(0,0) ) => ( !Ch(0,0)&turn(p1) ))&!(Ch(1,0)&! Ch(0,1))&!(exists(G0:Int)[G0>=0&! G0 = 0&Ch(G0,G0)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&! Ch(G0,0)&G1 >= 0&Ch(G1,G0)])&!(exists(G0:Int)[G0>=0&! G0 = 0&Ch(G0,1)])&!(exists(G0:Int,G1:Int)[G0>=0&G1>=0&Ch(G0,0)&G0 >= G1&! Ch(G1,0)])
 f2:forall(K326:Int,K327:Int)[ Ch(K326,K327)&turn(p2)&K326>=0&K326<xlen()&K327>=0&K327<ylen()=>((( !(Ch(0,0)&(K326>0|K327>0)) ) => ( !(Ch(0,0)&(K326>0|K327>0))&(!turn(p1)) ))&!(exists(G0:Int)[G0>=0&(xlen()=G0)&(!turn(p2))])&!((!turn(p2)))&!((Ch(0,0)&(K326>0|K327>0))&! (Ch(1,0)&(K326>1|K327>0))&! (Ch(0,1)&(K326>0|K327>1)))&!(exists(G0:Int)[G0>=0&(Ch(1,G0)&(K326>1|K327>G0))&(Ch(0,1)&(K326>0|K327>1))&! (Ch(1,1)&(K326>1|K327>1))])&!(exists(G0:Int)[G0>=0&(Ch(G0,1)&(K326>G0|K327>1))&! (Ch(0,G0)&(K326>0|K327>G0))])&!(exists(G0:Int)[G0>=0&G0 > 1&! (Ch(1,1)&(K326>1|K327>1))&(Ch(0,G0)&(K326>0|K327>G0))])&!(exists(G0:Int,G1:Int,G2:Int)[G0>=0&G1>=0&G2>=0&(Ch(G0,G1)&(K326>G0|K327>G1))&G0 > G2&! (Ch(0,G2)&(K326>0|K327>G2))])) ]
