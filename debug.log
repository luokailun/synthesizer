2019-10-06 14:35:09,506 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:( numStone()=0 ) => ( numStone()=0&!(turn(p1)) )
 f2:exists(K13:Int)[ (numStone()>=K13&(K13=1|K13=2|K13=3)&turn(p1))&(( (numStone()=0+K13) ) => ( (numStone()=0+K13)&!((!turn(p1))) )) ]
2019-10-06 14:35:09,628 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:( numStone()=0 ) => ( numStone()=0&!(turn(p1)) )
 f2:forall(K12:Int)[ numStone()>=K12&(K12=1|K12=2|K12=3)&turn(p2)=>(( (numStone()=0+K12) ) => ( (numStone()=0+K12)&!((!turn(p1))) )) ]
2019-10-06 14:37:51,028 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:( numStone()=0 ) => ( numStone()=0&!(turn(p1)) )
 f2:exists(K13:Int)[ (numStone()>=K13&(K13=1|K13=2|K13=3)&turn(p1))&(( (numStone()=0+K13) ) => ( (numStone()=0+K13)&!((!turn(p1))) )) ]
2019-10-06 14:37:51,054 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:( numStone()=0 ) => ( numStone()=0&!(turn(p1)) )
 f2:forall(K12:Int)[ numStone()>=K12&(K12=1|K12=2|K12=3)&turn(p2)=>(( (numStone()=0+K12) ) => ( (numStone()=0+K12)&!((!turn(p1))) )) ]
2019-10-06 14:38:29,589 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:( numStone()=0 ) => ( numStone()=0&!(turn(p1)) )
 f2:exists(K13:Int)[ (numStone()>=K13&(K13=1|K13=2|K13=3)&turn(p1))&(( (numStone()=0+K13) ) => ( (numStone()=0+K13)&!((!turn(p1))) )) ]
2019-10-06 14:38:29,616 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:( numStone()=0 ) => ( numStone()=0&!(turn(p1)) )
 f2:forall(K12:Int)[ numStone()>=K12&(K12=1|K12=2|K12=3)&turn(p2)=>(( (numStone()=0+K12) ) => ( (numStone()=0+K12)&!((!turn(p1))) )) ]
2019-10-06 14:38:29,865 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(X0:_S1)[turn(X0)])
 f2:exists(K15:Int)[ (numStone()>=K15&(K15=1|K15=2|K15=3)&turn(p1))&((( (numStone()=0+K15) ) => ( (numStone()=0+K15)&!((!turn(p1))) ))&!(exists(X0:_S1)[(!turn(X0))])) ]
2019-10-06 14:38:29,889 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(X0:_S1)[turn(X0)])
 f2:forall(K14:Int)[ numStone()>=K14&(K14=1|K14=2|K14=3)&turn(p2)=>((( (numStone()=0+K14) ) => ( (numStone()=0+K14)&!((!turn(p1))) ))&!(exists(X0:_S1)[(!turn(X0))])) ]
2019-10-06 14:38:29,914 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:!(numStone()%4=0)&numStone()>0&turn(p1)&!turn(p2)
 f2:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(X0:_S1)[turn(X0)])
2019-10-06 14:38:51,108 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:( numStone()=0 ) => ( numStone()=0&!(turn(p1)) )
 f2:exists(K13:Int)[ (numStone()>=K13&(K13=1|K13=2|K13=3)&turn(p1))&(( (numStone()=0+K13) ) => ( (numStone()=0+K13)&!((!turn(p1))) )) ]
2019-10-06 14:38:51,136 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:( numStone()=0 ) => ( numStone()=0&!(turn(p1)) )
 f2:forall(K12:Int)[ numStone()>=K12&(K12=1|K12=2|K12=3)&turn(p2)=>(( (numStone()=0+K12) ) => ( (numStone()=0+K12)&!((!turn(p1))) )) ]
2019-10-06 14:38:51,399 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(X0:_S1)[turn(X0)])
 f2:exists(K15:Int)[ (numStone()>=K15&(K15=1|K15=2|K15=3)&turn(p1))&((( (numStone()=0+K15) ) => ( (numStone()=0+K15)&!((!turn(p1))) ))&!(exists(X0:_S1)[(!turn(X0))])) ]
2019-10-06 14:38:51,423 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(X0:_S1)[turn(X0)])
 f2:forall(K14:Int)[ numStone()>=K14&(K14=1|K14=2|K14=3)&turn(p2)=>((( (numStone()=0+K14) ) => ( (numStone()=0+K14)&!((!turn(p1))) ))&!(exists(X0:_S1)[(!turn(X0))])) ]
2019-10-06 14:38:51,446 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:!(numStone()%4=0)&numStone()>0&turn(p1)&!turn(p2)
 f2:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(X0:_S1)[turn(X0)])
2019-10-06 14:39:43,005 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:( numStone()=0 ) => ( numStone()=0&!(turn(p1)) )
 f2:exists(K13:Int)[ (numStone()>=K13&(K13=1|K13=2|K13=3)&turn(p1))&(( (numStone()=0+K13) ) => ( (numStone()=0+K13)&!((!turn(p1))) )) ]
2019-10-06 14:39:43,033 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:( numStone()=0 ) => ( numStone()=0&!(turn(p1)) )
 f2:forall(K12:Int)[ numStone()>=K12&(K12=1|K12=2|K12=3)&turn(p2)=>(( (numStone()=0+K12) ) => ( (numStone()=0+K12)&!((!turn(p1))) )) ]
2019-10-06 14:39:43,244 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(X0:_S1)[turn(X0)])
 f2:exists(K15:Int)[ (numStone()>=K15&(K15=1|K15=2|K15=3)&turn(p1))&((( (numStone()=0+K15) ) => ( (numStone()=0+K15)&!((!turn(p1))) ))&!(exists(X0:_S1)[(!turn(X0))])) ]
2019-10-06 14:39:43,269 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(X0:_S1)[turn(X0)])
 f2:forall(K14:Int)[ numStone()>=K14&(K14=1|K14=2|K14=3)&turn(p2)=>((( (numStone()=0+K14) ) => ( (numStone()=0+K14)&!((!turn(p1))) ))&!(exists(X0:_S1)[(!turn(X0))])) ]
2019-10-06 14:39:43,290 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:!(numStone()%4=0)&numStone()>0&turn(p1)&!turn(p2)
 f2:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(X0:_S1)[turn(X0)])
2019-10-06 14:40:03,778 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:( numStone()=0 ) => ( numStone()=0&!(turn(p1)) )
 f2:exists(K13:Int)[ (numStone()>=K13&(K13=1|K13=2|K13=3)&turn(p1))&(( (numStone()=0+K13) ) => ( (numStone()=0+K13)&!((!turn(p1))) )) ]
2019-10-06 14:40:03,812 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:( numStone()=0 ) => ( numStone()=0&!(turn(p1)) )
 f2:forall(K12:Int)[ numStone()>=K12&(K12=1|K12=2|K12=3)&turn(p2)=>(( (numStone()=0+K12) ) => ( (numStone()=0+K12)&!((!turn(p1))) )) ]
2019-10-06 14:40:04,076 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(X0:_S1)[turn(X0)])
 f2:exists(K15:Int)[ (numStone()>=K15&(K15=1|K15=2|K15=3)&turn(p1))&((( (numStone()=0+K15) ) => ( (numStone()=0+K15)&!((!turn(p1))) ))&!(exists(X0:_S1)[(!turn(X0))])) ]
2019-10-06 14:40:04,101 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(X0:_S1)[turn(X0)])
 f2:forall(K14:Int)[ numStone()>=K14&(K14=1|K14=2|K14=3)&turn(p2)=>((( (numStone()=0+K14) ) => ( (numStone()=0+K14)&!((!turn(p1))) ))&!(exists(X0:_S1)[(!turn(X0))])) ]
2019-10-06 14:40:04,120 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:!(numStone()%4=0)&numStone()>0&turn(p1)&!turn(p2)
 f2:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(X0:_S1)[turn(X0)])
2019-10-06 14:40:19,515 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:( numStone()=0 ) => ( numStone()=0&!(turn(p1)) )
 f2:exists(K13:Int)[ (numStone()>=K13&(K13=1|K13=2|K13=3)&turn(p1))&(( (numStone()=0+K13) ) => ( (numStone()=0+K13)&!((!turn(p1))) )) ]
2019-10-06 14:40:19,542 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:( numStone()=0 ) => ( numStone()=0&!(turn(p1)) )
 f2:forall(K12:Int)[ numStone()>=K12&(K12=1|K12=2|K12=3)&turn(p2)=>(( (numStone()=0+K12) ) => ( (numStone()=0+K12)&!((!turn(p1))) )) ]
2019-10-06 14:40:19,781 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(X0:_S1)[turn(X0)])
 f2:exists(K15:Int)[ (numStone()>=K15&(K15=1|K15=2|K15=3)&turn(p1))&((( (numStone()=0+K15) ) => ( (numStone()=0+K15)&!((!turn(p1))) ))&!(exists(X0:_S1)[(!turn(X0))])) ]
2019-10-06 14:40:19,812 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(X0:_S1)[turn(X0)])
 f2:forall(K14:Int)[ numStone()>=K14&(K14=1|K14=2|K14=3)&turn(p2)=>((( (numStone()=0+K14) ) => ( (numStone()=0+K14)&!((!turn(p1))) ))&!(exists(X0:_S1)[(!turn(X0))])) ]
2019-10-06 14:40:19,841 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:!(numStone()%4=0)&numStone()>0&turn(p1)&!turn(p2)
 f2:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(X0:_S1)[turn(X0)])
2019-10-06 14:41:33,018 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:( numStone()=0 ) => ( numStone()=0&!(turn(p1)) )
 f2:exists(K13:Int)[ (numStone()>=K13&(K13=1|K13=2|K13=3)&turn(p1))&(( (numStone()=0+K13) ) => ( (numStone()=0+K13)&!((!turn(p1))) )) ]
2019-10-06 14:41:33,045 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:( numStone()=0 ) => ( numStone()=0&!(turn(p1)) )
 f2:forall(K12:Int)[ numStone()>=K12&(K12=1|K12=2|K12=3)&turn(p2)=>(( (numStone()=0+K12) ) => ( (numStone()=0+K12)&!((!turn(p1))) )) ]
2019-10-06 14:41:33,284 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(X0:_S1)[turn(X0)])
 f2:exists(K15:Int)[ (numStone()>=K15&(K15=1|K15=2|K15=3)&turn(p1))&((( (numStone()=0+K15) ) => ( (numStone()=0+K15)&!((!turn(p1))) ))&!(exists(X0:_S1)[(!turn(X0))])) ]
2019-10-06 14:41:33,309 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(X0:_S1)[turn(X0)])
 f2:forall(K14:Int)[ numStone()>=K14&(K14=1|K14=2|K14=3)&turn(p2)=>((( (numStone()=0+K14) ) => ( (numStone()=0+K14)&!((!turn(p1))) ))&!(exists(X0:_S1)[(!turn(X0))])) ]
2019-10-06 14:41:33,331 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:!(numStone()%4=0)&numStone()>0&turn(p1)&!turn(p2)
 f2:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(X0:_S1)[turn(X0)])
2019-10-06 14:42:24,618 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:( numStone()=0 ) => ( numStone()=0&!(turn(p1)) )
 f2:exists(K13:Int)[ (numStone()>=K13&(K13=1|K13=2|K13=3)&turn(p1))&(( (numStone()=0+K13) ) => ( (numStone()=0+K13)&!((!turn(p1))) )) ]
2019-10-06 14:42:24,646 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:( numStone()=0 ) => ( numStone()=0&!(turn(p1)) )
 f2:forall(K12:Int)[ numStone()>=K12&(K12=1|K12=2|K12=3)&turn(p2)=>(( (numStone()=0+K12) ) => ( (numStone()=0+K12)&!((!turn(p1))) )) ]
2019-10-06 14:42:24,924 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(X0:_S1)[turn(X0)])
 f2:exists(K15:Int)[ (numStone()>=K15&(K15=1|K15=2|K15=3)&turn(p1))&((( (numStone()=0+K15) ) => ( (numStone()=0+K15)&!((!turn(p1))) ))&!(exists(X0:_S1)[(!turn(X0))])) ]
2019-10-06 14:42:24,947 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(X0:_S1)[turn(X0)])
 f2:forall(K14:Int)[ numStone()>=K14&(K14=1|K14=2|K14=3)&turn(p2)=>((( (numStone()=0+K14) ) => ( (numStone()=0+K14)&!((!turn(p1))) ))&!(exists(X0:_S1)[(!turn(X0))])) ]
2019-10-06 14:42:24,965 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:!(numStone()%4=0)&numStone()>0&turn(p1)&!turn(p2)
 f2:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(X0:_S1)[turn(X0)])
2019-10-06 14:42:25,255 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:_S1)[turn(G0)&turn(p2)])
 f2:exists(K17:Int)[ (numStone()>=K17&(K17=1|K17=2|K17=3)&turn(p1))&((( (numStone()=0+K17) ) => ( (numStone()=0+K17)&!((!turn(p1))) ))&!(exists(G0:Int)[G0>=0&G0 > 0&(numStone()=G0+K17)])) ]
2019-10-06 14:42:25,296 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 0&numStone() = G0])
 f2:forall(K16:Int)[ numStone()>=K16&(K16=1|K16=2|K16=3)&turn(p2)=>((( (numStone()=0+K16) ) => ( (numStone()=0+K16)&!((!turn(p1))) ))&!(exists(G0:_S1)[(!turn(G0))&(!turn(p2))])) ]
2019-10-06 14:42:44,489 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:( numStone()=0 ) => ( numStone()=0&!(turn(p1)) )
 f2:exists(K13:Int)[ (numStone()>=K13&(K13=1|K13=2|K13=3)&turn(p1))&(( (numStone()=0+K13) ) => ( (numStone()=0+K13)&!((!turn(p1))) )) ]
2019-10-06 14:42:44,522 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:( numStone()=0 ) => ( numStone()=0&!(turn(p1)) )
 f2:forall(K12:Int)[ numStone()>=K12&(K12=1|K12=2|K12=3)&turn(p2)=>(( (numStone()=0+K12) ) => ( (numStone()=0+K12)&!((!turn(p1))) )) ]
2019-10-06 14:42:44,773 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(X0:_S1)[turn(X0)])
 f2:exists(K15:Int)[ (numStone()>=K15&(K15=1|K15=2|K15=3)&turn(p1))&((( (numStone()=0+K15) ) => ( (numStone()=0+K15)&!((!turn(p1))) ))&!(exists(X0:_S1)[(!turn(X0))])) ]
2019-10-06 14:42:44,800 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(X0:_S1)[turn(X0)])
 f2:forall(K14:Int)[ numStone()>=K14&(K14=1|K14=2|K14=3)&turn(p2)=>((( (numStone()=0+K14) ) => ( (numStone()=0+K14)&!((!turn(p1))) ))&!(exists(X0:_S1)[(!turn(X0))])) ]
2019-10-06 14:42:44,818 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:!(numStone()%4=0)&numStone()>0&turn(p1)&!turn(p2)
 f2:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(X0:_S1)[turn(X0)])
2019-10-06 14:42:45,167 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:_S1)[turn(G0)&turn(p2)])
 f2:exists(K17:Int)[ (numStone()>=K17&(K17=1|K17=2|K17=3)&turn(p1))&((( (numStone()=0+K17) ) => ( (numStone()=0+K17)&!((!turn(p1))) ))&!(exists(G0:Int)[G0>=0&G0 > 0&(numStone()=G0+K17)])) ]
2019-10-06 14:42:45,206 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 0&numStone() = G0])
 f2:forall(K16:Int)[ numStone()>=K16&(K16=1|K16=2|K16=3)&turn(p2)=>((( (numStone()=0+K16) ) => ( (numStone()=0+K16)&!((!turn(p1))) ))&!(exists(G0:_S1)[(!turn(G0))&(!turn(p2))])) ]
2019-10-06 14:42:45,482 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:_S1)[turn(G0)&turn(p2)])&!(! numStone() = 1)
 f2:exists(K19:Int)[ (numStone()>=K19&(K19=1|K19=2|K19=3)&turn(p1))&((( (numStone()=0+K19) ) => ( (numStone()=0+K19)&!((!turn(p1))) ))&!(exists(G0:Int)[G0>=0&G0 > 0&(numStone()=G0+K19)])) ]
2019-10-06 14:42:45,506 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 0&numStone() = G0])
 f2:forall(K18:Int)[ numStone()>=K18&(K18=1|K18=2|K18=3)&turn(p2)=>((( (numStone()=0+K18) ) => ( (numStone()=0+K18)&!((!turn(p1))) ))&!(exists(G0:_S1)[(!turn(G0))&(!turn(p2))])&!(! (numStone()=1+K18))) ]
2019-10-06 14:42:45,526 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:!(numStone()%4=0)&numStone()>0&turn(p1)&!turn(p2)
 f2:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:_S1)[turn(G0)&turn(p2)])&!(! numStone() = 1)
2019-10-06 14:42:45,801 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:_S1)[turn(G0)&turn(p2)])&!(exists(G0:Int)[G0>=0&G0 > 3&numStone() = G0])
 f2:exists(K21:Int)[ (numStone()>=K21&(K21=1|K21=2|K21=3)&turn(p1))&((( (numStone()=0+K21) ) => ( (numStone()=0+K21)&!((!turn(p1))) ))&!(exists(G0:Int)[G0>=0&G0 > 0&(numStone()=G0+K21)])) ]
2019-10-06 14:42:45,831 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 0&numStone() = G0])
 f2:forall(K20:Int)[ numStone()>=K20&(K20=1|K20=2|K20=3)&turn(p2)=>((( (numStone()=0+K20) ) => ( (numStone()=0+K20)&!((!turn(p1))) ))&!(exists(G0:_S1)[(!turn(G0))&(!turn(p2))])&!(exists(G0:Int)[G0>=0&G0 > 3&(numStone()=G0+K20)])) ]
2019-10-06 14:42:45,853 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:!(numStone()%4=0)&numStone()>0&turn(p1)&!turn(p2)
 f2:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:_S1)[turn(G0)&turn(p2)])&!(exists(G0:Int)[G0>=0&G0 > 3&numStone() = G0])
2019-10-06 14:42:46,018 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:_S1)[turn(G0)&turn(p2)])&!(exists(G0:Int)[G0>=0&G0 > 4&numStone() > G0])
 f2:exists(K24:Int)[ (numStone()>=K24&(K24=1|K24=2|K24=3)&turn(p1))&((( (numStone()=0+K24) ) => ( (numStone()=0+K24)&!((!turn(p1))) ))&!(exists(G0:Int)[G0>=0&G0 = 1&(numStone()=G0+K24)])) ]
2019-10-06 14:42:46,047 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 1&numStone() = G0])
 f2:forall(K22:Int)[ numStone()>=K22&(K22=1|K22=2|K22=3)&turn(p2)=>((( (numStone()=0+K22) ) => ( (numStone()=0+K22)&!((!turn(p1))) ))&!(exists(G0:_S1)[(!turn(G0))&(!turn(p2))])&!(exists(G0:Int)[ exists(K23:Int)[ (numStone()=K23+K22)&(G0>=0&G0 > 4& K23 > G0)] ])) ]
2019-10-06 14:42:46,316 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:_S1)[turn(G0)&turn(p2)])&!(exists(G0:Int)[G0>=0&G0 > 4&numStone() > G0])
 f2:exists(K27:Int)[ (numStone()>=K27&(K27=1|K27=2|K27=3)&turn(p1))&((( (numStone()=0+K27) ) => ( (numStone()=0+K27)&!((!turn(p1))) ))&!(exists(G0:Int)[G0>=0&G0 % 2 = 1&(numStone()=G0+K27)])) ]
2019-10-06 14:42:46,343 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 % 2 = 1&numStone() = G0])
 f2:forall(K25:Int)[ numStone()>=K25&(K25=1|K25=2|K25=3)&turn(p2)=>((( (numStone()=0+K25) ) => ( (numStone()=0+K25)&!((!turn(p1))) ))&!(exists(G0:_S1)[(!turn(G0))&(!turn(p2))])&!(exists(G0:Int)[ exists(K26:Int)[ (numStone()=K26+K25)&(G0>=0&G0 > 4& K26 > G0)] ])) ]
2019-10-06 14:58:18,520 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:( numStone()=0 ) => ( numStone()=0&!(turn(p1)) )
 f2:exists(K13:Int)[ (numStone()>=K13&(K13=1|K13=2|K13=3)&turn(p1))&(( (numStone()=0+K13) ) => ( (numStone()=0+K13)&!((!turn(p1))) )) ]
2019-10-06 14:58:18,548 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:( numStone()=0 ) => ( numStone()=0&!(turn(p1)) )
 f2:forall(K12:Int)[ numStone()>=K12&(K12=1|K12=2|K12=3)&turn(p2)=>(( (numStone()=0+K12) ) => ( (numStone()=0+K12)&!((!turn(p1))) )) ]
2019-10-06 14:58:18,742 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(X0:_S1)[turn(X0)])
 f2:exists(K15:Int)[ (numStone()>=K15&(K15=1|K15=2|K15=3)&turn(p1))&((( (numStone()=0+K15) ) => ( (numStone()=0+K15)&!((!turn(p1))) ))&!(exists(X0:_S1)[(!turn(X0))])) ]
2019-10-06 14:58:18,764 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(X0:_S1)[turn(X0)])
 f2:forall(K14:Int)[ numStone()>=K14&(K14=1|K14=2|K14=3)&turn(p2)=>((( (numStone()=0+K14) ) => ( (numStone()=0+K14)&!((!turn(p1))) ))&!(exists(X0:_S1)[(!turn(X0))])) ]
2019-10-06 14:58:18,786 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:!(numStone()%4=0)&numStone()>0&turn(p1)&!turn(p2)
 f2:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(X0:_S1)[turn(X0)])
2019-10-06 14:58:19,181 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:_S1)[turn(G0)&turn(p2)])
 f2:exists(K17:Int)[ (numStone()>=K17&(K17=1|K17=2|K17=3)&turn(p1))&((( (numStone()=0+K17) ) => ( (numStone()=0+K17)&!((!turn(p1))) ))&!(exists(G0:Int)[G0>=0&G0 > 0&(numStone()=G0+K17)])) ]
2019-10-06 14:58:19,217 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 0&numStone() = G0])
 f2:forall(K16:Int)[ numStone()>=K16&(K16=1|K16=2|K16=3)&turn(p2)=>((( (numStone()=0+K16) ) => ( (numStone()=0+K16)&!((!turn(p1))) ))&!(exists(G0:_S1)[(!turn(G0))&(!turn(p2))])) ]
2019-10-06 14:58:19,486 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:_S1)[turn(G0)&turn(p2)])&!(! numStone() = 1)
 f2:exists(K19:Int)[ (numStone()>=K19&(K19=1|K19=2|K19=3)&turn(p1))&((( (numStone()=0+K19) ) => ( (numStone()=0+K19)&!((!turn(p1))) ))&!(exists(G0:Int)[G0>=0&G0 > 0&(numStone()=G0+K19)])) ]
2019-10-06 14:58:19,510 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 0&numStone() = G0])
 f2:forall(K18:Int)[ numStone()>=K18&(K18=1|K18=2|K18=3)&turn(p2)=>((( (numStone()=0+K18) ) => ( (numStone()=0+K18)&!((!turn(p1))) ))&!(exists(G0:_S1)[(!turn(G0))&(!turn(p2))])&!(! (numStone()=1+K18))) ]
2019-10-06 14:58:19,529 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:!(numStone()%4=0)&numStone()>0&turn(p1)&!turn(p2)
 f2:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:_S1)[turn(G0)&turn(p2)])&!(! numStone() = 1)
2019-10-06 14:58:19,796 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:_S1)[turn(G0)&turn(p2)])&!(exists(G0:Int)[G0>=0&G0 > 3&numStone() = G0])
 f2:exists(K21:Int)[ (numStone()>=K21&(K21=1|K21=2|K21=3)&turn(p1))&((( (numStone()=0+K21) ) => ( (numStone()=0+K21)&!((!turn(p1))) ))&!(exists(G0:Int)[G0>=0&G0 > 0&(numStone()=G0+K21)])) ]
2019-10-06 14:58:19,827 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 0&numStone() = G0])
 f2:forall(K20:Int)[ numStone()>=K20&(K20=1|K20=2|K20=3)&turn(p2)=>((( (numStone()=0+K20) ) => ( (numStone()=0+K20)&!((!turn(p1))) ))&!(exists(G0:_S1)[(!turn(G0))&(!turn(p2))])&!(exists(G0:Int)[G0>=0&G0 > 3&(numStone()=G0+K20)])) ]
2019-10-06 14:58:19,848 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:!(numStone()%4=0)&numStone()>0&turn(p1)&!turn(p2)
 f2:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:_S1)[turn(G0)&turn(p2)])&!(exists(G0:Int)[G0>=0&G0 > 3&numStone() = G0])
2019-10-06 14:58:20,041 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:_S1)[turn(G0)&turn(p2)])&!(exists(G0:Int)[G0>=0&G0 > 4&numStone() > G0])
 f2:exists(K24:Int)[ (numStone()>=K24&(K24=1|K24=2|K24=3)&turn(p1))&((( (numStone()=0+K24) ) => ( (numStone()=0+K24)&!((!turn(p1))) ))&!(exists(G0:Int)[G0>=0&G0 = 1&(numStone()=G0+K24)])) ]
2019-10-06 14:58:20,067 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 1&numStone() = G0])
 f2:forall(K22:Int)[ numStone()>=K22&(K22=1|K22=2|K22=3)&turn(p2)=>((( (numStone()=0+K22) ) => ( (numStone()=0+K22)&!((!turn(p1))) ))&!(exists(G0:_S1)[(!turn(G0))&(!turn(p2))])&!(exists(G0:Int)[ exists(K23:Int)[ (numStone()=K23+K22)&(G0>=0&G0 > 4& K23 > G0)] ])) ]
2019-10-06 14:58:20,290 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:_S1)[turn(G0)&turn(p2)])&!(exists(G0:Int)[G0>=0&G0 > 4&numStone() > G0])
 f2:exists(K27:Int)[ (numStone()>=K27&(K27=1|K27=2|K27=3)&turn(p1))&((( (numStone()=0+K27) ) => ( (numStone()=0+K27)&!((!turn(p1))) ))&!(exists(G0:Int)[G0>=0&G0 % 2 = 1&(numStone()=G0+K27)])) ]
2019-10-06 14:58:20,320 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 % 2 = 1&numStone() = G0])
 f2:forall(K25:Int)[ numStone()>=K25&(K25=1|K25=2|K25=3)&turn(p2)=>((( (numStone()=0+K25) ) => ( (numStone()=0+K25)&!((!turn(p1))) ))&!(exists(G0:_S1)[(!turn(G0))&(!turn(p2))])&!(exists(G0:Int)[ exists(K26:Int)[ (numStone()=K26+K25)&(G0>=0&G0 > 4& K26 > G0)] ])) ]
2019-10-06 17:12:41,611 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:( numStone()=0 ) => ( numStone()=0&!(turn(p1)) )
 f2:exists(K13:Int)[ (numStone()>=K13&(K13=1|K13=2|K13=3)&turn(p1))&(( (numStone()=0+K13) ) => ( (numStone()=0+K13)&!((!turn(p1))) )) ]
2019-10-06 17:12:41,648 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:( numStone()=0 ) => ( numStone()=0&!(turn(p1)) )
 f2:forall(K12:Int)[ numStone()>=K12&(K12=1|K12=2|K12=3)&turn(p2)=>(( (numStone()=0+K12) ) => ( (numStone()=0+K12)&!((!turn(p1))) )) ]
2019-10-06 17:12:59,823 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:( numStone()=0 ) => ( numStone()=0&!(turn(p1)) )
 f2:exists(K13:Int)[ (numStone()>=K13&(K13=1|K13=2|K13=3)&turn(p1))&(( (numStone()=0+K13) ) => ( (numStone()=0+K13)&!((!turn(p1))) )) ]
2019-10-06 17:12:59,860 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:( numStone()=0 ) => ( numStone()=0&!(turn(p1)) )
 f2:forall(K12:Int)[ numStone()>=K12&(K12=1|K12=2|K12=3)&turn(p2)=>(( (numStone()=0+K12) ) => ( (numStone()=0+K12)&!((!turn(p1))) )) ]
2019-10-06 17:13:00,170 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(X0:_S1)[turn(X0)])
 f2:exists(K15:Int)[ (numStone()>=K15&(K15=1|K15=2|K15=3)&turn(p1))&((( (numStone()=0+K15) ) => ( (numStone()=0+K15)&!((!turn(p1))) ))&!(exists(X0:_S1)[(!turn(X0))])) ]
2019-10-06 17:13:00,202 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(X0:_S1)[turn(X0)])
 f2:forall(K14:Int)[ numStone()>=K14&(K14=1|K14=2|K14=3)&turn(p2)=>((( (numStone()=0+K14) ) => ( (numStone()=0+K14)&!((!turn(p1))) ))&!(exists(X0:_S1)[(!turn(X0))])) ]
2019-10-06 17:13:00,223 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:!(numStone()%4=0)&numStone()>0&turn(p1)&!turn(p2)
 f2:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(X0:_S1)[turn(X0)])
2019-10-06 17:13:00,545 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:_S1)[turn(G0)&turn(p2)])
 f2:exists(K17:Int)[ (numStone()>=K17&(K17=1|K17=2|K17=3)&turn(p1))&((( (numStone()=0+K17) ) => ( (numStone()=0+K17)&!((!turn(p1))) ))&!(exists(G0:Int)[G0>=0&G0 > 0&(numStone()=G0+K17)])) ]
2019-10-06 17:13:00,582 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 0&numStone() = G0])
 f2:forall(K16:Int)[ numStone()>=K16&(K16=1|K16=2|K16=3)&turn(p2)=>((( (numStone()=0+K16) ) => ( (numStone()=0+K16)&!((!turn(p1))) ))&!(exists(G0:_S1)[(!turn(G0))&(!turn(p2))])) ]
2019-10-06 17:13:00,851 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:_S1)[turn(G0)&turn(p2)])&!(! numStone() = 1)
 f2:exists(K19:Int)[ (numStone()>=K19&(K19=1|K19=2|K19=3)&turn(p1))&((( (numStone()=0+K19) ) => ( (numStone()=0+K19)&!((!turn(p1))) ))&!(exists(G0:Int)[G0>=0&G0 > 0&(numStone()=G0+K19)])) ]
2019-10-06 17:13:00,876 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 0&numStone() = G0])
 f2:forall(K18:Int)[ numStone()>=K18&(K18=1|K18=2|K18=3)&turn(p2)=>((( (numStone()=0+K18) ) => ( (numStone()=0+K18)&!((!turn(p1))) ))&!(exists(G0:_S1)[(!turn(G0))&(!turn(p2))])&!(! (numStone()=1+K18))) ]
2019-10-06 17:13:00,896 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:!(numStone()%4=0)&numStone()>0&turn(p1)&!turn(p2)
 f2:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:_S1)[turn(G0)&turn(p2)])&!(! numStone() = 1)
2019-10-06 17:13:01,176 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:_S1)[turn(G0)&turn(p2)])&!(exists(G0:Int)[G0>=0&G0 > 3&numStone() = G0])
 f2:exists(K21:Int)[ (numStone()>=K21&(K21=1|K21=2|K21=3)&turn(p1))&((( (numStone()=0+K21) ) => ( (numStone()=0+K21)&!((!turn(p1))) ))&!(exists(G0:Int)[G0>=0&G0 > 0&(numStone()=G0+K21)])) ]
2019-10-06 17:13:01,207 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 0&numStone() = G0])
 f2:forall(K20:Int)[ numStone()>=K20&(K20=1|K20=2|K20=3)&turn(p2)=>((( (numStone()=0+K20) ) => ( (numStone()=0+K20)&!((!turn(p1))) ))&!(exists(G0:_S1)[(!turn(G0))&(!turn(p2))])&!(exists(G0:Int)[G0>=0&G0 > 3&(numStone()=G0+K20)])) ]
2019-10-06 17:13:01,229 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:!(numStone()%4=0)&numStone()>0&turn(p1)&!turn(p2)
 f2:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:_S1)[turn(G0)&turn(p2)])&!(exists(G0:Int)[G0>=0&G0 > 3&numStone() = G0])
2019-10-06 17:13:01,381 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:_S1)[turn(G0)&turn(p2)])&!(exists(G0:Int)[G0>=0&G0 > 4&numStone() > G0])
 f2:exists(K24:Int)[ (numStone()>=K24&(K24=1|K24=2|K24=3)&turn(p1))&((( (numStone()=0+K24) ) => ( (numStone()=0+K24)&!((!turn(p1))) ))&!(exists(G0:Int)[G0>=0&G0 = 1&(numStone()=G0+K24)])) ]
2019-10-06 17:13:01,409 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 1&numStone() = G0])
 f2:forall(K22:Int)[ numStone()>=K22&(K22=1|K22=2|K22=3)&turn(p2)=>((( (numStone()=0+K22) ) => ( (numStone()=0+K22)&!((!turn(p1))) ))&!(exists(G0:_S1)[(!turn(G0))&(!turn(p2))])&!(exists(G0:Int)[ exists(K23:Int)[ (numStone()=K23+K22)&(G0>=0&G0 > 4& K23 > G0)] ])) ]
2019-10-06 17:13:01,657 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:_S1)[turn(G0)&turn(p2)])&!(exists(G0:Int)[G0>=0&G0 > 4&numStone() > G0])
 f2:exists(K27:Int)[ (numStone()>=K27&(K27=1|K27=2|K27=3)&turn(p1))&((( (numStone()=0+K27) ) => ( (numStone()=0+K27)&!((!turn(p1))) ))&!(exists(G0:Int)[G0>=0&G0 % 2 = 1&(numStone()=G0+K27)])) ]
2019-10-06 17:13:01,687 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 % 2 = 1&numStone() = G0])
 f2:forall(K25:Int)[ numStone()>=K25&(K25=1|K25=2|K25=3)&turn(p2)=>((( (numStone()=0+K25) ) => ( (numStone()=0+K25)&!((!turn(p1))) ))&!(exists(G0:_S1)[(!turn(G0))&(!turn(p2))])&!(exists(G0:Int)[ exists(K26:Int)[ (numStone()=K26+K25)&(G0>=0&G0 > 4& K26 > G0)] ])) ]
2019-10-06 17:13:03,820 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:_S1)[turn(G0)&turn(p2)])&!(exists(G0:Int)[G0>=0&G0 > 4&numStone() > G0])
 f2:exists(K30:Int)[ (numStone()>=K30&(K30=1|K30=2|K30=3)&turn(p1))&((( (numStone()=0+K30) ) => ( (numStone()=0+K30)&!((!turn(p1))) ))&!(exists(G0:Int)[G0>=0&G0 % 2 = 1&(numStone()=G0+K30)])&!((numStone()=2+K30))) ]
2019-10-06 17:13:03,861 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 % 2 = 1&numStone() = G0])&!(numStone() = 2)
 f2:forall(K28:Int)[ numStone()>=K28&(K28=1|K28=2|K28=3)&turn(p2)=>((( (numStone()=0+K28) ) => ( (numStone()=0+K28)&!((!turn(p1))) ))&!(exists(G0:_S1)[(!turn(G0))&(!turn(p2))])&!(exists(G0:Int)[ exists(K29:Int)[ (numStone()=K29+K28)&(G0>=0&G0 > 4& K29 > G0)] ])) ]
2019-10-06 17:13:04,384 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:_S1)[turn(G0)&turn(p2)])&!(exists(G0:Int)[G0>=0&G0 > 4&numStone() > G0])&!(numStone() = 4)
 f2:exists(K33:Int)[ (numStone()>=K33&(K33=1|K33=2|K33=3)&turn(p1))&((( (numStone()=0+K33) ) => ( (numStone()=0+K33)&!((!turn(p1))) ))&!(exists(G0:Int)[ exists(K34:Int)[ (numStone()=K34+K33)&(G0>=0& K34 > G0&! (numStone()=4+K33))] ])) ]
2019-10-06 17:13:04,411 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:Int)[G0>=0&numStone() > G0&! numStone() = 4])
 f2:forall(K31:Int)[ numStone()>=K31&(K31=1|K31=2|K31=3)&turn(p2)=>((( (numStone()=0+K31) ) => ( (numStone()=0+K31)&!((!turn(p1))) ))&!(exists(G0:_S1)[(!turn(G0))&(!turn(p2))])&!(exists(G0:Int)[ exists(K32:Int)[ (numStone()=K32+K31)&(G0>=0&G0 > 4& K32 > G0)] ])&!((numStone()=4+K31))) ]
2019-10-06 17:13:04,435 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:!(numStone()%4=0)&numStone()>0&turn(p1)&!turn(p2)
 f2:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:_S1)[turn(G0)&turn(p2)])&!(exists(G0:Int)[G0>=0&G0 > 4&numStone() > G0])&!(numStone() = 4)
2019-10-06 17:13:04,458 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:!(numStone()%4=0)&numStone()>0&turn(p1)&!turn(p2)
 f2:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:_S1)[turn(G0)&turn(p2)])&!(exists(G0:Int)[G0>=0&G0 > 4&numStone() > G0])&!(numStone() = 4)
2019-10-06 17:13:04,476 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:!(numStone()%4=0)&numStone()>0&turn(p1)&!turn(p2)
 f2:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:_S1)[turn(G0)&turn(p2)])&!(exists(G0:Int)[G0>=0&G0 > 4&numStone() > G0])&!(numStone() = 4)
2019-10-06 17:13:04,495 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:!(numStone()%4=0)&numStone()>0&turn(p1)&!turn(p2)
 f2:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:_S1)[turn(G0)&turn(p2)])&!(exists(G0:Int)[G0>=0&G0 > 4&numStone() > G0])&!(numStone() = 4)
2019-10-06 17:13:04,616 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:_S1)[turn(G0)&turn(p2)])&!(numStone() = 4)
 f2:exists(K36:Int)[ (numStone()>=K36&(K36=1|K36=2|K36=3)&turn(p1))&((( (numStone()=0+K36) ) => ( (numStone()=0+K36)&!((!turn(p1))) ))&!(exists(G0:Int)[ exists(K37:Int)[ (numStone()=K37+K36)&(G0>=0& K37 > G0&! (numStone()=4+K36))] ])) ]
2019-10-06 17:13:04,656 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:Int)[G0>=0&numStone() > G0&! numStone() = 4])
 f2:forall(K35:Int)[ numStone()>=K35&(K35=1|K35=2|K35=3)&turn(p2)=>((( (numStone()=0+K35) ) => ( (numStone()=0+K35)&!((!turn(p1))) ))&!(exists(G0:_S1)[(!turn(G0))&(!turn(p2))])&!((numStone()=4+K35))) ]
2019-10-06 17:13:05,112 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:_S1)[turn(G0)&turn(p2)])&!(exists(G0:Int)[G0>=0&G0 % 4 = 0&numStone() = G0])
 f2:exists(K39:Int)[ (numStone()>=K39&(K39=1|K39=2|K39=3)&turn(p1))&((( (numStone()=0+K39) ) => ( (numStone()=0+K39)&!((!turn(p1))) ))&!(exists(G0:Int)[ exists(K40:Int)[ (numStone()=K40+K39)&(G0>=0& K40 > G0&! (numStone()=4+K39))] ])) ]
2019-10-06 17:13:05,152 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:_S1)[turn(G0)&turn(p2)])&!(exists(G0:Int)[G0>=0&G0 % 4 = 0&numStone() = G0])
 f2:exists(K39:Int)[ (numStone()>=K39&(K39=1|K39=2|K39=3)&turn(p1))&((( (numStone()=0+K39) ) => ( (numStone()=0+K39)&!((!turn(p1))) ))&!(exists(G0:Int)[ exists(K40:Int)[ (numStone()=K40+K39)&(G0>=0& K40 > G0&! (numStone()=4+K39))] ])) ]
2019-10-06 17:13:05,174 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:_S1)[turn(G0)&turn(p2)])&!(exists(G0:Int)[G0>=0&G0 % 4 = 0&numStone() = G0])
 f2:exists(K39:Int)[ (numStone()>=K39&(K39=1|K39=2|K39=3)&turn(p1))&((( (numStone()=0+K39) ) => ( (numStone()=0+K39)&!((!turn(p1))) ))&!(exists(G0:Int)[ exists(K40:Int)[ (numStone()=K40+K39)&(G0>=0& K40 > G0&! (numStone()=4+K39))] ])) ]
2019-10-06 17:13:05,197 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:_S1)[turn(G0)&turn(p2)])&!(exists(G0:Int)[G0>=0&G0 % 4 = 0&numStone() = G0])
 f2:exists(K39:Int)[ (numStone()>=K39&(K39=1|K39=2|K39=3)&turn(p1))&((( (numStone()=0+K39) ) => ( (numStone()=0+K39)&!((!turn(p1))) ))&!(exists(G0:Int)[ exists(K40:Int)[ (numStone()=K40+K39)&(G0>=0& K40 > G0&! (numStone()=4+K39))] ])) ]
2019-10-06 17:13:05,220 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:_S1)[turn(G0)&turn(p2)])&!(exists(G0:Int)[G0>=0&G0 % 4 = 0&numStone() = G0])
 f2:exists(K39:Int)[ (numStone()>=K39&(K39=1|K39=2|K39=3)&turn(p1))&((( (numStone()=0+K39) ) => ( (numStone()=0+K39)&!((!turn(p1))) ))&!(exists(G0:Int)[ exists(K40:Int)[ (numStone()=K40+K39)&(G0>=0& K40 > G0&! (numStone()=4+K39))] ])) ]
2019-10-06 17:13:05,243 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:_S1)[turn(G0)&turn(p2)])&!(exists(G0:Int)[G0>=0&G0 % 4 = 0&numStone() = G0])
 f2:exists(K39:Int)[ (numStone()>=K39&(K39=1|K39=2|K39=3)&turn(p1))&((( (numStone()=0+K39) ) => ( (numStone()=0+K39)&!((!turn(p1))) ))&!(exists(G0:Int)[ exists(K40:Int)[ (numStone()=K40+K39)&(G0>=0& K40 > G0&! (numStone()=4+K39))] ])) ]
2019-10-06 17:13:05,274 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:Int)[G0>=0&numStone() > G0&! numStone() = 4])
 f2:forall(K38:Int)[ numStone()>=K38&(K38=1|K38=2|K38=3)&turn(p2)=>((( (numStone()=0+K38) ) => ( (numStone()=0+K38)&!((!turn(p1))) ))&!(exists(G0:_S1)[(!turn(G0))&(!turn(p2))])&!(exists(G0:Int)[G0>=0&G0 % 4 = 0&(numStone()=G0+K38)])) ]
2019-10-06 17:13:09,635 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:_S1)[turn(G0)&turn(p2)])&!(exists(G0:Int)[G0>=0&numStone() = G0&G0 % 2 = 0&! G0 % 3 = 0])
 f2:exists(K42:Int)[ (numStone()>=K42&(K42=1|K42=2|K42=3)&turn(p1))&((( (numStone()=0+K42) ) => ( (numStone()=0+K42)&!((!turn(p1))) ))&!(exists(G0:Int)[ exists(K43:Int)[ (numStone()=K43+K42)&(G0>=0& K43 > G0&! (numStone()=4+K42))] ])) ]
2019-10-06 17:13:09,671 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:Int)[G0>=0&numStone() > G0&! numStone() = 4])
 f2:forall(K41:Int)[ numStone()>=K41&(K41=1|K41=2|K41=3)&turn(p2)=>((( (numStone()=0+K41) ) => ( (numStone()=0+K41)&!((!turn(p1))) ))&!(exists(G0:_S1)[(!turn(G0))&(!turn(p2))])&!(exists(G0:Int)[G0>=0&(numStone()=G0+K41)&G0 % 2 = 0&! G0 % 3 = 0])) ]
2019-10-06 17:13:30,379 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:( numStone()=0 ) => ( numStone()=0&!(turn(p1)) )
 f2:exists(K45:Int)[ (numStone()>=K45&(K45=1|K45=2|K45=3)&turn(p1))&(( (numStone()=0+K45) ) => ( (numStone()=0+K45)&!((!turn(p1))) )) ]
2019-10-06 17:13:30,404 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:( numStone()=0 ) => ( numStone()=0&!(turn(p1)) )
 f2:forall(K44:Int)[ numStone()>=K44&(K44=1|K44=2|K44=3)&turn(p2)=>(( (numStone()=0+K44) ) => ( (numStone()=0+K44)&!((!turn(p1))) )) ]
2019-10-06 17:13:30,604 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(X1:Int)[X1>=0&numStone() > X1])
 f2:exists(K48:Int)[ (numStone()>=K48&(K48=1|K48=2|K48=3)&turn(p1))&((( (numStone()=0+K48) ) => ( (numStone()=0+K48)&!((!turn(p1))) ))&!(exists(X0:_S1)[(!turn(X0))])) ]
2019-10-06 17:13:30,629 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(X0:_S1)[turn(X0)])
 f2:forall(K46:Int)[ numStone()>=K46&(K46=1|K46=2|K46=3)&turn(p2)=>((( (numStone()=0+K46) ) => ( (numStone()=0+K46)&!((!turn(p1))) ))&!(exists(X1:Int)[ exists(K47:Int)[ (numStone()=K47+K46)&(X1>=0& K47 > X1)] ])) ]
2019-10-06 17:13:30,839 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(X1:Int)[X1>=0&numStone() > X1])&!(exists(X1:Int)[X1>=0&numStone() >= X1])
 f2:exists(K52:Int)[ (numStone()>=K52&(K52=1|K52=2|K52=3)&turn(p1))&((( (numStone()=0+K52) ) => ( (numStone()=0+K52)&!((!turn(p1))) ))&!(exists(X0:_S1)[(!turn(X0))])) ]
2019-10-06 17:13:30,866 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(X0:_S1)[turn(X0)])
 f2:forall(K49:Int)[ numStone()>=K49&(K49=1|K49=2|K49=3)&turn(p2)=>((( (numStone()=0+K49) ) => ( (numStone()=0+K49)&!((!turn(p1))) ))&!(exists(X1:Int)[ exists(K50:Int)[ (numStone()=K50+K49)&(X1>=0& K50 > X1)] ])&!(exists(X1:Int)[ exists(K51:Int)[ (numStone()=K51+K49)&(X1>=0& K51 >= X1)] ])) ]
2019-10-06 17:13:30,885 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:!(numStone()%4=0)&numStone()>0&turn(p1)&!turn(p2)
 f2:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(X1:Int)[X1>=0&numStone() > X1])&!(exists(X1:Int)[X1>=0&numStone() >= X1])
2019-10-06 17:13:31,210 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:Int)[G0>=0&numStone() > G0&! turn(p1)])&!(exists(G0:Int)[G0>=0&G0 = 0&! numStone() > G0])
 f2:exists(K56:Int)[ (numStone()>=K56&(K56=1|K56=2|K56=3)&turn(p1))&((( (numStone()=0+K56) ) => ( (numStone()=0+K56)&!((!turn(p1))) ))&!(exists(G0:Int)[G0>=0&G0 > 0&(numStone()=G0+K56)])) ]
2019-10-06 17:13:31,248 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 0&numStone() = G0])
 f2:forall(K53:Int)[ numStone()>=K53&(K53=1|K53=2|K53=3)&turn(p2)=>((( (numStone()=0+K53) ) => ( (numStone()=0+K53)&!((!turn(p1))) ))&!(exists(G0:Int)[ exists(K54:Int)[ (numStone()=K54+K53)&(G0>=0& K54 > G0&! (!turn(p1)))] ])&!(exists(G0:Int)[ exists(K55:Int)[ (numStone()=K55+K53)&(G0>=0&G0 = 0&! K55 > G0)] ])) ]
2019-10-06 17:13:31,581 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:Int)[G0>=0&numStone() > G0&! turn(p1)])&!(exists(G0:Int)[G0>=0&G0 = 0&! numStone() > G0])&!(! numStone() = 1)
 f2:exists(K60:Int)[ (numStone()>=K60&(K60=1|K60=2|K60=3)&turn(p1))&((( (numStone()=0+K60) ) => ( (numStone()=0+K60)&!((!turn(p1))) ))&!(exists(G0:Int)[G0>=0&G0 > 0&(numStone()=G0+K60)])) ]
2019-10-06 17:13:31,608 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 0&numStone() = G0])
 f2:forall(K57:Int)[ numStone()>=K57&(K57=1|K57=2|K57=3)&turn(p2)=>((( (numStone()=0+K57) ) => ( (numStone()=0+K57)&!((!turn(p1))) ))&!(exists(G0:Int)[ exists(K58:Int)[ (numStone()=K58+K57)&(G0>=0& K58 > G0&! (!turn(p1)))] ])&!(exists(G0:Int)[ exists(K59:Int)[ (numStone()=K59+K57)&(G0>=0&G0 = 0&! K59 > G0)] ])&!(! (numStone()=1+K57))) ]
2019-10-06 17:13:31,631 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:!(numStone()%4=0)&numStone()>0&turn(p1)&!turn(p2)
 f2:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:Int)[G0>=0&numStone() > G0&! turn(p1)])&!(exists(G0:Int)[G0>=0&G0 = 0&! numStone() > G0])&!(! numStone() = 1)
2019-10-06 17:13:31,884 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:Int)[G0>=0&numStone() > G0&! turn(p1)])&!(exists(G0:Int)[G0>=0&G0 = 0&! numStone() > G0])&!(exists(G0:Int)[G0>=0&G0 > 3&numStone() > G0])
 f2:exists(K65:Int)[ (numStone()>=K65&(K65=1|K65=2|K65=3)&turn(p1))&((( (numStone()=0+K65) ) => ( (numStone()=0+K65)&!((!turn(p1))) ))&!(exists(G0:Int)[G0>=0&G0 > 0&(numStone()=G0+K65)])) ]
2019-10-06 17:13:31,933 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 0&numStone() = G0])
 f2:forall(K61:Int)[ numStone()>=K61&(K61=1|K61=2|K61=3)&turn(p2)=>((( (numStone()=0+K61) ) => ( (numStone()=0+K61)&!((!turn(p1))) ))&!(exists(G0:Int)[ exists(K62:Int)[ (numStone()=K62+K61)&(G0>=0& K62 > G0&! (!turn(p1)))] ])&!(exists(G0:Int)[ exists(K63:Int)[ (numStone()=K63+K61)&(G0>=0&G0 = 0&! K63 > G0)] ])&!(exists(G0:Int)[ exists(K64:Int)[ (numStone()=K64+K61)&(G0>=0&G0 > 3& K64 > G0)] ])) ]
2019-10-06 17:13:32,245 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:Int)[G0>=0&numStone() > G0&! turn(p1)])&!(! numStone() = 1&! numStone() = 3)
 f2:exists(K68:Int)[ (numStone()>=K68&(K68=1|K68=2|K68=3)&turn(p1))&((( (numStone()=0+K68) ) => ( (numStone()=0+K68)&!((!turn(p1))) ))&!(exists(G0:Int)[G0>=0&G0 > 0&(numStone()=G0+K68)])) ]
2019-10-06 17:13:32,273 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 0&numStone() = G0])
 f2:forall(K66:Int)[ numStone()>=K66&(K66=1|K66=2|K66=3)&turn(p2)=>((( (numStone()=0+K66) ) => ( (numStone()=0+K66)&!((!turn(p1))) ))&!(exists(G0:Int)[ exists(K67:Int)[ (numStone()=K67+K66)&(G0>=0& K67 > G0&! (!turn(p1)))] ])&!(! (numStone()=1+K66)&! (numStone()=3+K66))) ]
2019-10-06 17:13:32,295 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:!(numStone()%4=0)&numStone()>0&turn(p1)&!turn(p2)
 f2:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:Int)[G0>=0&numStone() > G0&! turn(p1)])&!(! numStone() = 1&! numStone() = 3)
2019-10-06 17:13:32,965 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:Int)[G0>=0&numStone() > G0&! turn(p1)])&!(! numStone() = 3&! numStone() = 1&! numStone() = 2)
 f2:exists(K71:Int)[ (numStone()>=K71&(K71=1|K71=2|K71=3)&turn(p1))&((( (numStone()=0+K71) ) => ( (numStone()=0+K71)&!((!turn(p1))) ))&!(exists(G0:Int)[G0>=0&G0 > 0&(numStone()=G0+K71)])) ]
2019-10-06 17:13:32,995 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 0&numStone() = G0])
 f2:forall(K69:Int)[ numStone()>=K69&(K69=1|K69=2|K69=3)&turn(p2)=>((( (numStone()=0+K69) ) => ( (numStone()=0+K69)&!((!turn(p1))) ))&!(exists(G0:Int)[ exists(K70:Int)[ (numStone()=K70+K69)&(G0>=0& K70 > G0&! (!turn(p1)))] ])&!(! (numStone()=3+K69)&! (numStone()=1+K69)&! (numStone()=2+K69))) ]
2019-10-06 17:13:33,022 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:!(numStone()%4=0)&numStone()>0&turn(p1)&!turn(p2)
 f2:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:Int)[G0>=0&numStone() > G0&! turn(p1)])&!(! numStone() = 3&! numStone() = 1&! numStone() = 2)
2019-10-06 17:13:33,184 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:Int)[G0>=0&numStone() > G0&! turn(p1)])
 f2:exists(K74:Int)[ (numStone()>=K74&(K74=1|K74=2|K74=3)&turn(p1))&((( (numStone()=0+K74) ) => ( (numStone()=0+K74)&!((!turn(p1))) ))&!(exists(G0:Int)[G0>=0&G0 = 1&(numStone()=G0+K74)])) ]
2019-10-06 17:13:33,213 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 1&numStone() = G0])
 f2:forall(K72:Int)[ numStone()>=K72&(K72=1|K72=2|K72=3)&turn(p2)=>((( (numStone()=0+K72) ) => ( (numStone()=0+K72)&!((!turn(p1))) ))&!(exists(G0:Int)[ exists(K73:Int)[ (numStone()=K73+K72)&(G0>=0& K73 > G0&! (!turn(p1)))] ])) ]
2019-10-06 17:13:33,561 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:Int)[G0>=0&numStone() > G0&! turn(p1)])&!(numStone() = 0)
 f2:exists(K77:Int)[ (numStone()>=K77&(K77=1|K77=2|K77=3)&turn(p1))&((( (numStone()=0+K77) ) => ( (numStone()=0+K77)&!((!turn(p1))) ))&!(exists(G0:Int)[G0>=0&G0 = 1&(numStone()=G0+K77)])&!((numStone()=2+K77))) ]
2019-10-06 17:13:33,591 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 1&numStone() = G0])&!(numStone() = 2)
 f2:forall(K75:Int)[ numStone()>=K75&(K75=1|K75=2|K75=3)&turn(p2)=>((( (numStone()=0+K75) ) => ( (numStone()=0+K75)&!((!turn(p1))) ))&!(exists(G0:Int)[ exists(K76:Int)[ (numStone()=K76+K75)&(G0>=0& K76 > G0&! (!turn(p1)))] ])&!((numStone()=0+K75))) ]
2019-10-06 17:13:33,888 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:Int)[G0>=0&numStone() > G0&! turn(p1)])&!(numStone() = 0)
 f2:exists(K80:Int)[ (numStone()>=K80&(K80=1|K80=2|K80=3)&turn(p1))&((( (numStone()=0+K80) ) => ( (numStone()=0+K80)&!((!turn(p1))) ))&!(exists(G0:Int)[G0>=0&G0 = 1&(numStone()=G0+K80)])&!((numStone()=2+K80))&!((numStone()=3+K80))) ]
2019-10-06 17:13:33,918 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 1&numStone() = G0])&!(numStone() = 2)&!(numStone() = 3)
 f2:forall(K78:Int)[ numStone()>=K78&(K78=1|K78=2|K78=3)&turn(p2)=>((( (numStone()=0+K78) ) => ( (numStone()=0+K78)&!((!turn(p1))) ))&!(exists(G0:Int)[ exists(K79:Int)[ (numStone()=K79+K78)&(G0>=0& K79 > G0&! (!turn(p1)))] ])&!((numStone()=0+K78))) ]
2019-10-06 17:13:34,231 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:Int)[G0>=0&numStone() > G0&! turn(p1)])&!(numStone() = 0)&!(numStone() = 4)
 f2:exists(K83:Int)[ (numStone()>=K83&(K83=1|K83=2|K83=3)&turn(p1))&((( (numStone()=0+K83) ) => ( (numStone()=0+K83)&!((!turn(p1))) ))&!(exists(G0:Int)[G0>=0&G0 = 1&(numStone()=G0+K83)])&!((numStone()=2+K83))&!((numStone()=3+K83))) ]
2019-10-06 17:13:34,257 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 1&numStone() = G0])&!(numStone() = 2)&!(numStone() = 3)
 f2:forall(K81:Int)[ numStone()>=K81&(K81=1|K81=2|K81=3)&turn(p2)=>((( (numStone()=0+K81) ) => ( (numStone()=0+K81)&!((!turn(p1))) ))&!(exists(G0:Int)[ exists(K82:Int)[ (numStone()=K82+K81)&(G0>=0& K82 > G0&! (!turn(p1)))] ])&!((numStone()=0+K81))&!((numStone()=4+K81))) ]
2019-10-06 17:13:34,595 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:Int)[G0>=0&numStone() > G0&! turn(p1)])&!(numStone() = 0)&!(numStone() = 4)
 f2:exists(K86:Int)[ (numStone()>=K86&(K86=1|K86=2|K86=3)&turn(p1))&((( (numStone()=0+K86) ) => ( (numStone()=0+K86)&!((!turn(p1))) ))&!((numStone()=2+K86))&!(exists(G0:Int)[G0>=0&G0 % 2 = 1&(numStone()=G0+K86)])) ]
2019-10-06 17:13:34,628 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(numStone() = 2)&!(exists(G0:Int)[G0>=0&G0 % 2 = 1&numStone() = G0])
 f2:forall(K84:Int)[ numStone()>=K84&(K84=1|K84=2|K84=3)&turn(p2)=>((( (numStone()=0+K84) ) => ( (numStone()=0+K84)&!((!turn(p1))) ))&!(exists(G0:Int)[ exists(K85:Int)[ (numStone()=K85+K84)&(G0>=0& K85 > G0&! (!turn(p1)))] ])&!((numStone()=0+K84))&!((numStone()=4+K84))) ]
2019-10-06 17:13:36,386 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:Int)[G0>=0&numStone() > G0&! turn(p1)])&!(numStone() = 0)&!(numStone() = 4)
 f2:exists(K89:Int)[ (numStone()>=K89&(K89=1|K89=2|K89=3)&turn(p1))&((( (numStone()=0+K89) ) => ( (numStone()=0+K89)&!((!turn(p1))) ))&!(exists(G0:Int)[G0>=0&G0 % 2 = 1&(numStone()=G0+K89)])&!(exists(G0:Int)[G0>=0&G0 % 4 = 2&(numStone()=G0+K89)])) ]
2019-10-06 17:13:36,500 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:Int)[G0>=0&numStone() > G0&! turn(p1)])&!(numStone() = 0)&!(numStone() = 4)
 f2:exists(K89:Int)[ (numStone()>=K89&(K89=1|K89=2|K89=3)&turn(p1))&((( (numStone()=0+K89) ) => ( (numStone()=0+K89)&!((!turn(p1))) ))&!(exists(G0:Int)[G0>=0&G0 % 2 = 1&(numStone()=G0+K89)])&!(exists(G0:Int)[G0>=0&G0 % 4 = 2&(numStone()=G0+K89)])) ]
2019-10-06 17:13:36,525 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:Int)[G0>=0&numStone() > G0&! turn(p1)])&!(numStone() = 0)&!(numStone() = 4)
 f2:exists(K89:Int)[ (numStone()>=K89&(K89=1|K89=2|K89=3)&turn(p1))&((( (numStone()=0+K89) ) => ( (numStone()=0+K89)&!((!turn(p1))) ))&!(exists(G0:Int)[G0>=0&G0 % 2 = 1&(numStone()=G0+K89)])&!(exists(G0:Int)[G0>=0&G0 % 4 = 2&(numStone()=G0+K89)])) ]
2019-10-06 17:13:36,546 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:Int)[G0>=0&numStone() > G0&! turn(p1)])&!(numStone() = 0)&!(numStone() = 4)
 f2:exists(K89:Int)[ (numStone()>=K89&(K89=1|K89=2|K89=3)&turn(p1))&((( (numStone()=0+K89) ) => ( (numStone()=0+K89)&!((!turn(p1))) ))&!(exists(G0:Int)[G0>=0&G0 % 2 = 1&(numStone()=G0+K89)])&!(exists(G0:Int)[G0>=0&G0 % 4 = 2&(numStone()=G0+K89)])) ]
2019-10-06 17:13:41,248 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:Int)[G0>=0&numStone() > G0&! turn(p1)])&!(numStone() = 0)&!(numStone() = 4)
 f2:exists(K89:Int)[ (numStone()>=K89&(K89=1|K89=2|K89=3)&turn(p1))&((( (numStone()=0+K89) ) => ( (numStone()=0+K89)&!((!turn(p1))) ))&!(exists(G0:Int)[G0>=0&G0 % 2 = 1&(numStone()=G0+K89)])&!(exists(G0:Int)[G0>=0&G0 % 4 = 2&(numStone()=G0+K89)])) ]
2019-10-06 17:13:45,633 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:Int)[G0>=0&numStone() > G0&! turn(p1)])&!(numStone() = 0)&!(numStone() = 4)
 f2:exists(K89:Int)[ (numStone()>=K89&(K89=1|K89=2|K89=3)&turn(p1))&((( (numStone()=0+K89) ) => ( (numStone()=0+K89)&!((!turn(p1))) ))&!(exists(G0:Int)[G0>=0&G0 % 2 = 1&(numStone()=G0+K89)])&!(exists(G0:Int)[G0>=0&G0 % 4 = 2&(numStone()=G0+K89)])) ]
2019-10-06 17:13:45,688 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 % 2 = 1&numStone() = G0])&!(exists(G0:Int)[G0>=0&G0 % 4 = 2&numStone() = G0])
 f2:forall(K87:Int)[ numStone()>=K87&(K87=1|K87=2|K87=3)&turn(p2)=>((( (numStone()=0+K87) ) => ( (numStone()=0+K87)&!((!turn(p1))) ))&!(exists(G0:Int)[ exists(K88:Int)[ (numStone()=K88+K87)&(G0>=0& K88 > G0&! (!turn(p1)))] ])&!((numStone()=0+K87))&!((numStone()=4+K87))) ]
2019-10-06 17:13:46,108 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:Int)[G0>=0&numStone() > G0&! turn(p1)])&!(numStone() = 0)&!(numStone() = 4)&!(exists(G0:Int)[G0>=0&G0 > 4&numStone() > G0])
 f2:exists(K93:Int)[ (numStone()>=K93&(K93=1|K93=2|K93=3)&turn(p1))&((( (numStone()=0+K93) ) => ( (numStone()=0+K93)&!((!turn(p1))) ))&!(exists(G0:Int)[G0>=0&G0 % 2 = 1&(numStone()=G0+K93)])&!(exists(G0:Int)[G0>=0&G0 % 4 = 2&(numStone()=G0+K93)])) ]
2019-10-06 17:13:56,631 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 % 2 = 1&numStone() = G0])&!(exists(G0:Int)[G0>=0&G0 % 4 = 2&numStone() = G0])
 f2:forall(K90:Int)[ numStone()>=K90&(K90=1|K90=2|K90=3)&turn(p2)=>((( (numStone()=0+K90) ) => ( (numStone()=0+K90)&!((!turn(p1))) ))&!(exists(G0:Int)[ exists(K91:Int)[ (numStone()=K91+K90)&(G0>=0& K91 > G0&! (!turn(p1)))] ])&!((numStone()=0+K90))&!((numStone()=4+K90))&!(exists(G0:Int)[ exists(K92:Int)[ (numStone()=K92+K90)&(G0>=0&G0 > 4& K92 > G0)] ])) ]
2019-10-06 17:49:53,512 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:( numStone()=0 ) => ( numStone()=0&!(turn(p1)) )
 f2:exists(K13:Int)[ (numStone()>=K13&(K13=1|K13=2|K13=3)&turn(p1))&(( (numStone()=0+K13) ) => ( (numStone()=0+K13)&!((!turn(p1))) )) ]
2019-10-06 17:49:53,544 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:( numStone()=0 ) => ( numStone()=0&!(turn(p1)) )
 f2:forall(K12:Int)[ numStone()>=K12&(K12=1|K12=2|K12=3)&turn(p2)=>(( (numStone()=0+K12) ) => ( (numStone()=0+K12)&!((!turn(p1))) )) ]
2019-10-06 17:49:53,839 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(X0:_S1)[turn(X0)])
 f2:exists(K15:Int)[ (numStone()>=K15&(K15=1|K15=2|K15=3)&turn(p1))&((( (numStone()=0+K15) ) => ( (numStone()=0+K15)&!((!turn(p1))) ))&!(exists(X0:_S1)[(!turn(X0))])) ]
2019-10-06 17:49:53,862 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(X0:_S1)[turn(X0)])
 f2:forall(K14:Int)[ numStone()>=K14&(K14=1|K14=2|K14=3)&turn(p2)=>((( (numStone()=0+K14) ) => ( (numStone()=0+K14)&!((!turn(p1))) ))&!(exists(X0:_S1)[(!turn(X0))])) ]
2019-10-06 17:49:53,882 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:!(numStone()%4=0)&numStone()>0&turn(p1)&!turn(p2)
 f2:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(X0:_S1)[turn(X0)])
2019-10-06 17:49:54,315 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:_S1)[turn(G0)&turn(p2)])
 f2:exists(K17:Int)[ (numStone()>=K17&(K17=1|K17=2|K17=3)&turn(p1))&((( (numStone()=0+K17) ) => ( (numStone()=0+K17)&!((!turn(p1))) ))&!(exists(G0:Int)[G0>=0&G0 > 0&(numStone()=G0+K17)])) ]
2019-10-06 17:49:54,367 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 0&numStone() = G0])
 f2:forall(K16:Int)[ numStone()>=K16&(K16=1|K16=2|K16=3)&turn(p2)=>((( (numStone()=0+K16) ) => ( (numStone()=0+K16)&!((!turn(p1))) ))&!(exists(G0:_S1)[(!turn(G0))&(!turn(p2))])) ]
2019-10-06 17:49:54,706 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:_S1)[turn(G0)&turn(p2)])&!(! numStone() = 1)
 f2:exists(K19:Int)[ (numStone()>=K19&(K19=1|K19=2|K19=3)&turn(p1))&((( (numStone()=0+K19) ) => ( (numStone()=0+K19)&!((!turn(p1))) ))&!(exists(G0:Int)[G0>=0&G0 > 0&(numStone()=G0+K19)])) ]
2019-10-06 17:49:54,745 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 0&numStone() = G0])
 f2:forall(K18:Int)[ numStone()>=K18&(K18=1|K18=2|K18=3)&turn(p2)=>((( (numStone()=0+K18) ) => ( (numStone()=0+K18)&!((!turn(p1))) ))&!(exists(G0:_S1)[(!turn(G0))&(!turn(p2))])&!(! (numStone()=1+K18))) ]
2019-10-06 17:49:54,776 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:!(numStone()%4=0)&numStone()>0&turn(p1)&!turn(p2)
 f2:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:_S1)[turn(G0)&turn(p2)])&!(! numStone() = 1)
2019-10-06 17:49:55,068 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:_S1)[turn(G0)&turn(p2)])&!(exists(G0:Int)[G0>=0&G0 > 3&numStone() = G0])
 f2:exists(K21:Int)[ (numStone()>=K21&(K21=1|K21=2|K21=3)&turn(p1))&((( (numStone()=0+K21) ) => ( (numStone()=0+K21)&!((!turn(p1))) ))&!(exists(G0:Int)[G0>=0&G0 > 0&(numStone()=G0+K21)])) ]
2019-10-06 17:49:55,115 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 0&numStone() = G0])
 f2:forall(K20:Int)[ numStone()>=K20&(K20=1|K20=2|K20=3)&turn(p2)=>((( (numStone()=0+K20) ) => ( (numStone()=0+K20)&!((!turn(p1))) ))&!(exists(G0:_S1)[(!turn(G0))&(!turn(p2))])&!(exists(G0:Int)[G0>=0&G0 > 3&(numStone()=G0+K20)])) ]
2019-10-06 17:49:55,151 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:!(numStone()%4=0)&numStone()>0&turn(p1)&!turn(p2)
 f2:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:_S1)[turn(G0)&turn(p2)])&!(exists(G0:Int)[G0>=0&G0 > 3&numStone() = G0])
2019-10-06 17:49:55,344 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:_S1)[turn(G0)&turn(p2)])&!(exists(G0:Int)[G0>=0&G0 > 4&numStone() > G0])
 f2:exists(K24:Int)[ (numStone()>=K24&(K24=1|K24=2|K24=3)&turn(p1))&((( (numStone()=0+K24) ) => ( (numStone()=0+K24)&!((!turn(p1))) ))&!(exists(G0:Int)[G0>=0&G0 = 1&(numStone()=G0+K24)])) ]
2019-10-06 17:49:55,374 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 1&numStone() = G0])
 f2:forall(K22:Int)[ numStone()>=K22&(K22=1|K22=2|K22=3)&turn(p2)=>((( (numStone()=0+K22) ) => ( (numStone()=0+K22)&!((!turn(p1))) ))&!(exists(G0:_S1)[(!turn(G0))&(!turn(p2))])&!(exists(G0:Int)[ exists(K23:Int)[ (numStone()=K23+K22)&(G0>=0&G0 > 4& K23 > G0)] ])) ]
2019-10-06 17:49:55,650 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:_S1)[turn(G0)&turn(p2)])&!(exists(G0:Int)[G0>=0&G0 > 4&numStone() > G0])
 f2:exists(K27:Int)[ (numStone()>=K27&(K27=1|K27=2|K27=3)&turn(p1))&((( (numStone()=0+K27) ) => ( (numStone()=0+K27)&!((!turn(p1))) ))&!(exists(G0:Int)[G0>=0&G0 % 2 = 1&(numStone()=G0+K27)])) ]
2019-10-06 17:49:55,685 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 % 2 = 1&numStone() = G0])
 f2:forall(K25:Int)[ numStone()>=K25&(K25=1|K25=2|K25=3)&turn(p2)=>((( (numStone()=0+K25) ) => ( (numStone()=0+K25)&!((!turn(p1))) ))&!(exists(G0:_S1)[(!turn(G0))&(!turn(p2))])&!(exists(G0:Int)[ exists(K26:Int)[ (numStone()=K26+K25)&(G0>=0&G0 > 4& K26 > G0)] ])) ]
2019-10-06 17:49:57,987 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:_S1)[turn(G0)&turn(p2)])&!(exists(G0:Int)[G0>=0&G0 > 4&numStone() > G0])
 f2:exists(K30:Int)[ (numStone()>=K30&(K30=1|K30=2|K30=3)&turn(p1))&((( (numStone()=0+K30) ) => ( (numStone()=0+K30)&!((!turn(p1))) ))&!(exists(G0:Int)[G0>=0&G0 % 2 = 1&(numStone()=G0+K30)])&!((numStone()=2+K30))) ]
2019-10-06 17:49:58,026 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 % 2 = 1&numStone() = G0])&!(numStone() = 2)
 f2:forall(K28:Int)[ numStone()>=K28&(K28=1|K28=2|K28=3)&turn(p2)=>((( (numStone()=0+K28) ) => ( (numStone()=0+K28)&!((!turn(p1))) ))&!(exists(G0:_S1)[(!turn(G0))&(!turn(p2))])&!(exists(G0:Int)[ exists(K29:Int)[ (numStone()=K29+K28)&(G0>=0&G0 > 4& K29 > G0)] ])) ]
2019-10-06 17:49:58,622 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:_S1)[turn(G0)&turn(p2)])&!(exists(G0:Int)[G0>=0&G0 > 4&numStone() > G0])&!(numStone() = 4)
 f2:exists(K33:Int)[ (numStone()>=K33&(K33=1|K33=2|K33=3)&turn(p1))&((( (numStone()=0+K33) ) => ( (numStone()=0+K33)&!((!turn(p1))) ))&!(exists(G0:Int)[ exists(K34:Int)[ (numStone()=K34+K33)&(G0>=0& K34 > G0&! (numStone()=4+K33))] ])) ]
2019-10-06 17:49:58,654 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:Int)[G0>=0&numStone() > G0&! numStone() = 4])
 f2:forall(K31:Int)[ numStone()>=K31&(K31=1|K31=2|K31=3)&turn(p2)=>((( (numStone()=0+K31) ) => ( (numStone()=0+K31)&!((!turn(p1))) ))&!(exists(G0:_S1)[(!turn(G0))&(!turn(p2))])&!(exists(G0:Int)[ exists(K32:Int)[ (numStone()=K32+K31)&(G0>=0&G0 > 4& K32 > G0)] ])&!((numStone()=4+K31))) ]
2019-10-06 17:49:58,679 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:!(numStone()%4=0)&numStone()>0&turn(p1)&!turn(p2)
 f2:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:_S1)[turn(G0)&turn(p2)])&!(exists(G0:Int)[G0>=0&G0 > 4&numStone() > G0])&!(numStone() = 4)
2019-10-06 17:49:58,714 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:!(numStone()%4=0)&numStone()>0&turn(p1)&!turn(p2)
 f2:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:_S1)[turn(G0)&turn(p2)])&!(exists(G0:Int)[G0>=0&G0 > 4&numStone() > G0])&!(numStone() = 4)
2019-10-06 17:49:58,733 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:!(numStone()%4=0)&numStone()>0&turn(p1)&!turn(p2)
 f2:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:_S1)[turn(G0)&turn(p2)])&!(exists(G0:Int)[G0>=0&G0 > 4&numStone() > G0])&!(numStone() = 4)
2019-10-06 17:49:58,752 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:!(numStone()%4=0)&numStone()>0&turn(p1)&!turn(p2)
 f2:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:_S1)[turn(G0)&turn(p2)])&!(exists(G0:Int)[G0>=0&G0 > 4&numStone() > G0])&!(numStone() = 4)
2019-10-06 17:49:58,873 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:_S1)[turn(G0)&turn(p2)])&!(numStone() = 4)
 f2:exists(K36:Int)[ (numStone()>=K36&(K36=1|K36=2|K36=3)&turn(p1))&((( (numStone()=0+K36) ) => ( (numStone()=0+K36)&!((!turn(p1))) ))&!(exists(G0:Int)[ exists(K37:Int)[ (numStone()=K37+K36)&(G0>=0& K37 > G0&! (numStone()=4+K36))] ])) ]
2019-10-06 17:49:58,927 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:Int)[G0>=0&numStone() > G0&! numStone() = 4])
 f2:forall(K35:Int)[ numStone()>=K35&(K35=1|K35=2|K35=3)&turn(p2)=>((( (numStone()=0+K35) ) => ( (numStone()=0+K35)&!((!turn(p1))) ))&!(exists(G0:_S1)[(!turn(G0))&(!turn(p2))])&!((numStone()=4+K35))) ]
2019-10-06 17:49:59,531 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:_S1)[turn(G0)&turn(p2)])&!(exists(G0:Int)[G0>=0&G0 % 4 = 0&numStone() = G0])
 f2:exists(K39:Int)[ (numStone()>=K39&(K39=1|K39=2|K39=3)&turn(p1))&((( (numStone()=0+K39) ) => ( (numStone()=0+K39)&!((!turn(p1))) ))&!(exists(G0:Int)[ exists(K40:Int)[ (numStone()=K40+K39)&(G0>=0& K40 > G0&! (numStone()=4+K39))] ])) ]
2019-10-06 17:49:59,566 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:_S1)[turn(G0)&turn(p2)])&!(exists(G0:Int)[G0>=0&G0 % 4 = 0&numStone() = G0])
 f2:exists(K39:Int)[ (numStone()>=K39&(K39=1|K39=2|K39=3)&turn(p1))&((( (numStone()=0+K39) ) => ( (numStone()=0+K39)&!((!turn(p1))) ))&!(exists(G0:Int)[ exists(K40:Int)[ (numStone()=K40+K39)&(G0>=0& K40 > G0&! (numStone()=4+K39))] ])) ]
2019-10-06 17:49:59,586 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:_S1)[turn(G0)&turn(p2)])&!(exists(G0:Int)[G0>=0&G0 % 4 = 0&numStone() = G0])
 f2:exists(K39:Int)[ (numStone()>=K39&(K39=1|K39=2|K39=3)&turn(p1))&((( (numStone()=0+K39) ) => ( (numStone()=0+K39)&!((!turn(p1))) ))&!(exists(G0:Int)[ exists(K40:Int)[ (numStone()=K40+K39)&(G0>=0& K40 > G0&! (numStone()=4+K39))] ])) ]
2019-10-06 17:49:59,607 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:_S1)[turn(G0)&turn(p2)])&!(exists(G0:Int)[G0>=0&G0 % 4 = 0&numStone() = G0])
 f2:exists(K39:Int)[ (numStone()>=K39&(K39=1|K39=2|K39=3)&turn(p1))&((( (numStone()=0+K39) ) => ( (numStone()=0+K39)&!((!turn(p1))) ))&!(exists(G0:Int)[ exists(K40:Int)[ (numStone()=K40+K39)&(G0>=0& K40 > G0&! (numStone()=4+K39))] ])) ]
2019-10-06 17:49:59,629 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:_S1)[turn(G0)&turn(p2)])&!(exists(G0:Int)[G0>=0&G0 % 4 = 0&numStone() = G0])
 f2:exists(K39:Int)[ (numStone()>=K39&(K39=1|K39=2|K39=3)&turn(p1))&((( (numStone()=0+K39) ) => ( (numStone()=0+K39)&!((!turn(p1))) ))&!(exists(G0:Int)[ exists(K40:Int)[ (numStone()=K40+K39)&(G0>=0& K40 > G0&! (numStone()=4+K39))] ])) ]
2019-10-06 17:49:59,662 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:_S1)[turn(G0)&turn(p2)])&!(exists(G0:Int)[G0>=0&G0 % 4 = 0&numStone() = G0])
 f2:exists(K39:Int)[ (numStone()>=K39&(K39=1|K39=2|K39=3)&turn(p1))&((( (numStone()=0+K39) ) => ( (numStone()=0+K39)&!((!turn(p1))) ))&!(exists(G0:Int)[ exists(K40:Int)[ (numStone()=K40+K39)&(G0>=0& K40 > G0&! (numStone()=4+K39))] ])) ]
2019-10-06 17:49:59,703 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:Int)[G0>=0&numStone() > G0&! numStone() = 4])
 f2:forall(K38:Int)[ numStone()>=K38&(K38=1|K38=2|K38=3)&turn(p2)=>((( (numStone()=0+K38) ) => ( (numStone()=0+K38)&!((!turn(p1))) ))&!(exists(G0:_S1)[(!turn(G0))&(!turn(p2))])&!(exists(G0:Int)[G0>=0&G0 % 4 = 0&(numStone()=G0+K38)])) ]
2019-10-06 17:50:04,277 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:_S1)[turn(G0)&turn(p2)])&!(exists(G0:Int)[G0>=0&numStone() = G0&G0 % 2 = 0&! G0 % 3 = 0])
 f2:exists(K42:Int)[ (numStone()>=K42&(K42=1|K42=2|K42=3)&turn(p1))&((( (numStone()=0+K42) ) => ( (numStone()=0+K42)&!((!turn(p1))) ))&!(exists(G0:Int)[ exists(K43:Int)[ (numStone()=K43+K42)&(G0>=0& K43 > G0&! (numStone()=4+K42))] ])) ]
2019-10-06 17:50:04,318 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:Int)[G0>=0&numStone() > G0&! numStone() = 4])
 f2:forall(K41:Int)[ numStone()>=K41&(K41=1|K41=2|K41=3)&turn(p2)=>((( (numStone()=0+K41) ) => ( (numStone()=0+K41)&!((!turn(p1))) ))&!(exists(G0:_S1)[(!turn(G0))&(!turn(p2))])&!(exists(G0:Int)[G0>=0&(numStone()=G0+K41)&G0 % 2 = 0&! G0 % 3 = 0])) ]
2019-10-06 17:50:25,260 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:( numStone()=0 ) => ( numStone()=0&!(turn(p1)) )
 f2:exists(K45:Int)[ (numStone()>=K45&(K45=1|K45=2|K45=3)&turn(p1))&(( (numStone()=0+K45) ) => ( (numStone()=0+K45)&!((!turn(p1))) )) ]
2019-10-06 17:50:25,288 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:( numStone()=0 ) => ( numStone()=0&!(turn(p1)) )
 f2:forall(K44:Int)[ numStone()>=K44&(K44=1|K44=2|K44=3)&turn(p2)=>(( (numStone()=0+K44) ) => ( (numStone()=0+K44)&!((!turn(p1))) )) ]
2019-10-06 17:50:25,487 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(X1:Int)[X1>=0&numStone() > X1])
 f2:exists(K48:Int)[ (numStone()>=K48&(K48=1|K48=2|K48=3)&turn(p1))&((( (numStone()=0+K48) ) => ( (numStone()=0+K48)&!((!turn(p1))) ))&!(exists(X0:_S1)[(!turn(X0))])) ]
2019-10-06 17:50:25,514 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(X0:_S1)[turn(X0)])
 f2:forall(K46:Int)[ numStone()>=K46&(K46=1|K46=2|K46=3)&turn(p2)=>((( (numStone()=0+K46) ) => ( (numStone()=0+K46)&!((!turn(p1))) ))&!(exists(X1:Int)[ exists(K47:Int)[ (numStone()=K47+K46)&(X1>=0& K47 > X1)] ])) ]
2019-10-06 17:50:25,736 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(X1:Int)[X1>=0&numStone() > X1])&!(exists(X1:Int)[X1>=0&numStone() >= X1])
 f2:exists(K52:Int)[ (numStone()>=K52&(K52=1|K52=2|K52=3)&turn(p1))&((( (numStone()=0+K52) ) => ( (numStone()=0+K52)&!((!turn(p1))) ))&!(exists(X0:_S1)[(!turn(X0))])) ]
2019-10-06 17:50:25,764 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(X0:_S1)[turn(X0)])
 f2:forall(K49:Int)[ numStone()>=K49&(K49=1|K49=2|K49=3)&turn(p2)=>((( (numStone()=0+K49) ) => ( (numStone()=0+K49)&!((!turn(p1))) ))&!(exists(X1:Int)[ exists(K50:Int)[ (numStone()=K50+K49)&(X1>=0& K50 > X1)] ])&!(exists(X1:Int)[ exists(K51:Int)[ (numStone()=K51+K49)&(X1>=0& K51 >= X1)] ])) ]
2019-10-06 17:50:25,785 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:!(numStone()%4=0)&numStone()>0&turn(p1)&!turn(p2)
 f2:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(X1:Int)[X1>=0&numStone() > X1])&!(exists(X1:Int)[X1>=0&numStone() >= X1])
2019-10-06 17:50:26,074 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:Int)[G0>=0&numStone() > G0&! turn(p1)])&!(exists(G0:Int)[G0>=0&G0 = 0&! numStone() > G0])
 f2:exists(K56:Int)[ (numStone()>=K56&(K56=1|K56=2|K56=3)&turn(p1))&((( (numStone()=0+K56) ) => ( (numStone()=0+K56)&!((!turn(p1))) ))&!(exists(G0:Int)[G0>=0&G0 > 0&(numStone()=G0+K56)])) ]
2019-10-06 17:50:26,109 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 0&numStone() = G0])
 f2:forall(K53:Int)[ numStone()>=K53&(K53=1|K53=2|K53=3)&turn(p2)=>((( (numStone()=0+K53) ) => ( (numStone()=0+K53)&!((!turn(p1))) ))&!(exists(G0:Int)[ exists(K54:Int)[ (numStone()=K54+K53)&(G0>=0& K54 > G0&! (!turn(p1)))] ])&!(exists(G0:Int)[ exists(K55:Int)[ (numStone()=K55+K53)&(G0>=0&G0 = 0&! K55 > G0)] ])) ]
2019-10-06 17:50:26,439 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:Int)[G0>=0&numStone() > G0&! turn(p1)])&!(exists(G0:Int)[G0>=0&G0 = 0&! numStone() > G0])&!(! numStone() = 1)
 f2:exists(K60:Int)[ (numStone()>=K60&(K60=1|K60=2|K60=3)&turn(p1))&((( (numStone()=0+K60) ) => ( (numStone()=0+K60)&!((!turn(p1))) ))&!(exists(G0:Int)[G0>=0&G0 > 0&(numStone()=G0+K60)])) ]
2019-10-06 17:50:26,464 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 0&numStone() = G0])
 f2:forall(K57:Int)[ numStone()>=K57&(K57=1|K57=2|K57=3)&turn(p2)=>((( (numStone()=0+K57) ) => ( (numStone()=0+K57)&!((!turn(p1))) ))&!(exists(G0:Int)[ exists(K58:Int)[ (numStone()=K58+K57)&(G0>=0& K58 > G0&! (!turn(p1)))] ])&!(exists(G0:Int)[ exists(K59:Int)[ (numStone()=K59+K57)&(G0>=0&G0 = 0&! K59 > G0)] ])&!(! (numStone()=1+K57))) ]
2019-10-06 17:50:26,485 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:!(numStone()%4=0)&numStone()>0&turn(p1)&!turn(p2)
 f2:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:Int)[G0>=0&numStone() > G0&! turn(p1)])&!(exists(G0:Int)[G0>=0&G0 = 0&! numStone() > G0])&!(! numStone() = 1)
2019-10-06 17:50:26,742 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:Int)[G0>=0&numStone() > G0&! turn(p1)])&!(exists(G0:Int)[G0>=0&G0 = 0&! numStone() > G0])&!(exists(G0:Int)[G0>=0&G0 > 3&numStone() > G0])
 f2:exists(K65:Int)[ (numStone()>=K65&(K65=1|K65=2|K65=3)&turn(p1))&((( (numStone()=0+K65) ) => ( (numStone()=0+K65)&!((!turn(p1))) ))&!(exists(G0:Int)[G0>=0&G0 > 0&(numStone()=G0+K65)])) ]
2019-10-06 17:50:26,786 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 0&numStone() = G0])
 f2:forall(K61:Int)[ numStone()>=K61&(K61=1|K61=2|K61=3)&turn(p2)=>((( (numStone()=0+K61) ) => ( (numStone()=0+K61)&!((!turn(p1))) ))&!(exists(G0:Int)[ exists(K62:Int)[ (numStone()=K62+K61)&(G0>=0& K62 > G0&! (!turn(p1)))] ])&!(exists(G0:Int)[ exists(K63:Int)[ (numStone()=K63+K61)&(G0>=0&G0 = 0&! K63 > G0)] ])&!(exists(G0:Int)[ exists(K64:Int)[ (numStone()=K64+K61)&(G0>=0&G0 > 3& K64 > G0)] ])) ]
2019-10-06 17:50:27,105 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:Int)[G0>=0&numStone() > G0&! turn(p1)])&!(! numStone() = 1&! numStone() = 3)
 f2:exists(K68:Int)[ (numStone()>=K68&(K68=1|K68=2|K68=3)&turn(p1))&((( (numStone()=0+K68) ) => ( (numStone()=0+K68)&!((!turn(p1))) ))&!(exists(G0:Int)[G0>=0&G0 > 0&(numStone()=G0+K68)])) ]
2019-10-06 17:50:27,134 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 0&numStone() = G0])
 f2:forall(K66:Int)[ numStone()>=K66&(K66=1|K66=2|K66=3)&turn(p2)=>((( (numStone()=0+K66) ) => ( (numStone()=0+K66)&!((!turn(p1))) ))&!(exists(G0:Int)[ exists(K67:Int)[ (numStone()=K67+K66)&(G0>=0& K67 > G0&! (!turn(p1)))] ])&!(! (numStone()=1+K66)&! (numStone()=3+K66))) ]
2019-10-06 17:50:27,156 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:!(numStone()%4=0)&numStone()>0&turn(p1)&!turn(p2)
 f2:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:Int)[G0>=0&numStone() > G0&! turn(p1)])&!(! numStone() = 1&! numStone() = 3)
2019-10-06 17:50:27,819 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:Int)[G0>=0&numStone() > G0&! turn(p1)])&!(! numStone() = 3&! numStone() = 1&! numStone() = 2)
 f2:exists(K71:Int)[ (numStone()>=K71&(K71=1|K71=2|K71=3)&turn(p1))&((( (numStone()=0+K71) ) => ( (numStone()=0+K71)&!((!turn(p1))) ))&!(exists(G0:Int)[G0>=0&G0 > 0&(numStone()=G0+K71)])) ]
2019-10-06 17:50:27,851 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 0&numStone() = G0])
 f2:forall(K69:Int)[ numStone()>=K69&(K69=1|K69=2|K69=3)&turn(p2)=>((( (numStone()=0+K69) ) => ( (numStone()=0+K69)&!((!turn(p1))) ))&!(exists(G0:Int)[ exists(K70:Int)[ (numStone()=K70+K69)&(G0>=0& K70 > G0&! (!turn(p1)))] ])&!(! (numStone()=3+K69)&! (numStone()=1+K69)&! (numStone()=2+K69))) ]
2019-10-06 17:50:27,874 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:!(numStone()%4=0)&numStone()>0&turn(p1)&!turn(p2)
 f2:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:Int)[G0>=0&numStone() > G0&! turn(p1)])&!(! numStone() = 3&! numStone() = 1&! numStone() = 2)
2019-10-06 17:50:28,040 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:Int)[G0>=0&numStone() > G0&! turn(p1)])
 f2:exists(K74:Int)[ (numStone()>=K74&(K74=1|K74=2|K74=3)&turn(p1))&((( (numStone()=0+K74) ) => ( (numStone()=0+K74)&!((!turn(p1))) ))&!(exists(G0:Int)[G0>=0&G0 = 1&(numStone()=G0+K74)])) ]
2019-10-06 17:50:28,069 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 1&numStone() = G0])
 f2:forall(K72:Int)[ numStone()>=K72&(K72=1|K72=2|K72=3)&turn(p2)=>((( (numStone()=0+K72) ) => ( (numStone()=0+K72)&!((!turn(p1))) ))&!(exists(G0:Int)[ exists(K73:Int)[ (numStone()=K73+K72)&(G0>=0& K73 > G0&! (!turn(p1)))] ])) ]
2019-10-06 17:50:28,426 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:Int)[G0>=0&numStone() > G0&! turn(p1)])&!(numStone() = 0)
 f2:exists(K77:Int)[ (numStone()>=K77&(K77=1|K77=2|K77=3)&turn(p1))&((( (numStone()=0+K77) ) => ( (numStone()=0+K77)&!((!turn(p1))) ))&!(exists(G0:Int)[G0>=0&G0 = 1&(numStone()=G0+K77)])&!((numStone()=2+K77))) ]
2019-10-06 17:50:28,463 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 1&numStone() = G0])&!(numStone() = 2)
 f2:forall(K75:Int)[ numStone()>=K75&(K75=1|K75=2|K75=3)&turn(p2)=>((( (numStone()=0+K75) ) => ( (numStone()=0+K75)&!((!turn(p1))) ))&!(exists(G0:Int)[ exists(K76:Int)[ (numStone()=K76+K75)&(G0>=0& K76 > G0&! (!turn(p1)))] ])&!((numStone()=0+K75))) ]
2019-10-06 17:50:28,771 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:Int)[G0>=0&numStone() > G0&! turn(p1)])&!(numStone() = 0)
 f2:exists(K80:Int)[ (numStone()>=K80&(K80=1|K80=2|K80=3)&turn(p1))&((( (numStone()=0+K80) ) => ( (numStone()=0+K80)&!((!turn(p1))) ))&!(exists(G0:Int)[G0>=0&G0 = 1&(numStone()=G0+K80)])&!((numStone()=2+K80))&!((numStone()=3+K80))) ]
2019-10-06 17:50:28,803 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 1&numStone() = G0])&!(numStone() = 2)&!(numStone() = 3)
 f2:forall(K78:Int)[ numStone()>=K78&(K78=1|K78=2|K78=3)&turn(p2)=>((( (numStone()=0+K78) ) => ( (numStone()=0+K78)&!((!turn(p1))) ))&!(exists(G0:Int)[ exists(K79:Int)[ (numStone()=K79+K78)&(G0>=0& K79 > G0&! (!turn(p1)))] ])&!((numStone()=0+K78))) ]
2019-10-06 17:50:29,108 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:Int)[G0>=0&numStone() > G0&! turn(p1)])&!(numStone() = 0)&!(numStone() = 4)
 f2:exists(K83:Int)[ (numStone()>=K83&(K83=1|K83=2|K83=3)&turn(p1))&((( (numStone()=0+K83) ) => ( (numStone()=0+K83)&!((!turn(p1))) ))&!(exists(G0:Int)[G0>=0&G0 = 1&(numStone()=G0+K83)])&!((numStone()=2+K83))&!((numStone()=3+K83))) ]
2019-10-06 17:50:29,137 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 1&numStone() = G0])&!(numStone() = 2)&!(numStone() = 3)
 f2:forall(K81:Int)[ numStone()>=K81&(K81=1|K81=2|K81=3)&turn(p2)=>((( (numStone()=0+K81) ) => ( (numStone()=0+K81)&!((!turn(p1))) ))&!(exists(G0:Int)[ exists(K82:Int)[ (numStone()=K82+K81)&(G0>=0& K82 > G0&! (!turn(p1)))] ])&!((numStone()=0+K81))&!((numStone()=4+K81))) ]
2019-10-06 17:50:29,454 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:Int)[G0>=0&numStone() > G0&! turn(p1)])&!(numStone() = 0)&!(numStone() = 4)
 f2:exists(K86:Int)[ (numStone()>=K86&(K86=1|K86=2|K86=3)&turn(p1))&((( (numStone()=0+K86) ) => ( (numStone()=0+K86)&!((!turn(p1))) ))&!((numStone()=2+K86))&!(exists(G0:Int)[G0>=0&G0 % 2 = 1&(numStone()=G0+K86)])) ]
2019-10-06 17:50:29,485 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(numStone() = 2)&!(exists(G0:Int)[G0>=0&G0 % 2 = 1&numStone() = G0])
 f2:forall(K84:Int)[ numStone()>=K84&(K84=1|K84=2|K84=3)&turn(p2)=>((( (numStone()=0+K84) ) => ( (numStone()=0+K84)&!((!turn(p1))) ))&!(exists(G0:Int)[ exists(K85:Int)[ (numStone()=K85+K84)&(G0>=0& K85 > G0&! (!turn(p1)))] ])&!((numStone()=0+K84))&!((numStone()=4+K84))) ]
2019-10-06 17:50:31,298 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:Int)[G0>=0&numStone() > G0&! turn(p1)])&!(numStone() = 0)&!(numStone() = 4)
 f2:exists(K89:Int)[ (numStone()>=K89&(K89=1|K89=2|K89=3)&turn(p1))&((( (numStone()=0+K89) ) => ( (numStone()=0+K89)&!((!turn(p1))) ))&!(exists(G0:Int)[G0>=0&G0 % 2 = 1&(numStone()=G0+K89)])&!(exists(G0:Int)[G0>=0&G0 % 4 = 2&(numStone()=G0+K89)])) ]
2019-10-06 17:50:31,409 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:Int)[G0>=0&numStone() > G0&! turn(p1)])&!(numStone() = 0)&!(numStone() = 4)
 f2:exists(K89:Int)[ (numStone()>=K89&(K89=1|K89=2|K89=3)&turn(p1))&((( (numStone()=0+K89) ) => ( (numStone()=0+K89)&!((!turn(p1))) ))&!(exists(G0:Int)[G0>=0&G0 % 2 = 1&(numStone()=G0+K89)])&!(exists(G0:Int)[G0>=0&G0 % 4 = 2&(numStone()=G0+K89)])) ]
2019-10-06 17:50:31,432 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:Int)[G0>=0&numStone() > G0&! turn(p1)])&!(numStone() = 0)&!(numStone() = 4)
 f2:exists(K89:Int)[ (numStone()>=K89&(K89=1|K89=2|K89=3)&turn(p1))&((( (numStone()=0+K89) ) => ( (numStone()=0+K89)&!((!turn(p1))) ))&!(exists(G0:Int)[G0>=0&G0 % 2 = 1&(numStone()=G0+K89)])&!(exists(G0:Int)[G0>=0&G0 % 4 = 2&(numStone()=G0+K89)])) ]
2019-10-06 17:50:31,453 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:Int)[G0>=0&numStone() > G0&! turn(p1)])&!(numStone() = 0)&!(numStone() = 4)
 f2:exists(K89:Int)[ (numStone()>=K89&(K89=1|K89=2|K89=3)&turn(p1))&((( (numStone()=0+K89) ) => ( (numStone()=0+K89)&!((!turn(p1))) ))&!(exists(G0:Int)[G0>=0&G0 % 2 = 1&(numStone()=G0+K89)])&!(exists(G0:Int)[G0>=0&G0 % 4 = 2&(numStone()=G0+K89)])) ]
2019-10-06 17:50:36,175 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:Int)[G0>=0&numStone() > G0&! turn(p1)])&!(numStone() = 0)&!(numStone() = 4)
 f2:exists(K89:Int)[ (numStone()>=K89&(K89=1|K89=2|K89=3)&turn(p1))&((( (numStone()=0+K89) ) => ( (numStone()=0+K89)&!((!turn(p1))) ))&!(exists(G0:Int)[G0>=0&G0 % 2 = 1&(numStone()=G0+K89)])&!(exists(G0:Int)[G0>=0&G0 % 4 = 2&(numStone()=G0+K89)])) ]
2019-10-06 17:50:40,550 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:Int)[G0>=0&numStone() > G0&! turn(p1)])&!(numStone() = 0)&!(numStone() = 4)
 f2:exists(K89:Int)[ (numStone()>=K89&(K89=1|K89=2|K89=3)&turn(p1))&((( (numStone()=0+K89) ) => ( (numStone()=0+K89)&!((!turn(p1))) ))&!(exists(G0:Int)[G0>=0&G0 % 2 = 1&(numStone()=G0+K89)])&!(exists(G0:Int)[G0>=0&G0 % 4 = 2&(numStone()=G0+K89)])) ]
2019-10-06 17:50:40,595 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 % 2 = 1&numStone() = G0])&!(exists(G0:Int)[G0>=0&G0 % 4 = 2&numStone() = G0])
 f2:forall(K87:Int)[ numStone()>=K87&(K87=1|K87=2|K87=3)&turn(p2)=>((( (numStone()=0+K87) ) => ( (numStone()=0+K87)&!((!turn(p1))) ))&!(exists(G0:Int)[ exists(K88:Int)[ (numStone()=K88+K87)&(G0>=0& K88 > G0&! (!turn(p1)))] ])&!((numStone()=0+K87))&!((numStone()=4+K87))) ]
2019-10-06 17:50:41,036 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:Int)[G0>=0&numStone() > G0&! turn(p1)])&!(numStone() = 0)&!(numStone() = 4)&!(exists(G0:Int)[G0>=0&G0 > 4&numStone() > G0])
 f2:exists(K93:Int)[ (numStone()>=K93&(K93=1|K93=2|K93=3)&turn(p1))&((( (numStone()=0+K93) ) => ( (numStone()=0+K93)&!((!turn(p1))) ))&!(exists(G0:Int)[G0>=0&G0 % 2 = 1&(numStone()=G0+K93)])&!(exists(G0:Int)[G0>=0&G0 % 4 = 2&(numStone()=G0+K93)])) ]
2019-10-06 17:50:51,559 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 % 2 = 1&numStone() = G0])&!(exists(G0:Int)[G0>=0&G0 % 4 = 2&numStone() = G0])
 f2:forall(K90:Int)[ numStone()>=K90&(K90=1|K90=2|K90=3)&turn(p2)=>((( (numStone()=0+K90) ) => ( (numStone()=0+K90)&!((!turn(p1))) ))&!(exists(G0:Int)[ exists(K91:Int)[ (numStone()=K91+K90)&(G0>=0& K91 > G0&! (!turn(p1)))] ])&!((numStone()=0+K90))&!((numStone()=4+K90))&!(exists(G0:Int)[ exists(K92:Int)[ (numStone()=K92+K90)&(G0>=0&G0 > 4& K92 > G0)] ])) ]
2019-10-06 17:56:52,085 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:( numStone()=0 ) => ( numStone()=0&!(turn(p1)) )
 f2:exists(K13:Int)[ (numStone()>=K13&(K13=1|K13=2|K13=3)&turn(p1))&(( (numStone()=0+K13) ) => ( (numStone()=0+K13)&!((!turn(p1))) )) ]
2019-10-06 17:56:52,114 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:( numStone()=0 ) => ( numStone()=0&!(turn(p1)) )
 f2:forall(K12:Int)[ numStone()>=K12&(K12=1|K12=2|K12=3)&turn(p2)=>(( (numStone()=0+K12) ) => ( (numStone()=0+K12)&!((!turn(p1))) )) ]
2019-10-06 17:56:52,419 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(X0:_S1)[turn(X0)])
 f2:exists(K15:Int)[ (numStone()>=K15&(K15=1|K15=2|K15=3)&turn(p1))&((( (numStone()=0+K15) ) => ( (numStone()=0+K15)&!((!turn(p1))) ))&!(exists(X0:_S1)[(!turn(X0))])) ]
2019-10-06 17:56:52,443 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(X0:_S1)[turn(X0)])
 f2:forall(K14:Int)[ numStone()>=K14&(K14=1|K14=2|K14=3)&turn(p2)=>((( (numStone()=0+K14) ) => ( (numStone()=0+K14)&!((!turn(p1))) ))&!(exists(X0:_S1)[(!turn(X0))])) ]
2019-10-06 17:56:52,462 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:!(numStone()%4=0)&numStone()>0&turn(p1)&!turn(p2)
 f2:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(X0:_S1)[turn(X0)])
2019-10-06 17:56:52,756 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:_S1)[turn(G0)&turn(p2)])
 f2:exists(K17:Int)[ (numStone()>=K17&(K17=1|K17=2|K17=3)&turn(p1))&((( (numStone()=0+K17) ) => ( (numStone()=0+K17)&!((!turn(p1))) ))&!(exists(G0:Int)[G0>=0&G0 > 0&(numStone()=G0+K17)])) ]
2019-10-06 17:56:52,792 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 0&numStone() = G0])
 f2:forall(K16:Int)[ numStone()>=K16&(K16=1|K16=2|K16=3)&turn(p2)=>((( (numStone()=0+K16) ) => ( (numStone()=0+K16)&!((!turn(p1))) ))&!(exists(G0:_S1)[(!turn(G0))&(!turn(p2))])) ]
2019-10-06 17:56:53,053 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:_S1)[turn(G0)&turn(p2)])&!(! numStone() = 1)
 f2:exists(K19:Int)[ (numStone()>=K19&(K19=1|K19=2|K19=3)&turn(p1))&((( (numStone()=0+K19) ) => ( (numStone()=0+K19)&!((!turn(p1))) ))&!(exists(G0:Int)[G0>=0&G0 > 0&(numStone()=G0+K19)])) ]
2019-10-06 17:56:53,079 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 0&numStone() = G0])
 f2:forall(K18:Int)[ numStone()>=K18&(K18=1|K18=2|K18=3)&turn(p2)=>((( (numStone()=0+K18) ) => ( (numStone()=0+K18)&!((!turn(p1))) ))&!(exists(G0:_S1)[(!turn(G0))&(!turn(p2))])&!(! (numStone()=1+K18))) ]
2019-10-06 17:56:53,102 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:!(numStone()%4=0)&numStone()>0&turn(p1)&!turn(p2)
 f2:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:_S1)[turn(G0)&turn(p2)])&!(! numStone() = 1)
2019-10-06 17:56:53,375 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:_S1)[turn(G0)&turn(p2)])&!(exists(G0:Int)[G0>=0&G0 > 3&numStone() = G0])
 f2:exists(K21:Int)[ (numStone()>=K21&(K21=1|K21=2|K21=3)&turn(p1))&((( (numStone()=0+K21) ) => ( (numStone()=0+K21)&!((!turn(p1))) ))&!(exists(G0:Int)[G0>=0&G0 > 0&(numStone()=G0+K21)])) ]
2019-10-06 17:56:53,413 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 0&numStone() = G0])
 f2:forall(K20:Int)[ numStone()>=K20&(K20=1|K20=2|K20=3)&turn(p2)=>((( (numStone()=0+K20) ) => ( (numStone()=0+K20)&!((!turn(p1))) ))&!(exists(G0:_S1)[(!turn(G0))&(!turn(p2))])&!(exists(G0:Int)[G0>=0&G0 > 3&(numStone()=G0+K20)])) ]
2019-10-06 17:56:53,442 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:!(numStone()%4=0)&numStone()>0&turn(p1)&!turn(p2)
 f2:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:_S1)[turn(G0)&turn(p2)])&!(exists(G0:Int)[G0>=0&G0 > 3&numStone() = G0])
2019-10-06 17:56:53,600 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:_S1)[turn(G0)&turn(p2)])&!(exists(G0:Int)[G0>=0&G0 > 4&numStone() > G0])
 f2:exists(K24:Int)[ (numStone()>=K24&(K24=1|K24=2|K24=3)&turn(p1))&((( (numStone()=0+K24) ) => ( (numStone()=0+K24)&!((!turn(p1))) ))&!(exists(G0:Int)[G0>=0&G0 = 1&(numStone()=G0+K24)])) ]
2019-10-06 17:56:53,626 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 1&numStone() = G0])
 f2:forall(K22:Int)[ numStone()>=K22&(K22=1|K22=2|K22=3)&turn(p2)=>((( (numStone()=0+K22) ) => ( (numStone()=0+K22)&!((!turn(p1))) ))&!(exists(G0:_S1)[(!turn(G0))&(!turn(p2))])&!(exists(G0:Int)[ exists(K23:Int)[ (numStone()=K23+K22)&(G0>=0&G0 > 4& K23 > G0)] ])) ]
2019-10-06 17:56:53,861 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:_S1)[turn(G0)&turn(p2)])&!(exists(G0:Int)[G0>=0&G0 > 4&numStone() > G0])
 f2:exists(K27:Int)[ (numStone()>=K27&(K27=1|K27=2|K27=3)&turn(p1))&((( (numStone()=0+K27) ) => ( (numStone()=0+K27)&!((!turn(p1))) ))&!(exists(G0:Int)[G0>=0&G0 % 2 = 1&(numStone()=G0+K27)])) ]
2019-10-06 17:56:53,893 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 % 2 = 1&numStone() = G0])
 f2:forall(K25:Int)[ numStone()>=K25&(K25=1|K25=2|K25=3)&turn(p2)=>((( (numStone()=0+K25) ) => ( (numStone()=0+K25)&!((!turn(p1))) ))&!(exists(G0:_S1)[(!turn(G0))&(!turn(p2))])&!(exists(G0:Int)[ exists(K26:Int)[ (numStone()=K26+K25)&(G0>=0&G0 > 4& K26 > G0)] ])) ]
2019-10-06 17:56:56,119 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:_S1)[turn(G0)&turn(p2)])&!(exists(G0:Int)[G0>=0&G0 > 4&numStone() > G0])
 f2:exists(K30:Int)[ (numStone()>=K30&(K30=1|K30=2|K30=3)&turn(p1))&((( (numStone()=0+K30) ) => ( (numStone()=0+K30)&!((!turn(p1))) ))&!(exists(G0:Int)[G0>=0&G0 % 2 = 1&(numStone()=G0+K30)])&!((numStone()=2+K30))) ]
2019-10-06 17:56:56,161 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 % 2 = 1&numStone() = G0])&!(numStone() = 2)
 f2:forall(K28:Int)[ numStone()>=K28&(K28=1|K28=2|K28=3)&turn(p2)=>((( (numStone()=0+K28) ) => ( (numStone()=0+K28)&!((!turn(p1))) ))&!(exists(G0:_S1)[(!turn(G0))&(!turn(p2))])&!(exists(G0:Int)[ exists(K29:Int)[ (numStone()=K29+K28)&(G0>=0&G0 > 4& K29 > G0)] ])) ]
2019-10-06 17:56:56,708 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:_S1)[turn(G0)&turn(p2)])&!(exists(G0:Int)[G0>=0&G0 > 4&numStone() > G0])&!(numStone() = 4)
 f2:exists(K33:Int)[ (numStone()>=K33&(K33=1|K33=2|K33=3)&turn(p1))&((( (numStone()=0+K33) ) => ( (numStone()=0+K33)&!((!turn(p1))) ))&!(exists(G0:Int)[ exists(K34:Int)[ (numStone()=K34+K33)&(G0>=0& K34 > G0&! (numStone()=4+K33))] ])) ]
2019-10-06 17:56:56,736 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:Int)[G0>=0&numStone() > G0&! numStone() = 4])
 f2:forall(K31:Int)[ numStone()>=K31&(K31=1|K31=2|K31=3)&turn(p2)=>((( (numStone()=0+K31) ) => ( (numStone()=0+K31)&!((!turn(p1))) ))&!(exists(G0:_S1)[(!turn(G0))&(!turn(p2))])&!(exists(G0:Int)[ exists(K32:Int)[ (numStone()=K32+K31)&(G0>=0&G0 > 4& K32 > G0)] ])&!((numStone()=4+K31))) ]
2019-10-06 17:56:56,759 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:!(numStone()%4=0)&numStone()>0&turn(p1)&!turn(p2)
 f2:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:_S1)[turn(G0)&turn(p2)])&!(exists(G0:Int)[G0>=0&G0 > 4&numStone() > G0])&!(numStone() = 4)
2019-10-06 17:56:56,783 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:!(numStone()%4=0)&numStone()>0&turn(p1)&!turn(p2)
 f2:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:_S1)[turn(G0)&turn(p2)])&!(exists(G0:Int)[G0>=0&G0 > 4&numStone() > G0])&!(numStone() = 4)
2019-10-06 17:56:56,801 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:!(numStone()%4=0)&numStone()>0&turn(p1)&!turn(p2)
 f2:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:_S1)[turn(G0)&turn(p2)])&!(exists(G0:Int)[G0>=0&G0 > 4&numStone() > G0])&!(numStone() = 4)
2019-10-06 17:56:56,820 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:!(numStone()%4=0)&numStone()>0&turn(p1)&!turn(p2)
 f2:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:_S1)[turn(G0)&turn(p2)])&!(exists(G0:Int)[G0>=0&G0 > 4&numStone() > G0])&!(numStone() = 4)
2019-10-06 17:56:56,942 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:_S1)[turn(G0)&turn(p2)])&!(numStone() = 4)
 f2:exists(K36:Int)[ (numStone()>=K36&(K36=1|K36=2|K36=3)&turn(p1))&((( (numStone()=0+K36) ) => ( (numStone()=0+K36)&!((!turn(p1))) ))&!(exists(G0:Int)[ exists(K37:Int)[ (numStone()=K37+K36)&(G0>=0& K37 > G0&! (numStone()=4+K36))] ])) ]
2019-10-06 17:56:56,982 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:Int)[G0>=0&numStone() > G0&! numStone() = 4])
 f2:forall(K35:Int)[ numStone()>=K35&(K35=1|K35=2|K35=3)&turn(p2)=>((( (numStone()=0+K35) ) => ( (numStone()=0+K35)&!((!turn(p1))) ))&!(exists(G0:_S1)[(!turn(G0))&(!turn(p2))])&!((numStone()=4+K35))) ]
2019-10-06 17:56:57,450 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:_S1)[turn(G0)&turn(p2)])&!(exists(G0:Int)[G0>=0&G0 % 4 = 0&numStone() = G0])
 f2:exists(K39:Int)[ (numStone()>=K39&(K39=1|K39=2|K39=3)&turn(p1))&((( (numStone()=0+K39) ) => ( (numStone()=0+K39)&!((!turn(p1))) ))&!(exists(G0:Int)[ exists(K40:Int)[ (numStone()=K40+K39)&(G0>=0& K40 > G0&! (numStone()=4+K39))] ])) ]
2019-10-06 17:56:57,486 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:_S1)[turn(G0)&turn(p2)])&!(exists(G0:Int)[G0>=0&G0 % 4 = 0&numStone() = G0])
 f2:exists(K39:Int)[ (numStone()>=K39&(K39=1|K39=2|K39=3)&turn(p1))&((( (numStone()=0+K39) ) => ( (numStone()=0+K39)&!((!turn(p1))) ))&!(exists(G0:Int)[ exists(K40:Int)[ (numStone()=K40+K39)&(G0>=0& K40 > G0&! (numStone()=4+K39))] ])) ]
2019-10-06 17:56:57,508 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:_S1)[turn(G0)&turn(p2)])&!(exists(G0:Int)[G0>=0&G0 % 4 = 0&numStone() = G0])
 f2:exists(K39:Int)[ (numStone()>=K39&(K39=1|K39=2|K39=3)&turn(p1))&((( (numStone()=0+K39) ) => ( (numStone()=0+K39)&!((!turn(p1))) ))&!(exists(G0:Int)[ exists(K40:Int)[ (numStone()=K40+K39)&(G0>=0& K40 > G0&! (numStone()=4+K39))] ])) ]
2019-10-06 17:56:57,529 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:_S1)[turn(G0)&turn(p2)])&!(exists(G0:Int)[G0>=0&G0 % 4 = 0&numStone() = G0])
 f2:exists(K39:Int)[ (numStone()>=K39&(K39=1|K39=2|K39=3)&turn(p1))&((( (numStone()=0+K39) ) => ( (numStone()=0+K39)&!((!turn(p1))) ))&!(exists(G0:Int)[ exists(K40:Int)[ (numStone()=K40+K39)&(G0>=0& K40 > G0&! (numStone()=4+K39))] ])) ]
2019-10-06 17:56:57,552 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:_S1)[turn(G0)&turn(p2)])&!(exists(G0:Int)[G0>=0&G0 % 4 = 0&numStone() = G0])
 f2:exists(K39:Int)[ (numStone()>=K39&(K39=1|K39=2|K39=3)&turn(p1))&((( (numStone()=0+K39) ) => ( (numStone()=0+K39)&!((!turn(p1))) ))&!(exists(G0:Int)[ exists(K40:Int)[ (numStone()=K40+K39)&(G0>=0& K40 > G0&! (numStone()=4+K39))] ])) ]
2019-10-06 17:56:57,579 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:_S1)[turn(G0)&turn(p2)])&!(exists(G0:Int)[G0>=0&G0 % 4 = 0&numStone() = G0])
 f2:exists(K39:Int)[ (numStone()>=K39&(K39=1|K39=2|K39=3)&turn(p1))&((( (numStone()=0+K39) ) => ( (numStone()=0+K39)&!((!turn(p1))) ))&!(exists(G0:Int)[ exists(K40:Int)[ (numStone()=K40+K39)&(G0>=0& K40 > G0&! (numStone()=4+K39))] ])) ]
2019-10-06 17:56:57,612 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:Int)[G0>=0&numStone() > G0&! numStone() = 4])
 f2:forall(K38:Int)[ numStone()>=K38&(K38=1|K38=2|K38=3)&turn(p2)=>((( (numStone()=0+K38) ) => ( (numStone()=0+K38)&!((!turn(p1))) ))&!(exists(G0:_S1)[(!turn(G0))&(!turn(p2))])&!(exists(G0:Int)[G0>=0&G0 % 4 = 0&(numStone()=G0+K38)])) ]
2019-10-06 17:57:01,826 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:_S1)[turn(G0)&turn(p2)])&!(exists(G0:Int)[G0>=0&numStone() = G0&G0 % 2 = 0&! G0 % 3 = 0])
 f2:exists(K42:Int)[ (numStone()>=K42&(K42=1|K42=2|K42=3)&turn(p1))&((( (numStone()=0+K42) ) => ( (numStone()=0+K42)&!((!turn(p1))) ))&!(exists(G0:Int)[ exists(K43:Int)[ (numStone()=K43+K42)&(G0>=0& K43 > G0&! (numStone()=4+K42))] ])) ]
2019-10-06 17:57:01,864 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:Int)[G0>=0&numStone() > G0&! numStone() = 4])
 f2:forall(K41:Int)[ numStone()>=K41&(K41=1|K41=2|K41=3)&turn(p2)=>((( (numStone()=0+K41) ) => ( (numStone()=0+K41)&!((!turn(p1))) ))&!(exists(G0:_S1)[(!turn(G0))&(!turn(p2))])&!(exists(G0:Int)[G0>=0&(numStone()=G0+K41)&G0 % 2 = 0&! G0 % 3 = 0])) ]
2019-10-06 17:57:22,783 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:( numStone()=0 ) => ( numStone()=0&!(turn(p1)) )
 f2:exists(K45:Int)[ (numStone()>=K45&(K45=1|K45=2|K45=3)&turn(p1))&(( (numStone()=0+K45) ) => ( (numStone()=0+K45)&!((!turn(p1))) )) ]
2019-10-06 17:57:22,809 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:( numStone()=0 ) => ( numStone()=0&!(turn(p1)) )
 f2:forall(K44:Int)[ numStone()>=K44&(K44=1|K44=2|K44=3)&turn(p2)=>(( (numStone()=0+K44) ) => ( (numStone()=0+K44)&!((!turn(p1))) )) ]
2019-10-06 17:57:23,012 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(X1:Int)[X1>=0&numStone() > X1])
 f2:exists(K48:Int)[ (numStone()>=K48&(K48=1|K48=2|K48=3)&turn(p1))&((( (numStone()=0+K48) ) => ( (numStone()=0+K48)&!((!turn(p1))) ))&!(exists(X0:_S1)[(!turn(X0))])) ]
2019-10-06 17:57:23,039 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(X0:_S1)[turn(X0)])
 f2:forall(K46:Int)[ numStone()>=K46&(K46=1|K46=2|K46=3)&turn(p2)=>((( (numStone()=0+K46) ) => ( (numStone()=0+K46)&!((!turn(p1))) ))&!(exists(X1:Int)[ exists(K47:Int)[ (numStone()=K47+K46)&(X1>=0& K47 > X1)] ])) ]
2019-10-06 17:57:23,248 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(X1:Int)[X1>=0&numStone() > X1])&!(exists(X1:Int)[X1>=0&numStone() >= X1])
 f2:exists(K52:Int)[ (numStone()>=K52&(K52=1|K52=2|K52=3)&turn(p1))&((( (numStone()=0+K52) ) => ( (numStone()=0+K52)&!((!turn(p1))) ))&!(exists(X0:_S1)[(!turn(X0))])) ]
2019-10-06 17:57:23,273 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(X0:_S1)[turn(X0)])
 f2:forall(K49:Int)[ numStone()>=K49&(K49=1|K49=2|K49=3)&turn(p2)=>((( (numStone()=0+K49) ) => ( (numStone()=0+K49)&!((!turn(p1))) ))&!(exists(X1:Int)[ exists(K50:Int)[ (numStone()=K50+K49)&(X1>=0& K50 > X1)] ])&!(exists(X1:Int)[ exists(K51:Int)[ (numStone()=K51+K49)&(X1>=0& K51 >= X1)] ])) ]
2019-10-06 17:57:23,295 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:!(numStone()%4=0)&numStone()>0&turn(p1)&!turn(p2)
 f2:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(X1:Int)[X1>=0&numStone() > X1])&!(exists(X1:Int)[X1>=0&numStone() >= X1])
2019-10-06 17:57:23,615 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:Int)[G0>=0&numStone() > G0&! turn(p1)])&!(exists(G0:Int)[G0>=0&G0 = 0&! numStone() > G0])
 f2:exists(K56:Int)[ (numStone()>=K56&(K56=1|K56=2|K56=3)&turn(p1))&((( (numStone()=0+K56) ) => ( (numStone()=0+K56)&!((!turn(p1))) ))&!(exists(G0:Int)[G0>=0&G0 > 0&(numStone()=G0+K56)])) ]
2019-10-06 17:57:23,652 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 0&numStone() = G0])
 f2:forall(K53:Int)[ numStone()>=K53&(K53=1|K53=2|K53=3)&turn(p2)=>((( (numStone()=0+K53) ) => ( (numStone()=0+K53)&!((!turn(p1))) ))&!(exists(G0:Int)[ exists(K54:Int)[ (numStone()=K54+K53)&(G0>=0& K54 > G0&! (!turn(p1)))] ])&!(exists(G0:Int)[ exists(K55:Int)[ (numStone()=K55+K53)&(G0>=0&G0 = 0&! K55 > G0)] ])) ]
2019-10-06 17:57:23,983 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:Int)[G0>=0&numStone() > G0&! turn(p1)])&!(exists(G0:Int)[G0>=0&G0 = 0&! numStone() > G0])&!(! numStone() = 1)
 f2:exists(K60:Int)[ (numStone()>=K60&(K60=1|K60=2|K60=3)&turn(p1))&((( (numStone()=0+K60) ) => ( (numStone()=0+K60)&!((!turn(p1))) ))&!(exists(G0:Int)[G0>=0&G0 > 0&(numStone()=G0+K60)])) ]
2019-10-06 17:57:24,015 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 0&numStone() = G0])
 f2:forall(K57:Int)[ numStone()>=K57&(K57=1|K57=2|K57=3)&turn(p2)=>((( (numStone()=0+K57) ) => ( (numStone()=0+K57)&!((!turn(p1))) ))&!(exists(G0:Int)[ exists(K58:Int)[ (numStone()=K58+K57)&(G0>=0& K58 > G0&! (!turn(p1)))] ])&!(exists(G0:Int)[ exists(K59:Int)[ (numStone()=K59+K57)&(G0>=0&G0 = 0&! K59 > G0)] ])&!(! (numStone()=1+K57))) ]
2019-10-06 17:57:24,036 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:!(numStone()%4=0)&numStone()>0&turn(p1)&!turn(p2)
 f2:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:Int)[G0>=0&numStone() > G0&! turn(p1)])&!(exists(G0:Int)[G0>=0&G0 = 0&! numStone() > G0])&!(! numStone() = 1)
2019-10-06 17:57:24,287 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:Int)[G0>=0&numStone() > G0&! turn(p1)])&!(exists(G0:Int)[G0>=0&G0 = 0&! numStone() > G0])&!(exists(G0:Int)[G0>=0&G0 > 3&numStone() > G0])
 f2:exists(K65:Int)[ (numStone()>=K65&(K65=1|K65=2|K65=3)&turn(p1))&((( (numStone()=0+K65) ) => ( (numStone()=0+K65)&!((!turn(p1))) ))&!(exists(G0:Int)[G0>=0&G0 > 0&(numStone()=G0+K65)])) ]
2019-10-06 17:57:24,335 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 0&numStone() = G0])
 f2:forall(K61:Int)[ numStone()>=K61&(K61=1|K61=2|K61=3)&turn(p2)=>((( (numStone()=0+K61) ) => ( (numStone()=0+K61)&!((!turn(p1))) ))&!(exists(G0:Int)[ exists(K62:Int)[ (numStone()=K62+K61)&(G0>=0& K62 > G0&! (!turn(p1)))] ])&!(exists(G0:Int)[ exists(K63:Int)[ (numStone()=K63+K61)&(G0>=0&G0 = 0&! K63 > G0)] ])&!(exists(G0:Int)[ exists(K64:Int)[ (numStone()=K64+K61)&(G0>=0&G0 > 3& K64 > G0)] ])) ]
2019-10-06 17:57:24,652 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:Int)[G0>=0&numStone() > G0&! turn(p1)])&!(! numStone() = 1&! numStone() = 3)
 f2:exists(K68:Int)[ (numStone()>=K68&(K68=1|K68=2|K68=3)&turn(p1))&((( (numStone()=0+K68) ) => ( (numStone()=0+K68)&!((!turn(p1))) ))&!(exists(G0:Int)[G0>=0&G0 > 0&(numStone()=G0+K68)])) ]
2019-10-06 17:57:24,681 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 0&numStone() = G0])
 f2:forall(K66:Int)[ numStone()>=K66&(K66=1|K66=2|K66=3)&turn(p2)=>((( (numStone()=0+K66) ) => ( (numStone()=0+K66)&!((!turn(p1))) ))&!(exists(G0:Int)[ exists(K67:Int)[ (numStone()=K67+K66)&(G0>=0& K67 > G0&! (!turn(p1)))] ])&!(! (numStone()=1+K66)&! (numStone()=3+K66))) ]
2019-10-06 17:57:24,703 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:!(numStone()%4=0)&numStone()>0&turn(p1)&!turn(p2)
 f2:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:Int)[G0>=0&numStone() > G0&! turn(p1)])&!(! numStone() = 1&! numStone() = 3)
2019-10-06 17:57:25,361 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:Int)[G0>=0&numStone() > G0&! turn(p1)])&!(! numStone() = 3&! numStone() = 1&! numStone() = 2)
 f2:exists(K71:Int)[ (numStone()>=K71&(K71=1|K71=2|K71=3)&turn(p1))&((( (numStone()=0+K71) ) => ( (numStone()=0+K71)&!((!turn(p1))) ))&!(exists(G0:Int)[G0>=0&G0 > 0&(numStone()=G0+K71)])) ]
2019-10-06 17:57:25,396 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 > 0&numStone() = G0])
 f2:forall(K69:Int)[ numStone()>=K69&(K69=1|K69=2|K69=3)&turn(p2)=>((( (numStone()=0+K69) ) => ( (numStone()=0+K69)&!((!turn(p1))) ))&!(exists(G0:Int)[ exists(K70:Int)[ (numStone()=K70+K69)&(G0>=0& K70 > G0&! (!turn(p1)))] ])&!(! (numStone()=3+K69)&! (numStone()=1+K69)&! (numStone()=2+K69))) ]
2019-10-06 17:57:25,421 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:!(numStone()%4=0)&numStone()>0&turn(p1)&!turn(p2)
 f2:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:Int)[G0>=0&numStone() > G0&! turn(p1)])&!(! numStone() = 3&! numStone() = 1&! numStone() = 2)
2019-10-06 17:57:25,590 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:Int)[G0>=0&numStone() > G0&! turn(p1)])
 f2:exists(K74:Int)[ (numStone()>=K74&(K74=1|K74=2|K74=3)&turn(p1))&((( (numStone()=0+K74) ) => ( (numStone()=0+K74)&!((!turn(p1))) ))&!(exists(G0:Int)[G0>=0&G0 = 1&(numStone()=G0+K74)])) ]
2019-10-06 17:57:25,623 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 1&numStone() = G0])
 f2:forall(K72:Int)[ numStone()>=K72&(K72=1|K72=2|K72=3)&turn(p2)=>((( (numStone()=0+K72) ) => ( (numStone()=0+K72)&!((!turn(p1))) ))&!(exists(G0:Int)[ exists(K73:Int)[ (numStone()=K73+K72)&(G0>=0& K73 > G0&! (!turn(p1)))] ])) ]
2019-10-06 17:57:26,008 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:Int)[G0>=0&numStone() > G0&! turn(p1)])&!(numStone() = 0)
 f2:exists(K77:Int)[ (numStone()>=K77&(K77=1|K77=2|K77=3)&turn(p1))&((( (numStone()=0+K77) ) => ( (numStone()=0+K77)&!((!turn(p1))) ))&!(exists(G0:Int)[G0>=0&G0 = 1&(numStone()=G0+K77)])&!((numStone()=2+K77))) ]
2019-10-06 17:57:26,039 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 1&numStone() = G0])&!(numStone() = 2)
 f2:forall(K75:Int)[ numStone()>=K75&(K75=1|K75=2|K75=3)&turn(p2)=>((( (numStone()=0+K75) ) => ( (numStone()=0+K75)&!((!turn(p1))) ))&!(exists(G0:Int)[ exists(K76:Int)[ (numStone()=K76+K75)&(G0>=0& K76 > G0&! (!turn(p1)))] ])&!((numStone()=0+K75))) ]
2019-10-06 17:57:26,360 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:Int)[G0>=0&numStone() > G0&! turn(p1)])&!(numStone() = 0)
 f2:exists(K80:Int)[ (numStone()>=K80&(K80=1|K80=2|K80=3)&turn(p1))&((( (numStone()=0+K80) ) => ( (numStone()=0+K80)&!((!turn(p1))) ))&!(exists(G0:Int)[G0>=0&G0 = 1&(numStone()=G0+K80)])&!((numStone()=2+K80))&!((numStone()=3+K80))) ]
2019-10-06 17:57:26,392 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 1&numStone() = G0])&!(numStone() = 2)&!(numStone() = 3)
 f2:forall(K78:Int)[ numStone()>=K78&(K78=1|K78=2|K78=3)&turn(p2)=>((( (numStone()=0+K78) ) => ( (numStone()=0+K78)&!((!turn(p1))) ))&!(exists(G0:Int)[ exists(K79:Int)[ (numStone()=K79+K78)&(G0>=0& K79 > G0&! (!turn(p1)))] ])&!((numStone()=0+K78))) ]
2019-10-06 17:57:26,738 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:Int)[G0>=0&numStone() > G0&! turn(p1)])&!(numStone() = 0)&!(numStone() = 4)
 f2:exists(K83:Int)[ (numStone()>=K83&(K83=1|K83=2|K83=3)&turn(p1))&((( (numStone()=0+K83) ) => ( (numStone()=0+K83)&!((!turn(p1))) ))&!(exists(G0:Int)[G0>=0&G0 = 1&(numStone()=G0+K83)])&!((numStone()=2+K83))&!((numStone()=3+K83))) ]
2019-10-06 17:57:26,768 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 = 1&numStone() = G0])&!(numStone() = 2)&!(numStone() = 3)
 f2:forall(K81:Int)[ numStone()>=K81&(K81=1|K81=2|K81=3)&turn(p2)=>((( (numStone()=0+K81) ) => ( (numStone()=0+K81)&!((!turn(p1))) ))&!(exists(G0:Int)[ exists(K82:Int)[ (numStone()=K82+K81)&(G0>=0& K82 > G0&! (!turn(p1)))] ])&!((numStone()=0+K81))&!((numStone()=4+K81))) ]
2019-10-06 17:57:27,095 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:Int)[G0>=0&numStone() > G0&! turn(p1)])&!(numStone() = 0)&!(numStone() = 4)
 f2:exists(K86:Int)[ (numStone()>=K86&(K86=1|K86=2|K86=3)&turn(p1))&((( (numStone()=0+K86) ) => ( (numStone()=0+K86)&!((!turn(p1))) ))&!((numStone()=2+K86))&!(exists(G0:Int)[G0>=0&G0 % 2 = 1&(numStone()=G0+K86)])) ]
2019-10-06 17:57:27,125 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(numStone() = 2)&!(exists(G0:Int)[G0>=0&G0 % 2 = 1&numStone() = G0])
 f2:forall(K84:Int)[ numStone()>=K84&(K84=1|K84=2|K84=3)&turn(p2)=>((( (numStone()=0+K84) ) => ( (numStone()=0+K84)&!((!turn(p1))) ))&!(exists(G0:Int)[ exists(K85:Int)[ (numStone()=K85+K84)&(G0>=0& K85 > G0&! (!turn(p1)))] ])&!((numStone()=0+K84))&!((numStone()=4+K84))) ]
2019-10-06 17:57:29,024 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:Int)[G0>=0&numStone() > G0&! turn(p1)])&!(numStone() = 0)&!(numStone() = 4)
 f2:exists(K89:Int)[ (numStone()>=K89&(K89=1|K89=2|K89=3)&turn(p1))&((( (numStone()=0+K89) ) => ( (numStone()=0+K89)&!((!turn(p1))) ))&!(exists(G0:Int)[G0>=0&G0 % 2 = 1&(numStone()=G0+K89)])&!(exists(G0:Int)[G0>=0&G0 % 4 = 2&(numStone()=G0+K89)])) ]
2019-10-06 17:57:29,134 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:Int)[G0>=0&numStone() > G0&! turn(p1)])&!(numStone() = 0)&!(numStone() = 4)
 f2:exists(K89:Int)[ (numStone()>=K89&(K89=1|K89=2|K89=3)&turn(p1))&((( (numStone()=0+K89) ) => ( (numStone()=0+K89)&!((!turn(p1))) ))&!(exists(G0:Int)[G0>=0&G0 % 2 = 1&(numStone()=G0+K89)])&!(exists(G0:Int)[G0>=0&G0 % 4 = 2&(numStone()=G0+K89)])) ]
2019-10-06 17:57:29,157 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:Int)[G0>=0&numStone() > G0&! turn(p1)])&!(numStone() = 0)&!(numStone() = 4)
 f2:exists(K89:Int)[ (numStone()>=K89&(K89=1|K89=2|K89=3)&turn(p1))&((( (numStone()=0+K89) ) => ( (numStone()=0+K89)&!((!turn(p1))) ))&!(exists(G0:Int)[G0>=0&G0 % 2 = 1&(numStone()=G0+K89)])&!(exists(G0:Int)[G0>=0&G0 % 4 = 2&(numStone()=G0+K89)])) ]
2019-10-06 17:57:29,178 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:Int)[G0>=0&numStone() > G0&! turn(p1)])&!(numStone() = 0)&!(numStone() = 4)
 f2:exists(K89:Int)[ (numStone()>=K89&(K89=1|K89=2|K89=3)&turn(p1))&((( (numStone()=0+K89) ) => ( (numStone()=0+K89)&!((!turn(p1))) ))&!(exists(G0:Int)[G0>=0&G0 % 2 = 1&(numStone()=G0+K89)])&!(exists(G0:Int)[G0>=0&G0 % 4 = 2&(numStone()=G0+K89)])) ]
2019-10-06 17:57:33,911 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:Int)[G0>=0&numStone() > G0&! turn(p1)])&!(numStone() = 0)&!(numStone() = 4)
 f2:exists(K89:Int)[ (numStone()>=K89&(K89=1|K89=2|K89=3)&turn(p1))&((( (numStone()=0+K89) ) => ( (numStone()=0+K89)&!((!turn(p1))) ))&!(exists(G0:Int)[G0>=0&G0 % 2 = 1&(numStone()=G0+K89)])&!(exists(G0:Int)[G0>=0&G0 % 4 = 2&(numStone()=G0+K89)])) ]
2019-10-06 17:57:38,291 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:Int)[G0>=0&numStone() > G0&! turn(p1)])&!(numStone() = 0)&!(numStone() = 4)
 f2:exists(K89:Int)[ (numStone()>=K89&(K89=1|K89=2|K89=3)&turn(p1))&((( (numStone()=0+K89) ) => ( (numStone()=0+K89)&!((!turn(p1))) ))&!(exists(G0:Int)[G0>=0&G0 % 2 = 1&(numStone()=G0+K89)])&!(exists(G0:Int)[G0>=0&G0 % 4 = 2&(numStone()=G0+K89)])) ]
2019-10-06 17:57:38,341 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 % 2 = 1&numStone() = G0])&!(exists(G0:Int)[G0>=0&G0 % 4 = 2&numStone() = G0])
 f2:forall(K87:Int)[ numStone()>=K87&(K87=1|K87=2|K87=3)&turn(p2)=>((( (numStone()=0+K87) ) => ( (numStone()=0+K87)&!((!turn(p1))) ))&!(exists(G0:Int)[ exists(K88:Int)[ (numStone()=K88+K87)&(G0>=0& K88 > G0&! (!turn(p1)))] ])&!((numStone()=0+K87))&!((numStone()=4+K87))) ]
2019-10-06 17:57:38,769 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:Int)[G0>=0&numStone() > G0&! turn(p1)])&!(numStone() = 0)&!(numStone() = 4)&!(exists(G0:Int)[G0>=0&G0 > 4&numStone() > G0])
 f2:exists(K93:Int)[ (numStone()>=K93&(K93=1|K93=2|K93=3)&turn(p1))&((( (numStone()=0+K93) ) => ( (numStone()=0+K93)&!((!turn(p1))) ))&!(exists(G0:Int)[G0>=0&G0 % 2 = 1&(numStone()=G0+K93)])&!(exists(G0:Int)[G0>=0&G0 % 4 = 2&(numStone()=G0+K93)])) ]
2019-10-06 17:57:49,269 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 % 2 = 1&numStone() = G0])&!(exists(G0:Int)[G0>=0&G0 % 4 = 2&numStone() = G0])
 f2:forall(K90:Int)[ numStone()>=K90&(K90=1|K90=2|K90=3)&turn(p2)=>((( (numStone()=0+K90) ) => ( (numStone()=0+K90)&!((!turn(p1))) ))&!(exists(G0:Int)[ exists(K91:Int)[ (numStone()=K91+K90)&(G0>=0& K91 > G0&! (!turn(p1)))] ])&!((numStone()=0+K90))&!((numStone()=4+K90))&!(exists(G0:Int)[ exists(K92:Int)[ (numStone()=K92+K90)&(G0>=0&G0 > 4& K92 > G0)] ])) ]
2019-10-06 17:57:49,315 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:Int)[G0>=0&numStone() > G0&! turn(p1)])&!(numStone() = 0)&!(numStone() = 4)&!(exists(G0:Int)[G0>=0&numStone() > G0&G0 > 4])
 f2:exists(K97:Int)[ (numStone()>=K97&(K97=1|K97=2|K97=3)&turn(p1))&((( (numStone()=0+K97) ) => ( (numStone()=0+K97)&!((!turn(p1))) ))&!(exists(G0:Int)[G0>=0&G0 % 2 = 1&(numStone()=G0+K97)])&!(exists(G0:Int)[G0>=0&G0 % 4 = 2&(numStone()=G0+K97)])) ]
2019-10-06 17:57:59,967 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 % 2 = 1&numStone() = G0])&!(exists(G0:Int)[G0>=0&G0 % 4 = 2&numStone() = G0])
 f2:forall(K94:Int)[ numStone()>=K94&(K94=1|K94=2|K94=3)&turn(p2)=>((( (numStone()=0+K94) ) => ( (numStone()=0+K94)&!((!turn(p1))) ))&!(exists(G0:Int)[ exists(K95:Int)[ (numStone()=K95+K94)&(G0>=0& K95 > G0&! (!turn(p1)))] ])&!((numStone()=0+K94))&!((numStone()=4+K94))&!(exists(G0:Int)[ exists(K96:Int)[ (numStone()=K96+K94)&(G0>=0& K96 > G0&G0 > 4)] ])) ]
2019-10-06 17:58:00,049 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:Int)[G0>=0&numStone() > G0&! turn(p1)])&!(exists(G0:Int)[G0>=0&G0 % 4 = 0&numStone() = G0])
 f2:exists(K100:Int)[ (numStone()>=K100&(K100=1|K100=2|K100=3)&turn(p1))&((( (numStone()=0+K100) ) => ( (numStone()=0+K100)&!((!turn(p1))) ))&!(exists(G0:Int)[G0>=0&G0 % 2 = 1&(numStone()=G0+K100)])&!(exists(G0:Int)[G0>=0&G0 % 4 = 2&(numStone()=G0+K100)])) ]
2019-10-06 17:58:10,590 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 % 2 = 1&numStone() = G0])&!(exists(G0:Int)[G0>=0&G0 % 4 = 2&numStone() = G0])
 f2:forall(K98:Int)[ numStone()>=K98&(K98=1|K98=2|K98=3)&turn(p2)=>((( (numStone()=0+K98) ) => ( (numStone()=0+K98)&!((!turn(p1))) ))&!(exists(G0:Int)[ exists(K99:Int)[ (numStone()=K99+K98)&(G0>=0& K99 > G0&! (!turn(p1)))] ])&!(exists(G0:Int)[G0>=0&G0 % 4 = 0&(numStone()=G0+K98)])) ]
2019-10-06 17:58:10,631 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:Int)[G0>=0&numStone() > G0&! turn(p1)])&!(exists(G0:Int)[G0>=0&numStone() = G0&G0 % 4 = 0])
 f2:exists(K103:Int)[ (numStone()>=K103&(K103=1|K103=2|K103=3)&turn(p1))&((( (numStone()=0+K103) ) => ( (numStone()=0+K103)&!((!turn(p1))) ))&!(exists(G0:Int)[G0>=0&G0 % 2 = 1&(numStone()=G0+K103)])&!(exists(G0:Int)[G0>=0&G0 % 4 = 2&(numStone()=G0+K103)])) ]
2019-10-06 17:58:10,684 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:Int)[G0>=0&G0 % 2 = 1&numStone() = G0])&!(exists(G0:Int)[G0>=0&G0 % 4 = 2&numStone() = G0])
 f2:forall(K101:Int)[ numStone()>=K101&(K101=1|K101=2|K101=3)&turn(p2)=>((( (numStone()=0+K101) ) => ( (numStone()=0+K101)&!((!turn(p1))) ))&!(exists(G0:Int)[ exists(K102:Int)[ (numStone()=K102+K101)&(G0>=0& K102 > G0&! (!turn(p1)))] ])&!(exists(G0:Int)[G0>=0&(numStone()=G0+K101)&G0 % 4 = 0])) ]
2019-10-06 17:58:10,706 -- z3prover.py -- [function:imply][line:46] -- DEBUG: #checking imply:
 f1:!(numStone()%4=0)&numStone()>0&turn(p1)&!turn(p2)
 f2:(( numStone()=0 ) => ( numStone()=0&!(turn(p1)) ))&!(exists(G0:Int)[G0>=0&numStone() > G0&! turn(p1)])&!(exists(G0:Int)[G0>=0&numStone() = G0&G0 % 4 = 0])
