
(declare-sort _S1)(declare-fun turn(_S1) Bool)
(declare-fun numStone() Int)(declare-const p2 _S1)
(declare-const p1 _S1)
(declare-const True Bool)
(declare-const False Bool) (assert (>= numStone 0) )  (assert  (not (= p1 p2))) (assert (or (and (turn p1) (not (  turn p2)) ) (and (turn p2) (not (turn p1)))) ) (assert (not  (=> (and (and (turn p1) (= numStone 7)) (not (turn p2))) (and (and (and (=> (= numStone 0) (and (= numStone 0) (not (turn p1)))) (not (exists ((G0 _S1)) (and (turn G0) (turn p2))))) (not (exists ((G0 Int)) (and (and (and (>= G0 0) (> G0 4)) (= (mod G0 3) 1)) (= numStone G0))))) (not (exists ((G0 Int)) (and (and (>= G0 0) (= G0 4)) (= numStone G0))))))  ))
(check-sat)
(get-model)