
(declare-sort _S1)(declare-fun turn(_S1) Bool)
(declare-fun numStone() Int)(declare-const p2 _S1)
(declare-const p1 _S1)
(declare-const True Bool)
(declare-const False Bool)(set-option :timeout 10000) (assert (>= numStone 0) )  (assert  (not (= p1 p2))) (assert (or (and (turn p1) (not (  turn p2)) ) (and (turn p2) (not (turn p1)))) ) (assert (not   (=> (=> (= numStone 0) (and (= numStone 0) (not (turn p1)))) (forall ((K12 Int)) (=> (and (and (>= numStone K12) (or (or (= K12 1) (= K12 2)) (= K12 3))) (turn p2)) (=> (= numStone (+ 0 K12)) (and (= numStone (+ 0 K12)) (not (not (turn p1))))))))  ))
(check-sat)
(get-model)